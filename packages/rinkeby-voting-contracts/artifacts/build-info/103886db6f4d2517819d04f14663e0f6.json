{
  "id": "103886db6f4d2517819d04f14663e0f6",
  "_format": "hh-sol-build-info-1",
  "solcVersion": "0.8.17",
  "solcLongVersion": "0.8.17+commit.8df45f5f",
  "input": {
    "language": "Solidity",
    "sources": {
      "contracts/Voting.sol": {
        "content": "// SPDX-License-Identifier: GPL-3.0\npragma solidity 0.8.17;\n\nimport '@openzeppelin/contracts/access/Ownable.sol';\nimport '@openzeppelin/contracts/utils/Strings.sol';\n\n/** \n * @title Alyra Project: Voting system\n * @author Teddy Chambard\n * @notice This contract defines a basic voting system including different steps:\n * 1) voting session creation\n * 1) voters registration\n * 2) proposals registration\n * 3) votes recording\n * 4) votes talling\n * \n * @dev Only the contract owner is able to create new voting session.\n * The contract owner is also able to change the session status and activate next session steps.\n * The word `Administrator` in contract documentation corresponds to contract owner.\n *\n * /!\\ BONUS: I took some decisions to change initial specifications to improve the features available in the exercice:\n *\n * 1) Many voting sessions can be created and evolve in parallel\n * 2) Votes are kept secret until the end of session, then every votes become accessible to voters and contract owner\n * 3) Every events expose sessionId as first parameter\n * 4) `Voted` event does not expose chosen proposal ID in order to keep votes secret until the end of the session\n * 5) A session is limited to 256 proposals\n * 6) Two proposals are registered by default in every session: abstention and blank vote\n * 7) A voter can not do more than 3 proposals by session\n * 6) A voter can not vote for its own proposals\n * 7) A vote session can terminate with equality if many proposals obtain same number of votes\n */\ncontract Voting is Ownable {\n\n    // ===============\n    // types\n    // ===============\n\n    enum WorkflowStatus {\n        None,\n        RegisteringVoters,\n        ProposalsRegistrationStarted,\n        ProposalsRegistrationEnded,\n        VotingSessionStarted,\n        VotingSessionEnded,\n        VotesTallied\n    }\n\n    struct Voter {\n        bool isRegistered;\n        bool hasVoted;\n        uint8 votedProposalId;\n        uint8 nbProposals;\n    }\n\n    struct Proposal {\n        string description;\n        uint voteCount;\n        address proposer;\n    }\n    \n    struct Session {\n\n        /**\n         * @dev status is set to RegisteringVoters by createVotingSession function.\n         * The inilial value `None` does not match with any expected status used with `isStatus` modifier.\n         * Note: every functions are covered by `isStatus` modifier and that's why we can be sure a \n         * session exist when its status is different than None.\n         */\n        WorkflowStatus status;\n\n        /**\n         * !!! WARNING !!!\n         * I decided to change a little the specifications to give more sense to the voting project:\n         * \n         * Initial specifications were :\n         * ✔️ Le vote n'est pas secret pour les utilisateurs ajoutés à la Whitelist\n         * ✔️ Chaque électeur peut voir les votes des autres\n         *\n         * @dev In my implementation, voters mapping is never accessible from external so voter's choice (votedProposalId) \n         * is not known until `getVote` become available after end of voting session.\n         * Informations like `isRegistered`, `hasVoted` or `nbProposals` are still available trough events.\n         */\n        mapping(address => Voter) voters;\n\n        /**\n         * @dev Voters count will be used to compute abstention\n         */\n        uint votersCount;\n\n        /**\n         * @dev Total votes count can be different than voters count and it will be used to compute abstention.\n         */\n        uint totalVotesCount;\n\n        /**\n         * @dev proposals are not available directly to protect `voteCount` information during voting process.\n         * However, informations like `description` or `proposer` are still available trough events.\n         */\n        Proposal[] proposals;\n\n        /**\n         * winningProposals can be retrive after votes tallied with the function `getWinners`\n         */\n        Proposal[] winningProposals;\n    }\n\n    // ===============\n    // events\n    // ===============\n\n    /**\n     * !!! WARNING !!!\n     * @dev All events signatures integrate sessionId parameter that was not required in specification\n     */\n\n    event SessionCreated(uint indexed sessionId, string name, string description);\n\n    event VoterRegistered(uint indexed sessionId, address voterAddress);\n\n    event WorkflowStatusChange(uint indexed sessionId, WorkflowStatus previousStatus, WorkflowStatus newStatus);\n\n    /**\n     * !!! WARNING !!!\n     * @dev I decided to add description into ProposalRegistered event in order to expose proposals during the voting session without the vote count.\n     * By this way voters are able to retrieve proposal information but they can not access to each proposal vote count before the end ot the session.\n     */\n    event ProposalRegistered(uint indexed sessionId, uint8 proposalId, string description);\n\n    /**\n     * !!! WARNING !!!\n     * @dev I decided to remove proposalId from Voted event despite the specification as \n     * I think no one should be able to see voters choice before the end of voting session\n     */\n    event Voted(uint indexed sessionId, address voter);\n\n    event VotesTallied(uint indexed sessionId, uint votersCount, uint totalVotes, uint blankVotes, uint abstention, Proposal[] winningProposals);\n\n    // ===============\n    // storage\n    // ===============\n\n    mapping(uint => Session) private sessions;\n\n    uint sessionsCount;\n\n    // ===============\n    // modifiers\n    // ===============\n\n    /**\n     * @dev Throws if called when status is not the expected one.\n     */\n    modifier statusIs(uint _sessionId, WorkflowStatus _status) {\n        require(sessions[_sessionId].status == _status, string.concat('Unexpected voting session status: expected=', \n            Strings.toString(uint(_status)), ' current=', Strings.toString(uint(sessions[_sessionId].status))));\n        _;\n    }    \n    \n    /**\n     * @dev Throws if called when status is not at least the given status.\n     */\n    modifier statusAtLeast(uint _sessionId, WorkflowStatus _status) {\n        require(sessions[_sessionId].status >= _status, string.concat('Unexpected voting session status: expected>=',\n            Strings.toString(uint(_status)), ' current=', Strings.toString(uint(sessions[_sessionId].status))));\n        _;\n    }\n\n    /**\n     * @dev Throws if called by any account not registered as voter.\n     */\n    modifier onlyVoter(uint _sessionId) {\n        require(sessions[_sessionId].voters[msg.sender].isRegistered, 'Caller is not registered voter');\n        _;\n    }\n\n    /**\n     * @dev Throws if called by any account not registered as voter or if it is not owner.\n     */\n    modifier onlyVoterOrOwner(uint _sessionId) {\n        require(owner() == msg.sender || sessions[_sessionId].voters[msg.sender].isRegistered, 'Caller is not owner or registered voter');\n        _;\n    }\n\n    // ===============\n    // only owner functions\n    // ===============\n\n    /**\n     * Administrator can create new voting session\n     *\n     * @param _name The session name \n     * @param _description The session description \n     */\n    function createVotingSession(string calldata _name, string calldata _description) external onlyOwner {\n        sessions[sessionsCount].status = WorkflowStatus.RegisteringVoters;\n        emit SessionCreated(sessionsCount, _name, _description);\n        emit WorkflowStatusChange(sessionsCount, WorkflowStatus.None, WorkflowStatus.RegisteringVoters);\n        sessionsCount++;\n    }\n\n    /**\n     * Administrator can register voters.\n     * \n     * @dev voters can be added only by contract owner when status is set to RegisteringVoters\n     * An event VoterRegistered is emitted\n     * \n     * @param _sessionId The session identifier \n     * @param _voter The address to add into voters registry\n     */\n    function registerVoter(uint _sessionId, address _voter) external onlyOwner statusIs(_sessionId, WorkflowStatus.RegisteringVoters) {\n        require(_voter != owner(), 'Owner can not be a voter');\n        require(!sessions[_sessionId].voters[_voter].isRegistered, 'Voter is already registered');\n        sessions[_sessionId].voters[_voter] = Voter(true, false, 0, 0);\n        sessions[_sessionId].votersCount++;\n        emit VoterRegistered(_sessionId, _voter);\n    }\n\n    /**\n     * Administrator can close voters registration and open proposals registration.\n     * \n     * @dev Can be called only when status is set to RegisteringVoters.\n     * Two default proposals are registered at the beginning of this step: `Abstention` and `Blank`.\n     * That means a registered voter that forget to vote will be counted as `abstention` thanks to `proposals` array index 0\n     * An event WorkflowStatusChange is emitted\n     *\n     * @param _sessionId The session identifier \n     */\n    function startProposalsRegistration(uint _sessionId) external onlyOwner statusIs(_sessionId, WorkflowStatus.RegisteringVoters) {\n        _registerProposal(_sessionId, 'Abstention');\n        _registerProposal(_sessionId, 'Blank');\n        sessions[_sessionId].status = WorkflowStatus.ProposalsRegistrationStarted;\n        emit WorkflowStatusChange(_sessionId, WorkflowStatus.RegisteringVoters, WorkflowStatus.ProposalsRegistrationStarted);\n    }\n\n    /**\n     * Administrator can close proposals registration.\n     * \n     * @dev Can be called only when status is set to ProposalsRegistrationStarted.\n     * An event WorkflowStatusChange is emitted\n     *\n     * @param _sessionId The session identifier \n     */\n    function stopProposalsRegistration(uint _sessionId) external onlyOwner statusIs(_sessionId, WorkflowStatus.ProposalsRegistrationStarted) {\n        sessions[_sessionId].status = WorkflowStatus.ProposalsRegistrationEnded;\n        emit WorkflowStatusChange(_sessionId, WorkflowStatus.ProposalsRegistrationStarted, WorkflowStatus.ProposalsRegistrationEnded);\n    }\n\n    /**\n     * Administrator can open voting session.\n     * \n     * @dev Can be called only when status is set to ProposalsRegistrationEnded.\n     * An event WorkflowStatusChange is emitted\n     *\n     * @param _sessionId The session identifier \n     */\n    function startVotingSession(uint _sessionId) external onlyOwner statusIs(_sessionId, WorkflowStatus.ProposalsRegistrationEnded) {\n        sessions[_sessionId].status = WorkflowStatus.VotingSessionStarted;\n        emit WorkflowStatusChange(_sessionId, WorkflowStatus.ProposalsRegistrationEnded, WorkflowStatus.VotingSessionStarted);\n    }\n\n    /**\n     * Administrator can close voting session.\n     * \n     * @dev Can be called only when status is set to VotingSessionStarted.\n     * An event WorkflowStatusChange is emitted\n     *\n     * @param _sessionId The session identifier \n     */\n    function stopVotingSession(uint _sessionId) external onlyOwner statusIs(_sessionId, WorkflowStatus.VotingSessionStarted) {\n        sessions[_sessionId].status = WorkflowStatus.VotingSessionEnded;\n        emit WorkflowStatusChange(_sessionId, WorkflowStatus.VotingSessionStarted, WorkflowStatus.VotingSessionEnded);\n    }\n\n    /**\n     * Administrator can trigger votes talling.\n     * \n     * @dev After votes talling, it is possible that we got many winning proposals.\n     * Votes talling can be triggered only by contract owner when voting session status is set to VotingSessionEnded\n     * An event WorkflowStatusChange is emitted\n     *\n     * @param _sessionId The session identifier \n     */\n    function tallyVotes(uint _sessionId) external onlyOwner statusIs(_sessionId, WorkflowStatus.VotingSessionEnded) {\n        uint _bestVoteCount = 0;\n        uint _winnersCount = 0;\n        \n        // use memory here to not write too many times in storage in the first loop below\n        // not sure it's better because of static array size\n        Proposal[] memory _winningProposals = new Proposal[](sessions[_sessionId].proposals.length);\n\n        // we do not consider two first proposal elements (abstention and blank)\n        for (uint i = 2; i < sessions[_sessionId].proposals.length; i++) {\n            if (sessions[_sessionId].proposals[i].voteCount > _bestVoteCount) {\n                _bestVoteCount = sessions[_sessionId].proposals[i].voteCount;\n                _winnersCount = 1;\n                _winningProposals[_winnersCount - 1] = sessions[_sessionId].proposals[i];\n            } else if (sessions[_sessionId].proposals[i].voteCount > 0 && sessions[_sessionId].proposals[i].voteCount == _bestVoteCount) {\n                _winnersCount++;\n                _winningProposals[_winnersCount - 1] = sessions[_sessionId].proposals[i];\n            }\n        }\n\n        for (uint i = 0; i < _winnersCount; i++) {\n            sessions[_sessionId].winningProposals.push(_winningProposals[i]);\n        }\n\n        sessions[_sessionId].status = WorkflowStatus.VotesTallied;\n        emit WorkflowStatusChange(_sessionId, WorkflowStatus.VotingSessionEnded, WorkflowStatus.VotesTallied);\n\n        uint abstention = sessions[_sessionId].votersCount > 0 ? sessions[_sessionId].votersCount - sessions[_sessionId].totalVotesCount : 0;\n        emit VotesTallied(_sessionId, sessions[_sessionId].votersCount, sessions[_sessionId].totalVotesCount, sessions[_sessionId].proposals[1].voteCount, abstention, sessions[_sessionId].winningProposals);\n    }\n\n    // ===============\n    // only voter functions\n    // ===============\n\n    /**\n     * A voter can register a new proposal.\n     * \n     * @dev Each voter can register many proposals.\n     * As the vote is considered to be done in small organization context, the maximum number of proposals is limited to 256.\n     * Maximum number of proposals per voter is also limited to 3.\n     * A vote can be added only by registered voter when status is set to VotingSessionStarted\n     * \n     * @param _sessionId The session identifier\n     * @param _description The proposal description\n     */\n    function registerProposal(uint _sessionId, string calldata _description) public onlyVoter(_sessionId) statusIs(_sessionId, WorkflowStatus.ProposalsRegistrationStarted) {\n        require(sessions[_sessionId].voters[msg.sender].nbProposals < 3, 'You already posted 3 proposals which is the maximum allowed');\n        _registerProposal(_sessionId, _description);\n    }\n\n    /**\n     * A voter can register his vote for a proposal.\n     * \n     * @dev Each voter can vote only once for one proposal.\n     * Votes can be added only by registered voter when status is set to VotingSessionStarted\n     * \n     * @param _sessionId The session identifier\n     * @param _proposalId The chosen proposal identifier\n     */\n    function vote(uint _sessionId, uint8 _proposalId) external onlyVoter(_sessionId) statusIs(_sessionId, WorkflowStatus.VotingSessionStarted) {\n        require(!sessions[_sessionId].voters[msg.sender].hasVoted, 'Voter has already voted');\n        require(_proposalId < sessions[_sessionId].proposals.length, string.concat('Proposal ', Strings.toString(_proposalId), ' does not exist'));\n        require(sessions[_sessionId].proposals[_proposalId].proposer != msg.sender, 'A voter can not vote for its own proposal');\n        require(_proposalId > 0, 'First proposal is reserved for abstention');\n\n        sessions[_sessionId].proposals[_proposalId].voteCount++;\n        sessions[_sessionId].voters[msg.sender].hasVoted = true;\n        sessions[_sessionId].voters[msg.sender].votedProposalId = _proposalId;\n        sessions[_sessionId].totalVotesCount++;\n        \n        emit Voted(_sessionId, msg.sender);\n    }\n\n    // ===============\n    // only owner or voter functions\n    // ===============\n\n    /**\n     * Retreive vote\n     * \n     * @dev Administrator and registered voters can all access to everybody votes but only at the end of voting session.\n     * \n     * @param _sessionId The session identifier\n     * @param _voter The voter address\n     * @return uint8 target voter proposal choice\n     */    \n    function getVote(uint _sessionId, address _voter) external view onlyVoterOrOwner(_sessionId) statusAtLeast(_sessionId, WorkflowStatus.VotingSessionEnded) returns (uint8) {\n        return sessions[_sessionId].voters[_voter].votedProposalId;\n    }\n\n    /**\n     * Retreive winning proposals\n     * \n     * @dev Administrator and registered voters can retreive winning proposals but only at the end of voting session.\n     * \n     * @return Proposal[] The winning proposals\n     */    \n    function getWinners(uint _sessionId) external view onlyVoterOrOwner(_sessionId) statusAtLeast(_sessionId, WorkflowStatus.VotesTallied) returns (Proposal[] memory) {\n        return sessions[_sessionId].winningProposals;\n    }\n\n    // ===============\n    // private functions\n    // ===============\n    function _registerProposal(uint _sessionId, string memory _description) private {\n        require(sessions[_sessionId].proposals.length < 2 ** 8 - 1, 'Too many proposals'); // limit total proposals count to 256\n        sessions[_sessionId].proposals.push(Proposal(_description, 0, msg.sender));\n        sessions[_sessionId].voters[msg.sender].nbProposals++;\n        uint8 proposalId = uint8(sessions[_sessionId].proposals.length - 1);\n        emit ProposalRegistered(_sessionId, proposalId, sessions[_sessionId].proposals[proposalId].description);\n    }\n}"
      },
      "@openzeppelin/contracts/access/Ownable.sol": {
        "content": "// SPDX-License-Identifier: MIT\n// OpenZeppelin Contracts (last updated v4.7.0) (access/Ownable.sol)\n\npragma solidity ^0.8.0;\n\nimport \"../utils/Context.sol\";\n\n/**\n * @dev Contract module which provides a basic access control mechanism, where\n * there is an account (an owner) that can be granted exclusive access to\n * specific functions.\n *\n * By default, the owner account will be the one that deploys the contract. This\n * can later be changed with {transferOwnership}.\n *\n * This module is used through inheritance. It will make available the modifier\n * `onlyOwner`, which can be applied to your functions to restrict their use to\n * the owner.\n */\nabstract contract Ownable is Context {\n    address private _owner;\n\n    event OwnershipTransferred(address indexed previousOwner, address indexed newOwner);\n\n    /**\n     * @dev Initializes the contract setting the deployer as the initial owner.\n     */\n    constructor() {\n        _transferOwnership(_msgSender());\n    }\n\n    /**\n     * @dev Throws if called by any account other than the owner.\n     */\n    modifier onlyOwner() {\n        _checkOwner();\n        _;\n    }\n\n    /**\n     * @dev Returns the address of the current owner.\n     */\n    function owner() public view virtual returns (address) {\n        return _owner;\n    }\n\n    /**\n     * @dev Throws if the sender is not the owner.\n     */\n    function _checkOwner() internal view virtual {\n        require(owner() == _msgSender(), \"Ownable: caller is not the owner\");\n    }\n\n    /**\n     * @dev Leaves the contract without owner. It will not be possible to call\n     * `onlyOwner` functions anymore. Can only be called by the current owner.\n     *\n     * NOTE: Renouncing ownership will leave the contract without an owner,\n     * thereby removing any functionality that is only available to the owner.\n     */\n    function renounceOwnership() public virtual onlyOwner {\n        _transferOwnership(address(0));\n    }\n\n    /**\n     * @dev Transfers ownership of the contract to a new account (`newOwner`).\n     * Can only be called by the current owner.\n     */\n    function transferOwnership(address newOwner) public virtual onlyOwner {\n        require(newOwner != address(0), \"Ownable: new owner is the zero address\");\n        _transferOwnership(newOwner);\n    }\n\n    /**\n     * @dev Transfers ownership of the contract to a new account (`newOwner`).\n     * Internal function without access restriction.\n     */\n    function _transferOwnership(address newOwner) internal virtual {\n        address oldOwner = _owner;\n        _owner = newOwner;\n        emit OwnershipTransferred(oldOwner, newOwner);\n    }\n}\n"
      },
      "@openzeppelin/contracts/utils/Strings.sol": {
        "content": "// SPDX-License-Identifier: MIT\n// OpenZeppelin Contracts (last updated v4.7.0) (utils/Strings.sol)\n\npragma solidity ^0.8.0;\n\n/**\n * @dev String operations.\n */\nlibrary Strings {\n    bytes16 private constant _HEX_SYMBOLS = \"0123456789abcdef\";\n    uint8 private constant _ADDRESS_LENGTH = 20;\n\n    /**\n     * @dev Converts a `uint256` to its ASCII `string` decimal representation.\n     */\n    function toString(uint256 value) internal pure returns (string memory) {\n        // Inspired by OraclizeAPI's implementation - MIT licence\n        // https://github.com/oraclize/ethereum-api/blob/b42146b063c7d6ee1358846c198246239e9360e8/oraclizeAPI_0.4.25.sol\n\n        if (value == 0) {\n            return \"0\";\n        }\n        uint256 temp = value;\n        uint256 digits;\n        while (temp != 0) {\n            digits++;\n            temp /= 10;\n        }\n        bytes memory buffer = new bytes(digits);\n        while (value != 0) {\n            digits -= 1;\n            buffer[digits] = bytes1(uint8(48 + uint256(value % 10)));\n            value /= 10;\n        }\n        return string(buffer);\n    }\n\n    /**\n     * @dev Converts a `uint256` to its ASCII `string` hexadecimal representation.\n     */\n    function toHexString(uint256 value) internal pure returns (string memory) {\n        if (value == 0) {\n            return \"0x00\";\n        }\n        uint256 temp = value;\n        uint256 length = 0;\n        while (temp != 0) {\n            length++;\n            temp >>= 8;\n        }\n        return toHexString(value, length);\n    }\n\n    /**\n     * @dev Converts a `uint256` to its ASCII `string` hexadecimal representation with fixed length.\n     */\n    function toHexString(uint256 value, uint256 length) internal pure returns (string memory) {\n        bytes memory buffer = new bytes(2 * length + 2);\n        buffer[0] = \"0\";\n        buffer[1] = \"x\";\n        for (uint256 i = 2 * length + 1; i > 1; --i) {\n            buffer[i] = _HEX_SYMBOLS[value & 0xf];\n            value >>= 4;\n        }\n        require(value == 0, \"Strings: hex length insufficient\");\n        return string(buffer);\n    }\n\n    /**\n     * @dev Converts an `address` with fixed length of 20 bytes to its not checksummed ASCII `string` hexadecimal representation.\n     */\n    function toHexString(address addr) internal pure returns (string memory) {\n        return toHexString(uint256(uint160(addr)), _ADDRESS_LENGTH);\n    }\n}\n"
      },
      "@openzeppelin/contracts/utils/Context.sol": {
        "content": "// SPDX-License-Identifier: MIT\n// OpenZeppelin Contracts v4.4.1 (utils/Context.sol)\n\npragma solidity ^0.8.0;\n\n/**\n * @dev Provides information about the current execution context, including the\n * sender of the transaction and its data. While these are generally available\n * via msg.sender and msg.data, they should not be accessed in such a direct\n * manner, since when dealing with meta-transactions the account sending and\n * paying for execution may not be the actual sender (as far as an application\n * is concerned).\n *\n * This contract is only required for intermediate, library-like contracts.\n */\nabstract contract Context {\n    function _msgSender() internal view virtual returns (address) {\n        return msg.sender;\n    }\n\n    function _msgData() internal view virtual returns (bytes calldata) {\n        return msg.data;\n    }\n}\n"
      },
      "contracts/VotingAlyra.sol": {
        "content": "// SPDX-License-Identifier: MIT\n\npragma solidity 0.8.17;\nimport '@openzeppelin/contracts/access/Ownable.sol';\n\n\ncontract VotingAlyra is Ownable {\n\n    uint public winningProposalID;\n    \n    struct Voter {\n        bool isRegistered;\n        bool hasVoted;\n        uint votedProposalId;\n    }\n\n    struct Proposal {\n        string description;\n        uint voteCount;\n    }\n\n    enum  WorkflowStatus {\n        RegisteringVoters,\n        ProposalsRegistrationStarted,\n        ProposalsRegistrationEnded,\n        VotingSessionStarted,\n        VotingSessionEnded,\n        VotesTallied\n    }\n\n    WorkflowStatus public workflowStatus;\n    Proposal[] proposalsArray;\n    mapping (address => Voter) voters;\n\n\n    event VoterRegistered(address voterAddress); \n    event WorkflowStatusChange(WorkflowStatus previousStatus, WorkflowStatus newStatus);\n    event ProposalRegistered(uint proposalId);\n    event Voted (address voter, uint proposalId);\n    \n    modifier onlyVoters() {\n        require(voters[msg.sender].isRegistered, \"You're not a voter\");\n        _;\n    }\n    \n    // on peut faire un modifier pour les états\n\n    // ::::::::::::: GETTERS ::::::::::::: //\n\n    function getVoter(address _addr) external onlyVoters view returns (Voter memory) {\n        return voters[_addr];\n    }\n    \n    function getOneProposal(uint _id) external onlyVoters view returns (Proposal memory) {\n        return proposalsArray[_id];\n    }\n\n \n    // ::::::::::::: REGISTRATION ::::::::::::: // \n\n    function addVoter(address _addr) external onlyOwner {\n        require(workflowStatus == WorkflowStatus.RegisteringVoters, 'Voters registration is not open yet');\n        require(voters[_addr].isRegistered != true, 'Already registered');\n    \n        voters[_addr].isRegistered = true;\n        emit VoterRegistered(_addr);\n    }\n \n\n    // ::::::::::::: PROPOSAL ::::::::::::: // \n\n    function addProposal(string calldata _desc) external onlyVoters {\n        require(workflowStatus == WorkflowStatus.ProposalsRegistrationStarted, 'Proposals are not allowed yet');\n        require(keccak256(abi.encode(_desc)) != keccak256(abi.encode('')), 'Vous ne pouvez pas ne rien proposer'); // facultatif\n        // voir que desc est different des autres\n\n        Proposal memory proposal;\n        proposal.description = _desc;\n        proposalsArray.push(proposal);\n        emit ProposalRegistered(proposalsArray.length-1);\n    }\n\n    // ::::::::::::: VOTE ::::::::::::: //\n\n    function setVote( uint _id) external onlyVoters {\n        require(workflowStatus == WorkflowStatus.VotingSessionStarted, 'Voting session havent started yet');\n        require(voters[msg.sender].hasVoted != true, 'You have already voted');\n        require(_id < proposalsArray.length, 'Proposal not found'); // pas obligé, et pas besoin du >0 car uint\n\n        voters[msg.sender].votedProposalId = _id;\n        voters[msg.sender].hasVoted = true;\n        proposalsArray[_id].voteCount++;\n\n        emit Voted(msg.sender, _id);\n    }\n\n    // ::::::::::::: STATE ::::::::::::: //\n\n\n    function startProposalsRegistering() external onlyOwner {\n        require(workflowStatus == WorkflowStatus.RegisteringVoters, 'Registering proposals cant be started now');\n        workflowStatus = WorkflowStatus.ProposalsRegistrationStarted;\n        \n        Proposal memory proposal;\n        proposal.description = 'GENESIS';\n        proposalsArray.push(proposal);\n        \n        emit WorkflowStatusChange(WorkflowStatus.RegisteringVoters, WorkflowStatus.ProposalsRegistrationStarted);\n    }\n\n    function endProposalsRegistering() external onlyOwner {\n        require(workflowStatus == WorkflowStatus.ProposalsRegistrationStarted, 'Registering proposals havent started yet');\n        workflowStatus = WorkflowStatus.ProposalsRegistrationEnded;\n        emit WorkflowStatusChange(WorkflowStatus.ProposalsRegistrationStarted, WorkflowStatus.ProposalsRegistrationEnded);\n    }\n\n    function startVotingSession() external onlyOwner {\n        require(workflowStatus == WorkflowStatus.ProposalsRegistrationEnded, 'Registering proposals phase is not finished');\n        workflowStatus = WorkflowStatus.VotingSessionStarted;\n        emit WorkflowStatusChange(WorkflowStatus.ProposalsRegistrationEnded, WorkflowStatus.VotingSessionStarted);\n    }\n\n    function endVotingSession() external onlyOwner {\n        require(workflowStatus == WorkflowStatus.VotingSessionStarted, 'Voting session havent started yet');\n        workflowStatus = WorkflowStatus.VotingSessionEnded;\n        emit WorkflowStatusChange(WorkflowStatus.VotingSessionStarted, WorkflowStatus.VotingSessionEnded);\n    }\n\n\n   function tallyVotes() external onlyOwner {\n       require(workflowStatus == WorkflowStatus.VotingSessionEnded, 'Current status is not voting session ended');\n       uint _winningProposalId;\n      for (uint256 p = 0; p < proposalsArray.length; p++) {\n           if (proposalsArray[p].voteCount > proposalsArray[_winningProposalId].voteCount) {\n               _winningProposalId = p;\n          }\n       }\n       winningProposalID = _winningProposalId;\n       \n       workflowStatus = WorkflowStatus.VotesTallied;\n       emit WorkflowStatusChange(WorkflowStatus.VotingSessionEnded, WorkflowStatus.VotesTallied);\n    }\n}"
      }
    },
    "settings": {
      "optimizer": { "enabled": true, "runs": 200 },
      "outputSelection": {
        "*": {
          "*": [
            "abi",
            "evm.bytecode",
            "evm.deployedBytecode",
            "evm.methodIdentifiers",
            "metadata",
            "devdoc",
            "userdoc",
            "storageLayout",
            "evm.gasEstimates"
          ],
          "": ["ast"]
        }
      },
      "metadata": { "useLiteralContent": true }
    }
  },
  "output": {
    "sources": {
      "@openzeppelin/contracts/access/Ownable.sol": {
        "ast": {
          "absolutePath": "@openzeppelin/contracts/access/Ownable.sol",
          "exportedSymbols": { "Context": [134], "Ownable": [112] },
          "id": 113,
          "license": "MIT",
          "nodeType": "SourceUnit",
          "nodes": [
            {
              "id": 1,
              "literals": ["solidity", "^", "0.8", ".0"],
              "nodeType": "PragmaDirective",
              "src": "102:23:0"
            },
            {
              "absolutePath": "@openzeppelin/contracts/utils/Context.sol",
              "file": "../utils/Context.sol",
              "id": 2,
              "nameLocation": "-1:-1:-1",
              "nodeType": "ImportDirective",
              "scope": 113,
              "sourceUnit": 135,
              "src": "127:30:0",
              "symbolAliases": [],
              "unitAlias": ""
            },
            {
              "abstract": true,
              "baseContracts": [
                {
                  "baseName": {
                    "id": 4,
                    "name": "Context",
                    "nameLocations": ["683:7:0"],
                    "nodeType": "IdentifierPath",
                    "referencedDeclaration": 134,
                    "src": "683:7:0"
                  },
                  "id": 5,
                  "nodeType": "InheritanceSpecifier",
                  "src": "683:7:0"
                }
              ],
              "canonicalName": "Ownable",
              "contractDependencies": [],
              "contractKind": "contract",
              "documentation": {
                "id": 3,
                "nodeType": "StructuredDocumentation",
                "src": "159:494:0",
                "text": " @dev Contract module which provides a basic access control mechanism, where\n there is an account (an owner) that can be granted exclusive access to\n specific functions.\n By default, the owner account will be the one that deploys the contract. This\n can later be changed with {transferOwnership}.\n This module is used through inheritance. It will make available the modifier\n `onlyOwner`, which can be applied to your functions to restrict their use to\n the owner."
              },
              "fullyImplemented": true,
              "id": 112,
              "linearizedBaseContracts": [112, 134],
              "name": "Ownable",
              "nameLocation": "672:7:0",
              "nodeType": "ContractDefinition",
              "nodes": [
                {
                  "constant": false,
                  "id": 7,
                  "mutability": "mutable",
                  "name": "_owner",
                  "nameLocation": "713:6:0",
                  "nodeType": "VariableDeclaration",
                  "scope": 112,
                  "src": "697:22:0",
                  "stateVariable": true,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_address",
                    "typeString": "address"
                  },
                  "typeName": {
                    "id": 6,
                    "name": "address",
                    "nodeType": "ElementaryTypeName",
                    "src": "697:7:0",
                    "stateMutability": "nonpayable",
                    "typeDescriptions": {
                      "typeIdentifier": "t_address",
                      "typeString": "address"
                    }
                  },
                  "visibility": "private"
                },
                {
                  "anonymous": false,
                  "eventSelector": "8be0079c531659141344cd1fd0a4f28419497f9722a3daafe3b4186f6b6457e0",
                  "id": 13,
                  "name": "OwnershipTransferred",
                  "nameLocation": "732:20:0",
                  "nodeType": "EventDefinition",
                  "parameters": {
                    "id": 12,
                    "nodeType": "ParameterList",
                    "parameters": [
                      {
                        "constant": false,
                        "id": 9,
                        "indexed": true,
                        "mutability": "mutable",
                        "name": "previousOwner",
                        "nameLocation": "769:13:0",
                        "nodeType": "VariableDeclaration",
                        "scope": 13,
                        "src": "753:29:0",
                        "stateVariable": false,
                        "storageLocation": "default",
                        "typeDescriptions": {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        },
                        "typeName": {
                          "id": 8,
                          "name": "address",
                          "nodeType": "ElementaryTypeName",
                          "src": "753:7:0",
                          "stateMutability": "nonpayable",
                          "typeDescriptions": {
                            "typeIdentifier": "t_address",
                            "typeString": "address"
                          }
                        },
                        "visibility": "internal"
                      },
                      {
                        "constant": false,
                        "id": 11,
                        "indexed": true,
                        "mutability": "mutable",
                        "name": "newOwner",
                        "nameLocation": "800:8:0",
                        "nodeType": "VariableDeclaration",
                        "scope": 13,
                        "src": "784:24:0",
                        "stateVariable": false,
                        "storageLocation": "default",
                        "typeDescriptions": {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        },
                        "typeName": {
                          "id": 10,
                          "name": "address",
                          "nodeType": "ElementaryTypeName",
                          "src": "784:7:0",
                          "stateMutability": "nonpayable",
                          "typeDescriptions": {
                            "typeIdentifier": "t_address",
                            "typeString": "address"
                          }
                        },
                        "visibility": "internal"
                      }
                    ],
                    "src": "752:57:0"
                  },
                  "src": "726:84:0"
                },
                {
                  "body": {
                    "id": 22,
                    "nodeType": "Block",
                    "src": "926:49:0",
                    "statements": [
                      {
                        "expression": {
                          "arguments": [
                            {
                              "arguments": [],
                              "expression": {
                                "argumentTypes": [],
                                "id": 18,
                                "name": "_msgSender",
                                "nodeType": "Identifier",
                                "overloadedDeclarations": [],
                                "referencedDeclaration": 124,
                                "src": "955:10:0",
                                "typeDescriptions": {
                                  "typeIdentifier": "t_function_internal_view$__$returns$_t_address_$",
                                  "typeString": "function () view returns (address)"
                                }
                              },
                              "id": 19,
                              "isConstant": false,
                              "isLValue": false,
                              "isPure": false,
                              "kind": "functionCall",
                              "lValueRequested": false,
                              "nameLocations": [],
                              "names": [],
                              "nodeType": "FunctionCall",
                              "src": "955:12:0",
                              "tryCall": false,
                              "typeDescriptions": {
                                "typeIdentifier": "t_address",
                                "typeString": "address"
                              }
                            }
                          ],
                          "expression": {
                            "argumentTypes": [
                              {
                                "typeIdentifier": "t_address",
                                "typeString": "address"
                              }
                            ],
                            "id": 17,
                            "name": "_transferOwnership",
                            "nodeType": "Identifier",
                            "overloadedDeclarations": [],
                            "referencedDeclaration": 111,
                            "src": "936:18:0",
                            "typeDescriptions": {
                              "typeIdentifier": "t_function_internal_nonpayable$_t_address_$returns$__$",
                              "typeString": "function (address)"
                            }
                          },
                          "id": 20,
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": false,
                          "kind": "functionCall",
                          "lValueRequested": false,
                          "nameLocations": [],
                          "names": [],
                          "nodeType": "FunctionCall",
                          "src": "936:32:0",
                          "tryCall": false,
                          "typeDescriptions": {
                            "typeIdentifier": "t_tuple$__$",
                            "typeString": "tuple()"
                          }
                        },
                        "id": 21,
                        "nodeType": "ExpressionStatement",
                        "src": "936:32:0"
                      }
                    ]
                  },
                  "documentation": {
                    "id": 14,
                    "nodeType": "StructuredDocumentation",
                    "src": "816:91:0",
                    "text": " @dev Initializes the contract setting the deployer as the initial owner."
                  },
                  "id": 23,
                  "implemented": true,
                  "kind": "constructor",
                  "modifiers": [],
                  "name": "",
                  "nameLocation": "-1:-1:-1",
                  "nodeType": "FunctionDefinition",
                  "parameters": {
                    "id": 15,
                    "nodeType": "ParameterList",
                    "parameters": [],
                    "src": "923:2:0"
                  },
                  "returnParameters": {
                    "id": 16,
                    "nodeType": "ParameterList",
                    "parameters": [],
                    "src": "926:0:0"
                  },
                  "scope": 112,
                  "src": "912:63:0",
                  "stateMutability": "nonpayable",
                  "virtual": false,
                  "visibility": "internal"
                },
                {
                  "body": {
                    "id": 30,
                    "nodeType": "Block",
                    "src": "1084:41:0",
                    "statements": [
                      {
                        "expression": {
                          "arguments": [],
                          "expression": {
                            "argumentTypes": [],
                            "id": 26,
                            "name": "_checkOwner",
                            "nodeType": "Identifier",
                            "overloadedDeclarations": [],
                            "referencedDeclaration": 54,
                            "src": "1094:11:0",
                            "typeDescriptions": {
                              "typeIdentifier": "t_function_internal_view$__$returns$__$",
                              "typeString": "function () view"
                            }
                          },
                          "id": 27,
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": false,
                          "kind": "functionCall",
                          "lValueRequested": false,
                          "nameLocations": [],
                          "names": [],
                          "nodeType": "FunctionCall",
                          "src": "1094:13:0",
                          "tryCall": false,
                          "typeDescriptions": {
                            "typeIdentifier": "t_tuple$__$",
                            "typeString": "tuple()"
                          }
                        },
                        "id": 28,
                        "nodeType": "ExpressionStatement",
                        "src": "1094:13:0"
                      },
                      {
                        "id": 29,
                        "nodeType": "PlaceholderStatement",
                        "src": "1117:1:0"
                      }
                    ]
                  },
                  "documentation": {
                    "id": 24,
                    "nodeType": "StructuredDocumentation",
                    "src": "981:77:0",
                    "text": " @dev Throws if called by any account other than the owner."
                  },
                  "id": 31,
                  "name": "onlyOwner",
                  "nameLocation": "1072:9:0",
                  "nodeType": "ModifierDefinition",
                  "parameters": {
                    "id": 25,
                    "nodeType": "ParameterList",
                    "parameters": [],
                    "src": "1081:2:0"
                  },
                  "src": "1063:62:0",
                  "virtual": false,
                  "visibility": "internal"
                },
                {
                  "body": {
                    "id": 39,
                    "nodeType": "Block",
                    "src": "1256:30:0",
                    "statements": [
                      {
                        "expression": {
                          "id": 37,
                          "name": "_owner",
                          "nodeType": "Identifier",
                          "overloadedDeclarations": [],
                          "referencedDeclaration": 7,
                          "src": "1273:6:0",
                          "typeDescriptions": {
                            "typeIdentifier": "t_address",
                            "typeString": "address"
                          }
                        },
                        "functionReturnParameters": 36,
                        "id": 38,
                        "nodeType": "Return",
                        "src": "1266:13:0"
                      }
                    ]
                  },
                  "documentation": {
                    "id": 32,
                    "nodeType": "StructuredDocumentation",
                    "src": "1131:65:0",
                    "text": " @dev Returns the address of the current owner."
                  },
                  "functionSelector": "8da5cb5b",
                  "id": 40,
                  "implemented": true,
                  "kind": "function",
                  "modifiers": [],
                  "name": "owner",
                  "nameLocation": "1210:5:0",
                  "nodeType": "FunctionDefinition",
                  "parameters": {
                    "id": 33,
                    "nodeType": "ParameterList",
                    "parameters": [],
                    "src": "1215:2:0"
                  },
                  "returnParameters": {
                    "id": 36,
                    "nodeType": "ParameterList",
                    "parameters": [
                      {
                        "constant": false,
                        "id": 35,
                        "mutability": "mutable",
                        "name": "",
                        "nameLocation": "-1:-1:-1",
                        "nodeType": "VariableDeclaration",
                        "scope": 40,
                        "src": "1247:7:0",
                        "stateVariable": false,
                        "storageLocation": "default",
                        "typeDescriptions": {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        },
                        "typeName": {
                          "id": 34,
                          "name": "address",
                          "nodeType": "ElementaryTypeName",
                          "src": "1247:7:0",
                          "stateMutability": "nonpayable",
                          "typeDescriptions": {
                            "typeIdentifier": "t_address",
                            "typeString": "address"
                          }
                        },
                        "visibility": "internal"
                      }
                    ],
                    "src": "1246:9:0"
                  },
                  "scope": 112,
                  "src": "1201:85:0",
                  "stateMutability": "view",
                  "virtual": true,
                  "visibility": "public"
                },
                {
                  "body": {
                    "id": 53,
                    "nodeType": "Block",
                    "src": "1404:85:0",
                    "statements": [
                      {
                        "expression": {
                          "arguments": [
                            {
                              "commonType": {
                                "typeIdentifier": "t_address",
                                "typeString": "address"
                              },
                              "id": 49,
                              "isConstant": false,
                              "isLValue": false,
                              "isPure": false,
                              "lValueRequested": false,
                              "leftExpression": {
                                "arguments": [],
                                "expression": {
                                  "argumentTypes": [],
                                  "id": 45,
                                  "name": "owner",
                                  "nodeType": "Identifier",
                                  "overloadedDeclarations": [],
                                  "referencedDeclaration": 40,
                                  "src": "1422:5:0",
                                  "typeDescriptions": {
                                    "typeIdentifier": "t_function_internal_view$__$returns$_t_address_$",
                                    "typeString": "function () view returns (address)"
                                  }
                                },
                                "id": 46,
                                "isConstant": false,
                                "isLValue": false,
                                "isPure": false,
                                "kind": "functionCall",
                                "lValueRequested": false,
                                "nameLocations": [],
                                "names": [],
                                "nodeType": "FunctionCall",
                                "src": "1422:7:0",
                                "tryCall": false,
                                "typeDescriptions": {
                                  "typeIdentifier": "t_address",
                                  "typeString": "address"
                                }
                              },
                              "nodeType": "BinaryOperation",
                              "operator": "==",
                              "rightExpression": {
                                "arguments": [],
                                "expression": {
                                  "argumentTypes": [],
                                  "id": 47,
                                  "name": "_msgSender",
                                  "nodeType": "Identifier",
                                  "overloadedDeclarations": [],
                                  "referencedDeclaration": 124,
                                  "src": "1433:10:0",
                                  "typeDescriptions": {
                                    "typeIdentifier": "t_function_internal_view$__$returns$_t_address_$",
                                    "typeString": "function () view returns (address)"
                                  }
                                },
                                "id": 48,
                                "isConstant": false,
                                "isLValue": false,
                                "isPure": false,
                                "kind": "functionCall",
                                "lValueRequested": false,
                                "nameLocations": [],
                                "names": [],
                                "nodeType": "FunctionCall",
                                "src": "1433:12:0",
                                "tryCall": false,
                                "typeDescriptions": {
                                  "typeIdentifier": "t_address",
                                  "typeString": "address"
                                }
                              },
                              "src": "1422:23:0",
                              "typeDescriptions": {
                                "typeIdentifier": "t_bool",
                                "typeString": "bool"
                              }
                            },
                            {
                              "hexValue": "4f776e61626c653a2063616c6c6572206973206e6f7420746865206f776e6572",
                              "id": 50,
                              "isConstant": false,
                              "isLValue": false,
                              "isPure": true,
                              "kind": "string",
                              "lValueRequested": false,
                              "nodeType": "Literal",
                              "src": "1447:34:0",
                              "typeDescriptions": {
                                "typeIdentifier": "t_stringliteral_9924ebdf1add33d25d4ef888e16131f0a5687b0580a36c21b5c301a6c462effe",
                                "typeString": "literal_string \"Ownable: caller is not the owner\""
                              },
                              "value": "Ownable: caller is not the owner"
                            }
                          ],
                          "expression": {
                            "argumentTypes": [
                              {
                                "typeIdentifier": "t_bool",
                                "typeString": "bool"
                              },
                              {
                                "typeIdentifier": "t_stringliteral_9924ebdf1add33d25d4ef888e16131f0a5687b0580a36c21b5c301a6c462effe",
                                "typeString": "literal_string \"Ownable: caller is not the owner\""
                              }
                            ],
                            "id": 44,
                            "name": "require",
                            "nodeType": "Identifier",
                            "overloadedDeclarations": [-18, -18],
                            "referencedDeclaration": -18,
                            "src": "1414:7:0",
                            "typeDescriptions": {
                              "typeIdentifier": "t_function_require_pure$_t_bool_$_t_string_memory_ptr_$returns$__$",
                              "typeString": "function (bool,string memory) pure"
                            }
                          },
                          "id": 51,
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": false,
                          "kind": "functionCall",
                          "lValueRequested": false,
                          "nameLocations": [],
                          "names": [],
                          "nodeType": "FunctionCall",
                          "src": "1414:68:0",
                          "tryCall": false,
                          "typeDescriptions": {
                            "typeIdentifier": "t_tuple$__$",
                            "typeString": "tuple()"
                          }
                        },
                        "id": 52,
                        "nodeType": "ExpressionStatement",
                        "src": "1414:68:0"
                      }
                    ]
                  },
                  "documentation": {
                    "id": 41,
                    "nodeType": "StructuredDocumentation",
                    "src": "1292:62:0",
                    "text": " @dev Throws if the sender is not the owner."
                  },
                  "id": 54,
                  "implemented": true,
                  "kind": "function",
                  "modifiers": [],
                  "name": "_checkOwner",
                  "nameLocation": "1368:11:0",
                  "nodeType": "FunctionDefinition",
                  "parameters": {
                    "id": 42,
                    "nodeType": "ParameterList",
                    "parameters": [],
                    "src": "1379:2:0"
                  },
                  "returnParameters": {
                    "id": 43,
                    "nodeType": "ParameterList",
                    "parameters": [],
                    "src": "1404:0:0"
                  },
                  "scope": 112,
                  "src": "1359:130:0",
                  "stateMutability": "view",
                  "virtual": true,
                  "visibility": "internal"
                },
                {
                  "body": {
                    "id": 67,
                    "nodeType": "Block",
                    "src": "1885:47:0",
                    "statements": [
                      {
                        "expression": {
                          "arguments": [
                            {
                              "arguments": [
                                {
                                  "hexValue": "30",
                                  "id": 63,
                                  "isConstant": false,
                                  "isLValue": false,
                                  "isPure": true,
                                  "kind": "number",
                                  "lValueRequested": false,
                                  "nodeType": "Literal",
                                  "src": "1922:1:0",
                                  "typeDescriptions": {
                                    "typeIdentifier": "t_rational_0_by_1",
                                    "typeString": "int_const 0"
                                  },
                                  "value": "0"
                                }
                              ],
                              "expression": {
                                "argumentTypes": [
                                  {
                                    "typeIdentifier": "t_rational_0_by_1",
                                    "typeString": "int_const 0"
                                  }
                                ],
                                "id": 62,
                                "isConstant": false,
                                "isLValue": false,
                                "isPure": true,
                                "lValueRequested": false,
                                "nodeType": "ElementaryTypeNameExpression",
                                "src": "1914:7:0",
                                "typeDescriptions": {
                                  "typeIdentifier": "t_type$_t_address_$",
                                  "typeString": "type(address)"
                                },
                                "typeName": {
                                  "id": 61,
                                  "name": "address",
                                  "nodeType": "ElementaryTypeName",
                                  "src": "1914:7:0",
                                  "typeDescriptions": {}
                                }
                              },
                              "id": 64,
                              "isConstant": false,
                              "isLValue": false,
                              "isPure": true,
                              "kind": "typeConversion",
                              "lValueRequested": false,
                              "nameLocations": [],
                              "names": [],
                              "nodeType": "FunctionCall",
                              "src": "1914:10:0",
                              "tryCall": false,
                              "typeDescriptions": {
                                "typeIdentifier": "t_address",
                                "typeString": "address"
                              }
                            }
                          ],
                          "expression": {
                            "argumentTypes": [
                              {
                                "typeIdentifier": "t_address",
                                "typeString": "address"
                              }
                            ],
                            "id": 60,
                            "name": "_transferOwnership",
                            "nodeType": "Identifier",
                            "overloadedDeclarations": [],
                            "referencedDeclaration": 111,
                            "src": "1895:18:0",
                            "typeDescriptions": {
                              "typeIdentifier": "t_function_internal_nonpayable$_t_address_$returns$__$",
                              "typeString": "function (address)"
                            }
                          },
                          "id": 65,
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": false,
                          "kind": "functionCall",
                          "lValueRequested": false,
                          "nameLocations": [],
                          "names": [],
                          "nodeType": "FunctionCall",
                          "src": "1895:30:0",
                          "tryCall": false,
                          "typeDescriptions": {
                            "typeIdentifier": "t_tuple$__$",
                            "typeString": "tuple()"
                          }
                        },
                        "id": 66,
                        "nodeType": "ExpressionStatement",
                        "src": "1895:30:0"
                      }
                    ]
                  },
                  "documentation": {
                    "id": 55,
                    "nodeType": "StructuredDocumentation",
                    "src": "1495:331:0",
                    "text": " @dev Leaves the contract without owner. It will not be possible to call\n `onlyOwner` functions anymore. Can only be called by the current owner.\n NOTE: Renouncing ownership will leave the contract without an owner,\n thereby removing any functionality that is only available to the owner."
                  },
                  "functionSelector": "715018a6",
                  "id": 68,
                  "implemented": true,
                  "kind": "function",
                  "modifiers": [
                    {
                      "id": 58,
                      "kind": "modifierInvocation",
                      "modifierName": {
                        "id": 57,
                        "name": "onlyOwner",
                        "nameLocations": ["1875:9:0"],
                        "nodeType": "IdentifierPath",
                        "referencedDeclaration": 31,
                        "src": "1875:9:0"
                      },
                      "nodeType": "ModifierInvocation",
                      "src": "1875:9:0"
                    }
                  ],
                  "name": "renounceOwnership",
                  "nameLocation": "1840:17:0",
                  "nodeType": "FunctionDefinition",
                  "parameters": {
                    "id": 56,
                    "nodeType": "ParameterList",
                    "parameters": [],
                    "src": "1857:2:0"
                  },
                  "returnParameters": {
                    "id": 59,
                    "nodeType": "ParameterList",
                    "parameters": [],
                    "src": "1885:0:0"
                  },
                  "scope": 112,
                  "src": "1831:101:0",
                  "stateMutability": "nonpayable",
                  "virtual": true,
                  "visibility": "public"
                },
                {
                  "body": {
                    "id": 90,
                    "nodeType": "Block",
                    "src": "2151:128:0",
                    "statements": [
                      {
                        "expression": {
                          "arguments": [
                            {
                              "commonType": {
                                "typeIdentifier": "t_address",
                                "typeString": "address"
                              },
                              "id": 82,
                              "isConstant": false,
                              "isLValue": false,
                              "isPure": false,
                              "lValueRequested": false,
                              "leftExpression": {
                                "id": 77,
                                "name": "newOwner",
                                "nodeType": "Identifier",
                                "overloadedDeclarations": [],
                                "referencedDeclaration": 71,
                                "src": "2169:8:0",
                                "typeDescriptions": {
                                  "typeIdentifier": "t_address",
                                  "typeString": "address"
                                }
                              },
                              "nodeType": "BinaryOperation",
                              "operator": "!=",
                              "rightExpression": {
                                "arguments": [
                                  {
                                    "hexValue": "30",
                                    "id": 80,
                                    "isConstant": false,
                                    "isLValue": false,
                                    "isPure": true,
                                    "kind": "number",
                                    "lValueRequested": false,
                                    "nodeType": "Literal",
                                    "src": "2189:1:0",
                                    "typeDescriptions": {
                                      "typeIdentifier": "t_rational_0_by_1",
                                      "typeString": "int_const 0"
                                    },
                                    "value": "0"
                                  }
                                ],
                                "expression": {
                                  "argumentTypes": [
                                    {
                                      "typeIdentifier": "t_rational_0_by_1",
                                      "typeString": "int_const 0"
                                    }
                                  ],
                                  "id": 79,
                                  "isConstant": false,
                                  "isLValue": false,
                                  "isPure": true,
                                  "lValueRequested": false,
                                  "nodeType": "ElementaryTypeNameExpression",
                                  "src": "2181:7:0",
                                  "typeDescriptions": {
                                    "typeIdentifier": "t_type$_t_address_$",
                                    "typeString": "type(address)"
                                  },
                                  "typeName": {
                                    "id": 78,
                                    "name": "address",
                                    "nodeType": "ElementaryTypeName",
                                    "src": "2181:7:0",
                                    "typeDescriptions": {}
                                  }
                                },
                                "id": 81,
                                "isConstant": false,
                                "isLValue": false,
                                "isPure": true,
                                "kind": "typeConversion",
                                "lValueRequested": false,
                                "nameLocations": [],
                                "names": [],
                                "nodeType": "FunctionCall",
                                "src": "2181:10:0",
                                "tryCall": false,
                                "typeDescriptions": {
                                  "typeIdentifier": "t_address",
                                  "typeString": "address"
                                }
                              },
                              "src": "2169:22:0",
                              "typeDescriptions": {
                                "typeIdentifier": "t_bool",
                                "typeString": "bool"
                              }
                            },
                            {
                              "hexValue": "4f776e61626c653a206e6577206f776e657220697320746865207a65726f2061646472657373",
                              "id": 83,
                              "isConstant": false,
                              "isLValue": false,
                              "isPure": true,
                              "kind": "string",
                              "lValueRequested": false,
                              "nodeType": "Literal",
                              "src": "2193:40:0",
                              "typeDescriptions": {
                                "typeIdentifier": "t_stringliteral_245f15ff17f551913a7a18385165551503906a406f905ac1c2437281a7cd0cfe",
                                "typeString": "literal_string \"Ownable: new owner is the zero address\""
                              },
                              "value": "Ownable: new owner is the zero address"
                            }
                          ],
                          "expression": {
                            "argumentTypes": [
                              {
                                "typeIdentifier": "t_bool",
                                "typeString": "bool"
                              },
                              {
                                "typeIdentifier": "t_stringliteral_245f15ff17f551913a7a18385165551503906a406f905ac1c2437281a7cd0cfe",
                                "typeString": "literal_string \"Ownable: new owner is the zero address\""
                              }
                            ],
                            "id": 76,
                            "name": "require",
                            "nodeType": "Identifier",
                            "overloadedDeclarations": [-18, -18],
                            "referencedDeclaration": -18,
                            "src": "2161:7:0",
                            "typeDescriptions": {
                              "typeIdentifier": "t_function_require_pure$_t_bool_$_t_string_memory_ptr_$returns$__$",
                              "typeString": "function (bool,string memory) pure"
                            }
                          },
                          "id": 84,
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": false,
                          "kind": "functionCall",
                          "lValueRequested": false,
                          "nameLocations": [],
                          "names": [],
                          "nodeType": "FunctionCall",
                          "src": "2161:73:0",
                          "tryCall": false,
                          "typeDescriptions": {
                            "typeIdentifier": "t_tuple$__$",
                            "typeString": "tuple()"
                          }
                        },
                        "id": 85,
                        "nodeType": "ExpressionStatement",
                        "src": "2161:73:0"
                      },
                      {
                        "expression": {
                          "arguments": [
                            {
                              "id": 87,
                              "name": "newOwner",
                              "nodeType": "Identifier",
                              "overloadedDeclarations": [],
                              "referencedDeclaration": 71,
                              "src": "2263:8:0",
                              "typeDescriptions": {
                                "typeIdentifier": "t_address",
                                "typeString": "address"
                              }
                            }
                          ],
                          "expression": {
                            "argumentTypes": [
                              {
                                "typeIdentifier": "t_address",
                                "typeString": "address"
                              }
                            ],
                            "id": 86,
                            "name": "_transferOwnership",
                            "nodeType": "Identifier",
                            "overloadedDeclarations": [],
                            "referencedDeclaration": 111,
                            "src": "2244:18:0",
                            "typeDescriptions": {
                              "typeIdentifier": "t_function_internal_nonpayable$_t_address_$returns$__$",
                              "typeString": "function (address)"
                            }
                          },
                          "id": 88,
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": false,
                          "kind": "functionCall",
                          "lValueRequested": false,
                          "nameLocations": [],
                          "names": [],
                          "nodeType": "FunctionCall",
                          "src": "2244:28:0",
                          "tryCall": false,
                          "typeDescriptions": {
                            "typeIdentifier": "t_tuple$__$",
                            "typeString": "tuple()"
                          }
                        },
                        "id": 89,
                        "nodeType": "ExpressionStatement",
                        "src": "2244:28:0"
                      }
                    ]
                  },
                  "documentation": {
                    "id": 69,
                    "nodeType": "StructuredDocumentation",
                    "src": "1938:138:0",
                    "text": " @dev Transfers ownership of the contract to a new account (`newOwner`).\n Can only be called by the current owner."
                  },
                  "functionSelector": "f2fde38b",
                  "id": 91,
                  "implemented": true,
                  "kind": "function",
                  "modifiers": [
                    {
                      "id": 74,
                      "kind": "modifierInvocation",
                      "modifierName": {
                        "id": 73,
                        "name": "onlyOwner",
                        "nameLocations": ["2141:9:0"],
                        "nodeType": "IdentifierPath",
                        "referencedDeclaration": 31,
                        "src": "2141:9:0"
                      },
                      "nodeType": "ModifierInvocation",
                      "src": "2141:9:0"
                    }
                  ],
                  "name": "transferOwnership",
                  "nameLocation": "2090:17:0",
                  "nodeType": "FunctionDefinition",
                  "parameters": {
                    "id": 72,
                    "nodeType": "ParameterList",
                    "parameters": [
                      {
                        "constant": false,
                        "id": 71,
                        "mutability": "mutable",
                        "name": "newOwner",
                        "nameLocation": "2116:8:0",
                        "nodeType": "VariableDeclaration",
                        "scope": 91,
                        "src": "2108:16:0",
                        "stateVariable": false,
                        "storageLocation": "default",
                        "typeDescriptions": {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        },
                        "typeName": {
                          "id": 70,
                          "name": "address",
                          "nodeType": "ElementaryTypeName",
                          "src": "2108:7:0",
                          "stateMutability": "nonpayable",
                          "typeDescriptions": {
                            "typeIdentifier": "t_address",
                            "typeString": "address"
                          }
                        },
                        "visibility": "internal"
                      }
                    ],
                    "src": "2107:18:0"
                  },
                  "returnParameters": {
                    "id": 75,
                    "nodeType": "ParameterList",
                    "parameters": [],
                    "src": "2151:0:0"
                  },
                  "scope": 112,
                  "src": "2081:198:0",
                  "stateMutability": "nonpayable",
                  "virtual": true,
                  "visibility": "public"
                },
                {
                  "body": {
                    "id": 110,
                    "nodeType": "Block",
                    "src": "2496:124:0",
                    "statements": [
                      {
                        "assignments": [98],
                        "declarations": [
                          {
                            "constant": false,
                            "id": 98,
                            "mutability": "mutable",
                            "name": "oldOwner",
                            "nameLocation": "2514:8:0",
                            "nodeType": "VariableDeclaration",
                            "scope": 110,
                            "src": "2506:16:0",
                            "stateVariable": false,
                            "storageLocation": "default",
                            "typeDescriptions": {
                              "typeIdentifier": "t_address",
                              "typeString": "address"
                            },
                            "typeName": {
                              "id": 97,
                              "name": "address",
                              "nodeType": "ElementaryTypeName",
                              "src": "2506:7:0",
                              "stateMutability": "nonpayable",
                              "typeDescriptions": {
                                "typeIdentifier": "t_address",
                                "typeString": "address"
                              }
                            },
                            "visibility": "internal"
                          }
                        ],
                        "id": 100,
                        "initialValue": {
                          "id": 99,
                          "name": "_owner",
                          "nodeType": "Identifier",
                          "overloadedDeclarations": [],
                          "referencedDeclaration": 7,
                          "src": "2525:6:0",
                          "typeDescriptions": {
                            "typeIdentifier": "t_address",
                            "typeString": "address"
                          }
                        },
                        "nodeType": "VariableDeclarationStatement",
                        "src": "2506:25:0"
                      },
                      {
                        "expression": {
                          "id": 103,
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": false,
                          "lValueRequested": false,
                          "leftHandSide": {
                            "id": 101,
                            "name": "_owner",
                            "nodeType": "Identifier",
                            "overloadedDeclarations": [],
                            "referencedDeclaration": 7,
                            "src": "2541:6:0",
                            "typeDescriptions": {
                              "typeIdentifier": "t_address",
                              "typeString": "address"
                            }
                          },
                          "nodeType": "Assignment",
                          "operator": "=",
                          "rightHandSide": {
                            "id": 102,
                            "name": "newOwner",
                            "nodeType": "Identifier",
                            "overloadedDeclarations": [],
                            "referencedDeclaration": 94,
                            "src": "2550:8:0",
                            "typeDescriptions": {
                              "typeIdentifier": "t_address",
                              "typeString": "address"
                            }
                          },
                          "src": "2541:17:0",
                          "typeDescriptions": {
                            "typeIdentifier": "t_address",
                            "typeString": "address"
                          }
                        },
                        "id": 104,
                        "nodeType": "ExpressionStatement",
                        "src": "2541:17:0"
                      },
                      {
                        "eventCall": {
                          "arguments": [
                            {
                              "id": 106,
                              "name": "oldOwner",
                              "nodeType": "Identifier",
                              "overloadedDeclarations": [],
                              "referencedDeclaration": 98,
                              "src": "2594:8:0",
                              "typeDescriptions": {
                                "typeIdentifier": "t_address",
                                "typeString": "address"
                              }
                            },
                            {
                              "id": 107,
                              "name": "newOwner",
                              "nodeType": "Identifier",
                              "overloadedDeclarations": [],
                              "referencedDeclaration": 94,
                              "src": "2604:8:0",
                              "typeDescriptions": {
                                "typeIdentifier": "t_address",
                                "typeString": "address"
                              }
                            }
                          ],
                          "expression": {
                            "argumentTypes": [
                              {
                                "typeIdentifier": "t_address",
                                "typeString": "address"
                              },
                              {
                                "typeIdentifier": "t_address",
                                "typeString": "address"
                              }
                            ],
                            "id": 105,
                            "name": "OwnershipTransferred",
                            "nodeType": "Identifier",
                            "overloadedDeclarations": [],
                            "referencedDeclaration": 13,
                            "src": "2573:20:0",
                            "typeDescriptions": {
                              "typeIdentifier": "t_function_event_nonpayable$_t_address_$_t_address_$returns$__$",
                              "typeString": "function (address,address)"
                            }
                          },
                          "id": 108,
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": false,
                          "kind": "functionCall",
                          "lValueRequested": false,
                          "nameLocations": [],
                          "names": [],
                          "nodeType": "FunctionCall",
                          "src": "2573:40:0",
                          "tryCall": false,
                          "typeDescriptions": {
                            "typeIdentifier": "t_tuple$__$",
                            "typeString": "tuple()"
                          }
                        },
                        "id": 109,
                        "nodeType": "EmitStatement",
                        "src": "2568:45:0"
                      }
                    ]
                  },
                  "documentation": {
                    "id": 92,
                    "nodeType": "StructuredDocumentation",
                    "src": "2285:143:0",
                    "text": " @dev Transfers ownership of the contract to a new account (`newOwner`).\n Internal function without access restriction."
                  },
                  "id": 111,
                  "implemented": true,
                  "kind": "function",
                  "modifiers": [],
                  "name": "_transferOwnership",
                  "nameLocation": "2442:18:0",
                  "nodeType": "FunctionDefinition",
                  "parameters": {
                    "id": 95,
                    "nodeType": "ParameterList",
                    "parameters": [
                      {
                        "constant": false,
                        "id": 94,
                        "mutability": "mutable",
                        "name": "newOwner",
                        "nameLocation": "2469:8:0",
                        "nodeType": "VariableDeclaration",
                        "scope": 111,
                        "src": "2461:16:0",
                        "stateVariable": false,
                        "storageLocation": "default",
                        "typeDescriptions": {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        },
                        "typeName": {
                          "id": 93,
                          "name": "address",
                          "nodeType": "ElementaryTypeName",
                          "src": "2461:7:0",
                          "stateMutability": "nonpayable",
                          "typeDescriptions": {
                            "typeIdentifier": "t_address",
                            "typeString": "address"
                          }
                        },
                        "visibility": "internal"
                      }
                    ],
                    "src": "2460:18:0"
                  },
                  "returnParameters": {
                    "id": 96,
                    "nodeType": "ParameterList",
                    "parameters": [],
                    "src": "2496:0:0"
                  },
                  "scope": 112,
                  "src": "2433:187:0",
                  "stateMutability": "nonpayable",
                  "virtual": true,
                  "visibility": "internal"
                }
              ],
              "scope": 113,
              "src": "654:1968:0",
              "usedErrors": []
            }
          ],
          "src": "102:2521:0"
        },
        "id": 0
      },
      "@openzeppelin/contracts/utils/Context.sol": {
        "ast": {
          "absolutePath": "@openzeppelin/contracts/utils/Context.sol",
          "exportedSymbols": { "Context": [134] },
          "id": 135,
          "license": "MIT",
          "nodeType": "SourceUnit",
          "nodes": [
            {
              "id": 114,
              "literals": ["solidity", "^", "0.8", ".0"],
              "nodeType": "PragmaDirective",
              "src": "86:23:1"
            },
            {
              "abstract": true,
              "baseContracts": [],
              "canonicalName": "Context",
              "contractDependencies": [],
              "contractKind": "contract",
              "documentation": {
                "id": 115,
                "nodeType": "StructuredDocumentation",
                "src": "111:496:1",
                "text": " @dev Provides information about the current execution context, including the\n sender of the transaction and its data. While these are generally available\n via msg.sender and msg.data, they should not be accessed in such a direct\n manner, since when dealing with meta-transactions the account sending and\n paying for execution may not be the actual sender (as far as an application\n is concerned).\n This contract is only required for intermediate, library-like contracts."
              },
              "fullyImplemented": true,
              "id": 134,
              "linearizedBaseContracts": [134],
              "name": "Context",
              "nameLocation": "626:7:1",
              "nodeType": "ContractDefinition",
              "nodes": [
                {
                  "body": {
                    "id": 123,
                    "nodeType": "Block",
                    "src": "702:34:1",
                    "statements": [
                      {
                        "expression": {
                          "expression": {
                            "id": 120,
                            "name": "msg",
                            "nodeType": "Identifier",
                            "overloadedDeclarations": [],
                            "referencedDeclaration": -15,
                            "src": "719:3:1",
                            "typeDescriptions": {
                              "typeIdentifier": "t_magic_message",
                              "typeString": "msg"
                            }
                          },
                          "id": 121,
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": false,
                          "lValueRequested": false,
                          "memberLocation": "723:6:1",
                          "memberName": "sender",
                          "nodeType": "MemberAccess",
                          "src": "719:10:1",
                          "typeDescriptions": {
                            "typeIdentifier": "t_address",
                            "typeString": "address"
                          }
                        },
                        "functionReturnParameters": 119,
                        "id": 122,
                        "nodeType": "Return",
                        "src": "712:17:1"
                      }
                    ]
                  },
                  "id": 124,
                  "implemented": true,
                  "kind": "function",
                  "modifiers": [],
                  "name": "_msgSender",
                  "nameLocation": "649:10:1",
                  "nodeType": "FunctionDefinition",
                  "parameters": {
                    "id": 116,
                    "nodeType": "ParameterList",
                    "parameters": [],
                    "src": "659:2:1"
                  },
                  "returnParameters": {
                    "id": 119,
                    "nodeType": "ParameterList",
                    "parameters": [
                      {
                        "constant": false,
                        "id": 118,
                        "mutability": "mutable",
                        "name": "",
                        "nameLocation": "-1:-1:-1",
                        "nodeType": "VariableDeclaration",
                        "scope": 124,
                        "src": "693:7:1",
                        "stateVariable": false,
                        "storageLocation": "default",
                        "typeDescriptions": {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        },
                        "typeName": {
                          "id": 117,
                          "name": "address",
                          "nodeType": "ElementaryTypeName",
                          "src": "693:7:1",
                          "stateMutability": "nonpayable",
                          "typeDescriptions": {
                            "typeIdentifier": "t_address",
                            "typeString": "address"
                          }
                        },
                        "visibility": "internal"
                      }
                    ],
                    "src": "692:9:1"
                  },
                  "scope": 134,
                  "src": "640:96:1",
                  "stateMutability": "view",
                  "virtual": true,
                  "visibility": "internal"
                },
                {
                  "body": {
                    "id": 132,
                    "nodeType": "Block",
                    "src": "809:32:1",
                    "statements": [
                      {
                        "expression": {
                          "expression": {
                            "id": 129,
                            "name": "msg",
                            "nodeType": "Identifier",
                            "overloadedDeclarations": [],
                            "referencedDeclaration": -15,
                            "src": "826:3:1",
                            "typeDescriptions": {
                              "typeIdentifier": "t_magic_message",
                              "typeString": "msg"
                            }
                          },
                          "id": 130,
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": false,
                          "lValueRequested": false,
                          "memberLocation": "830:4:1",
                          "memberName": "data",
                          "nodeType": "MemberAccess",
                          "src": "826:8:1",
                          "typeDescriptions": {
                            "typeIdentifier": "t_bytes_calldata_ptr",
                            "typeString": "bytes calldata"
                          }
                        },
                        "functionReturnParameters": 128,
                        "id": 131,
                        "nodeType": "Return",
                        "src": "819:15:1"
                      }
                    ]
                  },
                  "id": 133,
                  "implemented": true,
                  "kind": "function",
                  "modifiers": [],
                  "name": "_msgData",
                  "nameLocation": "751:8:1",
                  "nodeType": "FunctionDefinition",
                  "parameters": {
                    "id": 125,
                    "nodeType": "ParameterList",
                    "parameters": [],
                    "src": "759:2:1"
                  },
                  "returnParameters": {
                    "id": 128,
                    "nodeType": "ParameterList",
                    "parameters": [
                      {
                        "constant": false,
                        "id": 127,
                        "mutability": "mutable",
                        "name": "",
                        "nameLocation": "-1:-1:-1",
                        "nodeType": "VariableDeclaration",
                        "scope": 133,
                        "src": "793:14:1",
                        "stateVariable": false,
                        "storageLocation": "calldata",
                        "typeDescriptions": {
                          "typeIdentifier": "t_bytes_calldata_ptr",
                          "typeString": "bytes"
                        },
                        "typeName": {
                          "id": 126,
                          "name": "bytes",
                          "nodeType": "ElementaryTypeName",
                          "src": "793:5:1",
                          "typeDescriptions": {
                            "typeIdentifier": "t_bytes_storage_ptr",
                            "typeString": "bytes"
                          }
                        },
                        "visibility": "internal"
                      }
                    ],
                    "src": "792:16:1"
                  },
                  "scope": 134,
                  "src": "742:99:1",
                  "stateMutability": "view",
                  "virtual": true,
                  "visibility": "internal"
                }
              ],
              "scope": 135,
              "src": "608:235:1",
              "usedErrors": []
            }
          ],
          "src": "86:758:1"
        },
        "id": 1
      },
      "@openzeppelin/contracts/utils/Strings.sol": {
        "ast": {
          "absolutePath": "@openzeppelin/contracts/utils/Strings.sol",
          "exportedSymbols": { "Strings": [360] },
          "id": 361,
          "license": "MIT",
          "nodeType": "SourceUnit",
          "nodes": [
            {
              "id": 136,
              "literals": ["solidity", "^", "0.8", ".0"],
              "nodeType": "PragmaDirective",
              "src": "101:23:2"
            },
            {
              "abstract": false,
              "baseContracts": [],
              "canonicalName": "Strings",
              "contractDependencies": [],
              "contractKind": "library",
              "documentation": {
                "id": 137,
                "nodeType": "StructuredDocumentation",
                "src": "126:34:2",
                "text": " @dev String operations."
              },
              "fullyImplemented": true,
              "id": 360,
              "linearizedBaseContracts": [360],
              "name": "Strings",
              "nameLocation": "169:7:2",
              "nodeType": "ContractDefinition",
              "nodes": [
                {
                  "constant": true,
                  "id": 140,
                  "mutability": "constant",
                  "name": "_HEX_SYMBOLS",
                  "nameLocation": "208:12:2",
                  "nodeType": "VariableDeclaration",
                  "scope": 360,
                  "src": "183:58:2",
                  "stateVariable": true,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_bytes16",
                    "typeString": "bytes16"
                  },
                  "typeName": {
                    "id": 138,
                    "name": "bytes16",
                    "nodeType": "ElementaryTypeName",
                    "src": "183:7:2",
                    "typeDescriptions": {
                      "typeIdentifier": "t_bytes16",
                      "typeString": "bytes16"
                    }
                  },
                  "value": {
                    "hexValue": "30313233343536373839616263646566",
                    "id": 139,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": true,
                    "kind": "string",
                    "lValueRequested": false,
                    "nodeType": "Literal",
                    "src": "223:18:2",
                    "typeDescriptions": {
                      "typeIdentifier": "t_stringliteral_cb29997ed99ead0db59ce4d12b7d3723198c827273e5796737c926d78019c39f",
                      "typeString": "literal_string \"0123456789abcdef\""
                    },
                    "value": "0123456789abcdef"
                  },
                  "visibility": "private"
                },
                {
                  "constant": true,
                  "id": 143,
                  "mutability": "constant",
                  "name": "_ADDRESS_LENGTH",
                  "nameLocation": "270:15:2",
                  "nodeType": "VariableDeclaration",
                  "scope": 360,
                  "src": "247:43:2",
                  "stateVariable": true,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_uint8",
                    "typeString": "uint8"
                  },
                  "typeName": {
                    "id": 141,
                    "name": "uint8",
                    "nodeType": "ElementaryTypeName",
                    "src": "247:5:2",
                    "typeDescriptions": {
                      "typeIdentifier": "t_uint8",
                      "typeString": "uint8"
                    }
                  },
                  "value": {
                    "hexValue": "3230",
                    "id": 142,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": true,
                    "kind": "number",
                    "lValueRequested": false,
                    "nodeType": "Literal",
                    "src": "288:2:2",
                    "typeDescriptions": {
                      "typeIdentifier": "t_rational_20_by_1",
                      "typeString": "int_const 20"
                    },
                    "value": "20"
                  },
                  "visibility": "private"
                },
                {
                  "body": {
                    "id": 221,
                    "nodeType": "Block",
                    "src": "463:632:2",
                    "statements": [
                      {
                        "condition": {
                          "commonType": {
                            "typeIdentifier": "t_uint256",
                            "typeString": "uint256"
                          },
                          "id": 153,
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": false,
                          "lValueRequested": false,
                          "leftExpression": {
                            "id": 151,
                            "name": "value",
                            "nodeType": "Identifier",
                            "overloadedDeclarations": [],
                            "referencedDeclaration": 146,
                            "src": "665:5:2",
                            "typeDescriptions": {
                              "typeIdentifier": "t_uint256",
                              "typeString": "uint256"
                            }
                          },
                          "nodeType": "BinaryOperation",
                          "operator": "==",
                          "rightExpression": {
                            "hexValue": "30",
                            "id": 152,
                            "isConstant": false,
                            "isLValue": false,
                            "isPure": true,
                            "kind": "number",
                            "lValueRequested": false,
                            "nodeType": "Literal",
                            "src": "674:1:2",
                            "typeDescriptions": {
                              "typeIdentifier": "t_rational_0_by_1",
                              "typeString": "int_const 0"
                            },
                            "value": "0"
                          },
                          "src": "665:10:2",
                          "typeDescriptions": {
                            "typeIdentifier": "t_bool",
                            "typeString": "bool"
                          }
                        },
                        "id": 157,
                        "nodeType": "IfStatement",
                        "src": "661:51:2",
                        "trueBody": {
                          "id": 156,
                          "nodeType": "Block",
                          "src": "677:35:2",
                          "statements": [
                            {
                              "expression": {
                                "hexValue": "30",
                                "id": 154,
                                "isConstant": false,
                                "isLValue": false,
                                "isPure": true,
                                "kind": "string",
                                "lValueRequested": false,
                                "nodeType": "Literal",
                                "src": "698:3:2",
                                "typeDescriptions": {
                                  "typeIdentifier": "t_stringliteral_044852b2a670ade5407e78fb2863c51de9fcb96542a07186fe3aeda6bb8a116d",
                                  "typeString": "literal_string \"0\""
                                },
                                "value": "0"
                              },
                              "functionReturnParameters": 150,
                              "id": 155,
                              "nodeType": "Return",
                              "src": "691:10:2"
                            }
                          ]
                        }
                      },
                      {
                        "assignments": [159],
                        "declarations": [
                          {
                            "constant": false,
                            "id": 159,
                            "mutability": "mutable",
                            "name": "temp",
                            "nameLocation": "729:4:2",
                            "nodeType": "VariableDeclaration",
                            "scope": 221,
                            "src": "721:12:2",
                            "stateVariable": false,
                            "storageLocation": "default",
                            "typeDescriptions": {
                              "typeIdentifier": "t_uint256",
                              "typeString": "uint256"
                            },
                            "typeName": {
                              "id": 158,
                              "name": "uint256",
                              "nodeType": "ElementaryTypeName",
                              "src": "721:7:2",
                              "typeDescriptions": {
                                "typeIdentifier": "t_uint256",
                                "typeString": "uint256"
                              }
                            },
                            "visibility": "internal"
                          }
                        ],
                        "id": 161,
                        "initialValue": {
                          "id": 160,
                          "name": "value",
                          "nodeType": "Identifier",
                          "overloadedDeclarations": [],
                          "referencedDeclaration": 146,
                          "src": "736:5:2",
                          "typeDescriptions": {
                            "typeIdentifier": "t_uint256",
                            "typeString": "uint256"
                          }
                        },
                        "nodeType": "VariableDeclarationStatement",
                        "src": "721:20:2"
                      },
                      {
                        "assignments": [163],
                        "declarations": [
                          {
                            "constant": false,
                            "id": 163,
                            "mutability": "mutable",
                            "name": "digits",
                            "nameLocation": "759:6:2",
                            "nodeType": "VariableDeclaration",
                            "scope": 221,
                            "src": "751:14:2",
                            "stateVariable": false,
                            "storageLocation": "default",
                            "typeDescriptions": {
                              "typeIdentifier": "t_uint256",
                              "typeString": "uint256"
                            },
                            "typeName": {
                              "id": 162,
                              "name": "uint256",
                              "nodeType": "ElementaryTypeName",
                              "src": "751:7:2",
                              "typeDescriptions": {
                                "typeIdentifier": "t_uint256",
                                "typeString": "uint256"
                              }
                            },
                            "visibility": "internal"
                          }
                        ],
                        "id": 164,
                        "nodeType": "VariableDeclarationStatement",
                        "src": "751:14:2"
                      },
                      {
                        "body": {
                          "id": 175,
                          "nodeType": "Block",
                          "src": "793:57:2",
                          "statements": [
                            {
                              "expression": {
                                "id": 169,
                                "isConstant": false,
                                "isLValue": false,
                                "isPure": false,
                                "lValueRequested": false,
                                "nodeType": "UnaryOperation",
                                "operator": "++",
                                "prefix": false,
                                "src": "807:8:2",
                                "subExpression": {
                                  "id": 168,
                                  "name": "digits",
                                  "nodeType": "Identifier",
                                  "overloadedDeclarations": [],
                                  "referencedDeclaration": 163,
                                  "src": "807:6:2",
                                  "typeDescriptions": {
                                    "typeIdentifier": "t_uint256",
                                    "typeString": "uint256"
                                  }
                                },
                                "typeDescriptions": {
                                  "typeIdentifier": "t_uint256",
                                  "typeString": "uint256"
                                }
                              },
                              "id": 170,
                              "nodeType": "ExpressionStatement",
                              "src": "807:8:2"
                            },
                            {
                              "expression": {
                                "id": 173,
                                "isConstant": false,
                                "isLValue": false,
                                "isPure": false,
                                "lValueRequested": false,
                                "leftHandSide": {
                                  "id": 171,
                                  "name": "temp",
                                  "nodeType": "Identifier",
                                  "overloadedDeclarations": [],
                                  "referencedDeclaration": 159,
                                  "src": "829:4:2",
                                  "typeDescriptions": {
                                    "typeIdentifier": "t_uint256",
                                    "typeString": "uint256"
                                  }
                                },
                                "nodeType": "Assignment",
                                "operator": "/=",
                                "rightHandSide": {
                                  "hexValue": "3130",
                                  "id": 172,
                                  "isConstant": false,
                                  "isLValue": false,
                                  "isPure": true,
                                  "kind": "number",
                                  "lValueRequested": false,
                                  "nodeType": "Literal",
                                  "src": "837:2:2",
                                  "typeDescriptions": {
                                    "typeIdentifier": "t_rational_10_by_1",
                                    "typeString": "int_const 10"
                                  },
                                  "value": "10"
                                },
                                "src": "829:10:2",
                                "typeDescriptions": {
                                  "typeIdentifier": "t_uint256",
                                  "typeString": "uint256"
                                }
                              },
                              "id": 174,
                              "nodeType": "ExpressionStatement",
                              "src": "829:10:2"
                            }
                          ]
                        },
                        "condition": {
                          "commonType": {
                            "typeIdentifier": "t_uint256",
                            "typeString": "uint256"
                          },
                          "id": 167,
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": false,
                          "lValueRequested": false,
                          "leftExpression": {
                            "id": 165,
                            "name": "temp",
                            "nodeType": "Identifier",
                            "overloadedDeclarations": [],
                            "referencedDeclaration": 159,
                            "src": "782:4:2",
                            "typeDescriptions": {
                              "typeIdentifier": "t_uint256",
                              "typeString": "uint256"
                            }
                          },
                          "nodeType": "BinaryOperation",
                          "operator": "!=",
                          "rightExpression": {
                            "hexValue": "30",
                            "id": 166,
                            "isConstant": false,
                            "isLValue": false,
                            "isPure": true,
                            "kind": "number",
                            "lValueRequested": false,
                            "nodeType": "Literal",
                            "src": "790:1:2",
                            "typeDescriptions": {
                              "typeIdentifier": "t_rational_0_by_1",
                              "typeString": "int_const 0"
                            },
                            "value": "0"
                          },
                          "src": "782:9:2",
                          "typeDescriptions": {
                            "typeIdentifier": "t_bool",
                            "typeString": "bool"
                          }
                        },
                        "id": 176,
                        "nodeType": "WhileStatement",
                        "src": "775:75:2"
                      },
                      {
                        "assignments": [178],
                        "declarations": [
                          {
                            "constant": false,
                            "id": 178,
                            "mutability": "mutable",
                            "name": "buffer",
                            "nameLocation": "872:6:2",
                            "nodeType": "VariableDeclaration",
                            "scope": 221,
                            "src": "859:19:2",
                            "stateVariable": false,
                            "storageLocation": "memory",
                            "typeDescriptions": {
                              "typeIdentifier": "t_bytes_memory_ptr",
                              "typeString": "bytes"
                            },
                            "typeName": {
                              "id": 177,
                              "name": "bytes",
                              "nodeType": "ElementaryTypeName",
                              "src": "859:5:2",
                              "typeDescriptions": {
                                "typeIdentifier": "t_bytes_storage_ptr",
                                "typeString": "bytes"
                              }
                            },
                            "visibility": "internal"
                          }
                        ],
                        "id": 183,
                        "initialValue": {
                          "arguments": [
                            {
                              "id": 181,
                              "name": "digits",
                              "nodeType": "Identifier",
                              "overloadedDeclarations": [],
                              "referencedDeclaration": 163,
                              "src": "891:6:2",
                              "typeDescriptions": {
                                "typeIdentifier": "t_uint256",
                                "typeString": "uint256"
                              }
                            }
                          ],
                          "expression": {
                            "argumentTypes": [
                              {
                                "typeIdentifier": "t_uint256",
                                "typeString": "uint256"
                              }
                            ],
                            "id": 180,
                            "isConstant": false,
                            "isLValue": false,
                            "isPure": true,
                            "lValueRequested": false,
                            "nodeType": "NewExpression",
                            "src": "881:9:2",
                            "typeDescriptions": {
                              "typeIdentifier": "t_function_objectcreation_pure$_t_uint256_$returns$_t_bytes_memory_ptr_$",
                              "typeString": "function (uint256) pure returns (bytes memory)"
                            },
                            "typeName": {
                              "id": 179,
                              "name": "bytes",
                              "nodeType": "ElementaryTypeName",
                              "src": "885:5:2",
                              "typeDescriptions": {
                                "typeIdentifier": "t_bytes_storage_ptr",
                                "typeString": "bytes"
                              }
                            }
                          },
                          "id": 182,
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": false,
                          "kind": "functionCall",
                          "lValueRequested": false,
                          "nameLocations": [],
                          "names": [],
                          "nodeType": "FunctionCall",
                          "src": "881:17:2",
                          "tryCall": false,
                          "typeDescriptions": {
                            "typeIdentifier": "t_bytes_memory_ptr",
                            "typeString": "bytes memory"
                          }
                        },
                        "nodeType": "VariableDeclarationStatement",
                        "src": "859:39:2"
                      },
                      {
                        "body": {
                          "id": 214,
                          "nodeType": "Block",
                          "src": "927:131:2",
                          "statements": [
                            {
                              "expression": {
                                "id": 189,
                                "isConstant": false,
                                "isLValue": false,
                                "isPure": false,
                                "lValueRequested": false,
                                "leftHandSide": {
                                  "id": 187,
                                  "name": "digits",
                                  "nodeType": "Identifier",
                                  "overloadedDeclarations": [],
                                  "referencedDeclaration": 163,
                                  "src": "941:6:2",
                                  "typeDescriptions": {
                                    "typeIdentifier": "t_uint256",
                                    "typeString": "uint256"
                                  }
                                },
                                "nodeType": "Assignment",
                                "operator": "-=",
                                "rightHandSide": {
                                  "hexValue": "31",
                                  "id": 188,
                                  "isConstant": false,
                                  "isLValue": false,
                                  "isPure": true,
                                  "kind": "number",
                                  "lValueRequested": false,
                                  "nodeType": "Literal",
                                  "src": "951:1:2",
                                  "typeDescriptions": {
                                    "typeIdentifier": "t_rational_1_by_1",
                                    "typeString": "int_const 1"
                                  },
                                  "value": "1"
                                },
                                "src": "941:11:2",
                                "typeDescriptions": {
                                  "typeIdentifier": "t_uint256",
                                  "typeString": "uint256"
                                }
                              },
                              "id": 190,
                              "nodeType": "ExpressionStatement",
                              "src": "941:11:2"
                            },
                            {
                              "expression": {
                                "id": 208,
                                "isConstant": false,
                                "isLValue": false,
                                "isPure": false,
                                "lValueRequested": false,
                                "leftHandSide": {
                                  "baseExpression": {
                                    "id": 191,
                                    "name": "buffer",
                                    "nodeType": "Identifier",
                                    "overloadedDeclarations": [],
                                    "referencedDeclaration": 178,
                                    "src": "966:6:2",
                                    "typeDescriptions": {
                                      "typeIdentifier": "t_bytes_memory_ptr",
                                      "typeString": "bytes memory"
                                    }
                                  },
                                  "id": 193,
                                  "indexExpression": {
                                    "id": 192,
                                    "name": "digits",
                                    "nodeType": "Identifier",
                                    "overloadedDeclarations": [],
                                    "referencedDeclaration": 163,
                                    "src": "973:6:2",
                                    "typeDescriptions": {
                                      "typeIdentifier": "t_uint256",
                                      "typeString": "uint256"
                                    }
                                  },
                                  "isConstant": false,
                                  "isLValue": true,
                                  "isPure": false,
                                  "lValueRequested": true,
                                  "nodeType": "IndexAccess",
                                  "src": "966:14:2",
                                  "typeDescriptions": {
                                    "typeIdentifier": "t_bytes1",
                                    "typeString": "bytes1"
                                  }
                                },
                                "nodeType": "Assignment",
                                "operator": "=",
                                "rightHandSide": {
                                  "arguments": [
                                    {
                                      "arguments": [
                                        {
                                          "commonType": {
                                            "typeIdentifier": "t_uint256",
                                            "typeString": "uint256"
                                          },
                                          "id": 205,
                                          "isConstant": false,
                                          "isLValue": false,
                                          "isPure": false,
                                          "lValueRequested": false,
                                          "leftExpression": {
                                            "hexValue": "3438",
                                            "id": 198,
                                            "isConstant": false,
                                            "isLValue": false,
                                            "isPure": true,
                                            "kind": "number",
                                            "lValueRequested": false,
                                            "nodeType": "Literal",
                                            "src": "996:2:2",
                                            "typeDescriptions": {
                                              "typeIdentifier": "t_rational_48_by_1",
                                              "typeString": "int_const 48"
                                            },
                                            "value": "48"
                                          },
                                          "nodeType": "BinaryOperation",
                                          "operator": "+",
                                          "rightExpression": {
                                            "arguments": [
                                              {
                                                "commonType": {
                                                  "typeIdentifier": "t_uint256",
                                                  "typeString": "uint256"
                                                },
                                                "id": 203,
                                                "isConstant": false,
                                                "isLValue": false,
                                                "isPure": false,
                                                "lValueRequested": false,
                                                "leftExpression": {
                                                  "id": 201,
                                                  "name": "value",
                                                  "nodeType": "Identifier",
                                                  "overloadedDeclarations": [],
                                                  "referencedDeclaration": 146,
                                                  "src": "1009:5:2",
                                                  "typeDescriptions": {
                                                    "typeIdentifier": "t_uint256",
                                                    "typeString": "uint256"
                                                  }
                                                },
                                                "nodeType": "BinaryOperation",
                                                "operator": "%",
                                                "rightExpression": {
                                                  "hexValue": "3130",
                                                  "id": 202,
                                                  "isConstant": false,
                                                  "isLValue": false,
                                                  "isPure": true,
                                                  "kind": "number",
                                                  "lValueRequested": false,
                                                  "nodeType": "Literal",
                                                  "src": "1017:2:2",
                                                  "typeDescriptions": {
                                                    "typeIdentifier": "t_rational_10_by_1",
                                                    "typeString": "int_const 10"
                                                  },
                                                  "value": "10"
                                                },
                                                "src": "1009:10:2",
                                                "typeDescriptions": {
                                                  "typeIdentifier": "t_uint256",
                                                  "typeString": "uint256"
                                                }
                                              }
                                            ],
                                            "expression": {
                                              "argumentTypes": [
                                                {
                                                  "typeIdentifier": "t_uint256",
                                                  "typeString": "uint256"
                                                }
                                              ],
                                              "id": 200,
                                              "isConstant": false,
                                              "isLValue": false,
                                              "isPure": true,
                                              "lValueRequested": false,
                                              "nodeType": "ElementaryTypeNameExpression",
                                              "src": "1001:7:2",
                                              "typeDescriptions": {
                                                "typeIdentifier": "t_type$_t_uint256_$",
                                                "typeString": "type(uint256)"
                                              },
                                              "typeName": {
                                                "id": 199,
                                                "name": "uint256",
                                                "nodeType": "ElementaryTypeName",
                                                "src": "1001:7:2",
                                                "typeDescriptions": {}
                                              }
                                            },
                                            "id": 204,
                                            "isConstant": false,
                                            "isLValue": false,
                                            "isPure": false,
                                            "kind": "typeConversion",
                                            "lValueRequested": false,
                                            "nameLocations": [],
                                            "names": [],
                                            "nodeType": "FunctionCall",
                                            "src": "1001:19:2",
                                            "tryCall": false,
                                            "typeDescriptions": {
                                              "typeIdentifier": "t_uint256",
                                              "typeString": "uint256"
                                            }
                                          },
                                          "src": "996:24:2",
                                          "typeDescriptions": {
                                            "typeIdentifier": "t_uint256",
                                            "typeString": "uint256"
                                          }
                                        }
                                      ],
                                      "expression": {
                                        "argumentTypes": [
                                          {
                                            "typeIdentifier": "t_uint256",
                                            "typeString": "uint256"
                                          }
                                        ],
                                        "id": 197,
                                        "isConstant": false,
                                        "isLValue": false,
                                        "isPure": true,
                                        "lValueRequested": false,
                                        "nodeType": "ElementaryTypeNameExpression",
                                        "src": "990:5:2",
                                        "typeDescriptions": {
                                          "typeIdentifier": "t_type$_t_uint8_$",
                                          "typeString": "type(uint8)"
                                        },
                                        "typeName": {
                                          "id": 196,
                                          "name": "uint8",
                                          "nodeType": "ElementaryTypeName",
                                          "src": "990:5:2",
                                          "typeDescriptions": {}
                                        }
                                      },
                                      "id": 206,
                                      "isConstant": false,
                                      "isLValue": false,
                                      "isPure": false,
                                      "kind": "typeConversion",
                                      "lValueRequested": false,
                                      "nameLocations": [],
                                      "names": [],
                                      "nodeType": "FunctionCall",
                                      "src": "990:31:2",
                                      "tryCall": false,
                                      "typeDescriptions": {
                                        "typeIdentifier": "t_uint8",
                                        "typeString": "uint8"
                                      }
                                    }
                                  ],
                                  "expression": {
                                    "argumentTypes": [
                                      {
                                        "typeIdentifier": "t_uint8",
                                        "typeString": "uint8"
                                      }
                                    ],
                                    "id": 195,
                                    "isConstant": false,
                                    "isLValue": false,
                                    "isPure": true,
                                    "lValueRequested": false,
                                    "nodeType": "ElementaryTypeNameExpression",
                                    "src": "983:6:2",
                                    "typeDescriptions": {
                                      "typeIdentifier": "t_type$_t_bytes1_$",
                                      "typeString": "type(bytes1)"
                                    },
                                    "typeName": {
                                      "id": 194,
                                      "name": "bytes1",
                                      "nodeType": "ElementaryTypeName",
                                      "src": "983:6:2",
                                      "typeDescriptions": {}
                                    }
                                  },
                                  "id": 207,
                                  "isConstant": false,
                                  "isLValue": false,
                                  "isPure": false,
                                  "kind": "typeConversion",
                                  "lValueRequested": false,
                                  "nameLocations": [],
                                  "names": [],
                                  "nodeType": "FunctionCall",
                                  "src": "983:39:2",
                                  "tryCall": false,
                                  "typeDescriptions": {
                                    "typeIdentifier": "t_bytes1",
                                    "typeString": "bytes1"
                                  }
                                },
                                "src": "966:56:2",
                                "typeDescriptions": {
                                  "typeIdentifier": "t_bytes1",
                                  "typeString": "bytes1"
                                }
                              },
                              "id": 209,
                              "nodeType": "ExpressionStatement",
                              "src": "966:56:2"
                            },
                            {
                              "expression": {
                                "id": 212,
                                "isConstant": false,
                                "isLValue": false,
                                "isPure": false,
                                "lValueRequested": false,
                                "leftHandSide": {
                                  "id": 210,
                                  "name": "value",
                                  "nodeType": "Identifier",
                                  "overloadedDeclarations": [],
                                  "referencedDeclaration": 146,
                                  "src": "1036:5:2",
                                  "typeDescriptions": {
                                    "typeIdentifier": "t_uint256",
                                    "typeString": "uint256"
                                  }
                                },
                                "nodeType": "Assignment",
                                "operator": "/=",
                                "rightHandSide": {
                                  "hexValue": "3130",
                                  "id": 211,
                                  "isConstant": false,
                                  "isLValue": false,
                                  "isPure": true,
                                  "kind": "number",
                                  "lValueRequested": false,
                                  "nodeType": "Literal",
                                  "src": "1045:2:2",
                                  "typeDescriptions": {
                                    "typeIdentifier": "t_rational_10_by_1",
                                    "typeString": "int_const 10"
                                  },
                                  "value": "10"
                                },
                                "src": "1036:11:2",
                                "typeDescriptions": {
                                  "typeIdentifier": "t_uint256",
                                  "typeString": "uint256"
                                }
                              },
                              "id": 213,
                              "nodeType": "ExpressionStatement",
                              "src": "1036:11:2"
                            }
                          ]
                        },
                        "condition": {
                          "commonType": {
                            "typeIdentifier": "t_uint256",
                            "typeString": "uint256"
                          },
                          "id": 186,
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": false,
                          "lValueRequested": false,
                          "leftExpression": {
                            "id": 184,
                            "name": "value",
                            "nodeType": "Identifier",
                            "overloadedDeclarations": [],
                            "referencedDeclaration": 146,
                            "src": "915:5:2",
                            "typeDescriptions": {
                              "typeIdentifier": "t_uint256",
                              "typeString": "uint256"
                            }
                          },
                          "nodeType": "BinaryOperation",
                          "operator": "!=",
                          "rightExpression": {
                            "hexValue": "30",
                            "id": 185,
                            "isConstant": false,
                            "isLValue": false,
                            "isPure": true,
                            "kind": "number",
                            "lValueRequested": false,
                            "nodeType": "Literal",
                            "src": "924:1:2",
                            "typeDescriptions": {
                              "typeIdentifier": "t_rational_0_by_1",
                              "typeString": "int_const 0"
                            },
                            "value": "0"
                          },
                          "src": "915:10:2",
                          "typeDescriptions": {
                            "typeIdentifier": "t_bool",
                            "typeString": "bool"
                          }
                        },
                        "id": 215,
                        "nodeType": "WhileStatement",
                        "src": "908:150:2"
                      },
                      {
                        "expression": {
                          "arguments": [
                            {
                              "id": 218,
                              "name": "buffer",
                              "nodeType": "Identifier",
                              "overloadedDeclarations": [],
                              "referencedDeclaration": 178,
                              "src": "1081:6:2",
                              "typeDescriptions": {
                                "typeIdentifier": "t_bytes_memory_ptr",
                                "typeString": "bytes memory"
                              }
                            }
                          ],
                          "expression": {
                            "argumentTypes": [
                              {
                                "typeIdentifier": "t_bytes_memory_ptr",
                                "typeString": "bytes memory"
                              }
                            ],
                            "id": 217,
                            "isConstant": false,
                            "isLValue": false,
                            "isPure": true,
                            "lValueRequested": false,
                            "nodeType": "ElementaryTypeNameExpression",
                            "src": "1074:6:2",
                            "typeDescriptions": {
                              "typeIdentifier": "t_type$_t_string_storage_ptr_$",
                              "typeString": "type(string storage pointer)"
                            },
                            "typeName": {
                              "id": 216,
                              "name": "string",
                              "nodeType": "ElementaryTypeName",
                              "src": "1074:6:2",
                              "typeDescriptions": {}
                            }
                          },
                          "id": 219,
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": false,
                          "kind": "typeConversion",
                          "lValueRequested": false,
                          "nameLocations": [],
                          "names": [],
                          "nodeType": "FunctionCall",
                          "src": "1074:14:2",
                          "tryCall": false,
                          "typeDescriptions": {
                            "typeIdentifier": "t_string_memory_ptr",
                            "typeString": "string memory"
                          }
                        },
                        "functionReturnParameters": 150,
                        "id": 220,
                        "nodeType": "Return",
                        "src": "1067:21:2"
                      }
                    ]
                  },
                  "documentation": {
                    "id": 144,
                    "nodeType": "StructuredDocumentation",
                    "src": "297:90:2",
                    "text": " @dev Converts a `uint256` to its ASCII `string` decimal representation."
                  },
                  "id": 222,
                  "implemented": true,
                  "kind": "function",
                  "modifiers": [],
                  "name": "toString",
                  "nameLocation": "401:8:2",
                  "nodeType": "FunctionDefinition",
                  "parameters": {
                    "id": 147,
                    "nodeType": "ParameterList",
                    "parameters": [
                      {
                        "constant": false,
                        "id": 146,
                        "mutability": "mutable",
                        "name": "value",
                        "nameLocation": "418:5:2",
                        "nodeType": "VariableDeclaration",
                        "scope": 222,
                        "src": "410:13:2",
                        "stateVariable": false,
                        "storageLocation": "default",
                        "typeDescriptions": {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        },
                        "typeName": {
                          "id": 145,
                          "name": "uint256",
                          "nodeType": "ElementaryTypeName",
                          "src": "410:7:2",
                          "typeDescriptions": {
                            "typeIdentifier": "t_uint256",
                            "typeString": "uint256"
                          }
                        },
                        "visibility": "internal"
                      }
                    ],
                    "src": "409:15:2"
                  },
                  "returnParameters": {
                    "id": 150,
                    "nodeType": "ParameterList",
                    "parameters": [
                      {
                        "constant": false,
                        "id": 149,
                        "mutability": "mutable",
                        "name": "",
                        "nameLocation": "-1:-1:-1",
                        "nodeType": "VariableDeclaration",
                        "scope": 222,
                        "src": "448:13:2",
                        "stateVariable": false,
                        "storageLocation": "memory",
                        "typeDescriptions": {
                          "typeIdentifier": "t_string_memory_ptr",
                          "typeString": "string"
                        },
                        "typeName": {
                          "id": 148,
                          "name": "string",
                          "nodeType": "ElementaryTypeName",
                          "src": "448:6:2",
                          "typeDescriptions": {
                            "typeIdentifier": "t_string_storage_ptr",
                            "typeString": "string"
                          }
                        },
                        "visibility": "internal"
                      }
                    ],
                    "src": "447:15:2"
                  },
                  "scope": 360,
                  "src": "392:703:2",
                  "stateMutability": "pure",
                  "virtual": false,
                  "visibility": "internal"
                },
                {
                  "body": {
                    "id": 262,
                    "nodeType": "Block",
                    "src": "1274:255:2",
                    "statements": [
                      {
                        "condition": {
                          "commonType": {
                            "typeIdentifier": "t_uint256",
                            "typeString": "uint256"
                          },
                          "id": 232,
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": false,
                          "lValueRequested": false,
                          "leftExpression": {
                            "id": 230,
                            "name": "value",
                            "nodeType": "Identifier",
                            "overloadedDeclarations": [],
                            "referencedDeclaration": 225,
                            "src": "1288:5:2",
                            "typeDescriptions": {
                              "typeIdentifier": "t_uint256",
                              "typeString": "uint256"
                            }
                          },
                          "nodeType": "BinaryOperation",
                          "operator": "==",
                          "rightExpression": {
                            "hexValue": "30",
                            "id": 231,
                            "isConstant": false,
                            "isLValue": false,
                            "isPure": true,
                            "kind": "number",
                            "lValueRequested": false,
                            "nodeType": "Literal",
                            "src": "1297:1:2",
                            "typeDescriptions": {
                              "typeIdentifier": "t_rational_0_by_1",
                              "typeString": "int_const 0"
                            },
                            "value": "0"
                          },
                          "src": "1288:10:2",
                          "typeDescriptions": {
                            "typeIdentifier": "t_bool",
                            "typeString": "bool"
                          }
                        },
                        "id": 236,
                        "nodeType": "IfStatement",
                        "src": "1284:54:2",
                        "trueBody": {
                          "id": 235,
                          "nodeType": "Block",
                          "src": "1300:38:2",
                          "statements": [
                            {
                              "expression": {
                                "hexValue": "30783030",
                                "id": 233,
                                "isConstant": false,
                                "isLValue": false,
                                "isPure": true,
                                "kind": "string",
                                "lValueRequested": false,
                                "nodeType": "Literal",
                                "src": "1321:6:2",
                                "typeDescriptions": {
                                  "typeIdentifier": "t_stringliteral_27489e20a0060b723a1748bdff5e44570ee9fae64141728105692eac6031e8a4",
                                  "typeString": "literal_string \"0x00\""
                                },
                                "value": "0x00"
                              },
                              "functionReturnParameters": 229,
                              "id": 234,
                              "nodeType": "Return",
                              "src": "1314:13:2"
                            }
                          ]
                        }
                      },
                      {
                        "assignments": [238],
                        "declarations": [
                          {
                            "constant": false,
                            "id": 238,
                            "mutability": "mutable",
                            "name": "temp",
                            "nameLocation": "1355:4:2",
                            "nodeType": "VariableDeclaration",
                            "scope": 262,
                            "src": "1347:12:2",
                            "stateVariable": false,
                            "storageLocation": "default",
                            "typeDescriptions": {
                              "typeIdentifier": "t_uint256",
                              "typeString": "uint256"
                            },
                            "typeName": {
                              "id": 237,
                              "name": "uint256",
                              "nodeType": "ElementaryTypeName",
                              "src": "1347:7:2",
                              "typeDescriptions": {
                                "typeIdentifier": "t_uint256",
                                "typeString": "uint256"
                              }
                            },
                            "visibility": "internal"
                          }
                        ],
                        "id": 240,
                        "initialValue": {
                          "id": 239,
                          "name": "value",
                          "nodeType": "Identifier",
                          "overloadedDeclarations": [],
                          "referencedDeclaration": 225,
                          "src": "1362:5:2",
                          "typeDescriptions": {
                            "typeIdentifier": "t_uint256",
                            "typeString": "uint256"
                          }
                        },
                        "nodeType": "VariableDeclarationStatement",
                        "src": "1347:20:2"
                      },
                      {
                        "assignments": [242],
                        "declarations": [
                          {
                            "constant": false,
                            "id": 242,
                            "mutability": "mutable",
                            "name": "length",
                            "nameLocation": "1385:6:2",
                            "nodeType": "VariableDeclaration",
                            "scope": 262,
                            "src": "1377:14:2",
                            "stateVariable": false,
                            "storageLocation": "default",
                            "typeDescriptions": {
                              "typeIdentifier": "t_uint256",
                              "typeString": "uint256"
                            },
                            "typeName": {
                              "id": 241,
                              "name": "uint256",
                              "nodeType": "ElementaryTypeName",
                              "src": "1377:7:2",
                              "typeDescriptions": {
                                "typeIdentifier": "t_uint256",
                                "typeString": "uint256"
                              }
                            },
                            "visibility": "internal"
                          }
                        ],
                        "id": 244,
                        "initialValue": {
                          "hexValue": "30",
                          "id": 243,
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": true,
                          "kind": "number",
                          "lValueRequested": false,
                          "nodeType": "Literal",
                          "src": "1394:1:2",
                          "typeDescriptions": {
                            "typeIdentifier": "t_rational_0_by_1",
                            "typeString": "int_const 0"
                          },
                          "value": "0"
                        },
                        "nodeType": "VariableDeclarationStatement",
                        "src": "1377:18:2"
                      },
                      {
                        "body": {
                          "id": 255,
                          "nodeType": "Block",
                          "src": "1423:57:2",
                          "statements": [
                            {
                              "expression": {
                                "id": 249,
                                "isConstant": false,
                                "isLValue": false,
                                "isPure": false,
                                "lValueRequested": false,
                                "nodeType": "UnaryOperation",
                                "operator": "++",
                                "prefix": false,
                                "src": "1437:8:2",
                                "subExpression": {
                                  "id": 248,
                                  "name": "length",
                                  "nodeType": "Identifier",
                                  "overloadedDeclarations": [],
                                  "referencedDeclaration": 242,
                                  "src": "1437:6:2",
                                  "typeDescriptions": {
                                    "typeIdentifier": "t_uint256",
                                    "typeString": "uint256"
                                  }
                                },
                                "typeDescriptions": {
                                  "typeIdentifier": "t_uint256",
                                  "typeString": "uint256"
                                }
                              },
                              "id": 250,
                              "nodeType": "ExpressionStatement",
                              "src": "1437:8:2"
                            },
                            {
                              "expression": {
                                "id": 253,
                                "isConstant": false,
                                "isLValue": false,
                                "isPure": false,
                                "lValueRequested": false,
                                "leftHandSide": {
                                  "id": 251,
                                  "name": "temp",
                                  "nodeType": "Identifier",
                                  "overloadedDeclarations": [],
                                  "referencedDeclaration": 238,
                                  "src": "1459:4:2",
                                  "typeDescriptions": {
                                    "typeIdentifier": "t_uint256",
                                    "typeString": "uint256"
                                  }
                                },
                                "nodeType": "Assignment",
                                "operator": ">>=",
                                "rightHandSide": {
                                  "hexValue": "38",
                                  "id": 252,
                                  "isConstant": false,
                                  "isLValue": false,
                                  "isPure": true,
                                  "kind": "number",
                                  "lValueRequested": false,
                                  "nodeType": "Literal",
                                  "src": "1468:1:2",
                                  "typeDescriptions": {
                                    "typeIdentifier": "t_rational_8_by_1",
                                    "typeString": "int_const 8"
                                  },
                                  "value": "8"
                                },
                                "src": "1459:10:2",
                                "typeDescriptions": {
                                  "typeIdentifier": "t_uint256",
                                  "typeString": "uint256"
                                }
                              },
                              "id": 254,
                              "nodeType": "ExpressionStatement",
                              "src": "1459:10:2"
                            }
                          ]
                        },
                        "condition": {
                          "commonType": {
                            "typeIdentifier": "t_uint256",
                            "typeString": "uint256"
                          },
                          "id": 247,
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": false,
                          "lValueRequested": false,
                          "leftExpression": {
                            "id": 245,
                            "name": "temp",
                            "nodeType": "Identifier",
                            "overloadedDeclarations": [],
                            "referencedDeclaration": 238,
                            "src": "1412:4:2",
                            "typeDescriptions": {
                              "typeIdentifier": "t_uint256",
                              "typeString": "uint256"
                            }
                          },
                          "nodeType": "BinaryOperation",
                          "operator": "!=",
                          "rightExpression": {
                            "hexValue": "30",
                            "id": 246,
                            "isConstant": false,
                            "isLValue": false,
                            "isPure": true,
                            "kind": "number",
                            "lValueRequested": false,
                            "nodeType": "Literal",
                            "src": "1420:1:2",
                            "typeDescriptions": {
                              "typeIdentifier": "t_rational_0_by_1",
                              "typeString": "int_const 0"
                            },
                            "value": "0"
                          },
                          "src": "1412:9:2",
                          "typeDescriptions": {
                            "typeIdentifier": "t_bool",
                            "typeString": "bool"
                          }
                        },
                        "id": 256,
                        "nodeType": "WhileStatement",
                        "src": "1405:75:2"
                      },
                      {
                        "expression": {
                          "arguments": [
                            {
                              "id": 258,
                              "name": "value",
                              "nodeType": "Identifier",
                              "overloadedDeclarations": [],
                              "referencedDeclaration": 225,
                              "src": "1508:5:2",
                              "typeDescriptions": {
                                "typeIdentifier": "t_uint256",
                                "typeString": "uint256"
                              }
                            },
                            {
                              "id": 259,
                              "name": "length",
                              "nodeType": "Identifier",
                              "overloadedDeclarations": [],
                              "referencedDeclaration": 242,
                              "src": "1515:6:2",
                              "typeDescriptions": {
                                "typeIdentifier": "t_uint256",
                                "typeString": "uint256"
                              }
                            }
                          ],
                          "expression": {
                            "argumentTypes": [
                              {
                                "typeIdentifier": "t_uint256",
                                "typeString": "uint256"
                              },
                              {
                                "typeIdentifier": "t_uint256",
                                "typeString": "uint256"
                              }
                            ],
                            "id": 257,
                            "name": "toHexString",
                            "nodeType": "Identifier",
                            "overloadedDeclarations": [263, 339, 359],
                            "referencedDeclaration": 339,
                            "src": "1496:11:2",
                            "typeDescriptions": {
                              "typeIdentifier": "t_function_internal_pure$_t_uint256_$_t_uint256_$returns$_t_string_memory_ptr_$",
                              "typeString": "function (uint256,uint256) pure returns (string memory)"
                            }
                          },
                          "id": 260,
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": false,
                          "kind": "functionCall",
                          "lValueRequested": false,
                          "nameLocations": [],
                          "names": [],
                          "nodeType": "FunctionCall",
                          "src": "1496:26:2",
                          "tryCall": false,
                          "typeDescriptions": {
                            "typeIdentifier": "t_string_memory_ptr",
                            "typeString": "string memory"
                          }
                        },
                        "functionReturnParameters": 229,
                        "id": 261,
                        "nodeType": "Return",
                        "src": "1489:33:2"
                      }
                    ]
                  },
                  "documentation": {
                    "id": 223,
                    "nodeType": "StructuredDocumentation",
                    "src": "1101:94:2",
                    "text": " @dev Converts a `uint256` to its ASCII `string` hexadecimal representation."
                  },
                  "id": 263,
                  "implemented": true,
                  "kind": "function",
                  "modifiers": [],
                  "name": "toHexString",
                  "nameLocation": "1209:11:2",
                  "nodeType": "FunctionDefinition",
                  "parameters": {
                    "id": 226,
                    "nodeType": "ParameterList",
                    "parameters": [
                      {
                        "constant": false,
                        "id": 225,
                        "mutability": "mutable",
                        "name": "value",
                        "nameLocation": "1229:5:2",
                        "nodeType": "VariableDeclaration",
                        "scope": 263,
                        "src": "1221:13:2",
                        "stateVariable": false,
                        "storageLocation": "default",
                        "typeDescriptions": {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        },
                        "typeName": {
                          "id": 224,
                          "name": "uint256",
                          "nodeType": "ElementaryTypeName",
                          "src": "1221:7:2",
                          "typeDescriptions": {
                            "typeIdentifier": "t_uint256",
                            "typeString": "uint256"
                          }
                        },
                        "visibility": "internal"
                      }
                    ],
                    "src": "1220:15:2"
                  },
                  "returnParameters": {
                    "id": 229,
                    "nodeType": "ParameterList",
                    "parameters": [
                      {
                        "constant": false,
                        "id": 228,
                        "mutability": "mutable",
                        "name": "",
                        "nameLocation": "-1:-1:-1",
                        "nodeType": "VariableDeclaration",
                        "scope": 263,
                        "src": "1259:13:2",
                        "stateVariable": false,
                        "storageLocation": "memory",
                        "typeDescriptions": {
                          "typeIdentifier": "t_string_memory_ptr",
                          "typeString": "string"
                        },
                        "typeName": {
                          "id": 227,
                          "name": "string",
                          "nodeType": "ElementaryTypeName",
                          "src": "1259:6:2",
                          "typeDescriptions": {
                            "typeIdentifier": "t_string_storage_ptr",
                            "typeString": "string"
                          }
                        },
                        "visibility": "internal"
                      }
                    ],
                    "src": "1258:15:2"
                  },
                  "scope": 360,
                  "src": "1200:329:2",
                  "stateMutability": "pure",
                  "virtual": false,
                  "visibility": "internal"
                },
                {
                  "body": {
                    "id": 338,
                    "nodeType": "Block",
                    "src": "1742:351:2",
                    "statements": [
                      {
                        "assignments": [274],
                        "declarations": [
                          {
                            "constant": false,
                            "id": 274,
                            "mutability": "mutable",
                            "name": "buffer",
                            "nameLocation": "1765:6:2",
                            "nodeType": "VariableDeclaration",
                            "scope": 338,
                            "src": "1752:19:2",
                            "stateVariable": false,
                            "storageLocation": "memory",
                            "typeDescriptions": {
                              "typeIdentifier": "t_bytes_memory_ptr",
                              "typeString": "bytes"
                            },
                            "typeName": {
                              "id": 273,
                              "name": "bytes",
                              "nodeType": "ElementaryTypeName",
                              "src": "1752:5:2",
                              "typeDescriptions": {
                                "typeIdentifier": "t_bytes_storage_ptr",
                                "typeString": "bytes"
                              }
                            },
                            "visibility": "internal"
                          }
                        ],
                        "id": 283,
                        "initialValue": {
                          "arguments": [
                            {
                              "commonType": {
                                "typeIdentifier": "t_uint256",
                                "typeString": "uint256"
                              },
                              "id": 281,
                              "isConstant": false,
                              "isLValue": false,
                              "isPure": false,
                              "lValueRequested": false,
                              "leftExpression": {
                                "commonType": {
                                  "typeIdentifier": "t_uint256",
                                  "typeString": "uint256"
                                },
                                "id": 279,
                                "isConstant": false,
                                "isLValue": false,
                                "isPure": false,
                                "lValueRequested": false,
                                "leftExpression": {
                                  "hexValue": "32",
                                  "id": 277,
                                  "isConstant": false,
                                  "isLValue": false,
                                  "isPure": true,
                                  "kind": "number",
                                  "lValueRequested": false,
                                  "nodeType": "Literal",
                                  "src": "1784:1:2",
                                  "typeDescriptions": {
                                    "typeIdentifier": "t_rational_2_by_1",
                                    "typeString": "int_const 2"
                                  },
                                  "value": "2"
                                },
                                "nodeType": "BinaryOperation",
                                "operator": "*",
                                "rightExpression": {
                                  "id": 278,
                                  "name": "length",
                                  "nodeType": "Identifier",
                                  "overloadedDeclarations": [],
                                  "referencedDeclaration": 268,
                                  "src": "1788:6:2",
                                  "typeDescriptions": {
                                    "typeIdentifier": "t_uint256",
                                    "typeString": "uint256"
                                  }
                                },
                                "src": "1784:10:2",
                                "typeDescriptions": {
                                  "typeIdentifier": "t_uint256",
                                  "typeString": "uint256"
                                }
                              },
                              "nodeType": "BinaryOperation",
                              "operator": "+",
                              "rightExpression": {
                                "hexValue": "32",
                                "id": 280,
                                "isConstant": false,
                                "isLValue": false,
                                "isPure": true,
                                "kind": "number",
                                "lValueRequested": false,
                                "nodeType": "Literal",
                                "src": "1797:1:2",
                                "typeDescriptions": {
                                  "typeIdentifier": "t_rational_2_by_1",
                                  "typeString": "int_const 2"
                                },
                                "value": "2"
                              },
                              "src": "1784:14:2",
                              "typeDescriptions": {
                                "typeIdentifier": "t_uint256",
                                "typeString": "uint256"
                              }
                            }
                          ],
                          "expression": {
                            "argumentTypes": [
                              {
                                "typeIdentifier": "t_uint256",
                                "typeString": "uint256"
                              }
                            ],
                            "id": 276,
                            "isConstant": false,
                            "isLValue": false,
                            "isPure": true,
                            "lValueRequested": false,
                            "nodeType": "NewExpression",
                            "src": "1774:9:2",
                            "typeDescriptions": {
                              "typeIdentifier": "t_function_objectcreation_pure$_t_uint256_$returns$_t_bytes_memory_ptr_$",
                              "typeString": "function (uint256) pure returns (bytes memory)"
                            },
                            "typeName": {
                              "id": 275,
                              "name": "bytes",
                              "nodeType": "ElementaryTypeName",
                              "src": "1778:5:2",
                              "typeDescriptions": {
                                "typeIdentifier": "t_bytes_storage_ptr",
                                "typeString": "bytes"
                              }
                            }
                          },
                          "id": 282,
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": false,
                          "kind": "functionCall",
                          "lValueRequested": false,
                          "nameLocations": [],
                          "names": [],
                          "nodeType": "FunctionCall",
                          "src": "1774:25:2",
                          "tryCall": false,
                          "typeDescriptions": {
                            "typeIdentifier": "t_bytes_memory_ptr",
                            "typeString": "bytes memory"
                          }
                        },
                        "nodeType": "VariableDeclarationStatement",
                        "src": "1752:47:2"
                      },
                      {
                        "expression": {
                          "id": 288,
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": false,
                          "lValueRequested": false,
                          "leftHandSide": {
                            "baseExpression": {
                              "id": 284,
                              "name": "buffer",
                              "nodeType": "Identifier",
                              "overloadedDeclarations": [],
                              "referencedDeclaration": 274,
                              "src": "1809:6:2",
                              "typeDescriptions": {
                                "typeIdentifier": "t_bytes_memory_ptr",
                                "typeString": "bytes memory"
                              }
                            },
                            "id": 286,
                            "indexExpression": {
                              "hexValue": "30",
                              "id": 285,
                              "isConstant": false,
                              "isLValue": false,
                              "isPure": true,
                              "kind": "number",
                              "lValueRequested": false,
                              "nodeType": "Literal",
                              "src": "1816:1:2",
                              "typeDescriptions": {
                                "typeIdentifier": "t_rational_0_by_1",
                                "typeString": "int_const 0"
                              },
                              "value": "0"
                            },
                            "isConstant": false,
                            "isLValue": true,
                            "isPure": false,
                            "lValueRequested": true,
                            "nodeType": "IndexAccess",
                            "src": "1809:9:2",
                            "typeDescriptions": {
                              "typeIdentifier": "t_bytes1",
                              "typeString": "bytes1"
                            }
                          },
                          "nodeType": "Assignment",
                          "operator": "=",
                          "rightHandSide": {
                            "hexValue": "30",
                            "id": 287,
                            "isConstant": false,
                            "isLValue": false,
                            "isPure": true,
                            "kind": "string",
                            "lValueRequested": false,
                            "nodeType": "Literal",
                            "src": "1821:3:2",
                            "typeDescriptions": {
                              "typeIdentifier": "t_stringliteral_044852b2a670ade5407e78fb2863c51de9fcb96542a07186fe3aeda6bb8a116d",
                              "typeString": "literal_string \"0\""
                            },
                            "value": "0"
                          },
                          "src": "1809:15:2",
                          "typeDescriptions": {
                            "typeIdentifier": "t_bytes1",
                            "typeString": "bytes1"
                          }
                        },
                        "id": 289,
                        "nodeType": "ExpressionStatement",
                        "src": "1809:15:2"
                      },
                      {
                        "expression": {
                          "id": 294,
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": false,
                          "lValueRequested": false,
                          "leftHandSide": {
                            "baseExpression": {
                              "id": 290,
                              "name": "buffer",
                              "nodeType": "Identifier",
                              "overloadedDeclarations": [],
                              "referencedDeclaration": 274,
                              "src": "1834:6:2",
                              "typeDescriptions": {
                                "typeIdentifier": "t_bytes_memory_ptr",
                                "typeString": "bytes memory"
                              }
                            },
                            "id": 292,
                            "indexExpression": {
                              "hexValue": "31",
                              "id": 291,
                              "isConstant": false,
                              "isLValue": false,
                              "isPure": true,
                              "kind": "number",
                              "lValueRequested": false,
                              "nodeType": "Literal",
                              "src": "1841:1:2",
                              "typeDescriptions": {
                                "typeIdentifier": "t_rational_1_by_1",
                                "typeString": "int_const 1"
                              },
                              "value": "1"
                            },
                            "isConstant": false,
                            "isLValue": true,
                            "isPure": false,
                            "lValueRequested": true,
                            "nodeType": "IndexAccess",
                            "src": "1834:9:2",
                            "typeDescriptions": {
                              "typeIdentifier": "t_bytes1",
                              "typeString": "bytes1"
                            }
                          },
                          "nodeType": "Assignment",
                          "operator": "=",
                          "rightHandSide": {
                            "hexValue": "78",
                            "id": 293,
                            "isConstant": false,
                            "isLValue": false,
                            "isPure": true,
                            "kind": "string",
                            "lValueRequested": false,
                            "nodeType": "Literal",
                            "src": "1846:3:2",
                            "typeDescriptions": {
                              "typeIdentifier": "t_stringliteral_7521d1cadbcfa91eec65aa16715b94ffc1c9654ba57ea2ef1a2127bca1127a83",
                              "typeString": "literal_string \"x\""
                            },
                            "value": "x"
                          },
                          "src": "1834:15:2",
                          "typeDescriptions": {
                            "typeIdentifier": "t_bytes1",
                            "typeString": "bytes1"
                          }
                        },
                        "id": 295,
                        "nodeType": "ExpressionStatement",
                        "src": "1834:15:2"
                      },
                      {
                        "body": {
                          "id": 324,
                          "nodeType": "Block",
                          "src": "1904:87:2",
                          "statements": [
                            {
                              "expression": {
                                "id": 318,
                                "isConstant": false,
                                "isLValue": false,
                                "isPure": false,
                                "lValueRequested": false,
                                "leftHandSide": {
                                  "baseExpression": {
                                    "id": 310,
                                    "name": "buffer",
                                    "nodeType": "Identifier",
                                    "overloadedDeclarations": [],
                                    "referencedDeclaration": 274,
                                    "src": "1918:6:2",
                                    "typeDescriptions": {
                                      "typeIdentifier": "t_bytes_memory_ptr",
                                      "typeString": "bytes memory"
                                    }
                                  },
                                  "id": 312,
                                  "indexExpression": {
                                    "id": 311,
                                    "name": "i",
                                    "nodeType": "Identifier",
                                    "overloadedDeclarations": [],
                                    "referencedDeclaration": 297,
                                    "src": "1925:1:2",
                                    "typeDescriptions": {
                                      "typeIdentifier": "t_uint256",
                                      "typeString": "uint256"
                                    }
                                  },
                                  "isConstant": false,
                                  "isLValue": true,
                                  "isPure": false,
                                  "lValueRequested": true,
                                  "nodeType": "IndexAccess",
                                  "src": "1918:9:2",
                                  "typeDescriptions": {
                                    "typeIdentifier": "t_bytes1",
                                    "typeString": "bytes1"
                                  }
                                },
                                "nodeType": "Assignment",
                                "operator": "=",
                                "rightHandSide": {
                                  "baseExpression": {
                                    "id": 313,
                                    "name": "_HEX_SYMBOLS",
                                    "nodeType": "Identifier",
                                    "overloadedDeclarations": [],
                                    "referencedDeclaration": 140,
                                    "src": "1930:12:2",
                                    "typeDescriptions": {
                                      "typeIdentifier": "t_bytes16",
                                      "typeString": "bytes16"
                                    }
                                  },
                                  "id": 317,
                                  "indexExpression": {
                                    "commonType": {
                                      "typeIdentifier": "t_uint256",
                                      "typeString": "uint256"
                                    },
                                    "id": 316,
                                    "isConstant": false,
                                    "isLValue": false,
                                    "isPure": false,
                                    "lValueRequested": false,
                                    "leftExpression": {
                                      "id": 314,
                                      "name": "value",
                                      "nodeType": "Identifier",
                                      "overloadedDeclarations": [],
                                      "referencedDeclaration": 266,
                                      "src": "1943:5:2",
                                      "typeDescriptions": {
                                        "typeIdentifier": "t_uint256",
                                        "typeString": "uint256"
                                      }
                                    },
                                    "nodeType": "BinaryOperation",
                                    "operator": "&",
                                    "rightExpression": {
                                      "hexValue": "307866",
                                      "id": 315,
                                      "isConstant": false,
                                      "isLValue": false,
                                      "isPure": true,
                                      "kind": "number",
                                      "lValueRequested": false,
                                      "nodeType": "Literal",
                                      "src": "1951:3:2",
                                      "typeDescriptions": {
                                        "typeIdentifier": "t_rational_15_by_1",
                                        "typeString": "int_const 15"
                                      },
                                      "value": "0xf"
                                    },
                                    "src": "1943:11:2",
                                    "typeDescriptions": {
                                      "typeIdentifier": "t_uint256",
                                      "typeString": "uint256"
                                    }
                                  },
                                  "isConstant": false,
                                  "isLValue": false,
                                  "isPure": false,
                                  "lValueRequested": false,
                                  "nodeType": "IndexAccess",
                                  "src": "1930:25:2",
                                  "typeDescriptions": {
                                    "typeIdentifier": "t_bytes1",
                                    "typeString": "bytes1"
                                  }
                                },
                                "src": "1918:37:2",
                                "typeDescriptions": {
                                  "typeIdentifier": "t_bytes1",
                                  "typeString": "bytes1"
                                }
                              },
                              "id": 319,
                              "nodeType": "ExpressionStatement",
                              "src": "1918:37:2"
                            },
                            {
                              "expression": {
                                "id": 322,
                                "isConstant": false,
                                "isLValue": false,
                                "isPure": false,
                                "lValueRequested": false,
                                "leftHandSide": {
                                  "id": 320,
                                  "name": "value",
                                  "nodeType": "Identifier",
                                  "overloadedDeclarations": [],
                                  "referencedDeclaration": 266,
                                  "src": "1969:5:2",
                                  "typeDescriptions": {
                                    "typeIdentifier": "t_uint256",
                                    "typeString": "uint256"
                                  }
                                },
                                "nodeType": "Assignment",
                                "operator": ">>=",
                                "rightHandSide": {
                                  "hexValue": "34",
                                  "id": 321,
                                  "isConstant": false,
                                  "isLValue": false,
                                  "isPure": true,
                                  "kind": "number",
                                  "lValueRequested": false,
                                  "nodeType": "Literal",
                                  "src": "1979:1:2",
                                  "typeDescriptions": {
                                    "typeIdentifier": "t_rational_4_by_1",
                                    "typeString": "int_const 4"
                                  },
                                  "value": "4"
                                },
                                "src": "1969:11:2",
                                "typeDescriptions": {
                                  "typeIdentifier": "t_uint256",
                                  "typeString": "uint256"
                                }
                              },
                              "id": 323,
                              "nodeType": "ExpressionStatement",
                              "src": "1969:11:2"
                            }
                          ]
                        },
                        "condition": {
                          "commonType": {
                            "typeIdentifier": "t_uint256",
                            "typeString": "uint256"
                          },
                          "id": 306,
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": false,
                          "lValueRequested": false,
                          "leftExpression": {
                            "id": 304,
                            "name": "i",
                            "nodeType": "Identifier",
                            "overloadedDeclarations": [],
                            "referencedDeclaration": 297,
                            "src": "1892:1:2",
                            "typeDescriptions": {
                              "typeIdentifier": "t_uint256",
                              "typeString": "uint256"
                            }
                          },
                          "nodeType": "BinaryOperation",
                          "operator": ">",
                          "rightExpression": {
                            "hexValue": "31",
                            "id": 305,
                            "isConstant": false,
                            "isLValue": false,
                            "isPure": true,
                            "kind": "number",
                            "lValueRequested": false,
                            "nodeType": "Literal",
                            "src": "1896:1:2",
                            "typeDescriptions": {
                              "typeIdentifier": "t_rational_1_by_1",
                              "typeString": "int_const 1"
                            },
                            "value": "1"
                          },
                          "src": "1892:5:2",
                          "typeDescriptions": {
                            "typeIdentifier": "t_bool",
                            "typeString": "bool"
                          }
                        },
                        "id": 325,
                        "initializationExpression": {
                          "assignments": [297],
                          "declarations": [
                            {
                              "constant": false,
                              "id": 297,
                              "mutability": "mutable",
                              "name": "i",
                              "nameLocation": "1872:1:2",
                              "nodeType": "VariableDeclaration",
                              "scope": 325,
                              "src": "1864:9:2",
                              "stateVariable": false,
                              "storageLocation": "default",
                              "typeDescriptions": {
                                "typeIdentifier": "t_uint256",
                                "typeString": "uint256"
                              },
                              "typeName": {
                                "id": 296,
                                "name": "uint256",
                                "nodeType": "ElementaryTypeName",
                                "src": "1864:7:2",
                                "typeDescriptions": {
                                  "typeIdentifier": "t_uint256",
                                  "typeString": "uint256"
                                }
                              },
                              "visibility": "internal"
                            }
                          ],
                          "id": 303,
                          "initialValue": {
                            "commonType": {
                              "typeIdentifier": "t_uint256",
                              "typeString": "uint256"
                            },
                            "id": 302,
                            "isConstant": false,
                            "isLValue": false,
                            "isPure": false,
                            "lValueRequested": false,
                            "leftExpression": {
                              "commonType": {
                                "typeIdentifier": "t_uint256",
                                "typeString": "uint256"
                              },
                              "id": 300,
                              "isConstant": false,
                              "isLValue": false,
                              "isPure": false,
                              "lValueRequested": false,
                              "leftExpression": {
                                "hexValue": "32",
                                "id": 298,
                                "isConstant": false,
                                "isLValue": false,
                                "isPure": true,
                                "kind": "number",
                                "lValueRequested": false,
                                "nodeType": "Literal",
                                "src": "1876:1:2",
                                "typeDescriptions": {
                                  "typeIdentifier": "t_rational_2_by_1",
                                  "typeString": "int_const 2"
                                },
                                "value": "2"
                              },
                              "nodeType": "BinaryOperation",
                              "operator": "*",
                              "rightExpression": {
                                "id": 299,
                                "name": "length",
                                "nodeType": "Identifier",
                                "overloadedDeclarations": [],
                                "referencedDeclaration": 268,
                                "src": "1880:6:2",
                                "typeDescriptions": {
                                  "typeIdentifier": "t_uint256",
                                  "typeString": "uint256"
                                }
                              },
                              "src": "1876:10:2",
                              "typeDescriptions": {
                                "typeIdentifier": "t_uint256",
                                "typeString": "uint256"
                              }
                            },
                            "nodeType": "BinaryOperation",
                            "operator": "+",
                            "rightExpression": {
                              "hexValue": "31",
                              "id": 301,
                              "isConstant": false,
                              "isLValue": false,
                              "isPure": true,
                              "kind": "number",
                              "lValueRequested": false,
                              "nodeType": "Literal",
                              "src": "1889:1:2",
                              "typeDescriptions": {
                                "typeIdentifier": "t_rational_1_by_1",
                                "typeString": "int_const 1"
                              },
                              "value": "1"
                            },
                            "src": "1876:14:2",
                            "typeDescriptions": {
                              "typeIdentifier": "t_uint256",
                              "typeString": "uint256"
                            }
                          },
                          "nodeType": "VariableDeclarationStatement",
                          "src": "1864:26:2"
                        },
                        "loopExpression": {
                          "expression": {
                            "id": 308,
                            "isConstant": false,
                            "isLValue": false,
                            "isPure": false,
                            "lValueRequested": false,
                            "nodeType": "UnaryOperation",
                            "operator": "--",
                            "prefix": true,
                            "src": "1899:3:2",
                            "subExpression": {
                              "id": 307,
                              "name": "i",
                              "nodeType": "Identifier",
                              "overloadedDeclarations": [],
                              "referencedDeclaration": 297,
                              "src": "1901:1:2",
                              "typeDescriptions": {
                                "typeIdentifier": "t_uint256",
                                "typeString": "uint256"
                              }
                            },
                            "typeDescriptions": {
                              "typeIdentifier": "t_uint256",
                              "typeString": "uint256"
                            }
                          },
                          "id": 309,
                          "nodeType": "ExpressionStatement",
                          "src": "1899:3:2"
                        },
                        "nodeType": "ForStatement",
                        "src": "1859:132:2"
                      },
                      {
                        "expression": {
                          "arguments": [
                            {
                              "commonType": {
                                "typeIdentifier": "t_uint256",
                                "typeString": "uint256"
                              },
                              "id": 329,
                              "isConstant": false,
                              "isLValue": false,
                              "isPure": false,
                              "lValueRequested": false,
                              "leftExpression": {
                                "id": 327,
                                "name": "value",
                                "nodeType": "Identifier",
                                "overloadedDeclarations": [],
                                "referencedDeclaration": 266,
                                "src": "2008:5:2",
                                "typeDescriptions": {
                                  "typeIdentifier": "t_uint256",
                                  "typeString": "uint256"
                                }
                              },
                              "nodeType": "BinaryOperation",
                              "operator": "==",
                              "rightExpression": {
                                "hexValue": "30",
                                "id": 328,
                                "isConstant": false,
                                "isLValue": false,
                                "isPure": true,
                                "kind": "number",
                                "lValueRequested": false,
                                "nodeType": "Literal",
                                "src": "2017:1:2",
                                "typeDescriptions": {
                                  "typeIdentifier": "t_rational_0_by_1",
                                  "typeString": "int_const 0"
                                },
                                "value": "0"
                              },
                              "src": "2008:10:2",
                              "typeDescriptions": {
                                "typeIdentifier": "t_bool",
                                "typeString": "bool"
                              }
                            },
                            {
                              "hexValue": "537472696e67733a20686578206c656e67746820696e73756666696369656e74",
                              "id": 330,
                              "isConstant": false,
                              "isLValue": false,
                              "isPure": true,
                              "kind": "string",
                              "lValueRequested": false,
                              "nodeType": "Literal",
                              "src": "2020:34:2",
                              "typeDescriptions": {
                                "typeIdentifier": "t_stringliteral_04fc88320d7c9f639317c75102c103ff0044d3075a5c627e24e76e5bbb2733c2",
                                "typeString": "literal_string \"Strings: hex length insufficient\""
                              },
                              "value": "Strings: hex length insufficient"
                            }
                          ],
                          "expression": {
                            "argumentTypes": [
                              {
                                "typeIdentifier": "t_bool",
                                "typeString": "bool"
                              },
                              {
                                "typeIdentifier": "t_stringliteral_04fc88320d7c9f639317c75102c103ff0044d3075a5c627e24e76e5bbb2733c2",
                                "typeString": "literal_string \"Strings: hex length insufficient\""
                              }
                            ],
                            "id": 326,
                            "name": "require",
                            "nodeType": "Identifier",
                            "overloadedDeclarations": [-18, -18],
                            "referencedDeclaration": -18,
                            "src": "2000:7:2",
                            "typeDescriptions": {
                              "typeIdentifier": "t_function_require_pure$_t_bool_$_t_string_memory_ptr_$returns$__$",
                              "typeString": "function (bool,string memory) pure"
                            }
                          },
                          "id": 331,
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": false,
                          "kind": "functionCall",
                          "lValueRequested": false,
                          "nameLocations": [],
                          "names": [],
                          "nodeType": "FunctionCall",
                          "src": "2000:55:2",
                          "tryCall": false,
                          "typeDescriptions": {
                            "typeIdentifier": "t_tuple$__$",
                            "typeString": "tuple()"
                          }
                        },
                        "id": 332,
                        "nodeType": "ExpressionStatement",
                        "src": "2000:55:2"
                      },
                      {
                        "expression": {
                          "arguments": [
                            {
                              "id": 335,
                              "name": "buffer",
                              "nodeType": "Identifier",
                              "overloadedDeclarations": [],
                              "referencedDeclaration": 274,
                              "src": "2079:6:2",
                              "typeDescriptions": {
                                "typeIdentifier": "t_bytes_memory_ptr",
                                "typeString": "bytes memory"
                              }
                            }
                          ],
                          "expression": {
                            "argumentTypes": [
                              {
                                "typeIdentifier": "t_bytes_memory_ptr",
                                "typeString": "bytes memory"
                              }
                            ],
                            "id": 334,
                            "isConstant": false,
                            "isLValue": false,
                            "isPure": true,
                            "lValueRequested": false,
                            "nodeType": "ElementaryTypeNameExpression",
                            "src": "2072:6:2",
                            "typeDescriptions": {
                              "typeIdentifier": "t_type$_t_string_storage_ptr_$",
                              "typeString": "type(string storage pointer)"
                            },
                            "typeName": {
                              "id": 333,
                              "name": "string",
                              "nodeType": "ElementaryTypeName",
                              "src": "2072:6:2",
                              "typeDescriptions": {}
                            }
                          },
                          "id": 336,
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": false,
                          "kind": "typeConversion",
                          "lValueRequested": false,
                          "nameLocations": [],
                          "names": [],
                          "nodeType": "FunctionCall",
                          "src": "2072:14:2",
                          "tryCall": false,
                          "typeDescriptions": {
                            "typeIdentifier": "t_string_memory_ptr",
                            "typeString": "string memory"
                          }
                        },
                        "functionReturnParameters": 272,
                        "id": 337,
                        "nodeType": "Return",
                        "src": "2065:21:2"
                      }
                    ]
                  },
                  "documentation": {
                    "id": 264,
                    "nodeType": "StructuredDocumentation",
                    "src": "1535:112:2",
                    "text": " @dev Converts a `uint256` to its ASCII `string` hexadecimal representation with fixed length."
                  },
                  "id": 339,
                  "implemented": true,
                  "kind": "function",
                  "modifiers": [],
                  "name": "toHexString",
                  "nameLocation": "1661:11:2",
                  "nodeType": "FunctionDefinition",
                  "parameters": {
                    "id": 269,
                    "nodeType": "ParameterList",
                    "parameters": [
                      {
                        "constant": false,
                        "id": 266,
                        "mutability": "mutable",
                        "name": "value",
                        "nameLocation": "1681:5:2",
                        "nodeType": "VariableDeclaration",
                        "scope": 339,
                        "src": "1673:13:2",
                        "stateVariable": false,
                        "storageLocation": "default",
                        "typeDescriptions": {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        },
                        "typeName": {
                          "id": 265,
                          "name": "uint256",
                          "nodeType": "ElementaryTypeName",
                          "src": "1673:7:2",
                          "typeDescriptions": {
                            "typeIdentifier": "t_uint256",
                            "typeString": "uint256"
                          }
                        },
                        "visibility": "internal"
                      },
                      {
                        "constant": false,
                        "id": 268,
                        "mutability": "mutable",
                        "name": "length",
                        "nameLocation": "1696:6:2",
                        "nodeType": "VariableDeclaration",
                        "scope": 339,
                        "src": "1688:14:2",
                        "stateVariable": false,
                        "storageLocation": "default",
                        "typeDescriptions": {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        },
                        "typeName": {
                          "id": 267,
                          "name": "uint256",
                          "nodeType": "ElementaryTypeName",
                          "src": "1688:7:2",
                          "typeDescriptions": {
                            "typeIdentifier": "t_uint256",
                            "typeString": "uint256"
                          }
                        },
                        "visibility": "internal"
                      }
                    ],
                    "src": "1672:31:2"
                  },
                  "returnParameters": {
                    "id": 272,
                    "nodeType": "ParameterList",
                    "parameters": [
                      {
                        "constant": false,
                        "id": 271,
                        "mutability": "mutable",
                        "name": "",
                        "nameLocation": "-1:-1:-1",
                        "nodeType": "VariableDeclaration",
                        "scope": 339,
                        "src": "1727:13:2",
                        "stateVariable": false,
                        "storageLocation": "memory",
                        "typeDescriptions": {
                          "typeIdentifier": "t_string_memory_ptr",
                          "typeString": "string"
                        },
                        "typeName": {
                          "id": 270,
                          "name": "string",
                          "nodeType": "ElementaryTypeName",
                          "src": "1727:6:2",
                          "typeDescriptions": {
                            "typeIdentifier": "t_string_storage_ptr",
                            "typeString": "string"
                          }
                        },
                        "visibility": "internal"
                      }
                    ],
                    "src": "1726:15:2"
                  },
                  "scope": 360,
                  "src": "1652:441:2",
                  "stateMutability": "pure",
                  "virtual": false,
                  "visibility": "internal"
                },
                {
                  "body": {
                    "id": 358,
                    "nodeType": "Block",
                    "src": "2318:76:2",
                    "statements": [
                      {
                        "expression": {
                          "arguments": [
                            {
                              "arguments": [
                                {
                                  "arguments": [
                                    {
                                      "id": 352,
                                      "name": "addr",
                                      "nodeType": "Identifier",
                                      "overloadedDeclarations": [],
                                      "referencedDeclaration": 342,
                                      "src": "2363:4:2",
                                      "typeDescriptions": {
                                        "typeIdentifier": "t_address",
                                        "typeString": "address"
                                      }
                                    }
                                  ],
                                  "expression": {
                                    "argumentTypes": [
                                      {
                                        "typeIdentifier": "t_address",
                                        "typeString": "address"
                                      }
                                    ],
                                    "id": 351,
                                    "isConstant": false,
                                    "isLValue": false,
                                    "isPure": true,
                                    "lValueRequested": false,
                                    "nodeType": "ElementaryTypeNameExpression",
                                    "src": "2355:7:2",
                                    "typeDescriptions": {
                                      "typeIdentifier": "t_type$_t_uint160_$",
                                      "typeString": "type(uint160)"
                                    },
                                    "typeName": {
                                      "id": 350,
                                      "name": "uint160",
                                      "nodeType": "ElementaryTypeName",
                                      "src": "2355:7:2",
                                      "typeDescriptions": {}
                                    }
                                  },
                                  "id": 353,
                                  "isConstant": false,
                                  "isLValue": false,
                                  "isPure": false,
                                  "kind": "typeConversion",
                                  "lValueRequested": false,
                                  "nameLocations": [],
                                  "names": [],
                                  "nodeType": "FunctionCall",
                                  "src": "2355:13:2",
                                  "tryCall": false,
                                  "typeDescriptions": {
                                    "typeIdentifier": "t_uint160",
                                    "typeString": "uint160"
                                  }
                                }
                              ],
                              "expression": {
                                "argumentTypes": [
                                  {
                                    "typeIdentifier": "t_uint160",
                                    "typeString": "uint160"
                                  }
                                ],
                                "id": 349,
                                "isConstant": false,
                                "isLValue": false,
                                "isPure": true,
                                "lValueRequested": false,
                                "nodeType": "ElementaryTypeNameExpression",
                                "src": "2347:7:2",
                                "typeDescriptions": {
                                  "typeIdentifier": "t_type$_t_uint256_$",
                                  "typeString": "type(uint256)"
                                },
                                "typeName": {
                                  "id": 348,
                                  "name": "uint256",
                                  "nodeType": "ElementaryTypeName",
                                  "src": "2347:7:2",
                                  "typeDescriptions": {}
                                }
                              },
                              "id": 354,
                              "isConstant": false,
                              "isLValue": false,
                              "isPure": false,
                              "kind": "typeConversion",
                              "lValueRequested": false,
                              "nameLocations": [],
                              "names": [],
                              "nodeType": "FunctionCall",
                              "src": "2347:22:2",
                              "tryCall": false,
                              "typeDescriptions": {
                                "typeIdentifier": "t_uint256",
                                "typeString": "uint256"
                              }
                            },
                            {
                              "id": 355,
                              "name": "_ADDRESS_LENGTH",
                              "nodeType": "Identifier",
                              "overloadedDeclarations": [],
                              "referencedDeclaration": 143,
                              "src": "2371:15:2",
                              "typeDescriptions": {
                                "typeIdentifier": "t_uint8",
                                "typeString": "uint8"
                              }
                            }
                          ],
                          "expression": {
                            "argumentTypes": [
                              {
                                "typeIdentifier": "t_uint256",
                                "typeString": "uint256"
                              },
                              {
                                "typeIdentifier": "t_uint8",
                                "typeString": "uint8"
                              }
                            ],
                            "id": 347,
                            "name": "toHexString",
                            "nodeType": "Identifier",
                            "overloadedDeclarations": [263, 339, 359],
                            "referencedDeclaration": 339,
                            "src": "2335:11:2",
                            "typeDescriptions": {
                              "typeIdentifier": "t_function_internal_pure$_t_uint256_$_t_uint256_$returns$_t_string_memory_ptr_$",
                              "typeString": "function (uint256,uint256) pure returns (string memory)"
                            }
                          },
                          "id": 356,
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": false,
                          "kind": "functionCall",
                          "lValueRequested": false,
                          "nameLocations": [],
                          "names": [],
                          "nodeType": "FunctionCall",
                          "src": "2335:52:2",
                          "tryCall": false,
                          "typeDescriptions": {
                            "typeIdentifier": "t_string_memory_ptr",
                            "typeString": "string memory"
                          }
                        },
                        "functionReturnParameters": 346,
                        "id": 357,
                        "nodeType": "Return",
                        "src": "2328:59:2"
                      }
                    ]
                  },
                  "documentation": {
                    "id": 340,
                    "nodeType": "StructuredDocumentation",
                    "src": "2099:141:2",
                    "text": " @dev Converts an `address` with fixed length of 20 bytes to its not checksummed ASCII `string` hexadecimal representation."
                  },
                  "id": 359,
                  "implemented": true,
                  "kind": "function",
                  "modifiers": [],
                  "name": "toHexString",
                  "nameLocation": "2254:11:2",
                  "nodeType": "FunctionDefinition",
                  "parameters": {
                    "id": 343,
                    "nodeType": "ParameterList",
                    "parameters": [
                      {
                        "constant": false,
                        "id": 342,
                        "mutability": "mutable",
                        "name": "addr",
                        "nameLocation": "2274:4:2",
                        "nodeType": "VariableDeclaration",
                        "scope": 359,
                        "src": "2266:12:2",
                        "stateVariable": false,
                        "storageLocation": "default",
                        "typeDescriptions": {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        },
                        "typeName": {
                          "id": 341,
                          "name": "address",
                          "nodeType": "ElementaryTypeName",
                          "src": "2266:7:2",
                          "stateMutability": "nonpayable",
                          "typeDescriptions": {
                            "typeIdentifier": "t_address",
                            "typeString": "address"
                          }
                        },
                        "visibility": "internal"
                      }
                    ],
                    "src": "2265:14:2"
                  },
                  "returnParameters": {
                    "id": 346,
                    "nodeType": "ParameterList",
                    "parameters": [
                      {
                        "constant": false,
                        "id": 345,
                        "mutability": "mutable",
                        "name": "",
                        "nameLocation": "-1:-1:-1",
                        "nodeType": "VariableDeclaration",
                        "scope": 359,
                        "src": "2303:13:2",
                        "stateVariable": false,
                        "storageLocation": "memory",
                        "typeDescriptions": {
                          "typeIdentifier": "t_string_memory_ptr",
                          "typeString": "string"
                        },
                        "typeName": {
                          "id": 344,
                          "name": "string",
                          "nodeType": "ElementaryTypeName",
                          "src": "2303:6:2",
                          "typeDescriptions": {
                            "typeIdentifier": "t_string_storage_ptr",
                            "typeString": "string"
                          }
                        },
                        "visibility": "internal"
                      }
                    ],
                    "src": "2302:15:2"
                  },
                  "scope": 360,
                  "src": "2245:149:2",
                  "stateMutability": "pure",
                  "virtual": false,
                  "visibility": "internal"
                }
              ],
              "scope": 361,
              "src": "161:2235:2",
              "usedErrors": []
            }
          ],
          "src": "101:2296:2"
        },
        "id": 2
      },
      "contracts/Voting.sol": {
        "ast": {
          "absolutePath": "contracts/Voting.sol",
          "exportedSymbols": {
            "Context": [134],
            "Ownable": [112],
            "Strings": [360],
            "Voting": [1321]
          },
          "id": 1322,
          "license": "GPL-3.0",
          "nodeType": "SourceUnit",
          "nodes": [
            {
              "id": 362,
              "literals": ["solidity", "0.8", ".17"],
              "nodeType": "PragmaDirective",
              "src": "36:23:3"
            },
            {
              "absolutePath": "@openzeppelin/contracts/access/Ownable.sol",
              "file": "@openzeppelin/contracts/access/Ownable.sol",
              "id": 363,
              "nameLocation": "-1:-1:-1",
              "nodeType": "ImportDirective",
              "scope": 1322,
              "sourceUnit": 113,
              "src": "61:52:3",
              "symbolAliases": [],
              "unitAlias": ""
            },
            {
              "absolutePath": "@openzeppelin/contracts/utils/Strings.sol",
              "file": "@openzeppelin/contracts/utils/Strings.sol",
              "id": 364,
              "nameLocation": "-1:-1:-1",
              "nodeType": "ImportDirective",
              "scope": 1322,
              "sourceUnit": 361,
              "src": "114:51:3",
              "symbolAliases": [],
              "unitAlias": ""
            },
            {
              "abstract": false,
              "baseContracts": [
                {
                  "baseName": {
                    "id": 366,
                    "name": "Ownable",
                    "nameLocations": ["1539:7:3"],
                    "nodeType": "IdentifierPath",
                    "referencedDeclaration": 112,
                    "src": "1539:7:3"
                  },
                  "id": 367,
                  "nodeType": "InheritanceSpecifier",
                  "src": "1539:7:3"
                }
              ],
              "canonicalName": "Voting",
              "contractDependencies": [],
              "contractKind": "contract",
              "documentation": {
                "id": 365,
                "nodeType": "StructuredDocumentation",
                "src": "167:1352:3",
                "text": " @title Alyra Project: Voting system\n @author Teddy Chambard\n @notice This contract defines a basic voting system including different steps:\n 1) voting session creation\n 1) voters registration\n 2) proposals registration\n 3) votes recording\n 4) votes talling\n \n @dev Only the contract owner is able to create new voting session.\n The contract owner is also able to change the session status and activate next session steps.\n The word `Administrator` in contract documentation corresponds to contract owner.\n /!\\ BONUS: I took some decisions to change initial specifications to improve the features available in the exercice:\n 1) Many voting sessions can be created and evolve in parallel\n 2) Votes are kept secret until the end of session, then every votes become accessible to voters and contract owner\n 3) Every events expose sessionId as first parameter\n 4) `Voted` event does not expose chosen proposal ID in order to keep votes secret until the end of the session\n 5) A session is limited to 256 proposals\n 6) Two proposals are registered by default in every session: abstention and blank vote\n 7) A voter can not do more than 3 proposals by session\n 6) A voter can not vote for its own proposals\n 7) A vote session can terminate with equality if many proposals obtain same number of votes"
              },
              "fullyImplemented": true,
              "id": 1321,
              "linearizedBaseContracts": [1321, 112, 134],
              "name": "Voting",
              "nameLocation": "1529:6:3",
              "nodeType": "ContractDefinition",
              "nodes": [
                {
                  "canonicalName": "Voting.WorkflowStatus",
                  "id": 375,
                  "members": [
                    {
                      "id": 368,
                      "name": "None",
                      "nameLocation": "1644:4:3",
                      "nodeType": "EnumValue",
                      "src": "1644:4:3"
                    },
                    {
                      "id": 369,
                      "name": "RegisteringVoters",
                      "nameLocation": "1658:17:3",
                      "nodeType": "EnumValue",
                      "src": "1658:17:3"
                    },
                    {
                      "id": 370,
                      "name": "ProposalsRegistrationStarted",
                      "nameLocation": "1685:28:3",
                      "nodeType": "EnumValue",
                      "src": "1685:28:3"
                    },
                    {
                      "id": 371,
                      "name": "ProposalsRegistrationEnded",
                      "nameLocation": "1723:26:3",
                      "nodeType": "EnumValue",
                      "src": "1723:26:3"
                    },
                    {
                      "id": 372,
                      "name": "VotingSessionStarted",
                      "nameLocation": "1759:20:3",
                      "nodeType": "EnumValue",
                      "src": "1759:20:3"
                    },
                    {
                      "id": 373,
                      "name": "VotingSessionEnded",
                      "nameLocation": "1789:18:3",
                      "nodeType": "EnumValue",
                      "src": "1789:18:3"
                    },
                    {
                      "id": 374,
                      "name": "VotesTallied",
                      "nameLocation": "1817:12:3",
                      "nodeType": "EnumValue",
                      "src": "1817:12:3"
                    }
                  ],
                  "name": "WorkflowStatus",
                  "nameLocation": "1619:14:3",
                  "nodeType": "EnumDefinition",
                  "src": "1614:221:3"
                },
                {
                  "canonicalName": "Voting.Voter",
                  "id": 384,
                  "members": [
                    {
                      "constant": false,
                      "id": 377,
                      "mutability": "mutable",
                      "name": "isRegistered",
                      "nameLocation": "1869:12:3",
                      "nodeType": "VariableDeclaration",
                      "scope": 384,
                      "src": "1864:17:3",
                      "stateVariable": false,
                      "storageLocation": "default",
                      "typeDescriptions": {
                        "typeIdentifier": "t_bool",
                        "typeString": "bool"
                      },
                      "typeName": {
                        "id": 376,
                        "name": "bool",
                        "nodeType": "ElementaryTypeName",
                        "src": "1864:4:3",
                        "typeDescriptions": {
                          "typeIdentifier": "t_bool",
                          "typeString": "bool"
                        }
                      },
                      "visibility": "internal"
                    },
                    {
                      "constant": false,
                      "id": 379,
                      "mutability": "mutable",
                      "name": "hasVoted",
                      "nameLocation": "1896:8:3",
                      "nodeType": "VariableDeclaration",
                      "scope": 384,
                      "src": "1891:13:3",
                      "stateVariable": false,
                      "storageLocation": "default",
                      "typeDescriptions": {
                        "typeIdentifier": "t_bool",
                        "typeString": "bool"
                      },
                      "typeName": {
                        "id": 378,
                        "name": "bool",
                        "nodeType": "ElementaryTypeName",
                        "src": "1891:4:3",
                        "typeDescriptions": {
                          "typeIdentifier": "t_bool",
                          "typeString": "bool"
                        }
                      },
                      "visibility": "internal"
                    },
                    {
                      "constant": false,
                      "id": 381,
                      "mutability": "mutable",
                      "name": "votedProposalId",
                      "nameLocation": "1920:15:3",
                      "nodeType": "VariableDeclaration",
                      "scope": 384,
                      "src": "1914:21:3",
                      "stateVariable": false,
                      "storageLocation": "default",
                      "typeDescriptions": {
                        "typeIdentifier": "t_uint8",
                        "typeString": "uint8"
                      },
                      "typeName": {
                        "id": 380,
                        "name": "uint8",
                        "nodeType": "ElementaryTypeName",
                        "src": "1914:5:3",
                        "typeDescriptions": {
                          "typeIdentifier": "t_uint8",
                          "typeString": "uint8"
                        }
                      },
                      "visibility": "internal"
                    },
                    {
                      "constant": false,
                      "id": 383,
                      "mutability": "mutable",
                      "name": "nbProposals",
                      "nameLocation": "1951:11:3",
                      "nodeType": "VariableDeclaration",
                      "scope": 384,
                      "src": "1945:17:3",
                      "stateVariable": false,
                      "storageLocation": "default",
                      "typeDescriptions": {
                        "typeIdentifier": "t_uint8",
                        "typeString": "uint8"
                      },
                      "typeName": {
                        "id": 382,
                        "name": "uint8",
                        "nodeType": "ElementaryTypeName",
                        "src": "1945:5:3",
                        "typeDescriptions": {
                          "typeIdentifier": "t_uint8",
                          "typeString": "uint8"
                        }
                      },
                      "visibility": "internal"
                    }
                  ],
                  "name": "Voter",
                  "nameLocation": "1848:5:3",
                  "nodeType": "StructDefinition",
                  "scope": 1321,
                  "src": "1841:128:3",
                  "visibility": "public"
                },
                {
                  "canonicalName": "Voting.Proposal",
                  "id": 391,
                  "members": [
                    {
                      "constant": false,
                      "id": 386,
                      "mutability": "mutable",
                      "name": "description",
                      "nameLocation": "2008:11:3",
                      "nodeType": "VariableDeclaration",
                      "scope": 391,
                      "src": "2001:18:3",
                      "stateVariable": false,
                      "storageLocation": "default",
                      "typeDescriptions": {
                        "typeIdentifier": "t_string_storage_ptr",
                        "typeString": "string"
                      },
                      "typeName": {
                        "id": 385,
                        "name": "string",
                        "nodeType": "ElementaryTypeName",
                        "src": "2001:6:3",
                        "typeDescriptions": {
                          "typeIdentifier": "t_string_storage_ptr",
                          "typeString": "string"
                        }
                      },
                      "visibility": "internal"
                    },
                    {
                      "constant": false,
                      "id": 388,
                      "mutability": "mutable",
                      "name": "voteCount",
                      "nameLocation": "2034:9:3",
                      "nodeType": "VariableDeclaration",
                      "scope": 391,
                      "src": "2029:14:3",
                      "stateVariable": false,
                      "storageLocation": "default",
                      "typeDescriptions": {
                        "typeIdentifier": "t_uint256",
                        "typeString": "uint256"
                      },
                      "typeName": {
                        "id": 387,
                        "name": "uint",
                        "nodeType": "ElementaryTypeName",
                        "src": "2029:4:3",
                        "typeDescriptions": {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        }
                      },
                      "visibility": "internal"
                    },
                    {
                      "constant": false,
                      "id": 390,
                      "mutability": "mutable",
                      "name": "proposer",
                      "nameLocation": "2061:8:3",
                      "nodeType": "VariableDeclaration",
                      "scope": 391,
                      "src": "2053:16:3",
                      "stateVariable": false,
                      "storageLocation": "default",
                      "typeDescriptions": {
                        "typeIdentifier": "t_address",
                        "typeString": "address"
                      },
                      "typeName": {
                        "id": 389,
                        "name": "address",
                        "nodeType": "ElementaryTypeName",
                        "src": "2053:7:3",
                        "stateMutability": "nonpayable",
                        "typeDescriptions": {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        }
                      },
                      "visibility": "internal"
                    }
                  ],
                  "name": "Proposal",
                  "nameLocation": "1982:8:3",
                  "nodeType": "StructDefinition",
                  "scope": 1321,
                  "src": "1975:101:3",
                  "visibility": "public"
                },
                {
                  "canonicalName": "Voting.Session",
                  "id": 418,
                  "members": [
                    {
                      "constant": false,
                      "id": 395,
                      "mutability": "mutable",
                      "name": "status",
                      "nameLocation": "2508:6:3",
                      "nodeType": "VariableDeclaration",
                      "scope": 418,
                      "src": "2493:21:3",
                      "stateVariable": false,
                      "storageLocation": "default",
                      "typeDescriptions": {
                        "typeIdentifier": "t_enum$_WorkflowStatus_$375",
                        "typeString": "enum Voting.WorkflowStatus"
                      },
                      "typeName": {
                        "id": 394,
                        "nodeType": "UserDefinedTypeName",
                        "pathNode": {
                          "id": 393,
                          "name": "WorkflowStatus",
                          "nameLocations": ["2493:14:3"],
                          "nodeType": "IdentifierPath",
                          "referencedDeclaration": 375,
                          "src": "2493:14:3"
                        },
                        "referencedDeclaration": 375,
                        "src": "2493:14:3",
                        "typeDescriptions": {
                          "typeIdentifier": "t_enum$_WorkflowStatus_$375",
                          "typeString": "enum Voting.WorkflowStatus"
                        }
                      },
                      "visibility": "internal"
                    },
                    {
                      "constant": false,
                      "id": 401,
                      "mutability": "mutable",
                      "name": "voters",
                      "nameLocation": "3241:6:3",
                      "nodeType": "VariableDeclaration",
                      "scope": 418,
                      "src": "3215:32:3",
                      "stateVariable": false,
                      "storageLocation": "default",
                      "typeDescriptions": {
                        "typeIdentifier": "t_mapping$_t_address_$_t_struct$_Voter_$384_storage_$",
                        "typeString": "mapping(address => struct Voting.Voter)"
                      },
                      "typeName": {
                        "id": 400,
                        "keyType": {
                          "id": 397,
                          "name": "address",
                          "nodeType": "ElementaryTypeName",
                          "src": "3223:7:3",
                          "typeDescriptions": {
                            "typeIdentifier": "t_address",
                            "typeString": "address"
                          }
                        },
                        "nodeType": "Mapping",
                        "src": "3215:25:3",
                        "typeDescriptions": {
                          "typeIdentifier": "t_mapping$_t_address_$_t_struct$_Voter_$384_storage_$",
                          "typeString": "mapping(address => struct Voting.Voter)"
                        },
                        "valueType": {
                          "id": 399,
                          "nodeType": "UserDefinedTypeName",
                          "pathNode": {
                            "id": 398,
                            "name": "Voter",
                            "nameLocations": ["3234:5:3"],
                            "nodeType": "IdentifierPath",
                            "referencedDeclaration": 384,
                            "src": "3234:5:3"
                          },
                          "referencedDeclaration": 384,
                          "src": "3234:5:3",
                          "typeDescriptions": {
                            "typeIdentifier": "t_struct$_Voter_$384_storage_ptr",
                            "typeString": "struct Voting.Voter"
                          }
                        }
                      },
                      "visibility": "internal"
                    },
                    {
                      "constant": false,
                      "id": 404,
                      "mutability": "mutable",
                      "name": "votersCount",
                      "nameLocation": "3351:11:3",
                      "nodeType": "VariableDeclaration",
                      "scope": 418,
                      "src": "3346:16:3",
                      "stateVariable": false,
                      "storageLocation": "default",
                      "typeDescriptions": {
                        "typeIdentifier": "t_uint256",
                        "typeString": "uint256"
                      },
                      "typeName": {
                        "id": 403,
                        "name": "uint",
                        "nodeType": "ElementaryTypeName",
                        "src": "3346:4:3",
                        "typeDescriptions": {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        }
                      },
                      "visibility": "internal"
                    },
                    {
                      "constant": false,
                      "id": 407,
                      "mutability": "mutable",
                      "name": "totalVotesCount",
                      "nameLocation": "3514:15:3",
                      "nodeType": "VariableDeclaration",
                      "scope": 418,
                      "src": "3509:20:3",
                      "stateVariable": false,
                      "storageLocation": "default",
                      "typeDescriptions": {
                        "typeIdentifier": "t_uint256",
                        "typeString": "uint256"
                      },
                      "typeName": {
                        "id": 406,
                        "name": "uint",
                        "nodeType": "ElementaryTypeName",
                        "src": "3509:4:3",
                        "typeDescriptions": {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        }
                      },
                      "visibility": "internal"
                    },
                    {
                      "constant": false,
                      "id": 412,
                      "mutability": "mutable",
                      "name": "proposals",
                      "nameLocation": "3787:9:3",
                      "nodeType": "VariableDeclaration",
                      "scope": 418,
                      "src": "3776:20:3",
                      "stateVariable": false,
                      "storageLocation": "default",
                      "typeDescriptions": {
                        "typeIdentifier": "t_array$_t_struct$_Proposal_$391_storage_$dyn_storage_ptr",
                        "typeString": "struct Voting.Proposal[]"
                      },
                      "typeName": {
                        "baseType": {
                          "id": 410,
                          "nodeType": "UserDefinedTypeName",
                          "pathNode": {
                            "id": 409,
                            "name": "Proposal",
                            "nameLocations": ["3776:8:3"],
                            "nodeType": "IdentifierPath",
                            "referencedDeclaration": 391,
                            "src": "3776:8:3"
                          },
                          "referencedDeclaration": 391,
                          "src": "3776:8:3",
                          "typeDescriptions": {
                            "typeIdentifier": "t_struct$_Proposal_$391_storage_ptr",
                            "typeString": "struct Voting.Proposal"
                          }
                        },
                        "id": 411,
                        "nodeType": "ArrayTypeName",
                        "src": "3776:10:3",
                        "typeDescriptions": {
                          "typeIdentifier": "t_array$_t_struct$_Proposal_$391_storage_$dyn_storage_ptr",
                          "typeString": "struct Voting.Proposal[]"
                        }
                      },
                      "visibility": "internal"
                    },
                    {
                      "constant": false,
                      "id": 417,
                      "mutability": "mutable",
                      "name": "winningProposals",
                      "nameLocation": "3936:16:3",
                      "nodeType": "VariableDeclaration",
                      "scope": 418,
                      "src": "3925:27:3",
                      "stateVariable": false,
                      "storageLocation": "default",
                      "typeDescriptions": {
                        "typeIdentifier": "t_array$_t_struct$_Proposal_$391_storage_$dyn_storage_ptr",
                        "typeString": "struct Voting.Proposal[]"
                      },
                      "typeName": {
                        "baseType": {
                          "id": 415,
                          "nodeType": "UserDefinedTypeName",
                          "pathNode": {
                            "id": 414,
                            "name": "Proposal",
                            "nameLocations": ["3925:8:3"],
                            "nodeType": "IdentifierPath",
                            "referencedDeclaration": 391,
                            "src": "3925:8:3"
                          },
                          "referencedDeclaration": 391,
                          "src": "3925:8:3",
                          "typeDescriptions": {
                            "typeIdentifier": "t_struct$_Proposal_$391_storage_ptr",
                            "typeString": "struct Voting.Proposal"
                          }
                        },
                        "id": 416,
                        "nodeType": "ArrayTypeName",
                        "src": "3925:10:3",
                        "typeDescriptions": {
                          "typeIdentifier": "t_array$_t_struct$_Proposal_$391_storage_$dyn_storage_ptr",
                          "typeString": "struct Voting.Proposal[]"
                        }
                      },
                      "visibility": "internal"
                    }
                  ],
                  "name": "Session",
                  "nameLocation": "2093:7:3",
                  "nodeType": "StructDefinition",
                  "scope": 1321,
                  "src": "2086:1873:3",
                  "visibility": "public"
                },
                {
                  "anonymous": false,
                  "documentation": {
                    "id": 419,
                    "nodeType": "StructuredDocumentation",
                    "src": "4026:137:3",
                    "text": " !!! WARNING !!!\n @dev All events signatures integrate sessionId parameter that was not required in specification"
                  },
                  "eventSelector": "b824462ec90945eb31146c1c4ce6515d44b184facb795bea5d1f52355b243f8b",
                  "id": 427,
                  "name": "SessionCreated",
                  "nameLocation": "4175:14:3",
                  "nodeType": "EventDefinition",
                  "parameters": {
                    "id": 426,
                    "nodeType": "ParameterList",
                    "parameters": [
                      {
                        "constant": false,
                        "id": 421,
                        "indexed": true,
                        "mutability": "mutable",
                        "name": "sessionId",
                        "nameLocation": "4203:9:3",
                        "nodeType": "VariableDeclaration",
                        "scope": 427,
                        "src": "4190:22:3",
                        "stateVariable": false,
                        "storageLocation": "default",
                        "typeDescriptions": {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        },
                        "typeName": {
                          "id": 420,
                          "name": "uint",
                          "nodeType": "ElementaryTypeName",
                          "src": "4190:4:3",
                          "typeDescriptions": {
                            "typeIdentifier": "t_uint256",
                            "typeString": "uint256"
                          }
                        },
                        "visibility": "internal"
                      },
                      {
                        "constant": false,
                        "id": 423,
                        "indexed": false,
                        "mutability": "mutable",
                        "name": "name",
                        "nameLocation": "4221:4:3",
                        "nodeType": "VariableDeclaration",
                        "scope": 427,
                        "src": "4214:11:3",
                        "stateVariable": false,
                        "storageLocation": "default",
                        "typeDescriptions": {
                          "typeIdentifier": "t_string_memory_ptr",
                          "typeString": "string"
                        },
                        "typeName": {
                          "id": 422,
                          "name": "string",
                          "nodeType": "ElementaryTypeName",
                          "src": "4214:6:3",
                          "typeDescriptions": {
                            "typeIdentifier": "t_string_storage_ptr",
                            "typeString": "string"
                          }
                        },
                        "visibility": "internal"
                      },
                      {
                        "constant": false,
                        "id": 425,
                        "indexed": false,
                        "mutability": "mutable",
                        "name": "description",
                        "nameLocation": "4234:11:3",
                        "nodeType": "VariableDeclaration",
                        "scope": 427,
                        "src": "4227:18:3",
                        "stateVariable": false,
                        "storageLocation": "default",
                        "typeDescriptions": {
                          "typeIdentifier": "t_string_memory_ptr",
                          "typeString": "string"
                        },
                        "typeName": {
                          "id": 424,
                          "name": "string",
                          "nodeType": "ElementaryTypeName",
                          "src": "4227:6:3",
                          "typeDescriptions": {
                            "typeIdentifier": "t_string_storage_ptr",
                            "typeString": "string"
                          }
                        },
                        "visibility": "internal"
                      }
                    ],
                    "src": "4189:57:3"
                  },
                  "src": "4169:78:3"
                },
                {
                  "anonymous": false,
                  "eventSelector": "f45b8429c36d478f9a6d081c4811a819b98aa5b608588bed9d406405cf282473",
                  "id": 433,
                  "name": "VoterRegistered",
                  "nameLocation": "4259:15:3",
                  "nodeType": "EventDefinition",
                  "parameters": {
                    "id": 432,
                    "nodeType": "ParameterList",
                    "parameters": [
                      {
                        "constant": false,
                        "id": 429,
                        "indexed": true,
                        "mutability": "mutable",
                        "name": "sessionId",
                        "nameLocation": "4288:9:3",
                        "nodeType": "VariableDeclaration",
                        "scope": 433,
                        "src": "4275:22:3",
                        "stateVariable": false,
                        "storageLocation": "default",
                        "typeDescriptions": {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        },
                        "typeName": {
                          "id": 428,
                          "name": "uint",
                          "nodeType": "ElementaryTypeName",
                          "src": "4275:4:3",
                          "typeDescriptions": {
                            "typeIdentifier": "t_uint256",
                            "typeString": "uint256"
                          }
                        },
                        "visibility": "internal"
                      },
                      {
                        "constant": false,
                        "id": 431,
                        "indexed": false,
                        "mutability": "mutable",
                        "name": "voterAddress",
                        "nameLocation": "4307:12:3",
                        "nodeType": "VariableDeclaration",
                        "scope": 433,
                        "src": "4299:20:3",
                        "stateVariable": false,
                        "storageLocation": "default",
                        "typeDescriptions": {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        },
                        "typeName": {
                          "id": 430,
                          "name": "address",
                          "nodeType": "ElementaryTypeName",
                          "src": "4299:7:3",
                          "stateMutability": "nonpayable",
                          "typeDescriptions": {
                            "typeIdentifier": "t_address",
                            "typeString": "address"
                          }
                        },
                        "visibility": "internal"
                      }
                    ],
                    "src": "4274:46:3"
                  },
                  "src": "4253:68:3"
                },
                {
                  "anonymous": false,
                  "eventSelector": "b067099e10826978a3867510ad1e0dcf4ca5cef8e422fd8df2fc3d679167fe8d",
                  "id": 443,
                  "name": "WorkflowStatusChange",
                  "nameLocation": "4333:20:3",
                  "nodeType": "EventDefinition",
                  "parameters": {
                    "id": 442,
                    "nodeType": "ParameterList",
                    "parameters": [
                      {
                        "constant": false,
                        "id": 435,
                        "indexed": true,
                        "mutability": "mutable",
                        "name": "sessionId",
                        "nameLocation": "4367:9:3",
                        "nodeType": "VariableDeclaration",
                        "scope": 443,
                        "src": "4354:22:3",
                        "stateVariable": false,
                        "storageLocation": "default",
                        "typeDescriptions": {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        },
                        "typeName": {
                          "id": 434,
                          "name": "uint",
                          "nodeType": "ElementaryTypeName",
                          "src": "4354:4:3",
                          "typeDescriptions": {
                            "typeIdentifier": "t_uint256",
                            "typeString": "uint256"
                          }
                        },
                        "visibility": "internal"
                      },
                      {
                        "constant": false,
                        "id": 438,
                        "indexed": false,
                        "mutability": "mutable",
                        "name": "previousStatus",
                        "nameLocation": "4393:14:3",
                        "nodeType": "VariableDeclaration",
                        "scope": 443,
                        "src": "4378:29:3",
                        "stateVariable": false,
                        "storageLocation": "default",
                        "typeDescriptions": {
                          "typeIdentifier": "t_enum$_WorkflowStatus_$375",
                          "typeString": "enum Voting.WorkflowStatus"
                        },
                        "typeName": {
                          "id": 437,
                          "nodeType": "UserDefinedTypeName",
                          "pathNode": {
                            "id": 436,
                            "name": "WorkflowStatus",
                            "nameLocations": ["4378:14:3"],
                            "nodeType": "IdentifierPath",
                            "referencedDeclaration": 375,
                            "src": "4378:14:3"
                          },
                          "referencedDeclaration": 375,
                          "src": "4378:14:3",
                          "typeDescriptions": {
                            "typeIdentifier": "t_enum$_WorkflowStatus_$375",
                            "typeString": "enum Voting.WorkflowStatus"
                          }
                        },
                        "visibility": "internal"
                      },
                      {
                        "constant": false,
                        "id": 441,
                        "indexed": false,
                        "mutability": "mutable",
                        "name": "newStatus",
                        "nameLocation": "4424:9:3",
                        "nodeType": "VariableDeclaration",
                        "scope": 443,
                        "src": "4409:24:3",
                        "stateVariable": false,
                        "storageLocation": "default",
                        "typeDescriptions": {
                          "typeIdentifier": "t_enum$_WorkflowStatus_$375",
                          "typeString": "enum Voting.WorkflowStatus"
                        },
                        "typeName": {
                          "id": 440,
                          "nodeType": "UserDefinedTypeName",
                          "pathNode": {
                            "id": 439,
                            "name": "WorkflowStatus",
                            "nameLocations": ["4409:14:3"],
                            "nodeType": "IdentifierPath",
                            "referencedDeclaration": 375,
                            "src": "4409:14:3"
                          },
                          "referencedDeclaration": 375,
                          "src": "4409:14:3",
                          "typeDescriptions": {
                            "typeIdentifier": "t_enum$_WorkflowStatus_$375",
                            "typeString": "enum Voting.WorkflowStatus"
                          }
                        },
                        "visibility": "internal"
                      }
                    ],
                    "src": "4353:81:3"
                  },
                  "src": "4327:108:3"
                },
                {
                  "anonymous": false,
                  "documentation": {
                    "id": 444,
                    "nodeType": "StructuredDocumentation",
                    "src": "4441:335:3",
                    "text": " !!! WARNING !!!\n @dev I decided to add description into ProposalRegistered event in order to expose proposals during the voting session without the vote count.\n By this way voters are able to retrieve proposal information but they can not access to each proposal vote count before the end ot the session."
                  },
                  "eventSelector": "734feec28275467965f53538a3f7bb9e350e316ec6f015c595d6dae504a5762f",
                  "id": 452,
                  "name": "ProposalRegistered",
                  "nameLocation": "4787:18:3",
                  "nodeType": "EventDefinition",
                  "parameters": {
                    "id": 451,
                    "nodeType": "ParameterList",
                    "parameters": [
                      {
                        "constant": false,
                        "id": 446,
                        "indexed": true,
                        "mutability": "mutable",
                        "name": "sessionId",
                        "nameLocation": "4819:9:3",
                        "nodeType": "VariableDeclaration",
                        "scope": 452,
                        "src": "4806:22:3",
                        "stateVariable": false,
                        "storageLocation": "default",
                        "typeDescriptions": {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        },
                        "typeName": {
                          "id": 445,
                          "name": "uint",
                          "nodeType": "ElementaryTypeName",
                          "src": "4806:4:3",
                          "typeDescriptions": {
                            "typeIdentifier": "t_uint256",
                            "typeString": "uint256"
                          }
                        },
                        "visibility": "internal"
                      },
                      {
                        "constant": false,
                        "id": 448,
                        "indexed": false,
                        "mutability": "mutable",
                        "name": "proposalId",
                        "nameLocation": "4836:10:3",
                        "nodeType": "VariableDeclaration",
                        "scope": 452,
                        "src": "4830:16:3",
                        "stateVariable": false,
                        "storageLocation": "default",
                        "typeDescriptions": {
                          "typeIdentifier": "t_uint8",
                          "typeString": "uint8"
                        },
                        "typeName": {
                          "id": 447,
                          "name": "uint8",
                          "nodeType": "ElementaryTypeName",
                          "src": "4830:5:3",
                          "typeDescriptions": {
                            "typeIdentifier": "t_uint8",
                            "typeString": "uint8"
                          }
                        },
                        "visibility": "internal"
                      },
                      {
                        "constant": false,
                        "id": 450,
                        "indexed": false,
                        "mutability": "mutable",
                        "name": "description",
                        "nameLocation": "4855:11:3",
                        "nodeType": "VariableDeclaration",
                        "scope": 452,
                        "src": "4848:18:3",
                        "stateVariable": false,
                        "storageLocation": "default",
                        "typeDescriptions": {
                          "typeIdentifier": "t_string_memory_ptr",
                          "typeString": "string"
                        },
                        "typeName": {
                          "id": 449,
                          "name": "string",
                          "nodeType": "ElementaryTypeName",
                          "src": "4848:6:3",
                          "typeDescriptions": {
                            "typeIdentifier": "t_string_storage_ptr",
                            "typeString": "string"
                          }
                        },
                        "visibility": "internal"
                      }
                    ],
                    "src": "4805:62:3"
                  },
                  "src": "4781:87:3"
                },
                {
                  "anonymous": false,
                  "documentation": {
                    "id": 453,
                    "nodeType": "StructuredDocumentation",
                    "src": "4874:215:3",
                    "text": " !!! WARNING !!!\n @dev I decided to remove proposalId from Voted event despite the specification as \n I think no one should be able to see voters choice before the end of voting session"
                  },
                  "eventSelector": "030b0f8dcd86a031eddb071f91882edeac8173663ba775713b677b42b51be44b",
                  "id": 459,
                  "name": "Voted",
                  "nameLocation": "5100:5:3",
                  "nodeType": "EventDefinition",
                  "parameters": {
                    "id": 458,
                    "nodeType": "ParameterList",
                    "parameters": [
                      {
                        "constant": false,
                        "id": 455,
                        "indexed": true,
                        "mutability": "mutable",
                        "name": "sessionId",
                        "nameLocation": "5119:9:3",
                        "nodeType": "VariableDeclaration",
                        "scope": 459,
                        "src": "5106:22:3",
                        "stateVariable": false,
                        "storageLocation": "default",
                        "typeDescriptions": {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        },
                        "typeName": {
                          "id": 454,
                          "name": "uint",
                          "nodeType": "ElementaryTypeName",
                          "src": "5106:4:3",
                          "typeDescriptions": {
                            "typeIdentifier": "t_uint256",
                            "typeString": "uint256"
                          }
                        },
                        "visibility": "internal"
                      },
                      {
                        "constant": false,
                        "id": 457,
                        "indexed": false,
                        "mutability": "mutable",
                        "name": "voter",
                        "nameLocation": "5138:5:3",
                        "nodeType": "VariableDeclaration",
                        "scope": 459,
                        "src": "5130:13:3",
                        "stateVariable": false,
                        "storageLocation": "default",
                        "typeDescriptions": {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        },
                        "typeName": {
                          "id": 456,
                          "name": "address",
                          "nodeType": "ElementaryTypeName",
                          "src": "5130:7:3",
                          "stateMutability": "nonpayable",
                          "typeDescriptions": {
                            "typeIdentifier": "t_address",
                            "typeString": "address"
                          }
                        },
                        "visibility": "internal"
                      }
                    ],
                    "src": "5105:39:3"
                  },
                  "src": "5094:51:3"
                },
                {
                  "anonymous": false,
                  "eventSelector": "8231621024a2914f448f5821e1168fa08ea32be09db6a89d94e306e0352d12f4",
                  "id": 475,
                  "name": "VotesTallied",
                  "nameLocation": "5157:12:3",
                  "nodeType": "EventDefinition",
                  "parameters": {
                    "id": 474,
                    "nodeType": "ParameterList",
                    "parameters": [
                      {
                        "constant": false,
                        "id": 461,
                        "indexed": true,
                        "mutability": "mutable",
                        "name": "sessionId",
                        "nameLocation": "5183:9:3",
                        "nodeType": "VariableDeclaration",
                        "scope": 475,
                        "src": "5170:22:3",
                        "stateVariable": false,
                        "storageLocation": "default",
                        "typeDescriptions": {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        },
                        "typeName": {
                          "id": 460,
                          "name": "uint",
                          "nodeType": "ElementaryTypeName",
                          "src": "5170:4:3",
                          "typeDescriptions": {
                            "typeIdentifier": "t_uint256",
                            "typeString": "uint256"
                          }
                        },
                        "visibility": "internal"
                      },
                      {
                        "constant": false,
                        "id": 463,
                        "indexed": false,
                        "mutability": "mutable",
                        "name": "votersCount",
                        "nameLocation": "5199:11:3",
                        "nodeType": "VariableDeclaration",
                        "scope": 475,
                        "src": "5194:16:3",
                        "stateVariable": false,
                        "storageLocation": "default",
                        "typeDescriptions": {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        },
                        "typeName": {
                          "id": 462,
                          "name": "uint",
                          "nodeType": "ElementaryTypeName",
                          "src": "5194:4:3",
                          "typeDescriptions": {
                            "typeIdentifier": "t_uint256",
                            "typeString": "uint256"
                          }
                        },
                        "visibility": "internal"
                      },
                      {
                        "constant": false,
                        "id": 465,
                        "indexed": false,
                        "mutability": "mutable",
                        "name": "totalVotes",
                        "nameLocation": "5217:10:3",
                        "nodeType": "VariableDeclaration",
                        "scope": 475,
                        "src": "5212:15:3",
                        "stateVariable": false,
                        "storageLocation": "default",
                        "typeDescriptions": {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        },
                        "typeName": {
                          "id": 464,
                          "name": "uint",
                          "nodeType": "ElementaryTypeName",
                          "src": "5212:4:3",
                          "typeDescriptions": {
                            "typeIdentifier": "t_uint256",
                            "typeString": "uint256"
                          }
                        },
                        "visibility": "internal"
                      },
                      {
                        "constant": false,
                        "id": 467,
                        "indexed": false,
                        "mutability": "mutable",
                        "name": "blankVotes",
                        "nameLocation": "5234:10:3",
                        "nodeType": "VariableDeclaration",
                        "scope": 475,
                        "src": "5229:15:3",
                        "stateVariable": false,
                        "storageLocation": "default",
                        "typeDescriptions": {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        },
                        "typeName": {
                          "id": 466,
                          "name": "uint",
                          "nodeType": "ElementaryTypeName",
                          "src": "5229:4:3",
                          "typeDescriptions": {
                            "typeIdentifier": "t_uint256",
                            "typeString": "uint256"
                          }
                        },
                        "visibility": "internal"
                      },
                      {
                        "constant": false,
                        "id": 469,
                        "indexed": false,
                        "mutability": "mutable",
                        "name": "abstention",
                        "nameLocation": "5251:10:3",
                        "nodeType": "VariableDeclaration",
                        "scope": 475,
                        "src": "5246:15:3",
                        "stateVariable": false,
                        "storageLocation": "default",
                        "typeDescriptions": {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        },
                        "typeName": {
                          "id": 468,
                          "name": "uint",
                          "nodeType": "ElementaryTypeName",
                          "src": "5246:4:3",
                          "typeDescriptions": {
                            "typeIdentifier": "t_uint256",
                            "typeString": "uint256"
                          }
                        },
                        "visibility": "internal"
                      },
                      {
                        "constant": false,
                        "id": 473,
                        "indexed": false,
                        "mutability": "mutable",
                        "name": "winningProposals",
                        "nameLocation": "5274:16:3",
                        "nodeType": "VariableDeclaration",
                        "scope": 475,
                        "src": "5263:27:3",
                        "stateVariable": false,
                        "storageLocation": "default",
                        "typeDescriptions": {
                          "typeIdentifier": "t_array$_t_struct$_Proposal_$391_memory_ptr_$dyn_memory_ptr",
                          "typeString": "struct Voting.Proposal[]"
                        },
                        "typeName": {
                          "baseType": {
                            "id": 471,
                            "nodeType": "UserDefinedTypeName",
                            "pathNode": {
                              "id": 470,
                              "name": "Proposal",
                              "nameLocations": ["5263:8:3"],
                              "nodeType": "IdentifierPath",
                              "referencedDeclaration": 391,
                              "src": "5263:8:3"
                            },
                            "referencedDeclaration": 391,
                            "src": "5263:8:3",
                            "typeDescriptions": {
                              "typeIdentifier": "t_struct$_Proposal_$391_storage_ptr",
                              "typeString": "struct Voting.Proposal"
                            }
                          },
                          "id": 472,
                          "nodeType": "ArrayTypeName",
                          "src": "5263:10:3",
                          "typeDescriptions": {
                            "typeIdentifier": "t_array$_t_struct$_Proposal_$391_storage_$dyn_storage_ptr",
                            "typeString": "struct Voting.Proposal[]"
                          }
                        },
                        "visibility": "internal"
                      }
                    ],
                    "src": "5169:122:3"
                  },
                  "src": "5151:141:3"
                },
                {
                  "constant": false,
                  "id": 480,
                  "mutability": "mutable",
                  "name": "sessions",
                  "nameLocation": "5393:8:3",
                  "nodeType": "VariableDeclaration",
                  "scope": 1321,
                  "src": "5360:41:3",
                  "stateVariable": true,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_mapping$_t_uint256_$_t_struct$_Session_$418_storage_$",
                    "typeString": "mapping(uint256 => struct Voting.Session)"
                  },
                  "typeName": {
                    "id": 479,
                    "keyType": {
                      "id": 476,
                      "name": "uint",
                      "nodeType": "ElementaryTypeName",
                      "src": "5368:4:3",
                      "typeDescriptions": {
                        "typeIdentifier": "t_uint256",
                        "typeString": "uint256"
                      }
                    },
                    "nodeType": "Mapping",
                    "src": "5360:24:3",
                    "typeDescriptions": {
                      "typeIdentifier": "t_mapping$_t_uint256_$_t_struct$_Session_$418_storage_$",
                      "typeString": "mapping(uint256 => struct Voting.Session)"
                    },
                    "valueType": {
                      "id": 478,
                      "nodeType": "UserDefinedTypeName",
                      "pathNode": {
                        "id": 477,
                        "name": "Session",
                        "nameLocations": ["5376:7:3"],
                        "nodeType": "IdentifierPath",
                        "referencedDeclaration": 418,
                        "src": "5376:7:3"
                      },
                      "referencedDeclaration": 418,
                      "src": "5376:7:3",
                      "typeDescriptions": {
                        "typeIdentifier": "t_struct$_Session_$418_storage_ptr",
                        "typeString": "struct Voting.Session"
                      }
                    }
                  },
                  "visibility": "private"
                },
                {
                  "constant": false,
                  "id": 482,
                  "mutability": "mutable",
                  "name": "sessionsCount",
                  "nameLocation": "5413:13:3",
                  "nodeType": "VariableDeclaration",
                  "scope": 1321,
                  "src": "5408:18:3",
                  "stateVariable": true,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_uint256",
                    "typeString": "uint256"
                  },
                  "typeName": {
                    "id": 481,
                    "name": "uint",
                    "nodeType": "ElementaryTypeName",
                    "src": "5408:4:3",
                    "typeDescriptions": {
                      "typeIdentifier": "t_uint256",
                      "typeString": "uint256"
                    }
                  },
                  "visibility": "internal"
                },
                {
                  "body": {
                    "id": 523,
                    "nodeType": "Block",
                    "src": "5638:249:3",
                    "statements": [
                      {
                        "expression": {
                          "arguments": [
                            {
                              "commonType": {
                                "typeIdentifier": "t_enum$_WorkflowStatus_$375",
                                "typeString": "enum Voting.WorkflowStatus"
                              },
                              "id": 496,
                              "isConstant": false,
                              "isLValue": false,
                              "isPure": false,
                              "lValueRequested": false,
                              "leftExpression": {
                                "expression": {
                                  "baseExpression": {
                                    "id": 491,
                                    "name": "sessions",
                                    "nodeType": "Identifier",
                                    "overloadedDeclarations": [],
                                    "referencedDeclaration": 480,
                                    "src": "5656:8:3",
                                    "typeDescriptions": {
                                      "typeIdentifier": "t_mapping$_t_uint256_$_t_struct$_Session_$418_storage_$",
                                      "typeString": "mapping(uint256 => struct Voting.Session storage ref)"
                                    }
                                  },
                                  "id": 493,
                                  "indexExpression": {
                                    "id": 492,
                                    "name": "_sessionId",
                                    "nodeType": "Identifier",
                                    "overloadedDeclarations": [],
                                    "referencedDeclaration": 485,
                                    "src": "5665:10:3",
                                    "typeDescriptions": {
                                      "typeIdentifier": "t_uint256",
                                      "typeString": "uint256"
                                    }
                                  },
                                  "isConstant": false,
                                  "isLValue": true,
                                  "isPure": false,
                                  "lValueRequested": false,
                                  "nodeType": "IndexAccess",
                                  "src": "5656:20:3",
                                  "typeDescriptions": {
                                    "typeIdentifier": "t_struct$_Session_$418_storage",
                                    "typeString": "struct Voting.Session storage ref"
                                  }
                                },
                                "id": 494,
                                "isConstant": false,
                                "isLValue": true,
                                "isPure": false,
                                "lValueRequested": false,
                                "memberLocation": "5677:6:3",
                                "memberName": "status",
                                "nodeType": "MemberAccess",
                                "referencedDeclaration": 395,
                                "src": "5656:27:3",
                                "typeDescriptions": {
                                  "typeIdentifier": "t_enum$_WorkflowStatus_$375",
                                  "typeString": "enum Voting.WorkflowStatus"
                                }
                              },
                              "nodeType": "BinaryOperation",
                              "operator": "==",
                              "rightExpression": {
                                "id": 495,
                                "name": "_status",
                                "nodeType": "Identifier",
                                "overloadedDeclarations": [],
                                "referencedDeclaration": 488,
                                "src": "5687:7:3",
                                "typeDescriptions": {
                                  "typeIdentifier": "t_enum$_WorkflowStatus_$375",
                                  "typeString": "enum Voting.WorkflowStatus"
                                }
                              },
                              "src": "5656:38:3",
                              "typeDescriptions": {
                                "typeIdentifier": "t_bool",
                                "typeString": "bool"
                              }
                            },
                            {
                              "arguments": [
                                {
                                  "hexValue": "556e657870656374656420766f74696e672073657373696f6e207374617475733a2065787065637465643d",
                                  "id": 500,
                                  "isConstant": false,
                                  "isLValue": false,
                                  "isPure": true,
                                  "kind": "string",
                                  "lValueRequested": false,
                                  "nodeType": "Literal",
                                  "src": "5710:45:3",
                                  "typeDescriptions": {
                                    "typeIdentifier": "t_stringliteral_3d620b44d0ea3d0fd41b8141758febf894dd941858e027857ca07a3929ff2892",
                                    "typeString": "literal_string \"Unexpected voting session status: expected=\""
                                  },
                                  "value": "Unexpected voting session status: expected="
                                },
                                {
                                  "arguments": [
                                    {
                                      "arguments": [
                                        {
                                          "id": 505,
                                          "name": "_status",
                                          "nodeType": "Identifier",
                                          "overloadedDeclarations": [],
                                          "referencedDeclaration": 488,
                                          "src": "5792:7:3",
                                          "typeDescriptions": {
                                            "typeIdentifier": "t_enum$_WorkflowStatus_$375",
                                            "typeString": "enum Voting.WorkflowStatus"
                                          }
                                        }
                                      ],
                                      "expression": {
                                        "argumentTypes": [
                                          {
                                            "typeIdentifier": "t_enum$_WorkflowStatus_$375",
                                            "typeString": "enum Voting.WorkflowStatus"
                                          }
                                        ],
                                        "id": 504,
                                        "isConstant": false,
                                        "isLValue": false,
                                        "isPure": true,
                                        "lValueRequested": false,
                                        "nodeType": "ElementaryTypeNameExpression",
                                        "src": "5787:4:3",
                                        "typeDescriptions": {
                                          "typeIdentifier": "t_type$_t_uint256_$",
                                          "typeString": "type(uint256)"
                                        },
                                        "typeName": {
                                          "id": 503,
                                          "name": "uint",
                                          "nodeType": "ElementaryTypeName",
                                          "src": "5787:4:3",
                                          "typeDescriptions": {}
                                        }
                                      },
                                      "id": 506,
                                      "isConstant": false,
                                      "isLValue": false,
                                      "isPure": false,
                                      "kind": "typeConversion",
                                      "lValueRequested": false,
                                      "nameLocations": [],
                                      "names": [],
                                      "nodeType": "FunctionCall",
                                      "src": "5787:13:3",
                                      "tryCall": false,
                                      "typeDescriptions": {
                                        "typeIdentifier": "t_uint256",
                                        "typeString": "uint256"
                                      }
                                    }
                                  ],
                                  "expression": {
                                    "argumentTypes": [
                                      {
                                        "typeIdentifier": "t_uint256",
                                        "typeString": "uint256"
                                      }
                                    ],
                                    "expression": {
                                      "id": 501,
                                      "name": "Strings",
                                      "nodeType": "Identifier",
                                      "overloadedDeclarations": [],
                                      "referencedDeclaration": 360,
                                      "src": "5770:7:3",
                                      "typeDescriptions": {
                                        "typeIdentifier": "t_type$_t_contract$_Strings_$360_$",
                                        "typeString": "type(library Strings)"
                                      }
                                    },
                                    "id": 502,
                                    "isConstant": false,
                                    "isLValue": false,
                                    "isPure": false,
                                    "lValueRequested": false,
                                    "memberLocation": "5778:8:3",
                                    "memberName": "toString",
                                    "nodeType": "MemberAccess",
                                    "referencedDeclaration": 222,
                                    "src": "5770:16:3",
                                    "typeDescriptions": {
                                      "typeIdentifier": "t_function_internal_pure$_t_uint256_$returns$_t_string_memory_ptr_$",
                                      "typeString": "function (uint256) pure returns (string memory)"
                                    }
                                  },
                                  "id": 507,
                                  "isConstant": false,
                                  "isLValue": false,
                                  "isPure": false,
                                  "kind": "functionCall",
                                  "lValueRequested": false,
                                  "nameLocations": [],
                                  "names": [],
                                  "nodeType": "FunctionCall",
                                  "src": "5770:31:3",
                                  "tryCall": false,
                                  "typeDescriptions": {
                                    "typeIdentifier": "t_string_memory_ptr",
                                    "typeString": "string memory"
                                  }
                                },
                                {
                                  "hexValue": "2063757272656e743d",
                                  "id": 508,
                                  "isConstant": false,
                                  "isLValue": false,
                                  "isPure": true,
                                  "kind": "string",
                                  "lValueRequested": false,
                                  "nodeType": "Literal",
                                  "src": "5803:11:3",
                                  "typeDescriptions": {
                                    "typeIdentifier": "t_stringliteral_3fd9b0dcd722604cd4fd85d779090fb081569f1da68546e1c1a84a77cdcb3486",
                                    "typeString": "literal_string \" current=\""
                                  },
                                  "value": " current="
                                },
                                {
                                  "arguments": [
                                    {
                                      "arguments": [
                                        {
                                          "expression": {
                                            "baseExpression": {
                                              "id": 513,
                                              "name": "sessions",
                                              "nodeType": "Identifier",
                                              "overloadedDeclarations": [],
                                              "referencedDeclaration": 480,
                                              "src": "5838:8:3",
                                              "typeDescriptions": {
                                                "typeIdentifier": "t_mapping$_t_uint256_$_t_struct$_Session_$418_storage_$",
                                                "typeString": "mapping(uint256 => struct Voting.Session storage ref)"
                                              }
                                            },
                                            "id": 515,
                                            "indexExpression": {
                                              "id": 514,
                                              "name": "_sessionId",
                                              "nodeType": "Identifier",
                                              "overloadedDeclarations": [],
                                              "referencedDeclaration": 485,
                                              "src": "5847:10:3",
                                              "typeDescriptions": {
                                                "typeIdentifier": "t_uint256",
                                                "typeString": "uint256"
                                              }
                                            },
                                            "isConstant": false,
                                            "isLValue": true,
                                            "isPure": false,
                                            "lValueRequested": false,
                                            "nodeType": "IndexAccess",
                                            "src": "5838:20:3",
                                            "typeDescriptions": {
                                              "typeIdentifier": "t_struct$_Session_$418_storage",
                                              "typeString": "struct Voting.Session storage ref"
                                            }
                                          },
                                          "id": 516,
                                          "isConstant": false,
                                          "isLValue": true,
                                          "isPure": false,
                                          "lValueRequested": false,
                                          "memberLocation": "5859:6:3",
                                          "memberName": "status",
                                          "nodeType": "MemberAccess",
                                          "referencedDeclaration": 395,
                                          "src": "5838:27:3",
                                          "typeDescriptions": {
                                            "typeIdentifier": "t_enum$_WorkflowStatus_$375",
                                            "typeString": "enum Voting.WorkflowStatus"
                                          }
                                        }
                                      ],
                                      "expression": {
                                        "argumentTypes": [
                                          {
                                            "typeIdentifier": "t_enum$_WorkflowStatus_$375",
                                            "typeString": "enum Voting.WorkflowStatus"
                                          }
                                        ],
                                        "id": 512,
                                        "isConstant": false,
                                        "isLValue": false,
                                        "isPure": true,
                                        "lValueRequested": false,
                                        "nodeType": "ElementaryTypeNameExpression",
                                        "src": "5833:4:3",
                                        "typeDescriptions": {
                                          "typeIdentifier": "t_type$_t_uint256_$",
                                          "typeString": "type(uint256)"
                                        },
                                        "typeName": {
                                          "id": 511,
                                          "name": "uint",
                                          "nodeType": "ElementaryTypeName",
                                          "src": "5833:4:3",
                                          "typeDescriptions": {}
                                        }
                                      },
                                      "id": 517,
                                      "isConstant": false,
                                      "isLValue": false,
                                      "isPure": false,
                                      "kind": "typeConversion",
                                      "lValueRequested": false,
                                      "nameLocations": [],
                                      "names": [],
                                      "nodeType": "FunctionCall",
                                      "src": "5833:33:3",
                                      "tryCall": false,
                                      "typeDescriptions": {
                                        "typeIdentifier": "t_uint256",
                                        "typeString": "uint256"
                                      }
                                    }
                                  ],
                                  "expression": {
                                    "argumentTypes": [
                                      {
                                        "typeIdentifier": "t_uint256",
                                        "typeString": "uint256"
                                      }
                                    ],
                                    "expression": {
                                      "id": 509,
                                      "name": "Strings",
                                      "nodeType": "Identifier",
                                      "overloadedDeclarations": [],
                                      "referencedDeclaration": 360,
                                      "src": "5816:7:3",
                                      "typeDescriptions": {
                                        "typeIdentifier": "t_type$_t_contract$_Strings_$360_$",
                                        "typeString": "type(library Strings)"
                                      }
                                    },
                                    "id": 510,
                                    "isConstant": false,
                                    "isLValue": false,
                                    "isPure": false,
                                    "lValueRequested": false,
                                    "memberLocation": "5824:8:3",
                                    "memberName": "toString",
                                    "nodeType": "MemberAccess",
                                    "referencedDeclaration": 222,
                                    "src": "5816:16:3",
                                    "typeDescriptions": {
                                      "typeIdentifier": "t_function_internal_pure$_t_uint256_$returns$_t_string_memory_ptr_$",
                                      "typeString": "function (uint256) pure returns (string memory)"
                                    }
                                  },
                                  "id": 518,
                                  "isConstant": false,
                                  "isLValue": false,
                                  "isPure": false,
                                  "kind": "functionCall",
                                  "lValueRequested": false,
                                  "nameLocations": [],
                                  "names": [],
                                  "nodeType": "FunctionCall",
                                  "src": "5816:51:3",
                                  "tryCall": false,
                                  "typeDescriptions": {
                                    "typeIdentifier": "t_string_memory_ptr",
                                    "typeString": "string memory"
                                  }
                                }
                              ],
                              "expression": {
                                "argumentTypes": [
                                  {
                                    "typeIdentifier": "t_stringliteral_3d620b44d0ea3d0fd41b8141758febf894dd941858e027857ca07a3929ff2892",
                                    "typeString": "literal_string \"Unexpected voting session status: expected=\""
                                  },
                                  {
                                    "typeIdentifier": "t_string_memory_ptr",
                                    "typeString": "string memory"
                                  },
                                  {
                                    "typeIdentifier": "t_stringliteral_3fd9b0dcd722604cd4fd85d779090fb081569f1da68546e1c1a84a77cdcb3486",
                                    "typeString": "literal_string \" current=\""
                                  },
                                  {
                                    "typeIdentifier": "t_string_memory_ptr",
                                    "typeString": "string memory"
                                  }
                                ],
                                "expression": {
                                  "id": 498,
                                  "isConstant": false,
                                  "isLValue": false,
                                  "isPure": true,
                                  "lValueRequested": false,
                                  "nodeType": "ElementaryTypeNameExpression",
                                  "src": "5696:6:3",
                                  "typeDescriptions": {
                                    "typeIdentifier": "t_type$_t_string_storage_ptr_$",
                                    "typeString": "type(string storage pointer)"
                                  },
                                  "typeName": {
                                    "id": 497,
                                    "name": "string",
                                    "nodeType": "ElementaryTypeName",
                                    "src": "5696:6:3",
                                    "typeDescriptions": {}
                                  }
                                },
                                "id": 499,
                                "isConstant": false,
                                "isLValue": false,
                                "isPure": false,
                                "lValueRequested": false,
                                "memberLocation": "5703:6:3",
                                "memberName": "concat",
                                "nodeType": "MemberAccess",
                                "src": "5696:13:3",
                                "typeDescriptions": {
                                  "typeIdentifier": "t_function_stringconcat_pure$__$returns$_t_string_memory_ptr_$",
                                  "typeString": "function () pure returns (string memory)"
                                }
                              },
                              "id": 519,
                              "isConstant": false,
                              "isLValue": false,
                              "isPure": false,
                              "kind": "functionCall",
                              "lValueRequested": false,
                              "nameLocations": [],
                              "names": [],
                              "nodeType": "FunctionCall",
                              "src": "5696:172:3",
                              "tryCall": false,
                              "typeDescriptions": {
                                "typeIdentifier": "t_string_memory_ptr",
                                "typeString": "string memory"
                              }
                            }
                          ],
                          "expression": {
                            "argumentTypes": [
                              {
                                "typeIdentifier": "t_bool",
                                "typeString": "bool"
                              },
                              {
                                "typeIdentifier": "t_string_memory_ptr",
                                "typeString": "string memory"
                              }
                            ],
                            "id": 490,
                            "name": "require",
                            "nodeType": "Identifier",
                            "overloadedDeclarations": [-18, -18],
                            "referencedDeclaration": -18,
                            "src": "5648:7:3",
                            "typeDescriptions": {
                              "typeIdentifier": "t_function_require_pure$_t_bool_$_t_string_memory_ptr_$returns$__$",
                              "typeString": "function (bool,string memory) pure"
                            }
                          },
                          "id": 520,
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": false,
                          "kind": "functionCall",
                          "lValueRequested": false,
                          "nameLocations": [],
                          "names": [],
                          "nodeType": "FunctionCall",
                          "src": "5648:221:3",
                          "tryCall": false,
                          "typeDescriptions": {
                            "typeIdentifier": "t_tuple$__$",
                            "typeString": "tuple()"
                          }
                        },
                        "id": 521,
                        "nodeType": "ExpressionStatement",
                        "src": "5648:221:3"
                      },
                      {
                        "id": 522,
                        "nodeType": "PlaceholderStatement",
                        "src": "5879:1:3"
                      }
                    ]
                  },
                  "documentation": {
                    "id": 483,
                    "nodeType": "StructuredDocumentation",
                    "src": "5497:77:3",
                    "text": " @dev Throws if called when status is not the expected one."
                  },
                  "id": 524,
                  "name": "statusIs",
                  "nameLocation": "5588:8:3",
                  "nodeType": "ModifierDefinition",
                  "parameters": {
                    "id": 489,
                    "nodeType": "ParameterList",
                    "parameters": [
                      {
                        "constant": false,
                        "id": 485,
                        "mutability": "mutable",
                        "name": "_sessionId",
                        "nameLocation": "5602:10:3",
                        "nodeType": "VariableDeclaration",
                        "scope": 524,
                        "src": "5597:15:3",
                        "stateVariable": false,
                        "storageLocation": "default",
                        "typeDescriptions": {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        },
                        "typeName": {
                          "id": 484,
                          "name": "uint",
                          "nodeType": "ElementaryTypeName",
                          "src": "5597:4:3",
                          "typeDescriptions": {
                            "typeIdentifier": "t_uint256",
                            "typeString": "uint256"
                          }
                        },
                        "visibility": "internal"
                      },
                      {
                        "constant": false,
                        "id": 488,
                        "mutability": "mutable",
                        "name": "_status",
                        "nameLocation": "5629:7:3",
                        "nodeType": "VariableDeclaration",
                        "scope": 524,
                        "src": "5614:22:3",
                        "stateVariable": false,
                        "storageLocation": "default",
                        "typeDescriptions": {
                          "typeIdentifier": "t_enum$_WorkflowStatus_$375",
                          "typeString": "enum Voting.WorkflowStatus"
                        },
                        "typeName": {
                          "id": 487,
                          "nodeType": "UserDefinedTypeName",
                          "pathNode": {
                            "id": 486,
                            "name": "WorkflowStatus",
                            "nameLocations": ["5614:14:3"],
                            "nodeType": "IdentifierPath",
                            "referencedDeclaration": 375,
                            "src": "5614:14:3"
                          },
                          "referencedDeclaration": 375,
                          "src": "5614:14:3",
                          "typeDescriptions": {
                            "typeIdentifier": "t_enum$_WorkflowStatus_$375",
                            "typeString": "enum Voting.WorkflowStatus"
                          }
                        },
                        "visibility": "internal"
                      }
                    ],
                    "src": "5596:41:3"
                  },
                  "src": "5579:308:3",
                  "virtual": false,
                  "visibility": "internal"
                },
                {
                  "body": {
                    "id": 565,
                    "nodeType": "Block",
                    "src": "6056:249:3",
                    "statements": [
                      {
                        "expression": {
                          "arguments": [
                            {
                              "commonType": {
                                "typeIdentifier": "t_enum$_WorkflowStatus_$375",
                                "typeString": "enum Voting.WorkflowStatus"
                              },
                              "id": 538,
                              "isConstant": false,
                              "isLValue": false,
                              "isPure": false,
                              "lValueRequested": false,
                              "leftExpression": {
                                "expression": {
                                  "baseExpression": {
                                    "id": 533,
                                    "name": "sessions",
                                    "nodeType": "Identifier",
                                    "overloadedDeclarations": [],
                                    "referencedDeclaration": 480,
                                    "src": "6074:8:3",
                                    "typeDescriptions": {
                                      "typeIdentifier": "t_mapping$_t_uint256_$_t_struct$_Session_$418_storage_$",
                                      "typeString": "mapping(uint256 => struct Voting.Session storage ref)"
                                    }
                                  },
                                  "id": 535,
                                  "indexExpression": {
                                    "id": 534,
                                    "name": "_sessionId",
                                    "nodeType": "Identifier",
                                    "overloadedDeclarations": [],
                                    "referencedDeclaration": 527,
                                    "src": "6083:10:3",
                                    "typeDescriptions": {
                                      "typeIdentifier": "t_uint256",
                                      "typeString": "uint256"
                                    }
                                  },
                                  "isConstant": false,
                                  "isLValue": true,
                                  "isPure": false,
                                  "lValueRequested": false,
                                  "nodeType": "IndexAccess",
                                  "src": "6074:20:3",
                                  "typeDescriptions": {
                                    "typeIdentifier": "t_struct$_Session_$418_storage",
                                    "typeString": "struct Voting.Session storage ref"
                                  }
                                },
                                "id": 536,
                                "isConstant": false,
                                "isLValue": true,
                                "isPure": false,
                                "lValueRequested": false,
                                "memberLocation": "6095:6:3",
                                "memberName": "status",
                                "nodeType": "MemberAccess",
                                "referencedDeclaration": 395,
                                "src": "6074:27:3",
                                "typeDescriptions": {
                                  "typeIdentifier": "t_enum$_WorkflowStatus_$375",
                                  "typeString": "enum Voting.WorkflowStatus"
                                }
                              },
                              "nodeType": "BinaryOperation",
                              "operator": ">=",
                              "rightExpression": {
                                "id": 537,
                                "name": "_status",
                                "nodeType": "Identifier",
                                "overloadedDeclarations": [],
                                "referencedDeclaration": 530,
                                "src": "6105:7:3",
                                "typeDescriptions": {
                                  "typeIdentifier": "t_enum$_WorkflowStatus_$375",
                                  "typeString": "enum Voting.WorkflowStatus"
                                }
                              },
                              "src": "6074:38:3",
                              "typeDescriptions": {
                                "typeIdentifier": "t_bool",
                                "typeString": "bool"
                              }
                            },
                            {
                              "arguments": [
                                {
                                  "hexValue": "556e657870656374656420766f74696e672073657373696f6e207374617475733a2065787065637465643e3d",
                                  "id": 542,
                                  "isConstant": false,
                                  "isLValue": false,
                                  "isPure": true,
                                  "kind": "string",
                                  "lValueRequested": false,
                                  "nodeType": "Literal",
                                  "src": "6128:46:3",
                                  "typeDescriptions": {
                                    "typeIdentifier": "t_stringliteral_8f119cfc6e611f08fd8a52f700c95b25100149c739be9a9b6e45b3e14ffb0039",
                                    "typeString": "literal_string \"Unexpected voting session status: expected>=\""
                                  },
                                  "value": "Unexpected voting session status: expected>="
                                },
                                {
                                  "arguments": [
                                    {
                                      "arguments": [
                                        {
                                          "id": 547,
                                          "name": "_status",
                                          "nodeType": "Identifier",
                                          "overloadedDeclarations": [],
                                          "referencedDeclaration": 530,
                                          "src": "6210:7:3",
                                          "typeDescriptions": {
                                            "typeIdentifier": "t_enum$_WorkflowStatus_$375",
                                            "typeString": "enum Voting.WorkflowStatus"
                                          }
                                        }
                                      ],
                                      "expression": {
                                        "argumentTypes": [
                                          {
                                            "typeIdentifier": "t_enum$_WorkflowStatus_$375",
                                            "typeString": "enum Voting.WorkflowStatus"
                                          }
                                        ],
                                        "id": 546,
                                        "isConstant": false,
                                        "isLValue": false,
                                        "isPure": true,
                                        "lValueRequested": false,
                                        "nodeType": "ElementaryTypeNameExpression",
                                        "src": "6205:4:3",
                                        "typeDescriptions": {
                                          "typeIdentifier": "t_type$_t_uint256_$",
                                          "typeString": "type(uint256)"
                                        },
                                        "typeName": {
                                          "id": 545,
                                          "name": "uint",
                                          "nodeType": "ElementaryTypeName",
                                          "src": "6205:4:3",
                                          "typeDescriptions": {}
                                        }
                                      },
                                      "id": 548,
                                      "isConstant": false,
                                      "isLValue": false,
                                      "isPure": false,
                                      "kind": "typeConversion",
                                      "lValueRequested": false,
                                      "nameLocations": [],
                                      "names": [],
                                      "nodeType": "FunctionCall",
                                      "src": "6205:13:3",
                                      "tryCall": false,
                                      "typeDescriptions": {
                                        "typeIdentifier": "t_uint256",
                                        "typeString": "uint256"
                                      }
                                    }
                                  ],
                                  "expression": {
                                    "argumentTypes": [
                                      {
                                        "typeIdentifier": "t_uint256",
                                        "typeString": "uint256"
                                      }
                                    ],
                                    "expression": {
                                      "id": 543,
                                      "name": "Strings",
                                      "nodeType": "Identifier",
                                      "overloadedDeclarations": [],
                                      "referencedDeclaration": 360,
                                      "src": "6188:7:3",
                                      "typeDescriptions": {
                                        "typeIdentifier": "t_type$_t_contract$_Strings_$360_$",
                                        "typeString": "type(library Strings)"
                                      }
                                    },
                                    "id": 544,
                                    "isConstant": false,
                                    "isLValue": false,
                                    "isPure": false,
                                    "lValueRequested": false,
                                    "memberLocation": "6196:8:3",
                                    "memberName": "toString",
                                    "nodeType": "MemberAccess",
                                    "referencedDeclaration": 222,
                                    "src": "6188:16:3",
                                    "typeDescriptions": {
                                      "typeIdentifier": "t_function_internal_pure$_t_uint256_$returns$_t_string_memory_ptr_$",
                                      "typeString": "function (uint256) pure returns (string memory)"
                                    }
                                  },
                                  "id": 549,
                                  "isConstant": false,
                                  "isLValue": false,
                                  "isPure": false,
                                  "kind": "functionCall",
                                  "lValueRequested": false,
                                  "nameLocations": [],
                                  "names": [],
                                  "nodeType": "FunctionCall",
                                  "src": "6188:31:3",
                                  "tryCall": false,
                                  "typeDescriptions": {
                                    "typeIdentifier": "t_string_memory_ptr",
                                    "typeString": "string memory"
                                  }
                                },
                                {
                                  "hexValue": "2063757272656e743d",
                                  "id": 550,
                                  "isConstant": false,
                                  "isLValue": false,
                                  "isPure": true,
                                  "kind": "string",
                                  "lValueRequested": false,
                                  "nodeType": "Literal",
                                  "src": "6221:11:3",
                                  "typeDescriptions": {
                                    "typeIdentifier": "t_stringliteral_3fd9b0dcd722604cd4fd85d779090fb081569f1da68546e1c1a84a77cdcb3486",
                                    "typeString": "literal_string \" current=\""
                                  },
                                  "value": " current="
                                },
                                {
                                  "arguments": [
                                    {
                                      "arguments": [
                                        {
                                          "expression": {
                                            "baseExpression": {
                                              "id": 555,
                                              "name": "sessions",
                                              "nodeType": "Identifier",
                                              "overloadedDeclarations": [],
                                              "referencedDeclaration": 480,
                                              "src": "6256:8:3",
                                              "typeDescriptions": {
                                                "typeIdentifier": "t_mapping$_t_uint256_$_t_struct$_Session_$418_storage_$",
                                                "typeString": "mapping(uint256 => struct Voting.Session storage ref)"
                                              }
                                            },
                                            "id": 557,
                                            "indexExpression": {
                                              "id": 556,
                                              "name": "_sessionId",
                                              "nodeType": "Identifier",
                                              "overloadedDeclarations": [],
                                              "referencedDeclaration": 527,
                                              "src": "6265:10:3",
                                              "typeDescriptions": {
                                                "typeIdentifier": "t_uint256",
                                                "typeString": "uint256"
                                              }
                                            },
                                            "isConstant": false,
                                            "isLValue": true,
                                            "isPure": false,
                                            "lValueRequested": false,
                                            "nodeType": "IndexAccess",
                                            "src": "6256:20:3",
                                            "typeDescriptions": {
                                              "typeIdentifier": "t_struct$_Session_$418_storage",
                                              "typeString": "struct Voting.Session storage ref"
                                            }
                                          },
                                          "id": 558,
                                          "isConstant": false,
                                          "isLValue": true,
                                          "isPure": false,
                                          "lValueRequested": false,
                                          "memberLocation": "6277:6:3",
                                          "memberName": "status",
                                          "nodeType": "MemberAccess",
                                          "referencedDeclaration": 395,
                                          "src": "6256:27:3",
                                          "typeDescriptions": {
                                            "typeIdentifier": "t_enum$_WorkflowStatus_$375",
                                            "typeString": "enum Voting.WorkflowStatus"
                                          }
                                        }
                                      ],
                                      "expression": {
                                        "argumentTypes": [
                                          {
                                            "typeIdentifier": "t_enum$_WorkflowStatus_$375",
                                            "typeString": "enum Voting.WorkflowStatus"
                                          }
                                        ],
                                        "id": 554,
                                        "isConstant": false,
                                        "isLValue": false,
                                        "isPure": true,
                                        "lValueRequested": false,
                                        "nodeType": "ElementaryTypeNameExpression",
                                        "src": "6251:4:3",
                                        "typeDescriptions": {
                                          "typeIdentifier": "t_type$_t_uint256_$",
                                          "typeString": "type(uint256)"
                                        },
                                        "typeName": {
                                          "id": 553,
                                          "name": "uint",
                                          "nodeType": "ElementaryTypeName",
                                          "src": "6251:4:3",
                                          "typeDescriptions": {}
                                        }
                                      },
                                      "id": 559,
                                      "isConstant": false,
                                      "isLValue": false,
                                      "isPure": false,
                                      "kind": "typeConversion",
                                      "lValueRequested": false,
                                      "nameLocations": [],
                                      "names": [],
                                      "nodeType": "FunctionCall",
                                      "src": "6251:33:3",
                                      "tryCall": false,
                                      "typeDescriptions": {
                                        "typeIdentifier": "t_uint256",
                                        "typeString": "uint256"
                                      }
                                    }
                                  ],
                                  "expression": {
                                    "argumentTypes": [
                                      {
                                        "typeIdentifier": "t_uint256",
                                        "typeString": "uint256"
                                      }
                                    ],
                                    "expression": {
                                      "id": 551,
                                      "name": "Strings",
                                      "nodeType": "Identifier",
                                      "overloadedDeclarations": [],
                                      "referencedDeclaration": 360,
                                      "src": "6234:7:3",
                                      "typeDescriptions": {
                                        "typeIdentifier": "t_type$_t_contract$_Strings_$360_$",
                                        "typeString": "type(library Strings)"
                                      }
                                    },
                                    "id": 552,
                                    "isConstant": false,
                                    "isLValue": false,
                                    "isPure": false,
                                    "lValueRequested": false,
                                    "memberLocation": "6242:8:3",
                                    "memberName": "toString",
                                    "nodeType": "MemberAccess",
                                    "referencedDeclaration": 222,
                                    "src": "6234:16:3",
                                    "typeDescriptions": {
                                      "typeIdentifier": "t_function_internal_pure$_t_uint256_$returns$_t_string_memory_ptr_$",
                                      "typeString": "function (uint256) pure returns (string memory)"
                                    }
                                  },
                                  "id": 560,
                                  "isConstant": false,
                                  "isLValue": false,
                                  "isPure": false,
                                  "kind": "functionCall",
                                  "lValueRequested": false,
                                  "nameLocations": [],
                                  "names": [],
                                  "nodeType": "FunctionCall",
                                  "src": "6234:51:3",
                                  "tryCall": false,
                                  "typeDescriptions": {
                                    "typeIdentifier": "t_string_memory_ptr",
                                    "typeString": "string memory"
                                  }
                                }
                              ],
                              "expression": {
                                "argumentTypes": [
                                  {
                                    "typeIdentifier": "t_stringliteral_8f119cfc6e611f08fd8a52f700c95b25100149c739be9a9b6e45b3e14ffb0039",
                                    "typeString": "literal_string \"Unexpected voting session status: expected>=\""
                                  },
                                  {
                                    "typeIdentifier": "t_string_memory_ptr",
                                    "typeString": "string memory"
                                  },
                                  {
                                    "typeIdentifier": "t_stringliteral_3fd9b0dcd722604cd4fd85d779090fb081569f1da68546e1c1a84a77cdcb3486",
                                    "typeString": "literal_string \" current=\""
                                  },
                                  {
                                    "typeIdentifier": "t_string_memory_ptr",
                                    "typeString": "string memory"
                                  }
                                ],
                                "expression": {
                                  "id": 540,
                                  "isConstant": false,
                                  "isLValue": false,
                                  "isPure": true,
                                  "lValueRequested": false,
                                  "nodeType": "ElementaryTypeNameExpression",
                                  "src": "6114:6:3",
                                  "typeDescriptions": {
                                    "typeIdentifier": "t_type$_t_string_storage_ptr_$",
                                    "typeString": "type(string storage pointer)"
                                  },
                                  "typeName": {
                                    "id": 539,
                                    "name": "string",
                                    "nodeType": "ElementaryTypeName",
                                    "src": "6114:6:3",
                                    "typeDescriptions": {}
                                  }
                                },
                                "id": 541,
                                "isConstant": false,
                                "isLValue": false,
                                "isPure": false,
                                "lValueRequested": false,
                                "memberLocation": "6121:6:3",
                                "memberName": "concat",
                                "nodeType": "MemberAccess",
                                "src": "6114:13:3",
                                "typeDescriptions": {
                                  "typeIdentifier": "t_function_stringconcat_pure$__$returns$_t_string_memory_ptr_$",
                                  "typeString": "function () pure returns (string memory)"
                                }
                              },
                              "id": 561,
                              "isConstant": false,
                              "isLValue": false,
                              "isPure": false,
                              "kind": "functionCall",
                              "lValueRequested": false,
                              "nameLocations": [],
                              "names": [],
                              "nodeType": "FunctionCall",
                              "src": "6114:172:3",
                              "tryCall": false,
                              "typeDescriptions": {
                                "typeIdentifier": "t_string_memory_ptr",
                                "typeString": "string memory"
                              }
                            }
                          ],
                          "expression": {
                            "argumentTypes": [
                              {
                                "typeIdentifier": "t_bool",
                                "typeString": "bool"
                              },
                              {
                                "typeIdentifier": "t_string_memory_ptr",
                                "typeString": "string memory"
                              }
                            ],
                            "id": 532,
                            "name": "require",
                            "nodeType": "Identifier",
                            "overloadedDeclarations": [-18, -18],
                            "referencedDeclaration": -18,
                            "src": "6066:7:3",
                            "typeDescriptions": {
                              "typeIdentifier": "t_function_require_pure$_t_bool_$_t_string_memory_ptr_$returns$__$",
                              "typeString": "function (bool,string memory) pure"
                            }
                          },
                          "id": 562,
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": false,
                          "kind": "functionCall",
                          "lValueRequested": false,
                          "nameLocations": [],
                          "names": [],
                          "nodeType": "FunctionCall",
                          "src": "6066:221:3",
                          "tryCall": false,
                          "typeDescriptions": {
                            "typeIdentifier": "t_tuple$__$",
                            "typeString": "tuple()"
                          }
                        },
                        "id": 563,
                        "nodeType": "ExpressionStatement",
                        "src": "6066:221:3"
                      },
                      {
                        "id": 564,
                        "nodeType": "PlaceholderStatement",
                        "src": "6297:1:3"
                      }
                    ]
                  },
                  "documentation": {
                    "id": 525,
                    "nodeType": "StructuredDocumentation",
                    "src": "5901:86:3",
                    "text": " @dev Throws if called when status is not at least the given status."
                  },
                  "id": 566,
                  "name": "statusAtLeast",
                  "nameLocation": "6001:13:3",
                  "nodeType": "ModifierDefinition",
                  "parameters": {
                    "id": 531,
                    "nodeType": "ParameterList",
                    "parameters": [
                      {
                        "constant": false,
                        "id": 527,
                        "mutability": "mutable",
                        "name": "_sessionId",
                        "nameLocation": "6020:10:3",
                        "nodeType": "VariableDeclaration",
                        "scope": 566,
                        "src": "6015:15:3",
                        "stateVariable": false,
                        "storageLocation": "default",
                        "typeDescriptions": {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        },
                        "typeName": {
                          "id": 526,
                          "name": "uint",
                          "nodeType": "ElementaryTypeName",
                          "src": "6015:4:3",
                          "typeDescriptions": {
                            "typeIdentifier": "t_uint256",
                            "typeString": "uint256"
                          }
                        },
                        "visibility": "internal"
                      },
                      {
                        "constant": false,
                        "id": 530,
                        "mutability": "mutable",
                        "name": "_status",
                        "nameLocation": "6047:7:3",
                        "nodeType": "VariableDeclaration",
                        "scope": 566,
                        "src": "6032:22:3",
                        "stateVariable": false,
                        "storageLocation": "default",
                        "typeDescriptions": {
                          "typeIdentifier": "t_enum$_WorkflowStatus_$375",
                          "typeString": "enum Voting.WorkflowStatus"
                        },
                        "typeName": {
                          "id": 529,
                          "nodeType": "UserDefinedTypeName",
                          "pathNode": {
                            "id": 528,
                            "name": "WorkflowStatus",
                            "nameLocations": ["6032:14:3"],
                            "nodeType": "IdentifierPath",
                            "referencedDeclaration": 375,
                            "src": "6032:14:3"
                          },
                          "referencedDeclaration": 375,
                          "src": "6032:14:3",
                          "typeDescriptions": {
                            "typeIdentifier": "t_enum$_WorkflowStatus_$375",
                            "typeString": "enum Voting.WorkflowStatus"
                          }
                        },
                        "visibility": "internal"
                      }
                    ],
                    "src": "6014:41:3"
                  },
                  "src": "5992:313:3",
                  "virtual": false,
                  "visibility": "internal"
                },
                {
                  "body": {
                    "id": 584,
                    "nodeType": "Block",
                    "src": "6432:123:3",
                    "statements": [
                      {
                        "expression": {
                          "arguments": [
                            {
                              "expression": {
                                "baseExpression": {
                                  "expression": {
                                    "baseExpression": {
                                      "id": 572,
                                      "name": "sessions",
                                      "nodeType": "Identifier",
                                      "overloadedDeclarations": [],
                                      "referencedDeclaration": 480,
                                      "src": "6450:8:3",
                                      "typeDescriptions": {
                                        "typeIdentifier": "t_mapping$_t_uint256_$_t_struct$_Session_$418_storage_$",
                                        "typeString": "mapping(uint256 => struct Voting.Session storage ref)"
                                      }
                                    },
                                    "id": 574,
                                    "indexExpression": {
                                      "id": 573,
                                      "name": "_sessionId",
                                      "nodeType": "Identifier",
                                      "overloadedDeclarations": [],
                                      "referencedDeclaration": 569,
                                      "src": "6459:10:3",
                                      "typeDescriptions": {
                                        "typeIdentifier": "t_uint256",
                                        "typeString": "uint256"
                                      }
                                    },
                                    "isConstant": false,
                                    "isLValue": true,
                                    "isPure": false,
                                    "lValueRequested": false,
                                    "nodeType": "IndexAccess",
                                    "src": "6450:20:3",
                                    "typeDescriptions": {
                                      "typeIdentifier": "t_struct$_Session_$418_storage",
                                      "typeString": "struct Voting.Session storage ref"
                                    }
                                  },
                                  "id": 575,
                                  "isConstant": false,
                                  "isLValue": true,
                                  "isPure": false,
                                  "lValueRequested": false,
                                  "memberLocation": "6471:6:3",
                                  "memberName": "voters",
                                  "nodeType": "MemberAccess",
                                  "referencedDeclaration": 401,
                                  "src": "6450:27:3",
                                  "typeDescriptions": {
                                    "typeIdentifier": "t_mapping$_t_address_$_t_struct$_Voter_$384_storage_$",
                                    "typeString": "mapping(address => struct Voting.Voter storage ref)"
                                  }
                                },
                                "id": 578,
                                "indexExpression": {
                                  "expression": {
                                    "id": 576,
                                    "name": "msg",
                                    "nodeType": "Identifier",
                                    "overloadedDeclarations": [],
                                    "referencedDeclaration": -15,
                                    "src": "6478:3:3",
                                    "typeDescriptions": {
                                      "typeIdentifier": "t_magic_message",
                                      "typeString": "msg"
                                    }
                                  },
                                  "id": 577,
                                  "isConstant": false,
                                  "isLValue": false,
                                  "isPure": false,
                                  "lValueRequested": false,
                                  "memberLocation": "6482:6:3",
                                  "memberName": "sender",
                                  "nodeType": "MemberAccess",
                                  "src": "6478:10:3",
                                  "typeDescriptions": {
                                    "typeIdentifier": "t_address",
                                    "typeString": "address"
                                  }
                                },
                                "isConstant": false,
                                "isLValue": true,
                                "isPure": false,
                                "lValueRequested": false,
                                "nodeType": "IndexAccess",
                                "src": "6450:39:3",
                                "typeDescriptions": {
                                  "typeIdentifier": "t_struct$_Voter_$384_storage",
                                  "typeString": "struct Voting.Voter storage ref"
                                }
                              },
                              "id": 579,
                              "isConstant": false,
                              "isLValue": true,
                              "isPure": false,
                              "lValueRequested": false,
                              "memberLocation": "6490:12:3",
                              "memberName": "isRegistered",
                              "nodeType": "MemberAccess",
                              "referencedDeclaration": 377,
                              "src": "6450:52:3",
                              "typeDescriptions": {
                                "typeIdentifier": "t_bool",
                                "typeString": "bool"
                              }
                            },
                            {
                              "hexValue": "43616c6c6572206973206e6f74207265676973746572656420766f746572",
                              "id": 580,
                              "isConstant": false,
                              "isLValue": false,
                              "isPure": true,
                              "kind": "string",
                              "lValueRequested": false,
                              "nodeType": "Literal",
                              "src": "6504:32:3",
                              "typeDescriptions": {
                                "typeIdentifier": "t_stringliteral_901549ad31b8a07c18007564a6bf9799e1366f1381f124f7443a4d46aa1f7276",
                                "typeString": "literal_string \"Caller is not registered voter\""
                              },
                              "value": "Caller is not registered voter"
                            }
                          ],
                          "expression": {
                            "argumentTypes": [
                              {
                                "typeIdentifier": "t_bool",
                                "typeString": "bool"
                              },
                              {
                                "typeIdentifier": "t_stringliteral_901549ad31b8a07c18007564a6bf9799e1366f1381f124f7443a4d46aa1f7276",
                                "typeString": "literal_string \"Caller is not registered voter\""
                              }
                            ],
                            "id": 571,
                            "name": "require",
                            "nodeType": "Identifier",
                            "overloadedDeclarations": [-18, -18],
                            "referencedDeclaration": -18,
                            "src": "6442:7:3",
                            "typeDescriptions": {
                              "typeIdentifier": "t_function_require_pure$_t_bool_$_t_string_memory_ptr_$returns$__$",
                              "typeString": "function (bool,string memory) pure"
                            }
                          },
                          "id": 581,
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": false,
                          "kind": "functionCall",
                          "lValueRequested": false,
                          "nameLocations": [],
                          "names": [],
                          "nodeType": "FunctionCall",
                          "src": "6442:95:3",
                          "tryCall": false,
                          "typeDescriptions": {
                            "typeIdentifier": "t_tuple$__$",
                            "typeString": "tuple()"
                          }
                        },
                        "id": 582,
                        "nodeType": "ExpressionStatement",
                        "src": "6442:95:3"
                      },
                      {
                        "id": 583,
                        "nodeType": "PlaceholderStatement",
                        "src": "6547:1:3"
                      }
                    ]
                  },
                  "documentation": {
                    "id": 567,
                    "nodeType": "StructuredDocumentation",
                    "src": "6311:80:3",
                    "text": " @dev Throws if called by any account not registered as voter."
                  },
                  "id": 585,
                  "name": "onlyVoter",
                  "nameLocation": "6405:9:3",
                  "nodeType": "ModifierDefinition",
                  "parameters": {
                    "id": 570,
                    "nodeType": "ParameterList",
                    "parameters": [
                      {
                        "constant": false,
                        "id": 569,
                        "mutability": "mutable",
                        "name": "_sessionId",
                        "nameLocation": "6420:10:3",
                        "nodeType": "VariableDeclaration",
                        "scope": 585,
                        "src": "6415:15:3",
                        "stateVariable": false,
                        "storageLocation": "default",
                        "typeDescriptions": {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        },
                        "typeName": {
                          "id": 568,
                          "name": "uint",
                          "nodeType": "ElementaryTypeName",
                          "src": "6415:4:3",
                          "typeDescriptions": {
                            "typeIdentifier": "t_uint256",
                            "typeString": "uint256"
                          }
                        },
                        "visibility": "internal"
                      }
                    ],
                    "src": "6414:17:3"
                  },
                  "src": "6396:159:3",
                  "virtual": false,
                  "visibility": "internal"
                },
                {
                  "body": {
                    "id": 609,
                    "nodeType": "Block",
                    "src": "6711:157:3",
                    "statements": [
                      {
                        "expression": {
                          "arguments": [
                            {
                              "commonType": {
                                "typeIdentifier": "t_bool",
                                "typeString": "bool"
                              },
                              "id": 604,
                              "isConstant": false,
                              "isLValue": false,
                              "isPure": false,
                              "lValueRequested": false,
                              "leftExpression": {
                                "commonType": {
                                  "typeIdentifier": "t_address",
                                  "typeString": "address"
                                },
                                "id": 595,
                                "isConstant": false,
                                "isLValue": false,
                                "isPure": false,
                                "lValueRequested": false,
                                "leftExpression": {
                                  "arguments": [],
                                  "expression": {
                                    "argumentTypes": [],
                                    "id": 591,
                                    "name": "owner",
                                    "nodeType": "Identifier",
                                    "overloadedDeclarations": [],
                                    "referencedDeclaration": 40,
                                    "src": "6729:5:3",
                                    "typeDescriptions": {
                                      "typeIdentifier": "t_function_internal_view$__$returns$_t_address_$",
                                      "typeString": "function () view returns (address)"
                                    }
                                  },
                                  "id": 592,
                                  "isConstant": false,
                                  "isLValue": false,
                                  "isPure": false,
                                  "kind": "functionCall",
                                  "lValueRequested": false,
                                  "nameLocations": [],
                                  "names": [],
                                  "nodeType": "FunctionCall",
                                  "src": "6729:7:3",
                                  "tryCall": false,
                                  "typeDescriptions": {
                                    "typeIdentifier": "t_address",
                                    "typeString": "address"
                                  }
                                },
                                "nodeType": "BinaryOperation",
                                "operator": "==",
                                "rightExpression": {
                                  "expression": {
                                    "id": 593,
                                    "name": "msg",
                                    "nodeType": "Identifier",
                                    "overloadedDeclarations": [],
                                    "referencedDeclaration": -15,
                                    "src": "6740:3:3",
                                    "typeDescriptions": {
                                      "typeIdentifier": "t_magic_message",
                                      "typeString": "msg"
                                    }
                                  },
                                  "id": 594,
                                  "isConstant": false,
                                  "isLValue": false,
                                  "isPure": false,
                                  "lValueRequested": false,
                                  "memberLocation": "6744:6:3",
                                  "memberName": "sender",
                                  "nodeType": "MemberAccess",
                                  "src": "6740:10:3",
                                  "typeDescriptions": {
                                    "typeIdentifier": "t_address",
                                    "typeString": "address"
                                  }
                                },
                                "src": "6729:21:3",
                                "typeDescriptions": {
                                  "typeIdentifier": "t_bool",
                                  "typeString": "bool"
                                }
                              },
                              "nodeType": "BinaryOperation",
                              "operator": "||",
                              "rightExpression": {
                                "expression": {
                                  "baseExpression": {
                                    "expression": {
                                      "baseExpression": {
                                        "id": 596,
                                        "name": "sessions",
                                        "nodeType": "Identifier",
                                        "overloadedDeclarations": [],
                                        "referencedDeclaration": 480,
                                        "src": "6754:8:3",
                                        "typeDescriptions": {
                                          "typeIdentifier": "t_mapping$_t_uint256_$_t_struct$_Session_$418_storage_$",
                                          "typeString": "mapping(uint256 => struct Voting.Session storage ref)"
                                        }
                                      },
                                      "id": 598,
                                      "indexExpression": {
                                        "id": 597,
                                        "name": "_sessionId",
                                        "nodeType": "Identifier",
                                        "overloadedDeclarations": [],
                                        "referencedDeclaration": 588,
                                        "src": "6763:10:3",
                                        "typeDescriptions": {
                                          "typeIdentifier": "t_uint256",
                                          "typeString": "uint256"
                                        }
                                      },
                                      "isConstant": false,
                                      "isLValue": true,
                                      "isPure": false,
                                      "lValueRequested": false,
                                      "nodeType": "IndexAccess",
                                      "src": "6754:20:3",
                                      "typeDescriptions": {
                                        "typeIdentifier": "t_struct$_Session_$418_storage",
                                        "typeString": "struct Voting.Session storage ref"
                                      }
                                    },
                                    "id": 599,
                                    "isConstant": false,
                                    "isLValue": true,
                                    "isPure": false,
                                    "lValueRequested": false,
                                    "memberLocation": "6775:6:3",
                                    "memberName": "voters",
                                    "nodeType": "MemberAccess",
                                    "referencedDeclaration": 401,
                                    "src": "6754:27:3",
                                    "typeDescriptions": {
                                      "typeIdentifier": "t_mapping$_t_address_$_t_struct$_Voter_$384_storage_$",
                                      "typeString": "mapping(address => struct Voting.Voter storage ref)"
                                    }
                                  },
                                  "id": 602,
                                  "indexExpression": {
                                    "expression": {
                                      "id": 600,
                                      "name": "msg",
                                      "nodeType": "Identifier",
                                      "overloadedDeclarations": [],
                                      "referencedDeclaration": -15,
                                      "src": "6782:3:3",
                                      "typeDescriptions": {
                                        "typeIdentifier": "t_magic_message",
                                        "typeString": "msg"
                                      }
                                    },
                                    "id": 601,
                                    "isConstant": false,
                                    "isLValue": false,
                                    "isPure": false,
                                    "lValueRequested": false,
                                    "memberLocation": "6786:6:3",
                                    "memberName": "sender",
                                    "nodeType": "MemberAccess",
                                    "src": "6782:10:3",
                                    "typeDescriptions": {
                                      "typeIdentifier": "t_address",
                                      "typeString": "address"
                                    }
                                  },
                                  "isConstant": false,
                                  "isLValue": true,
                                  "isPure": false,
                                  "lValueRequested": false,
                                  "nodeType": "IndexAccess",
                                  "src": "6754:39:3",
                                  "typeDescriptions": {
                                    "typeIdentifier": "t_struct$_Voter_$384_storage",
                                    "typeString": "struct Voting.Voter storage ref"
                                  }
                                },
                                "id": 603,
                                "isConstant": false,
                                "isLValue": true,
                                "isPure": false,
                                "lValueRequested": false,
                                "memberLocation": "6794:12:3",
                                "memberName": "isRegistered",
                                "nodeType": "MemberAccess",
                                "referencedDeclaration": 377,
                                "src": "6754:52:3",
                                "typeDescriptions": {
                                  "typeIdentifier": "t_bool",
                                  "typeString": "bool"
                                }
                              },
                              "src": "6729:77:3",
                              "typeDescriptions": {
                                "typeIdentifier": "t_bool",
                                "typeString": "bool"
                              }
                            },
                            {
                              "hexValue": "43616c6c6572206973206e6f74206f776e6572206f72207265676973746572656420766f746572",
                              "id": 605,
                              "isConstant": false,
                              "isLValue": false,
                              "isPure": true,
                              "kind": "string",
                              "lValueRequested": false,
                              "nodeType": "Literal",
                              "src": "6808:41:3",
                              "typeDescriptions": {
                                "typeIdentifier": "t_stringliteral_e2d7f4077014c8d9c3924edb65e2097550f445392084f495b9e627f6cbbf2ee1",
                                "typeString": "literal_string \"Caller is not owner or registered voter\""
                              },
                              "value": "Caller is not owner or registered voter"
                            }
                          ],
                          "expression": {
                            "argumentTypes": [
                              {
                                "typeIdentifier": "t_bool",
                                "typeString": "bool"
                              },
                              {
                                "typeIdentifier": "t_stringliteral_e2d7f4077014c8d9c3924edb65e2097550f445392084f495b9e627f6cbbf2ee1",
                                "typeString": "literal_string \"Caller is not owner or registered voter\""
                              }
                            ],
                            "id": 590,
                            "name": "require",
                            "nodeType": "Identifier",
                            "overloadedDeclarations": [-18, -18],
                            "referencedDeclaration": -18,
                            "src": "6721:7:3",
                            "typeDescriptions": {
                              "typeIdentifier": "t_function_require_pure$_t_bool_$_t_string_memory_ptr_$returns$__$",
                              "typeString": "function (bool,string memory) pure"
                            }
                          },
                          "id": 606,
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": false,
                          "kind": "functionCall",
                          "lValueRequested": false,
                          "nameLocations": [],
                          "names": [],
                          "nodeType": "FunctionCall",
                          "src": "6721:129:3",
                          "tryCall": false,
                          "typeDescriptions": {
                            "typeIdentifier": "t_tuple$__$",
                            "typeString": "tuple()"
                          }
                        },
                        "id": 607,
                        "nodeType": "ExpressionStatement",
                        "src": "6721:129:3"
                      },
                      {
                        "id": 608,
                        "nodeType": "PlaceholderStatement",
                        "src": "6860:1:3"
                      }
                    ]
                  },
                  "documentation": {
                    "id": 586,
                    "nodeType": "StructuredDocumentation",
                    "src": "6561:102:3",
                    "text": " @dev Throws if called by any account not registered as voter or if it is not owner."
                  },
                  "id": 610,
                  "name": "onlyVoterOrOwner",
                  "nameLocation": "6677:16:3",
                  "nodeType": "ModifierDefinition",
                  "parameters": {
                    "id": 589,
                    "nodeType": "ParameterList",
                    "parameters": [
                      {
                        "constant": false,
                        "id": 588,
                        "mutability": "mutable",
                        "name": "_sessionId",
                        "nameLocation": "6699:10:3",
                        "nodeType": "VariableDeclaration",
                        "scope": 610,
                        "src": "6694:15:3",
                        "stateVariable": false,
                        "storageLocation": "default",
                        "typeDescriptions": {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        },
                        "typeName": {
                          "id": 587,
                          "name": "uint",
                          "nodeType": "ElementaryTypeName",
                          "src": "6694:4:3",
                          "typeDescriptions": {
                            "typeIdentifier": "t_uint256",
                            "typeString": "uint256"
                          }
                        },
                        "visibility": "internal"
                      }
                    ],
                    "src": "6693:17:3"
                  },
                  "src": "6668:200:3",
                  "virtual": false,
                  "visibility": "internal"
                },
                {
                  "body": {
                    "id": 645,
                    "nodeType": "Block",
                    "src": "7214:277:3",
                    "statements": [
                      {
                        "expression": {
                          "id": 626,
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": false,
                          "lValueRequested": false,
                          "leftHandSide": {
                            "expression": {
                              "baseExpression": {
                                "id": 620,
                                "name": "sessions",
                                "nodeType": "Identifier",
                                "overloadedDeclarations": [],
                                "referencedDeclaration": 480,
                                "src": "7224:8:3",
                                "typeDescriptions": {
                                  "typeIdentifier": "t_mapping$_t_uint256_$_t_struct$_Session_$418_storage_$",
                                  "typeString": "mapping(uint256 => struct Voting.Session storage ref)"
                                }
                              },
                              "id": 622,
                              "indexExpression": {
                                "id": 621,
                                "name": "sessionsCount",
                                "nodeType": "Identifier",
                                "overloadedDeclarations": [],
                                "referencedDeclaration": 482,
                                "src": "7233:13:3",
                                "typeDescriptions": {
                                  "typeIdentifier": "t_uint256",
                                  "typeString": "uint256"
                                }
                              },
                              "isConstant": false,
                              "isLValue": true,
                              "isPure": false,
                              "lValueRequested": false,
                              "nodeType": "IndexAccess",
                              "src": "7224:23:3",
                              "typeDescriptions": {
                                "typeIdentifier": "t_struct$_Session_$418_storage",
                                "typeString": "struct Voting.Session storage ref"
                              }
                            },
                            "id": 623,
                            "isConstant": false,
                            "isLValue": true,
                            "isPure": false,
                            "lValueRequested": true,
                            "memberLocation": "7248:6:3",
                            "memberName": "status",
                            "nodeType": "MemberAccess",
                            "referencedDeclaration": 395,
                            "src": "7224:30:3",
                            "typeDescriptions": {
                              "typeIdentifier": "t_enum$_WorkflowStatus_$375",
                              "typeString": "enum Voting.WorkflowStatus"
                            }
                          },
                          "nodeType": "Assignment",
                          "operator": "=",
                          "rightHandSide": {
                            "expression": {
                              "id": 624,
                              "name": "WorkflowStatus",
                              "nodeType": "Identifier",
                              "overloadedDeclarations": [],
                              "referencedDeclaration": 375,
                              "src": "7257:14:3",
                              "typeDescriptions": {
                                "typeIdentifier": "t_type$_t_enum$_WorkflowStatus_$375_$",
                                "typeString": "type(enum Voting.WorkflowStatus)"
                              }
                            },
                            "id": 625,
                            "isConstant": false,
                            "isLValue": false,
                            "isPure": true,
                            "lValueRequested": false,
                            "memberLocation": "7272:17:3",
                            "memberName": "RegisteringVoters",
                            "nodeType": "MemberAccess",
                            "referencedDeclaration": 369,
                            "src": "7257:32:3",
                            "typeDescriptions": {
                              "typeIdentifier": "t_enum$_WorkflowStatus_$375",
                              "typeString": "enum Voting.WorkflowStatus"
                            }
                          },
                          "src": "7224:65:3",
                          "typeDescriptions": {
                            "typeIdentifier": "t_enum$_WorkflowStatus_$375",
                            "typeString": "enum Voting.WorkflowStatus"
                          }
                        },
                        "id": 627,
                        "nodeType": "ExpressionStatement",
                        "src": "7224:65:3"
                      },
                      {
                        "eventCall": {
                          "arguments": [
                            {
                              "id": 629,
                              "name": "sessionsCount",
                              "nodeType": "Identifier",
                              "overloadedDeclarations": [],
                              "referencedDeclaration": 482,
                              "src": "7319:13:3",
                              "typeDescriptions": {
                                "typeIdentifier": "t_uint256",
                                "typeString": "uint256"
                              }
                            },
                            {
                              "id": 630,
                              "name": "_name",
                              "nodeType": "Identifier",
                              "overloadedDeclarations": [],
                              "referencedDeclaration": 613,
                              "src": "7334:5:3",
                              "typeDescriptions": {
                                "typeIdentifier": "t_string_calldata_ptr",
                                "typeString": "string calldata"
                              }
                            },
                            {
                              "id": 631,
                              "name": "_description",
                              "nodeType": "Identifier",
                              "overloadedDeclarations": [],
                              "referencedDeclaration": 615,
                              "src": "7341:12:3",
                              "typeDescriptions": {
                                "typeIdentifier": "t_string_calldata_ptr",
                                "typeString": "string calldata"
                              }
                            }
                          ],
                          "expression": {
                            "argumentTypes": [
                              {
                                "typeIdentifier": "t_uint256",
                                "typeString": "uint256"
                              },
                              {
                                "typeIdentifier": "t_string_calldata_ptr",
                                "typeString": "string calldata"
                              },
                              {
                                "typeIdentifier": "t_string_calldata_ptr",
                                "typeString": "string calldata"
                              }
                            ],
                            "id": 628,
                            "name": "SessionCreated",
                            "nodeType": "Identifier",
                            "overloadedDeclarations": [],
                            "referencedDeclaration": 427,
                            "src": "7304:14:3",
                            "typeDescriptions": {
                              "typeIdentifier": "t_function_event_nonpayable$_t_uint256_$_t_string_memory_ptr_$_t_string_memory_ptr_$returns$__$",
                              "typeString": "function (uint256,string memory,string memory)"
                            }
                          },
                          "id": 632,
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": false,
                          "kind": "functionCall",
                          "lValueRequested": false,
                          "nameLocations": [],
                          "names": [],
                          "nodeType": "FunctionCall",
                          "src": "7304:50:3",
                          "tryCall": false,
                          "typeDescriptions": {
                            "typeIdentifier": "t_tuple$__$",
                            "typeString": "tuple()"
                          }
                        },
                        "id": 633,
                        "nodeType": "EmitStatement",
                        "src": "7299:55:3"
                      },
                      {
                        "eventCall": {
                          "arguments": [
                            {
                              "id": 635,
                              "name": "sessionsCount",
                              "nodeType": "Identifier",
                              "overloadedDeclarations": [],
                              "referencedDeclaration": 482,
                              "src": "7390:13:3",
                              "typeDescriptions": {
                                "typeIdentifier": "t_uint256",
                                "typeString": "uint256"
                              }
                            },
                            {
                              "expression": {
                                "id": 636,
                                "name": "WorkflowStatus",
                                "nodeType": "Identifier",
                                "overloadedDeclarations": [],
                                "referencedDeclaration": 375,
                                "src": "7405:14:3",
                                "typeDescriptions": {
                                  "typeIdentifier": "t_type$_t_enum$_WorkflowStatus_$375_$",
                                  "typeString": "type(enum Voting.WorkflowStatus)"
                                }
                              },
                              "id": 637,
                              "isConstant": false,
                              "isLValue": false,
                              "isPure": true,
                              "lValueRequested": false,
                              "memberLocation": "7420:4:3",
                              "memberName": "None",
                              "nodeType": "MemberAccess",
                              "referencedDeclaration": 368,
                              "src": "7405:19:3",
                              "typeDescriptions": {
                                "typeIdentifier": "t_enum$_WorkflowStatus_$375",
                                "typeString": "enum Voting.WorkflowStatus"
                              }
                            },
                            {
                              "expression": {
                                "id": 638,
                                "name": "WorkflowStatus",
                                "nodeType": "Identifier",
                                "overloadedDeclarations": [],
                                "referencedDeclaration": 375,
                                "src": "7426:14:3",
                                "typeDescriptions": {
                                  "typeIdentifier": "t_type$_t_enum$_WorkflowStatus_$375_$",
                                  "typeString": "type(enum Voting.WorkflowStatus)"
                                }
                              },
                              "id": 639,
                              "isConstant": false,
                              "isLValue": false,
                              "isPure": true,
                              "lValueRequested": false,
                              "memberLocation": "7441:17:3",
                              "memberName": "RegisteringVoters",
                              "nodeType": "MemberAccess",
                              "referencedDeclaration": 369,
                              "src": "7426:32:3",
                              "typeDescriptions": {
                                "typeIdentifier": "t_enum$_WorkflowStatus_$375",
                                "typeString": "enum Voting.WorkflowStatus"
                              }
                            }
                          ],
                          "expression": {
                            "argumentTypes": [
                              {
                                "typeIdentifier": "t_uint256",
                                "typeString": "uint256"
                              },
                              {
                                "typeIdentifier": "t_enum$_WorkflowStatus_$375",
                                "typeString": "enum Voting.WorkflowStatus"
                              },
                              {
                                "typeIdentifier": "t_enum$_WorkflowStatus_$375",
                                "typeString": "enum Voting.WorkflowStatus"
                              }
                            ],
                            "id": 634,
                            "name": "WorkflowStatusChange",
                            "nodeType": "Identifier",
                            "overloadedDeclarations": [],
                            "referencedDeclaration": 443,
                            "src": "7369:20:3",
                            "typeDescriptions": {
                              "typeIdentifier": "t_function_event_nonpayable$_t_uint256_$_t_enum$_WorkflowStatus_$375_$_t_enum$_WorkflowStatus_$375_$returns$__$",
                              "typeString": "function (uint256,enum Voting.WorkflowStatus,enum Voting.WorkflowStatus)"
                            }
                          },
                          "id": 640,
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": false,
                          "kind": "functionCall",
                          "lValueRequested": false,
                          "nameLocations": [],
                          "names": [],
                          "nodeType": "FunctionCall",
                          "src": "7369:90:3",
                          "tryCall": false,
                          "typeDescriptions": {
                            "typeIdentifier": "t_tuple$__$",
                            "typeString": "tuple()"
                          }
                        },
                        "id": 641,
                        "nodeType": "EmitStatement",
                        "src": "7364:95:3"
                      },
                      {
                        "expression": {
                          "id": 643,
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": false,
                          "lValueRequested": false,
                          "nodeType": "UnaryOperation",
                          "operator": "++",
                          "prefix": false,
                          "src": "7469:15:3",
                          "subExpression": {
                            "id": 642,
                            "name": "sessionsCount",
                            "nodeType": "Identifier",
                            "overloadedDeclarations": [],
                            "referencedDeclaration": 482,
                            "src": "7469:13:3",
                            "typeDescriptions": {
                              "typeIdentifier": "t_uint256",
                              "typeString": "uint256"
                            }
                          },
                          "typeDescriptions": {
                            "typeIdentifier": "t_uint256",
                            "typeString": "uint256"
                          }
                        },
                        "id": 644,
                        "nodeType": "ExpressionStatement",
                        "src": "7469:15:3"
                      }
                    ]
                  },
                  "documentation": {
                    "id": 611,
                    "nodeType": "StructuredDocumentation",
                    "src": "6949:159:3",
                    "text": " Administrator can create new voting session\n @param _name The session name \n @param _description The session description "
                  },
                  "functionSelector": "153bc95b",
                  "id": 646,
                  "implemented": true,
                  "kind": "function",
                  "modifiers": [
                    {
                      "id": 618,
                      "kind": "modifierInvocation",
                      "modifierName": {
                        "id": 617,
                        "name": "onlyOwner",
                        "nameLocations": ["7204:9:3"],
                        "nodeType": "IdentifierPath",
                        "referencedDeclaration": 31,
                        "src": "7204:9:3"
                      },
                      "nodeType": "ModifierInvocation",
                      "src": "7204:9:3"
                    }
                  ],
                  "name": "createVotingSession",
                  "nameLocation": "7122:19:3",
                  "nodeType": "FunctionDefinition",
                  "parameters": {
                    "id": 616,
                    "nodeType": "ParameterList",
                    "parameters": [
                      {
                        "constant": false,
                        "id": 613,
                        "mutability": "mutable",
                        "name": "_name",
                        "nameLocation": "7158:5:3",
                        "nodeType": "VariableDeclaration",
                        "scope": 646,
                        "src": "7142:21:3",
                        "stateVariable": false,
                        "storageLocation": "calldata",
                        "typeDescriptions": {
                          "typeIdentifier": "t_string_calldata_ptr",
                          "typeString": "string"
                        },
                        "typeName": {
                          "id": 612,
                          "name": "string",
                          "nodeType": "ElementaryTypeName",
                          "src": "7142:6:3",
                          "typeDescriptions": {
                            "typeIdentifier": "t_string_storage_ptr",
                            "typeString": "string"
                          }
                        },
                        "visibility": "internal"
                      },
                      {
                        "constant": false,
                        "id": 615,
                        "mutability": "mutable",
                        "name": "_description",
                        "nameLocation": "7181:12:3",
                        "nodeType": "VariableDeclaration",
                        "scope": 646,
                        "src": "7165:28:3",
                        "stateVariable": false,
                        "storageLocation": "calldata",
                        "typeDescriptions": {
                          "typeIdentifier": "t_string_calldata_ptr",
                          "typeString": "string"
                        },
                        "typeName": {
                          "id": 614,
                          "name": "string",
                          "nodeType": "ElementaryTypeName",
                          "src": "7165:6:3",
                          "typeDescriptions": {
                            "typeIdentifier": "t_string_storage_ptr",
                            "typeString": "string"
                          }
                        },
                        "visibility": "internal"
                      }
                    ],
                    "src": "7141:53:3"
                  },
                  "returnParameters": {
                    "id": 619,
                    "nodeType": "ParameterList",
                    "parameters": [],
                    "src": "7214:0:3"
                  },
                  "scope": 1321,
                  "src": "7113:378:3",
                  "stateMutability": "nonpayable",
                  "virtual": false,
                  "visibility": "external"
                },
                {
                  "body": {
                    "id": 706,
                    "nodeType": "Block",
                    "src": "7949:336:3",
                    "statements": [
                      {
                        "expression": {
                          "arguments": [
                            {
                              "commonType": {
                                "typeIdentifier": "t_address",
                                "typeString": "address"
                              },
                              "id": 665,
                              "isConstant": false,
                              "isLValue": false,
                              "isPure": false,
                              "lValueRequested": false,
                              "leftExpression": {
                                "id": 662,
                                "name": "_voter",
                                "nodeType": "Identifier",
                                "overloadedDeclarations": [],
                                "referencedDeclaration": 651,
                                "src": "7967:6:3",
                                "typeDescriptions": {
                                  "typeIdentifier": "t_address",
                                  "typeString": "address"
                                }
                              },
                              "nodeType": "BinaryOperation",
                              "operator": "!=",
                              "rightExpression": {
                                "arguments": [],
                                "expression": {
                                  "argumentTypes": [],
                                  "id": 663,
                                  "name": "owner",
                                  "nodeType": "Identifier",
                                  "overloadedDeclarations": [],
                                  "referencedDeclaration": 40,
                                  "src": "7977:5:3",
                                  "typeDescriptions": {
                                    "typeIdentifier": "t_function_internal_view$__$returns$_t_address_$",
                                    "typeString": "function () view returns (address)"
                                  }
                                },
                                "id": 664,
                                "isConstant": false,
                                "isLValue": false,
                                "isPure": false,
                                "kind": "functionCall",
                                "lValueRequested": false,
                                "nameLocations": [],
                                "names": [],
                                "nodeType": "FunctionCall",
                                "src": "7977:7:3",
                                "tryCall": false,
                                "typeDescriptions": {
                                  "typeIdentifier": "t_address",
                                  "typeString": "address"
                                }
                              },
                              "src": "7967:17:3",
                              "typeDescriptions": {
                                "typeIdentifier": "t_bool",
                                "typeString": "bool"
                              }
                            },
                            {
                              "hexValue": "4f776e65722063616e206e6f74206265206120766f746572",
                              "id": 666,
                              "isConstant": false,
                              "isLValue": false,
                              "isPure": true,
                              "kind": "string",
                              "lValueRequested": false,
                              "nodeType": "Literal",
                              "src": "7986:26:3",
                              "typeDescriptions": {
                                "typeIdentifier": "t_stringliteral_af5af23e3c6fc76fa379e0ec8f7f048042477a9c0a3e8410137eac64bbeeebe7",
                                "typeString": "literal_string \"Owner can not be a voter\""
                              },
                              "value": "Owner can not be a voter"
                            }
                          ],
                          "expression": {
                            "argumentTypes": [
                              {
                                "typeIdentifier": "t_bool",
                                "typeString": "bool"
                              },
                              {
                                "typeIdentifier": "t_stringliteral_af5af23e3c6fc76fa379e0ec8f7f048042477a9c0a3e8410137eac64bbeeebe7",
                                "typeString": "literal_string \"Owner can not be a voter\""
                              }
                            ],
                            "id": 661,
                            "name": "require",
                            "nodeType": "Identifier",
                            "overloadedDeclarations": [-18, -18],
                            "referencedDeclaration": -18,
                            "src": "7959:7:3",
                            "typeDescriptions": {
                              "typeIdentifier": "t_function_require_pure$_t_bool_$_t_string_memory_ptr_$returns$__$",
                              "typeString": "function (bool,string memory) pure"
                            }
                          },
                          "id": 667,
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": false,
                          "kind": "functionCall",
                          "lValueRequested": false,
                          "nameLocations": [],
                          "names": [],
                          "nodeType": "FunctionCall",
                          "src": "7959:54:3",
                          "tryCall": false,
                          "typeDescriptions": {
                            "typeIdentifier": "t_tuple$__$",
                            "typeString": "tuple()"
                          }
                        },
                        "id": 668,
                        "nodeType": "ExpressionStatement",
                        "src": "7959:54:3"
                      },
                      {
                        "expression": {
                          "arguments": [
                            {
                              "id": 677,
                              "isConstant": false,
                              "isLValue": false,
                              "isPure": false,
                              "lValueRequested": false,
                              "nodeType": "UnaryOperation",
                              "operator": "!",
                              "prefix": true,
                              "src": "8031:49:3",
                              "subExpression": {
                                "expression": {
                                  "baseExpression": {
                                    "expression": {
                                      "baseExpression": {
                                        "id": 670,
                                        "name": "sessions",
                                        "nodeType": "Identifier",
                                        "overloadedDeclarations": [],
                                        "referencedDeclaration": 480,
                                        "src": "8032:8:3",
                                        "typeDescriptions": {
                                          "typeIdentifier": "t_mapping$_t_uint256_$_t_struct$_Session_$418_storage_$",
                                          "typeString": "mapping(uint256 => struct Voting.Session storage ref)"
                                        }
                                      },
                                      "id": 672,
                                      "indexExpression": {
                                        "id": 671,
                                        "name": "_sessionId",
                                        "nodeType": "Identifier",
                                        "overloadedDeclarations": [],
                                        "referencedDeclaration": 649,
                                        "src": "8041:10:3",
                                        "typeDescriptions": {
                                          "typeIdentifier": "t_uint256",
                                          "typeString": "uint256"
                                        }
                                      },
                                      "isConstant": false,
                                      "isLValue": true,
                                      "isPure": false,
                                      "lValueRequested": false,
                                      "nodeType": "IndexAccess",
                                      "src": "8032:20:3",
                                      "typeDescriptions": {
                                        "typeIdentifier": "t_struct$_Session_$418_storage",
                                        "typeString": "struct Voting.Session storage ref"
                                      }
                                    },
                                    "id": 673,
                                    "isConstant": false,
                                    "isLValue": true,
                                    "isPure": false,
                                    "lValueRequested": false,
                                    "memberLocation": "8053:6:3",
                                    "memberName": "voters",
                                    "nodeType": "MemberAccess",
                                    "referencedDeclaration": 401,
                                    "src": "8032:27:3",
                                    "typeDescriptions": {
                                      "typeIdentifier": "t_mapping$_t_address_$_t_struct$_Voter_$384_storage_$",
                                      "typeString": "mapping(address => struct Voting.Voter storage ref)"
                                    }
                                  },
                                  "id": 675,
                                  "indexExpression": {
                                    "id": 674,
                                    "name": "_voter",
                                    "nodeType": "Identifier",
                                    "overloadedDeclarations": [],
                                    "referencedDeclaration": 651,
                                    "src": "8060:6:3",
                                    "typeDescriptions": {
                                      "typeIdentifier": "t_address",
                                      "typeString": "address"
                                    }
                                  },
                                  "isConstant": false,
                                  "isLValue": true,
                                  "isPure": false,
                                  "lValueRequested": false,
                                  "nodeType": "IndexAccess",
                                  "src": "8032:35:3",
                                  "typeDescriptions": {
                                    "typeIdentifier": "t_struct$_Voter_$384_storage",
                                    "typeString": "struct Voting.Voter storage ref"
                                  }
                                },
                                "id": 676,
                                "isConstant": false,
                                "isLValue": true,
                                "isPure": false,
                                "lValueRequested": false,
                                "memberLocation": "8068:12:3",
                                "memberName": "isRegistered",
                                "nodeType": "MemberAccess",
                                "referencedDeclaration": 377,
                                "src": "8032:48:3",
                                "typeDescriptions": {
                                  "typeIdentifier": "t_bool",
                                  "typeString": "bool"
                                }
                              },
                              "typeDescriptions": {
                                "typeIdentifier": "t_bool",
                                "typeString": "bool"
                              }
                            },
                            {
                              "hexValue": "566f74657220697320616c72656164792072656769737465726564",
                              "id": 678,
                              "isConstant": false,
                              "isLValue": false,
                              "isPure": true,
                              "kind": "string",
                              "lValueRequested": false,
                              "nodeType": "Literal",
                              "src": "8082:29:3",
                              "typeDescriptions": {
                                "typeIdentifier": "t_stringliteral_a82e95e5ee84cc506f04f82fd65efe3a0cb2fd2e22975dc3a1b4006058d94650",
                                "typeString": "literal_string \"Voter is already registered\""
                              },
                              "value": "Voter is already registered"
                            }
                          ],
                          "expression": {
                            "argumentTypes": [
                              {
                                "typeIdentifier": "t_bool",
                                "typeString": "bool"
                              },
                              {
                                "typeIdentifier": "t_stringliteral_a82e95e5ee84cc506f04f82fd65efe3a0cb2fd2e22975dc3a1b4006058d94650",
                                "typeString": "literal_string \"Voter is already registered\""
                              }
                            ],
                            "id": 669,
                            "name": "require",
                            "nodeType": "Identifier",
                            "overloadedDeclarations": [-18, -18],
                            "referencedDeclaration": -18,
                            "src": "8023:7:3",
                            "typeDescriptions": {
                              "typeIdentifier": "t_function_require_pure$_t_bool_$_t_string_memory_ptr_$returns$__$",
                              "typeString": "function (bool,string memory) pure"
                            }
                          },
                          "id": 679,
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": false,
                          "kind": "functionCall",
                          "lValueRequested": false,
                          "nameLocations": [],
                          "names": [],
                          "nodeType": "FunctionCall",
                          "src": "8023:89:3",
                          "tryCall": false,
                          "typeDescriptions": {
                            "typeIdentifier": "t_tuple$__$",
                            "typeString": "tuple()"
                          }
                        },
                        "id": 680,
                        "nodeType": "ExpressionStatement",
                        "src": "8023:89:3"
                      },
                      {
                        "expression": {
                          "id": 693,
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": false,
                          "lValueRequested": false,
                          "leftHandSide": {
                            "baseExpression": {
                              "expression": {
                                "baseExpression": {
                                  "id": 681,
                                  "name": "sessions",
                                  "nodeType": "Identifier",
                                  "overloadedDeclarations": [],
                                  "referencedDeclaration": 480,
                                  "src": "8122:8:3",
                                  "typeDescriptions": {
                                    "typeIdentifier": "t_mapping$_t_uint256_$_t_struct$_Session_$418_storage_$",
                                    "typeString": "mapping(uint256 => struct Voting.Session storage ref)"
                                  }
                                },
                                "id": 683,
                                "indexExpression": {
                                  "id": 682,
                                  "name": "_sessionId",
                                  "nodeType": "Identifier",
                                  "overloadedDeclarations": [],
                                  "referencedDeclaration": 649,
                                  "src": "8131:10:3",
                                  "typeDescriptions": {
                                    "typeIdentifier": "t_uint256",
                                    "typeString": "uint256"
                                  }
                                },
                                "isConstant": false,
                                "isLValue": true,
                                "isPure": false,
                                "lValueRequested": false,
                                "nodeType": "IndexAccess",
                                "src": "8122:20:3",
                                "typeDescriptions": {
                                  "typeIdentifier": "t_struct$_Session_$418_storage",
                                  "typeString": "struct Voting.Session storage ref"
                                }
                              },
                              "id": 684,
                              "isConstant": false,
                              "isLValue": true,
                              "isPure": false,
                              "lValueRequested": false,
                              "memberLocation": "8143:6:3",
                              "memberName": "voters",
                              "nodeType": "MemberAccess",
                              "referencedDeclaration": 401,
                              "src": "8122:27:3",
                              "typeDescriptions": {
                                "typeIdentifier": "t_mapping$_t_address_$_t_struct$_Voter_$384_storage_$",
                                "typeString": "mapping(address => struct Voting.Voter storage ref)"
                              }
                            },
                            "id": 686,
                            "indexExpression": {
                              "id": 685,
                              "name": "_voter",
                              "nodeType": "Identifier",
                              "overloadedDeclarations": [],
                              "referencedDeclaration": 651,
                              "src": "8150:6:3",
                              "typeDescriptions": {
                                "typeIdentifier": "t_address",
                                "typeString": "address"
                              }
                            },
                            "isConstant": false,
                            "isLValue": true,
                            "isPure": false,
                            "lValueRequested": true,
                            "nodeType": "IndexAccess",
                            "src": "8122:35:3",
                            "typeDescriptions": {
                              "typeIdentifier": "t_struct$_Voter_$384_storage",
                              "typeString": "struct Voting.Voter storage ref"
                            }
                          },
                          "nodeType": "Assignment",
                          "operator": "=",
                          "rightHandSide": {
                            "arguments": [
                              {
                                "hexValue": "74727565",
                                "id": 688,
                                "isConstant": false,
                                "isLValue": false,
                                "isPure": true,
                                "kind": "bool",
                                "lValueRequested": false,
                                "nodeType": "Literal",
                                "src": "8166:4:3",
                                "typeDescriptions": {
                                  "typeIdentifier": "t_bool",
                                  "typeString": "bool"
                                },
                                "value": "true"
                              },
                              {
                                "hexValue": "66616c7365",
                                "id": 689,
                                "isConstant": false,
                                "isLValue": false,
                                "isPure": true,
                                "kind": "bool",
                                "lValueRequested": false,
                                "nodeType": "Literal",
                                "src": "8172:5:3",
                                "typeDescriptions": {
                                  "typeIdentifier": "t_bool",
                                  "typeString": "bool"
                                },
                                "value": "false"
                              },
                              {
                                "hexValue": "30",
                                "id": 690,
                                "isConstant": false,
                                "isLValue": false,
                                "isPure": true,
                                "kind": "number",
                                "lValueRequested": false,
                                "nodeType": "Literal",
                                "src": "8179:1:3",
                                "typeDescriptions": {
                                  "typeIdentifier": "t_rational_0_by_1",
                                  "typeString": "int_const 0"
                                },
                                "value": "0"
                              },
                              {
                                "hexValue": "30",
                                "id": 691,
                                "isConstant": false,
                                "isLValue": false,
                                "isPure": true,
                                "kind": "number",
                                "lValueRequested": false,
                                "nodeType": "Literal",
                                "src": "8182:1:3",
                                "typeDescriptions": {
                                  "typeIdentifier": "t_rational_0_by_1",
                                  "typeString": "int_const 0"
                                },
                                "value": "0"
                              }
                            ],
                            "expression": {
                              "argumentTypes": [
                                {
                                  "typeIdentifier": "t_bool",
                                  "typeString": "bool"
                                },
                                {
                                  "typeIdentifier": "t_bool",
                                  "typeString": "bool"
                                },
                                {
                                  "typeIdentifier": "t_rational_0_by_1",
                                  "typeString": "int_const 0"
                                },
                                {
                                  "typeIdentifier": "t_rational_0_by_1",
                                  "typeString": "int_const 0"
                                }
                              ],
                              "id": 687,
                              "name": "Voter",
                              "nodeType": "Identifier",
                              "overloadedDeclarations": [],
                              "referencedDeclaration": 384,
                              "src": "8160:5:3",
                              "typeDescriptions": {
                                "typeIdentifier": "t_type$_t_struct$_Voter_$384_storage_ptr_$",
                                "typeString": "type(struct Voting.Voter storage pointer)"
                              }
                            },
                            "id": 692,
                            "isConstant": false,
                            "isLValue": false,
                            "isPure": true,
                            "kind": "structConstructorCall",
                            "lValueRequested": false,
                            "nameLocations": [],
                            "names": [],
                            "nodeType": "FunctionCall",
                            "src": "8160:24:3",
                            "tryCall": false,
                            "typeDescriptions": {
                              "typeIdentifier": "t_struct$_Voter_$384_memory_ptr",
                              "typeString": "struct Voting.Voter memory"
                            }
                          },
                          "src": "8122:62:3",
                          "typeDescriptions": {
                            "typeIdentifier": "t_struct$_Voter_$384_storage",
                            "typeString": "struct Voting.Voter storage ref"
                          }
                        },
                        "id": 694,
                        "nodeType": "ExpressionStatement",
                        "src": "8122:62:3"
                      },
                      {
                        "expression": {
                          "id": 699,
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": false,
                          "lValueRequested": false,
                          "nodeType": "UnaryOperation",
                          "operator": "++",
                          "prefix": false,
                          "src": "8194:34:3",
                          "subExpression": {
                            "expression": {
                              "baseExpression": {
                                "id": 695,
                                "name": "sessions",
                                "nodeType": "Identifier",
                                "overloadedDeclarations": [],
                                "referencedDeclaration": 480,
                                "src": "8194:8:3",
                                "typeDescriptions": {
                                  "typeIdentifier": "t_mapping$_t_uint256_$_t_struct$_Session_$418_storage_$",
                                  "typeString": "mapping(uint256 => struct Voting.Session storage ref)"
                                }
                              },
                              "id": 697,
                              "indexExpression": {
                                "id": 696,
                                "name": "_sessionId",
                                "nodeType": "Identifier",
                                "overloadedDeclarations": [],
                                "referencedDeclaration": 649,
                                "src": "8203:10:3",
                                "typeDescriptions": {
                                  "typeIdentifier": "t_uint256",
                                  "typeString": "uint256"
                                }
                              },
                              "isConstant": false,
                              "isLValue": true,
                              "isPure": false,
                              "lValueRequested": false,
                              "nodeType": "IndexAccess",
                              "src": "8194:20:3",
                              "typeDescriptions": {
                                "typeIdentifier": "t_struct$_Session_$418_storage",
                                "typeString": "struct Voting.Session storage ref"
                              }
                            },
                            "id": 698,
                            "isConstant": false,
                            "isLValue": true,
                            "isPure": false,
                            "lValueRequested": true,
                            "memberLocation": "8215:11:3",
                            "memberName": "votersCount",
                            "nodeType": "MemberAccess",
                            "referencedDeclaration": 404,
                            "src": "8194:32:3",
                            "typeDescriptions": {
                              "typeIdentifier": "t_uint256",
                              "typeString": "uint256"
                            }
                          },
                          "typeDescriptions": {
                            "typeIdentifier": "t_uint256",
                            "typeString": "uint256"
                          }
                        },
                        "id": 700,
                        "nodeType": "ExpressionStatement",
                        "src": "8194:34:3"
                      },
                      {
                        "eventCall": {
                          "arguments": [
                            {
                              "id": 702,
                              "name": "_sessionId",
                              "nodeType": "Identifier",
                              "overloadedDeclarations": [],
                              "referencedDeclaration": 649,
                              "src": "8259:10:3",
                              "typeDescriptions": {
                                "typeIdentifier": "t_uint256",
                                "typeString": "uint256"
                              }
                            },
                            {
                              "id": 703,
                              "name": "_voter",
                              "nodeType": "Identifier",
                              "overloadedDeclarations": [],
                              "referencedDeclaration": 651,
                              "src": "8271:6:3",
                              "typeDescriptions": {
                                "typeIdentifier": "t_address",
                                "typeString": "address"
                              }
                            }
                          ],
                          "expression": {
                            "argumentTypes": [
                              {
                                "typeIdentifier": "t_uint256",
                                "typeString": "uint256"
                              },
                              {
                                "typeIdentifier": "t_address",
                                "typeString": "address"
                              }
                            ],
                            "id": 701,
                            "name": "VoterRegistered",
                            "nodeType": "Identifier",
                            "overloadedDeclarations": [],
                            "referencedDeclaration": 433,
                            "src": "8243:15:3",
                            "typeDescriptions": {
                              "typeIdentifier": "t_function_event_nonpayable$_t_uint256_$_t_address_$returns$__$",
                              "typeString": "function (uint256,address)"
                            }
                          },
                          "id": 704,
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": false,
                          "kind": "functionCall",
                          "lValueRequested": false,
                          "nameLocations": [],
                          "names": [],
                          "nodeType": "FunctionCall",
                          "src": "8243:35:3",
                          "tryCall": false,
                          "typeDescriptions": {
                            "typeIdentifier": "t_tuple$__$",
                            "typeString": "tuple()"
                          }
                        },
                        "id": 705,
                        "nodeType": "EmitStatement",
                        "src": "8238:40:3"
                      }
                    ]
                  },
                  "documentation": {
                    "id": 647,
                    "nodeType": "StructuredDocumentation",
                    "src": "7497:317:3",
                    "text": " Administrator can register voters.\n \n @dev voters can be added only by contract owner when status is set to RegisteringVoters\n An event VoterRegistered is emitted\n \n @param _sessionId The session identifier \n @param _voter The address to add into voters registry"
                  },
                  "functionSelector": "94c790bb",
                  "id": 707,
                  "implemented": true,
                  "kind": "function",
                  "modifiers": [
                    {
                      "id": 654,
                      "kind": "modifierInvocation",
                      "modifierName": {
                        "id": 653,
                        "name": "onlyOwner",
                        "nameLocations": ["7884:9:3"],
                        "nodeType": "IdentifierPath",
                        "referencedDeclaration": 31,
                        "src": "7884:9:3"
                      },
                      "nodeType": "ModifierInvocation",
                      "src": "7884:9:3"
                    },
                    {
                      "arguments": [
                        {
                          "id": 656,
                          "name": "_sessionId",
                          "nodeType": "Identifier",
                          "overloadedDeclarations": [],
                          "referencedDeclaration": 649,
                          "src": "7903:10:3",
                          "typeDescriptions": {
                            "typeIdentifier": "t_uint256",
                            "typeString": "uint256"
                          }
                        },
                        {
                          "expression": {
                            "id": 657,
                            "name": "WorkflowStatus",
                            "nodeType": "Identifier",
                            "overloadedDeclarations": [],
                            "referencedDeclaration": 375,
                            "src": "7915:14:3",
                            "typeDescriptions": {
                              "typeIdentifier": "t_type$_t_enum$_WorkflowStatus_$375_$",
                              "typeString": "type(enum Voting.WorkflowStatus)"
                            }
                          },
                          "id": 658,
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": true,
                          "lValueRequested": false,
                          "memberLocation": "7930:17:3",
                          "memberName": "RegisteringVoters",
                          "nodeType": "MemberAccess",
                          "referencedDeclaration": 369,
                          "src": "7915:32:3",
                          "typeDescriptions": {
                            "typeIdentifier": "t_enum$_WorkflowStatus_$375",
                            "typeString": "enum Voting.WorkflowStatus"
                          }
                        }
                      ],
                      "id": 659,
                      "kind": "modifierInvocation",
                      "modifierName": {
                        "id": 655,
                        "name": "statusIs",
                        "nameLocations": ["7894:8:3"],
                        "nodeType": "IdentifierPath",
                        "referencedDeclaration": 524,
                        "src": "7894:8:3"
                      },
                      "nodeType": "ModifierInvocation",
                      "src": "7894:54:3"
                    }
                  ],
                  "name": "registerVoter",
                  "nameLocation": "7828:13:3",
                  "nodeType": "FunctionDefinition",
                  "parameters": {
                    "id": 652,
                    "nodeType": "ParameterList",
                    "parameters": [
                      {
                        "constant": false,
                        "id": 649,
                        "mutability": "mutable",
                        "name": "_sessionId",
                        "nameLocation": "7847:10:3",
                        "nodeType": "VariableDeclaration",
                        "scope": 707,
                        "src": "7842:15:3",
                        "stateVariable": false,
                        "storageLocation": "default",
                        "typeDescriptions": {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        },
                        "typeName": {
                          "id": 648,
                          "name": "uint",
                          "nodeType": "ElementaryTypeName",
                          "src": "7842:4:3",
                          "typeDescriptions": {
                            "typeIdentifier": "t_uint256",
                            "typeString": "uint256"
                          }
                        },
                        "visibility": "internal"
                      },
                      {
                        "constant": false,
                        "id": 651,
                        "mutability": "mutable",
                        "name": "_voter",
                        "nameLocation": "7867:6:3",
                        "nodeType": "VariableDeclaration",
                        "scope": 707,
                        "src": "7859:14:3",
                        "stateVariable": false,
                        "storageLocation": "default",
                        "typeDescriptions": {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        },
                        "typeName": {
                          "id": 650,
                          "name": "address",
                          "nodeType": "ElementaryTypeName",
                          "src": "7859:7:3",
                          "stateMutability": "nonpayable",
                          "typeDescriptions": {
                            "typeIdentifier": "t_address",
                            "typeString": "address"
                          }
                        },
                        "visibility": "internal"
                      }
                    ],
                    "src": "7841:33:3"
                  },
                  "returnParameters": {
                    "id": 660,
                    "nodeType": "ParameterList",
                    "parameters": [],
                    "src": "7949:0:3"
                  },
                  "scope": 1321,
                  "src": "7819:466:3",
                  "stateMutability": "nonpayable",
                  "virtual": false,
                  "visibility": "external"
                },
                {
                  "body": {
                    "id": 746,
                    "nodeType": "Block",
                    "src": "8928:317:3",
                    "statements": [
                      {
                        "expression": {
                          "arguments": [
                            {
                              "id": 721,
                              "name": "_sessionId",
                              "nodeType": "Identifier",
                              "overloadedDeclarations": [],
                              "referencedDeclaration": 710,
                              "src": "8956:10:3",
                              "typeDescriptions": {
                                "typeIdentifier": "t_uint256",
                                "typeString": "uint256"
                              }
                            },
                            {
                              "hexValue": "41627374656e74696f6e",
                              "id": 722,
                              "isConstant": false,
                              "isLValue": false,
                              "isPure": true,
                              "kind": "string",
                              "lValueRequested": false,
                              "nodeType": "Literal",
                              "src": "8968:12:3",
                              "typeDescriptions": {
                                "typeIdentifier": "t_stringliteral_6aac95b8819a8c1c3ca139b47bfef5caefe05a9292d05f841096571adf447b0b",
                                "typeString": "literal_string \"Abstention\""
                              },
                              "value": "Abstention"
                            }
                          ],
                          "expression": {
                            "argumentTypes": [
                              {
                                "typeIdentifier": "t_uint256",
                                "typeString": "uint256"
                              },
                              {
                                "typeIdentifier": "t_stringliteral_6aac95b8819a8c1c3ca139b47bfef5caefe05a9292d05f841096571adf447b0b",
                                "typeString": "literal_string \"Abstention\""
                              }
                            ],
                            "id": 720,
                            "name": "_registerProposal",
                            "nodeType": "Identifier",
                            "overloadedDeclarations": [],
                            "referencedDeclaration": 1320,
                            "src": "8938:17:3",
                            "typeDescriptions": {
                              "typeIdentifier": "t_function_internal_nonpayable$_t_uint256_$_t_string_memory_ptr_$returns$__$",
                              "typeString": "function (uint256,string memory)"
                            }
                          },
                          "id": 723,
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": false,
                          "kind": "functionCall",
                          "lValueRequested": false,
                          "nameLocations": [],
                          "names": [],
                          "nodeType": "FunctionCall",
                          "src": "8938:43:3",
                          "tryCall": false,
                          "typeDescriptions": {
                            "typeIdentifier": "t_tuple$__$",
                            "typeString": "tuple()"
                          }
                        },
                        "id": 724,
                        "nodeType": "ExpressionStatement",
                        "src": "8938:43:3"
                      },
                      {
                        "expression": {
                          "arguments": [
                            {
                              "id": 726,
                              "name": "_sessionId",
                              "nodeType": "Identifier",
                              "overloadedDeclarations": [],
                              "referencedDeclaration": 710,
                              "src": "9009:10:3",
                              "typeDescriptions": {
                                "typeIdentifier": "t_uint256",
                                "typeString": "uint256"
                              }
                            },
                            {
                              "hexValue": "426c616e6b",
                              "id": 727,
                              "isConstant": false,
                              "isLValue": false,
                              "isPure": true,
                              "kind": "string",
                              "lValueRequested": false,
                              "nodeType": "Literal",
                              "src": "9021:7:3",
                              "typeDescriptions": {
                                "typeIdentifier": "t_stringliteral_39ba7bfdb7dbec53aaf8559c1966c71a135fa881fcc182f2dd523a37d771b05c",
                                "typeString": "literal_string \"Blank\""
                              },
                              "value": "Blank"
                            }
                          ],
                          "expression": {
                            "argumentTypes": [
                              {
                                "typeIdentifier": "t_uint256",
                                "typeString": "uint256"
                              },
                              {
                                "typeIdentifier": "t_stringliteral_39ba7bfdb7dbec53aaf8559c1966c71a135fa881fcc182f2dd523a37d771b05c",
                                "typeString": "literal_string \"Blank\""
                              }
                            ],
                            "id": 725,
                            "name": "_registerProposal",
                            "nodeType": "Identifier",
                            "overloadedDeclarations": [],
                            "referencedDeclaration": 1320,
                            "src": "8991:17:3",
                            "typeDescriptions": {
                              "typeIdentifier": "t_function_internal_nonpayable$_t_uint256_$_t_string_memory_ptr_$returns$__$",
                              "typeString": "function (uint256,string memory)"
                            }
                          },
                          "id": 728,
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": false,
                          "kind": "functionCall",
                          "lValueRequested": false,
                          "nameLocations": [],
                          "names": [],
                          "nodeType": "FunctionCall",
                          "src": "8991:38:3",
                          "tryCall": false,
                          "typeDescriptions": {
                            "typeIdentifier": "t_tuple$__$",
                            "typeString": "tuple()"
                          }
                        },
                        "id": 729,
                        "nodeType": "ExpressionStatement",
                        "src": "8991:38:3"
                      },
                      {
                        "expression": {
                          "id": 736,
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": false,
                          "lValueRequested": false,
                          "leftHandSide": {
                            "expression": {
                              "baseExpression": {
                                "id": 730,
                                "name": "sessions",
                                "nodeType": "Identifier",
                                "overloadedDeclarations": [],
                                "referencedDeclaration": 480,
                                "src": "9039:8:3",
                                "typeDescriptions": {
                                  "typeIdentifier": "t_mapping$_t_uint256_$_t_struct$_Session_$418_storage_$",
                                  "typeString": "mapping(uint256 => struct Voting.Session storage ref)"
                                }
                              },
                              "id": 732,
                              "indexExpression": {
                                "id": 731,
                                "name": "_sessionId",
                                "nodeType": "Identifier",
                                "overloadedDeclarations": [],
                                "referencedDeclaration": 710,
                                "src": "9048:10:3",
                                "typeDescriptions": {
                                  "typeIdentifier": "t_uint256",
                                  "typeString": "uint256"
                                }
                              },
                              "isConstant": false,
                              "isLValue": true,
                              "isPure": false,
                              "lValueRequested": false,
                              "nodeType": "IndexAccess",
                              "src": "9039:20:3",
                              "typeDescriptions": {
                                "typeIdentifier": "t_struct$_Session_$418_storage",
                                "typeString": "struct Voting.Session storage ref"
                              }
                            },
                            "id": 733,
                            "isConstant": false,
                            "isLValue": true,
                            "isPure": false,
                            "lValueRequested": true,
                            "memberLocation": "9060:6:3",
                            "memberName": "status",
                            "nodeType": "MemberAccess",
                            "referencedDeclaration": 395,
                            "src": "9039:27:3",
                            "typeDescriptions": {
                              "typeIdentifier": "t_enum$_WorkflowStatus_$375",
                              "typeString": "enum Voting.WorkflowStatus"
                            }
                          },
                          "nodeType": "Assignment",
                          "operator": "=",
                          "rightHandSide": {
                            "expression": {
                              "id": 734,
                              "name": "WorkflowStatus",
                              "nodeType": "Identifier",
                              "overloadedDeclarations": [],
                              "referencedDeclaration": 375,
                              "src": "9069:14:3",
                              "typeDescriptions": {
                                "typeIdentifier": "t_type$_t_enum$_WorkflowStatus_$375_$",
                                "typeString": "type(enum Voting.WorkflowStatus)"
                              }
                            },
                            "id": 735,
                            "isConstant": false,
                            "isLValue": false,
                            "isPure": true,
                            "lValueRequested": false,
                            "memberLocation": "9084:28:3",
                            "memberName": "ProposalsRegistrationStarted",
                            "nodeType": "MemberAccess",
                            "referencedDeclaration": 370,
                            "src": "9069:43:3",
                            "typeDescriptions": {
                              "typeIdentifier": "t_enum$_WorkflowStatus_$375",
                              "typeString": "enum Voting.WorkflowStatus"
                            }
                          },
                          "src": "9039:73:3",
                          "typeDescriptions": {
                            "typeIdentifier": "t_enum$_WorkflowStatus_$375",
                            "typeString": "enum Voting.WorkflowStatus"
                          }
                        },
                        "id": 737,
                        "nodeType": "ExpressionStatement",
                        "src": "9039:73:3"
                      },
                      {
                        "eventCall": {
                          "arguments": [
                            {
                              "id": 739,
                              "name": "_sessionId",
                              "nodeType": "Identifier",
                              "overloadedDeclarations": [],
                              "referencedDeclaration": 710,
                              "src": "9148:10:3",
                              "typeDescriptions": {
                                "typeIdentifier": "t_uint256",
                                "typeString": "uint256"
                              }
                            },
                            {
                              "expression": {
                                "id": 740,
                                "name": "WorkflowStatus",
                                "nodeType": "Identifier",
                                "overloadedDeclarations": [],
                                "referencedDeclaration": 375,
                                "src": "9160:14:3",
                                "typeDescriptions": {
                                  "typeIdentifier": "t_type$_t_enum$_WorkflowStatus_$375_$",
                                  "typeString": "type(enum Voting.WorkflowStatus)"
                                }
                              },
                              "id": 741,
                              "isConstant": false,
                              "isLValue": false,
                              "isPure": true,
                              "lValueRequested": false,
                              "memberLocation": "9175:17:3",
                              "memberName": "RegisteringVoters",
                              "nodeType": "MemberAccess",
                              "referencedDeclaration": 369,
                              "src": "9160:32:3",
                              "typeDescriptions": {
                                "typeIdentifier": "t_enum$_WorkflowStatus_$375",
                                "typeString": "enum Voting.WorkflowStatus"
                              }
                            },
                            {
                              "expression": {
                                "id": 742,
                                "name": "WorkflowStatus",
                                "nodeType": "Identifier",
                                "overloadedDeclarations": [],
                                "referencedDeclaration": 375,
                                "src": "9194:14:3",
                                "typeDescriptions": {
                                  "typeIdentifier": "t_type$_t_enum$_WorkflowStatus_$375_$",
                                  "typeString": "type(enum Voting.WorkflowStatus)"
                                }
                              },
                              "id": 743,
                              "isConstant": false,
                              "isLValue": false,
                              "isPure": true,
                              "lValueRequested": false,
                              "memberLocation": "9209:28:3",
                              "memberName": "ProposalsRegistrationStarted",
                              "nodeType": "MemberAccess",
                              "referencedDeclaration": 370,
                              "src": "9194:43:3",
                              "typeDescriptions": {
                                "typeIdentifier": "t_enum$_WorkflowStatus_$375",
                                "typeString": "enum Voting.WorkflowStatus"
                              }
                            }
                          ],
                          "expression": {
                            "argumentTypes": [
                              {
                                "typeIdentifier": "t_uint256",
                                "typeString": "uint256"
                              },
                              {
                                "typeIdentifier": "t_enum$_WorkflowStatus_$375",
                                "typeString": "enum Voting.WorkflowStatus"
                              },
                              {
                                "typeIdentifier": "t_enum$_WorkflowStatus_$375",
                                "typeString": "enum Voting.WorkflowStatus"
                              }
                            ],
                            "id": 738,
                            "name": "WorkflowStatusChange",
                            "nodeType": "Identifier",
                            "overloadedDeclarations": [],
                            "referencedDeclaration": 443,
                            "src": "9127:20:3",
                            "typeDescriptions": {
                              "typeIdentifier": "t_function_event_nonpayable$_t_uint256_$_t_enum$_WorkflowStatus_$375_$_t_enum$_WorkflowStatus_$375_$returns$__$",
                              "typeString": "function (uint256,enum Voting.WorkflowStatus,enum Voting.WorkflowStatus)"
                            }
                          },
                          "id": 744,
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": false,
                          "kind": "functionCall",
                          "lValueRequested": false,
                          "nameLocations": [],
                          "names": [],
                          "nodeType": "FunctionCall",
                          "src": "9127:111:3",
                          "tryCall": false,
                          "typeDescriptions": {
                            "typeIdentifier": "t_tuple$__$",
                            "typeString": "tuple()"
                          }
                        },
                        "id": 745,
                        "nodeType": "EmitStatement",
                        "src": "9122:116:3"
                      }
                    ]
                  },
                  "documentation": {
                    "id": 708,
                    "nodeType": "StructuredDocumentation",
                    "src": "8291:505:3",
                    "text": " Administrator can close voters registration and open proposals registration.\n \n @dev Can be called only when status is set to RegisteringVoters.\n Two default proposals are registered at the beginning of this step: `Abstention` and `Blank`.\n That means a registered voter that forget to vote will be counted as `abstention` thanks to `proposals` array index 0\n An event WorkflowStatusChange is emitted\n @param _sessionId The session identifier "
                  },
                  "functionSelector": "8bc6a6dd",
                  "id": 747,
                  "implemented": true,
                  "kind": "function",
                  "modifiers": [
                    {
                      "id": 713,
                      "kind": "modifierInvocation",
                      "modifierName": {
                        "id": 712,
                        "name": "onlyOwner",
                        "nameLocations": ["8863:9:3"],
                        "nodeType": "IdentifierPath",
                        "referencedDeclaration": 31,
                        "src": "8863:9:3"
                      },
                      "nodeType": "ModifierInvocation",
                      "src": "8863:9:3"
                    },
                    {
                      "arguments": [
                        {
                          "id": 715,
                          "name": "_sessionId",
                          "nodeType": "Identifier",
                          "overloadedDeclarations": [],
                          "referencedDeclaration": 710,
                          "src": "8882:10:3",
                          "typeDescriptions": {
                            "typeIdentifier": "t_uint256",
                            "typeString": "uint256"
                          }
                        },
                        {
                          "expression": {
                            "id": 716,
                            "name": "WorkflowStatus",
                            "nodeType": "Identifier",
                            "overloadedDeclarations": [],
                            "referencedDeclaration": 375,
                            "src": "8894:14:3",
                            "typeDescriptions": {
                              "typeIdentifier": "t_type$_t_enum$_WorkflowStatus_$375_$",
                              "typeString": "type(enum Voting.WorkflowStatus)"
                            }
                          },
                          "id": 717,
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": true,
                          "lValueRequested": false,
                          "memberLocation": "8909:17:3",
                          "memberName": "RegisteringVoters",
                          "nodeType": "MemberAccess",
                          "referencedDeclaration": 369,
                          "src": "8894:32:3",
                          "typeDescriptions": {
                            "typeIdentifier": "t_enum$_WorkflowStatus_$375",
                            "typeString": "enum Voting.WorkflowStatus"
                          }
                        }
                      ],
                      "id": 718,
                      "kind": "modifierInvocation",
                      "modifierName": {
                        "id": 714,
                        "name": "statusIs",
                        "nameLocations": ["8873:8:3"],
                        "nodeType": "IdentifierPath",
                        "referencedDeclaration": 524,
                        "src": "8873:8:3"
                      },
                      "nodeType": "ModifierInvocation",
                      "src": "8873:54:3"
                    }
                  ],
                  "name": "startProposalsRegistration",
                  "nameLocation": "8810:26:3",
                  "nodeType": "FunctionDefinition",
                  "parameters": {
                    "id": 711,
                    "nodeType": "ParameterList",
                    "parameters": [
                      {
                        "constant": false,
                        "id": 710,
                        "mutability": "mutable",
                        "name": "_sessionId",
                        "nameLocation": "8842:10:3",
                        "nodeType": "VariableDeclaration",
                        "scope": 747,
                        "src": "8837:15:3",
                        "stateVariable": false,
                        "storageLocation": "default",
                        "typeDescriptions": {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        },
                        "typeName": {
                          "id": 709,
                          "name": "uint",
                          "nodeType": "ElementaryTypeName",
                          "src": "8837:4:3",
                          "typeDescriptions": {
                            "typeIdentifier": "t_uint256",
                            "typeString": "uint256"
                          }
                        },
                        "visibility": "internal"
                      }
                    ],
                    "src": "8836:17:3"
                  },
                  "returnParameters": {
                    "id": 719,
                    "nodeType": "ParameterList",
                    "parameters": [],
                    "src": "8928:0:3"
                  },
                  "scope": 1321,
                  "src": "8801:444:3",
                  "stateMutability": "nonpayable",
                  "virtual": false,
                  "visibility": "external"
                },
                {
                  "body": {
                    "id": 776,
                    "nodeType": "Block",
                    "src": "9654:223:3",
                    "statements": [
                      {
                        "expression": {
                          "id": 766,
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": false,
                          "lValueRequested": false,
                          "leftHandSide": {
                            "expression": {
                              "baseExpression": {
                                "id": 760,
                                "name": "sessions",
                                "nodeType": "Identifier",
                                "overloadedDeclarations": [],
                                "referencedDeclaration": 480,
                                "src": "9664:8:3",
                                "typeDescriptions": {
                                  "typeIdentifier": "t_mapping$_t_uint256_$_t_struct$_Session_$418_storage_$",
                                  "typeString": "mapping(uint256 => struct Voting.Session storage ref)"
                                }
                              },
                              "id": 762,
                              "indexExpression": {
                                "id": 761,
                                "name": "_sessionId",
                                "nodeType": "Identifier",
                                "overloadedDeclarations": [],
                                "referencedDeclaration": 750,
                                "src": "9673:10:3",
                                "typeDescriptions": {
                                  "typeIdentifier": "t_uint256",
                                  "typeString": "uint256"
                                }
                              },
                              "isConstant": false,
                              "isLValue": true,
                              "isPure": false,
                              "lValueRequested": false,
                              "nodeType": "IndexAccess",
                              "src": "9664:20:3",
                              "typeDescriptions": {
                                "typeIdentifier": "t_struct$_Session_$418_storage",
                                "typeString": "struct Voting.Session storage ref"
                              }
                            },
                            "id": 763,
                            "isConstant": false,
                            "isLValue": true,
                            "isPure": false,
                            "lValueRequested": true,
                            "memberLocation": "9685:6:3",
                            "memberName": "status",
                            "nodeType": "MemberAccess",
                            "referencedDeclaration": 395,
                            "src": "9664:27:3",
                            "typeDescriptions": {
                              "typeIdentifier": "t_enum$_WorkflowStatus_$375",
                              "typeString": "enum Voting.WorkflowStatus"
                            }
                          },
                          "nodeType": "Assignment",
                          "operator": "=",
                          "rightHandSide": {
                            "expression": {
                              "id": 764,
                              "name": "WorkflowStatus",
                              "nodeType": "Identifier",
                              "overloadedDeclarations": [],
                              "referencedDeclaration": 375,
                              "src": "9694:14:3",
                              "typeDescriptions": {
                                "typeIdentifier": "t_type$_t_enum$_WorkflowStatus_$375_$",
                                "typeString": "type(enum Voting.WorkflowStatus)"
                              }
                            },
                            "id": 765,
                            "isConstant": false,
                            "isLValue": false,
                            "isPure": true,
                            "lValueRequested": false,
                            "memberLocation": "9709:26:3",
                            "memberName": "ProposalsRegistrationEnded",
                            "nodeType": "MemberAccess",
                            "referencedDeclaration": 371,
                            "src": "9694:41:3",
                            "typeDescriptions": {
                              "typeIdentifier": "t_enum$_WorkflowStatus_$375",
                              "typeString": "enum Voting.WorkflowStatus"
                            }
                          },
                          "src": "9664:71:3",
                          "typeDescriptions": {
                            "typeIdentifier": "t_enum$_WorkflowStatus_$375",
                            "typeString": "enum Voting.WorkflowStatus"
                          }
                        },
                        "id": 767,
                        "nodeType": "ExpressionStatement",
                        "src": "9664:71:3"
                      },
                      {
                        "eventCall": {
                          "arguments": [
                            {
                              "id": 769,
                              "name": "_sessionId",
                              "nodeType": "Identifier",
                              "overloadedDeclarations": [],
                              "referencedDeclaration": 750,
                              "src": "9771:10:3",
                              "typeDescriptions": {
                                "typeIdentifier": "t_uint256",
                                "typeString": "uint256"
                              }
                            },
                            {
                              "expression": {
                                "id": 770,
                                "name": "WorkflowStatus",
                                "nodeType": "Identifier",
                                "overloadedDeclarations": [],
                                "referencedDeclaration": 375,
                                "src": "9783:14:3",
                                "typeDescriptions": {
                                  "typeIdentifier": "t_type$_t_enum$_WorkflowStatus_$375_$",
                                  "typeString": "type(enum Voting.WorkflowStatus)"
                                }
                              },
                              "id": 771,
                              "isConstant": false,
                              "isLValue": false,
                              "isPure": true,
                              "lValueRequested": false,
                              "memberLocation": "9798:28:3",
                              "memberName": "ProposalsRegistrationStarted",
                              "nodeType": "MemberAccess",
                              "referencedDeclaration": 370,
                              "src": "9783:43:3",
                              "typeDescriptions": {
                                "typeIdentifier": "t_enum$_WorkflowStatus_$375",
                                "typeString": "enum Voting.WorkflowStatus"
                              }
                            },
                            {
                              "expression": {
                                "id": 772,
                                "name": "WorkflowStatus",
                                "nodeType": "Identifier",
                                "overloadedDeclarations": [],
                                "referencedDeclaration": 375,
                                "src": "9828:14:3",
                                "typeDescriptions": {
                                  "typeIdentifier": "t_type$_t_enum$_WorkflowStatus_$375_$",
                                  "typeString": "type(enum Voting.WorkflowStatus)"
                                }
                              },
                              "id": 773,
                              "isConstant": false,
                              "isLValue": false,
                              "isPure": true,
                              "lValueRequested": false,
                              "memberLocation": "9843:26:3",
                              "memberName": "ProposalsRegistrationEnded",
                              "nodeType": "MemberAccess",
                              "referencedDeclaration": 371,
                              "src": "9828:41:3",
                              "typeDescriptions": {
                                "typeIdentifier": "t_enum$_WorkflowStatus_$375",
                                "typeString": "enum Voting.WorkflowStatus"
                              }
                            }
                          ],
                          "expression": {
                            "argumentTypes": [
                              {
                                "typeIdentifier": "t_uint256",
                                "typeString": "uint256"
                              },
                              {
                                "typeIdentifier": "t_enum$_WorkflowStatus_$375",
                                "typeString": "enum Voting.WorkflowStatus"
                              },
                              {
                                "typeIdentifier": "t_enum$_WorkflowStatus_$375",
                                "typeString": "enum Voting.WorkflowStatus"
                              }
                            ],
                            "id": 768,
                            "name": "WorkflowStatusChange",
                            "nodeType": "Identifier",
                            "overloadedDeclarations": [],
                            "referencedDeclaration": 443,
                            "src": "9750:20:3",
                            "typeDescriptions": {
                              "typeIdentifier": "t_function_event_nonpayable$_t_uint256_$_t_enum$_WorkflowStatus_$375_$_t_enum$_WorkflowStatus_$375_$returns$__$",
                              "typeString": "function (uint256,enum Voting.WorkflowStatus,enum Voting.WorkflowStatus)"
                            }
                          },
                          "id": 774,
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": false,
                          "kind": "functionCall",
                          "lValueRequested": false,
                          "nameLocations": [],
                          "names": [],
                          "nodeType": "FunctionCall",
                          "src": "9750:120:3",
                          "tryCall": false,
                          "typeDescriptions": {
                            "typeIdentifier": "t_tuple$__$",
                            "typeString": "tuple()"
                          }
                        },
                        "id": 775,
                        "nodeType": "EmitStatement",
                        "src": "9745:125:3"
                      }
                    ]
                  },
                  "documentation": {
                    "id": 748,
                    "nodeType": "StructuredDocumentation",
                    "src": "9251:261:3",
                    "text": " Administrator can close proposals registration.\n \n @dev Can be called only when status is set to ProposalsRegistrationStarted.\n An event WorkflowStatusChange is emitted\n @param _sessionId The session identifier "
                  },
                  "functionSelector": "c82de38f",
                  "id": 777,
                  "implemented": true,
                  "kind": "function",
                  "modifiers": [
                    {
                      "id": 753,
                      "kind": "modifierInvocation",
                      "modifierName": {
                        "id": 752,
                        "name": "onlyOwner",
                        "nameLocations": ["9578:9:3"],
                        "nodeType": "IdentifierPath",
                        "referencedDeclaration": 31,
                        "src": "9578:9:3"
                      },
                      "nodeType": "ModifierInvocation",
                      "src": "9578:9:3"
                    },
                    {
                      "arguments": [
                        {
                          "id": 755,
                          "name": "_sessionId",
                          "nodeType": "Identifier",
                          "overloadedDeclarations": [],
                          "referencedDeclaration": 750,
                          "src": "9597:10:3",
                          "typeDescriptions": {
                            "typeIdentifier": "t_uint256",
                            "typeString": "uint256"
                          }
                        },
                        {
                          "expression": {
                            "id": 756,
                            "name": "WorkflowStatus",
                            "nodeType": "Identifier",
                            "overloadedDeclarations": [],
                            "referencedDeclaration": 375,
                            "src": "9609:14:3",
                            "typeDescriptions": {
                              "typeIdentifier": "t_type$_t_enum$_WorkflowStatus_$375_$",
                              "typeString": "type(enum Voting.WorkflowStatus)"
                            }
                          },
                          "id": 757,
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": true,
                          "lValueRequested": false,
                          "memberLocation": "9624:28:3",
                          "memberName": "ProposalsRegistrationStarted",
                          "nodeType": "MemberAccess",
                          "referencedDeclaration": 370,
                          "src": "9609:43:3",
                          "typeDescriptions": {
                            "typeIdentifier": "t_enum$_WorkflowStatus_$375",
                            "typeString": "enum Voting.WorkflowStatus"
                          }
                        }
                      ],
                      "id": 758,
                      "kind": "modifierInvocation",
                      "modifierName": {
                        "id": 754,
                        "name": "statusIs",
                        "nameLocations": ["9588:8:3"],
                        "nodeType": "IdentifierPath",
                        "referencedDeclaration": 524,
                        "src": "9588:8:3"
                      },
                      "nodeType": "ModifierInvocation",
                      "src": "9588:65:3"
                    }
                  ],
                  "name": "stopProposalsRegistration",
                  "nameLocation": "9526:25:3",
                  "nodeType": "FunctionDefinition",
                  "parameters": {
                    "id": 751,
                    "nodeType": "ParameterList",
                    "parameters": [
                      {
                        "constant": false,
                        "id": 750,
                        "mutability": "mutable",
                        "name": "_sessionId",
                        "nameLocation": "9557:10:3",
                        "nodeType": "VariableDeclaration",
                        "scope": 777,
                        "src": "9552:15:3",
                        "stateVariable": false,
                        "storageLocation": "default",
                        "typeDescriptions": {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        },
                        "typeName": {
                          "id": 749,
                          "name": "uint",
                          "nodeType": "ElementaryTypeName",
                          "src": "9552:4:3",
                          "typeDescriptions": {
                            "typeIdentifier": "t_uint256",
                            "typeString": "uint256"
                          }
                        },
                        "visibility": "internal"
                      }
                    ],
                    "src": "9551:17:3"
                  },
                  "returnParameters": {
                    "id": 759,
                    "nodeType": "ParameterList",
                    "parameters": [],
                    "src": "9654:0:3"
                  },
                  "scope": 1321,
                  "src": "9517:360:3",
                  "stateMutability": "nonpayable",
                  "virtual": false,
                  "visibility": "external"
                },
                {
                  "body": {
                    "id": 806,
                    "nodeType": "Block",
                    "src": "10266:209:3",
                    "statements": [
                      {
                        "expression": {
                          "id": 796,
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": false,
                          "lValueRequested": false,
                          "leftHandSide": {
                            "expression": {
                              "baseExpression": {
                                "id": 790,
                                "name": "sessions",
                                "nodeType": "Identifier",
                                "overloadedDeclarations": [],
                                "referencedDeclaration": 480,
                                "src": "10276:8:3",
                                "typeDescriptions": {
                                  "typeIdentifier": "t_mapping$_t_uint256_$_t_struct$_Session_$418_storage_$",
                                  "typeString": "mapping(uint256 => struct Voting.Session storage ref)"
                                }
                              },
                              "id": 792,
                              "indexExpression": {
                                "id": 791,
                                "name": "_sessionId",
                                "nodeType": "Identifier",
                                "overloadedDeclarations": [],
                                "referencedDeclaration": 780,
                                "src": "10285:10:3",
                                "typeDescriptions": {
                                  "typeIdentifier": "t_uint256",
                                  "typeString": "uint256"
                                }
                              },
                              "isConstant": false,
                              "isLValue": true,
                              "isPure": false,
                              "lValueRequested": false,
                              "nodeType": "IndexAccess",
                              "src": "10276:20:3",
                              "typeDescriptions": {
                                "typeIdentifier": "t_struct$_Session_$418_storage",
                                "typeString": "struct Voting.Session storage ref"
                              }
                            },
                            "id": 793,
                            "isConstant": false,
                            "isLValue": true,
                            "isPure": false,
                            "lValueRequested": true,
                            "memberLocation": "10297:6:3",
                            "memberName": "status",
                            "nodeType": "MemberAccess",
                            "referencedDeclaration": 395,
                            "src": "10276:27:3",
                            "typeDescriptions": {
                              "typeIdentifier": "t_enum$_WorkflowStatus_$375",
                              "typeString": "enum Voting.WorkflowStatus"
                            }
                          },
                          "nodeType": "Assignment",
                          "operator": "=",
                          "rightHandSide": {
                            "expression": {
                              "id": 794,
                              "name": "WorkflowStatus",
                              "nodeType": "Identifier",
                              "overloadedDeclarations": [],
                              "referencedDeclaration": 375,
                              "src": "10306:14:3",
                              "typeDescriptions": {
                                "typeIdentifier": "t_type$_t_enum$_WorkflowStatus_$375_$",
                                "typeString": "type(enum Voting.WorkflowStatus)"
                              }
                            },
                            "id": 795,
                            "isConstant": false,
                            "isLValue": false,
                            "isPure": true,
                            "lValueRequested": false,
                            "memberLocation": "10321:20:3",
                            "memberName": "VotingSessionStarted",
                            "nodeType": "MemberAccess",
                            "referencedDeclaration": 372,
                            "src": "10306:35:3",
                            "typeDescriptions": {
                              "typeIdentifier": "t_enum$_WorkflowStatus_$375",
                              "typeString": "enum Voting.WorkflowStatus"
                            }
                          },
                          "src": "10276:65:3",
                          "typeDescriptions": {
                            "typeIdentifier": "t_enum$_WorkflowStatus_$375",
                            "typeString": "enum Voting.WorkflowStatus"
                          }
                        },
                        "id": 797,
                        "nodeType": "ExpressionStatement",
                        "src": "10276:65:3"
                      },
                      {
                        "eventCall": {
                          "arguments": [
                            {
                              "id": 799,
                              "name": "_sessionId",
                              "nodeType": "Identifier",
                              "overloadedDeclarations": [],
                              "referencedDeclaration": 780,
                              "src": "10377:10:3",
                              "typeDescriptions": {
                                "typeIdentifier": "t_uint256",
                                "typeString": "uint256"
                              }
                            },
                            {
                              "expression": {
                                "id": 800,
                                "name": "WorkflowStatus",
                                "nodeType": "Identifier",
                                "overloadedDeclarations": [],
                                "referencedDeclaration": 375,
                                "src": "10389:14:3",
                                "typeDescriptions": {
                                  "typeIdentifier": "t_type$_t_enum$_WorkflowStatus_$375_$",
                                  "typeString": "type(enum Voting.WorkflowStatus)"
                                }
                              },
                              "id": 801,
                              "isConstant": false,
                              "isLValue": false,
                              "isPure": true,
                              "lValueRequested": false,
                              "memberLocation": "10404:26:3",
                              "memberName": "ProposalsRegistrationEnded",
                              "nodeType": "MemberAccess",
                              "referencedDeclaration": 371,
                              "src": "10389:41:3",
                              "typeDescriptions": {
                                "typeIdentifier": "t_enum$_WorkflowStatus_$375",
                                "typeString": "enum Voting.WorkflowStatus"
                              }
                            },
                            {
                              "expression": {
                                "id": 802,
                                "name": "WorkflowStatus",
                                "nodeType": "Identifier",
                                "overloadedDeclarations": [],
                                "referencedDeclaration": 375,
                                "src": "10432:14:3",
                                "typeDescriptions": {
                                  "typeIdentifier": "t_type$_t_enum$_WorkflowStatus_$375_$",
                                  "typeString": "type(enum Voting.WorkflowStatus)"
                                }
                              },
                              "id": 803,
                              "isConstant": false,
                              "isLValue": false,
                              "isPure": true,
                              "lValueRequested": false,
                              "memberLocation": "10447:20:3",
                              "memberName": "VotingSessionStarted",
                              "nodeType": "MemberAccess",
                              "referencedDeclaration": 372,
                              "src": "10432:35:3",
                              "typeDescriptions": {
                                "typeIdentifier": "t_enum$_WorkflowStatus_$375",
                                "typeString": "enum Voting.WorkflowStatus"
                              }
                            }
                          ],
                          "expression": {
                            "argumentTypes": [
                              {
                                "typeIdentifier": "t_uint256",
                                "typeString": "uint256"
                              },
                              {
                                "typeIdentifier": "t_enum$_WorkflowStatus_$375",
                                "typeString": "enum Voting.WorkflowStatus"
                              },
                              {
                                "typeIdentifier": "t_enum$_WorkflowStatus_$375",
                                "typeString": "enum Voting.WorkflowStatus"
                              }
                            ],
                            "id": 798,
                            "name": "WorkflowStatusChange",
                            "nodeType": "Identifier",
                            "overloadedDeclarations": [],
                            "referencedDeclaration": 443,
                            "src": "10356:20:3",
                            "typeDescriptions": {
                              "typeIdentifier": "t_function_event_nonpayable$_t_uint256_$_t_enum$_WorkflowStatus_$375_$_t_enum$_WorkflowStatus_$375_$returns$__$",
                              "typeString": "function (uint256,enum Voting.WorkflowStatus,enum Voting.WorkflowStatus)"
                            }
                          },
                          "id": 804,
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": false,
                          "kind": "functionCall",
                          "lValueRequested": false,
                          "nameLocations": [],
                          "names": [],
                          "nodeType": "FunctionCall",
                          "src": "10356:112:3",
                          "tryCall": false,
                          "typeDescriptions": {
                            "typeIdentifier": "t_tuple$__$",
                            "typeString": "tuple()"
                          }
                        },
                        "id": 805,
                        "nodeType": "EmitStatement",
                        "src": "10351:117:3"
                      }
                    ]
                  },
                  "documentation": {
                    "id": 778,
                    "nodeType": "StructuredDocumentation",
                    "src": "9883:250:3",
                    "text": " Administrator can open voting session.\n \n @dev Can be called only when status is set to ProposalsRegistrationEnded.\n An event WorkflowStatusChange is emitted\n @param _sessionId The session identifier "
                  },
                  "functionSelector": "9980a55a",
                  "id": 807,
                  "implemented": true,
                  "kind": "function",
                  "modifiers": [
                    {
                      "id": 783,
                      "kind": "modifierInvocation",
                      "modifierName": {
                        "id": 782,
                        "name": "onlyOwner",
                        "nameLocations": ["10192:9:3"],
                        "nodeType": "IdentifierPath",
                        "referencedDeclaration": 31,
                        "src": "10192:9:3"
                      },
                      "nodeType": "ModifierInvocation",
                      "src": "10192:9:3"
                    },
                    {
                      "arguments": [
                        {
                          "id": 785,
                          "name": "_sessionId",
                          "nodeType": "Identifier",
                          "overloadedDeclarations": [],
                          "referencedDeclaration": 780,
                          "src": "10211:10:3",
                          "typeDescriptions": {
                            "typeIdentifier": "t_uint256",
                            "typeString": "uint256"
                          }
                        },
                        {
                          "expression": {
                            "id": 786,
                            "name": "WorkflowStatus",
                            "nodeType": "Identifier",
                            "overloadedDeclarations": [],
                            "referencedDeclaration": 375,
                            "src": "10223:14:3",
                            "typeDescriptions": {
                              "typeIdentifier": "t_type$_t_enum$_WorkflowStatus_$375_$",
                              "typeString": "type(enum Voting.WorkflowStatus)"
                            }
                          },
                          "id": 787,
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": true,
                          "lValueRequested": false,
                          "memberLocation": "10238:26:3",
                          "memberName": "ProposalsRegistrationEnded",
                          "nodeType": "MemberAccess",
                          "referencedDeclaration": 371,
                          "src": "10223:41:3",
                          "typeDescriptions": {
                            "typeIdentifier": "t_enum$_WorkflowStatus_$375",
                            "typeString": "enum Voting.WorkflowStatus"
                          }
                        }
                      ],
                      "id": 788,
                      "kind": "modifierInvocation",
                      "modifierName": {
                        "id": 784,
                        "name": "statusIs",
                        "nameLocations": ["10202:8:3"],
                        "nodeType": "IdentifierPath",
                        "referencedDeclaration": 524,
                        "src": "10202:8:3"
                      },
                      "nodeType": "ModifierInvocation",
                      "src": "10202:63:3"
                    }
                  ],
                  "name": "startVotingSession",
                  "nameLocation": "10147:18:3",
                  "nodeType": "FunctionDefinition",
                  "parameters": {
                    "id": 781,
                    "nodeType": "ParameterList",
                    "parameters": [
                      {
                        "constant": false,
                        "id": 780,
                        "mutability": "mutable",
                        "name": "_sessionId",
                        "nameLocation": "10171:10:3",
                        "nodeType": "VariableDeclaration",
                        "scope": 807,
                        "src": "10166:15:3",
                        "stateVariable": false,
                        "storageLocation": "default",
                        "typeDescriptions": {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        },
                        "typeName": {
                          "id": 779,
                          "name": "uint",
                          "nodeType": "ElementaryTypeName",
                          "src": "10166:4:3",
                          "typeDescriptions": {
                            "typeIdentifier": "t_uint256",
                            "typeString": "uint256"
                          }
                        },
                        "visibility": "internal"
                      }
                    ],
                    "src": "10165:17:3"
                  },
                  "returnParameters": {
                    "id": 789,
                    "nodeType": "ParameterList",
                    "parameters": [],
                    "src": "10266:0:3"
                  },
                  "scope": 1321,
                  "src": "10138:337:3",
                  "stateMutability": "nonpayable",
                  "virtual": false,
                  "visibility": "external"
                },
                {
                  "body": {
                    "id": 836,
                    "nodeType": "Block",
                    "src": "10852:199:3",
                    "statements": [
                      {
                        "expression": {
                          "id": 826,
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": false,
                          "lValueRequested": false,
                          "leftHandSide": {
                            "expression": {
                              "baseExpression": {
                                "id": 820,
                                "name": "sessions",
                                "nodeType": "Identifier",
                                "overloadedDeclarations": [],
                                "referencedDeclaration": 480,
                                "src": "10862:8:3",
                                "typeDescriptions": {
                                  "typeIdentifier": "t_mapping$_t_uint256_$_t_struct$_Session_$418_storage_$",
                                  "typeString": "mapping(uint256 => struct Voting.Session storage ref)"
                                }
                              },
                              "id": 822,
                              "indexExpression": {
                                "id": 821,
                                "name": "_sessionId",
                                "nodeType": "Identifier",
                                "overloadedDeclarations": [],
                                "referencedDeclaration": 810,
                                "src": "10871:10:3",
                                "typeDescriptions": {
                                  "typeIdentifier": "t_uint256",
                                  "typeString": "uint256"
                                }
                              },
                              "isConstant": false,
                              "isLValue": true,
                              "isPure": false,
                              "lValueRequested": false,
                              "nodeType": "IndexAccess",
                              "src": "10862:20:3",
                              "typeDescriptions": {
                                "typeIdentifier": "t_struct$_Session_$418_storage",
                                "typeString": "struct Voting.Session storage ref"
                              }
                            },
                            "id": 823,
                            "isConstant": false,
                            "isLValue": true,
                            "isPure": false,
                            "lValueRequested": true,
                            "memberLocation": "10883:6:3",
                            "memberName": "status",
                            "nodeType": "MemberAccess",
                            "referencedDeclaration": 395,
                            "src": "10862:27:3",
                            "typeDescriptions": {
                              "typeIdentifier": "t_enum$_WorkflowStatus_$375",
                              "typeString": "enum Voting.WorkflowStatus"
                            }
                          },
                          "nodeType": "Assignment",
                          "operator": "=",
                          "rightHandSide": {
                            "expression": {
                              "id": 824,
                              "name": "WorkflowStatus",
                              "nodeType": "Identifier",
                              "overloadedDeclarations": [],
                              "referencedDeclaration": 375,
                              "src": "10892:14:3",
                              "typeDescriptions": {
                                "typeIdentifier": "t_type$_t_enum$_WorkflowStatus_$375_$",
                                "typeString": "type(enum Voting.WorkflowStatus)"
                              }
                            },
                            "id": 825,
                            "isConstant": false,
                            "isLValue": false,
                            "isPure": true,
                            "lValueRequested": false,
                            "memberLocation": "10907:18:3",
                            "memberName": "VotingSessionEnded",
                            "nodeType": "MemberAccess",
                            "referencedDeclaration": 373,
                            "src": "10892:33:3",
                            "typeDescriptions": {
                              "typeIdentifier": "t_enum$_WorkflowStatus_$375",
                              "typeString": "enum Voting.WorkflowStatus"
                            }
                          },
                          "src": "10862:63:3",
                          "typeDescriptions": {
                            "typeIdentifier": "t_enum$_WorkflowStatus_$375",
                            "typeString": "enum Voting.WorkflowStatus"
                          }
                        },
                        "id": 827,
                        "nodeType": "ExpressionStatement",
                        "src": "10862:63:3"
                      },
                      {
                        "eventCall": {
                          "arguments": [
                            {
                              "id": 829,
                              "name": "_sessionId",
                              "nodeType": "Identifier",
                              "overloadedDeclarations": [],
                              "referencedDeclaration": 810,
                              "src": "10961:10:3",
                              "typeDescriptions": {
                                "typeIdentifier": "t_uint256",
                                "typeString": "uint256"
                              }
                            },
                            {
                              "expression": {
                                "id": 830,
                                "name": "WorkflowStatus",
                                "nodeType": "Identifier",
                                "overloadedDeclarations": [],
                                "referencedDeclaration": 375,
                                "src": "10973:14:3",
                                "typeDescriptions": {
                                  "typeIdentifier": "t_type$_t_enum$_WorkflowStatus_$375_$",
                                  "typeString": "type(enum Voting.WorkflowStatus)"
                                }
                              },
                              "id": 831,
                              "isConstant": false,
                              "isLValue": false,
                              "isPure": true,
                              "lValueRequested": false,
                              "memberLocation": "10988:20:3",
                              "memberName": "VotingSessionStarted",
                              "nodeType": "MemberAccess",
                              "referencedDeclaration": 372,
                              "src": "10973:35:3",
                              "typeDescriptions": {
                                "typeIdentifier": "t_enum$_WorkflowStatus_$375",
                                "typeString": "enum Voting.WorkflowStatus"
                              }
                            },
                            {
                              "expression": {
                                "id": 832,
                                "name": "WorkflowStatus",
                                "nodeType": "Identifier",
                                "overloadedDeclarations": [],
                                "referencedDeclaration": 375,
                                "src": "11010:14:3",
                                "typeDescriptions": {
                                  "typeIdentifier": "t_type$_t_enum$_WorkflowStatus_$375_$",
                                  "typeString": "type(enum Voting.WorkflowStatus)"
                                }
                              },
                              "id": 833,
                              "isConstant": false,
                              "isLValue": false,
                              "isPure": true,
                              "lValueRequested": false,
                              "memberLocation": "11025:18:3",
                              "memberName": "VotingSessionEnded",
                              "nodeType": "MemberAccess",
                              "referencedDeclaration": 373,
                              "src": "11010:33:3",
                              "typeDescriptions": {
                                "typeIdentifier": "t_enum$_WorkflowStatus_$375",
                                "typeString": "enum Voting.WorkflowStatus"
                              }
                            }
                          ],
                          "expression": {
                            "argumentTypes": [
                              {
                                "typeIdentifier": "t_uint256",
                                "typeString": "uint256"
                              },
                              {
                                "typeIdentifier": "t_enum$_WorkflowStatus_$375",
                                "typeString": "enum Voting.WorkflowStatus"
                              },
                              {
                                "typeIdentifier": "t_enum$_WorkflowStatus_$375",
                                "typeString": "enum Voting.WorkflowStatus"
                              }
                            ],
                            "id": 828,
                            "name": "WorkflowStatusChange",
                            "nodeType": "Identifier",
                            "overloadedDeclarations": [],
                            "referencedDeclaration": 443,
                            "src": "10940:20:3",
                            "typeDescriptions": {
                              "typeIdentifier": "t_function_event_nonpayable$_t_uint256_$_t_enum$_WorkflowStatus_$375_$_t_enum$_WorkflowStatus_$375_$returns$__$",
                              "typeString": "function (uint256,enum Voting.WorkflowStatus,enum Voting.WorkflowStatus)"
                            }
                          },
                          "id": 834,
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": false,
                          "kind": "functionCall",
                          "lValueRequested": false,
                          "nameLocations": [],
                          "names": [],
                          "nodeType": "FunctionCall",
                          "src": "10940:104:3",
                          "tryCall": false,
                          "typeDescriptions": {
                            "typeIdentifier": "t_tuple$__$",
                            "typeString": "tuple()"
                          }
                        },
                        "id": 835,
                        "nodeType": "EmitStatement",
                        "src": "10935:109:3"
                      }
                    ]
                  },
                  "documentation": {
                    "id": 808,
                    "nodeType": "StructuredDocumentation",
                    "src": "10481:245:3",
                    "text": " Administrator can close voting session.\n \n @dev Can be called only when status is set to VotingSessionStarted.\n An event WorkflowStatusChange is emitted\n @param _sessionId The session identifier "
                  },
                  "functionSelector": "6f3dc556",
                  "id": 837,
                  "implemented": true,
                  "kind": "function",
                  "modifiers": [
                    {
                      "id": 813,
                      "kind": "modifierInvocation",
                      "modifierName": {
                        "id": 812,
                        "name": "onlyOwner",
                        "nameLocations": ["10784:9:3"],
                        "nodeType": "IdentifierPath",
                        "referencedDeclaration": 31,
                        "src": "10784:9:3"
                      },
                      "nodeType": "ModifierInvocation",
                      "src": "10784:9:3"
                    },
                    {
                      "arguments": [
                        {
                          "id": 815,
                          "name": "_sessionId",
                          "nodeType": "Identifier",
                          "overloadedDeclarations": [],
                          "referencedDeclaration": 810,
                          "src": "10803:10:3",
                          "typeDescriptions": {
                            "typeIdentifier": "t_uint256",
                            "typeString": "uint256"
                          }
                        },
                        {
                          "expression": {
                            "id": 816,
                            "name": "WorkflowStatus",
                            "nodeType": "Identifier",
                            "overloadedDeclarations": [],
                            "referencedDeclaration": 375,
                            "src": "10815:14:3",
                            "typeDescriptions": {
                              "typeIdentifier": "t_type$_t_enum$_WorkflowStatus_$375_$",
                              "typeString": "type(enum Voting.WorkflowStatus)"
                            }
                          },
                          "id": 817,
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": true,
                          "lValueRequested": false,
                          "memberLocation": "10830:20:3",
                          "memberName": "VotingSessionStarted",
                          "nodeType": "MemberAccess",
                          "referencedDeclaration": 372,
                          "src": "10815:35:3",
                          "typeDescriptions": {
                            "typeIdentifier": "t_enum$_WorkflowStatus_$375",
                            "typeString": "enum Voting.WorkflowStatus"
                          }
                        }
                      ],
                      "id": 818,
                      "kind": "modifierInvocation",
                      "modifierName": {
                        "id": 814,
                        "name": "statusIs",
                        "nameLocations": ["10794:8:3"],
                        "nodeType": "IdentifierPath",
                        "referencedDeclaration": 524,
                        "src": "10794:8:3"
                      },
                      "nodeType": "ModifierInvocation",
                      "src": "10794:57:3"
                    }
                  ],
                  "name": "stopVotingSession",
                  "nameLocation": "10740:17:3",
                  "nodeType": "FunctionDefinition",
                  "parameters": {
                    "id": 811,
                    "nodeType": "ParameterList",
                    "parameters": [
                      {
                        "constant": false,
                        "id": 810,
                        "mutability": "mutable",
                        "name": "_sessionId",
                        "nameLocation": "10763:10:3",
                        "nodeType": "VariableDeclaration",
                        "scope": 837,
                        "src": "10758:15:3",
                        "stateVariable": false,
                        "storageLocation": "default",
                        "typeDescriptions": {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        },
                        "typeName": {
                          "id": 809,
                          "name": "uint",
                          "nodeType": "ElementaryTypeName",
                          "src": "10758:4:3",
                          "typeDescriptions": {
                            "typeIdentifier": "t_uint256",
                            "typeString": "uint256"
                          }
                        },
                        "visibility": "internal"
                      }
                    ],
                    "src": "10757:17:3"
                  },
                  "returnParameters": {
                    "id": 819,
                    "nodeType": "ParameterList",
                    "parameters": [],
                    "src": "10852:0:3"
                  },
                  "scope": 1321,
                  "src": "10731:320:3",
                  "stateMutability": "nonpayable",
                  "virtual": false,
                  "visibility": "external"
                },
                {
                  "body": {
                    "id": 1047,
                    "nodeType": "Block",
                    "src": "11546:1728:3",
                    "statements": [
                      {
                        "assignments": [851],
                        "declarations": [
                          {
                            "constant": false,
                            "id": 851,
                            "mutability": "mutable",
                            "name": "_bestVoteCount",
                            "nameLocation": "11561:14:3",
                            "nodeType": "VariableDeclaration",
                            "scope": 1047,
                            "src": "11556:19:3",
                            "stateVariable": false,
                            "storageLocation": "default",
                            "typeDescriptions": {
                              "typeIdentifier": "t_uint256",
                              "typeString": "uint256"
                            },
                            "typeName": {
                              "id": 850,
                              "name": "uint",
                              "nodeType": "ElementaryTypeName",
                              "src": "11556:4:3",
                              "typeDescriptions": {
                                "typeIdentifier": "t_uint256",
                                "typeString": "uint256"
                              }
                            },
                            "visibility": "internal"
                          }
                        ],
                        "id": 853,
                        "initialValue": {
                          "hexValue": "30",
                          "id": 852,
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": true,
                          "kind": "number",
                          "lValueRequested": false,
                          "nodeType": "Literal",
                          "src": "11578:1:3",
                          "typeDescriptions": {
                            "typeIdentifier": "t_rational_0_by_1",
                            "typeString": "int_const 0"
                          },
                          "value": "0"
                        },
                        "nodeType": "VariableDeclarationStatement",
                        "src": "11556:23:3"
                      },
                      {
                        "assignments": [855],
                        "declarations": [
                          {
                            "constant": false,
                            "id": 855,
                            "mutability": "mutable",
                            "name": "_winnersCount",
                            "nameLocation": "11594:13:3",
                            "nodeType": "VariableDeclaration",
                            "scope": 1047,
                            "src": "11589:18:3",
                            "stateVariable": false,
                            "storageLocation": "default",
                            "typeDescriptions": {
                              "typeIdentifier": "t_uint256",
                              "typeString": "uint256"
                            },
                            "typeName": {
                              "id": 854,
                              "name": "uint",
                              "nodeType": "ElementaryTypeName",
                              "src": "11589:4:3",
                              "typeDescriptions": {
                                "typeIdentifier": "t_uint256",
                                "typeString": "uint256"
                              }
                            },
                            "visibility": "internal"
                          }
                        ],
                        "id": 857,
                        "initialValue": {
                          "hexValue": "30",
                          "id": 856,
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": true,
                          "kind": "number",
                          "lValueRequested": false,
                          "nodeType": "Literal",
                          "src": "11610:1:3",
                          "typeDescriptions": {
                            "typeIdentifier": "t_rational_0_by_1",
                            "typeString": "int_const 0"
                          },
                          "value": "0"
                        },
                        "nodeType": "VariableDeclarationStatement",
                        "src": "11589:22:3"
                      },
                      {
                        "assignments": [862],
                        "declarations": [
                          {
                            "constant": false,
                            "id": 862,
                            "mutability": "mutable",
                            "name": "_winningProposals",
                            "nameLocation": "11799:17:3",
                            "nodeType": "VariableDeclaration",
                            "scope": 1047,
                            "src": "11781:35:3",
                            "stateVariable": false,
                            "storageLocation": "memory",
                            "typeDescriptions": {
                              "typeIdentifier": "t_array$_t_struct$_Proposal_$391_memory_ptr_$dyn_memory_ptr",
                              "typeString": "struct Voting.Proposal[]"
                            },
                            "typeName": {
                              "baseType": {
                                "id": 860,
                                "nodeType": "UserDefinedTypeName",
                                "pathNode": {
                                  "id": 859,
                                  "name": "Proposal",
                                  "nameLocations": ["11781:8:3"],
                                  "nodeType": "IdentifierPath",
                                  "referencedDeclaration": 391,
                                  "src": "11781:8:3"
                                },
                                "referencedDeclaration": 391,
                                "src": "11781:8:3",
                                "typeDescriptions": {
                                  "typeIdentifier": "t_struct$_Proposal_$391_storage_ptr",
                                  "typeString": "struct Voting.Proposal"
                                }
                              },
                              "id": 861,
                              "nodeType": "ArrayTypeName",
                              "src": "11781:10:3",
                              "typeDescriptions": {
                                "typeIdentifier": "t_array$_t_struct$_Proposal_$391_storage_$dyn_storage_ptr",
                                "typeString": "struct Voting.Proposal[]"
                              }
                            },
                            "visibility": "internal"
                          }
                        ],
                        "id": 873,
                        "initialValue": {
                          "arguments": [
                            {
                              "expression": {
                                "expression": {
                                  "baseExpression": {
                                    "id": 867,
                                    "name": "sessions",
                                    "nodeType": "Identifier",
                                    "overloadedDeclarations": [],
                                    "referencedDeclaration": 480,
                                    "src": "11834:8:3",
                                    "typeDescriptions": {
                                      "typeIdentifier": "t_mapping$_t_uint256_$_t_struct$_Session_$418_storage_$",
                                      "typeString": "mapping(uint256 => struct Voting.Session storage ref)"
                                    }
                                  },
                                  "id": 869,
                                  "indexExpression": {
                                    "id": 868,
                                    "name": "_sessionId",
                                    "nodeType": "Identifier",
                                    "overloadedDeclarations": [],
                                    "referencedDeclaration": 840,
                                    "src": "11843:10:3",
                                    "typeDescriptions": {
                                      "typeIdentifier": "t_uint256",
                                      "typeString": "uint256"
                                    }
                                  },
                                  "isConstant": false,
                                  "isLValue": true,
                                  "isPure": false,
                                  "lValueRequested": false,
                                  "nodeType": "IndexAccess",
                                  "src": "11834:20:3",
                                  "typeDescriptions": {
                                    "typeIdentifier": "t_struct$_Session_$418_storage",
                                    "typeString": "struct Voting.Session storage ref"
                                  }
                                },
                                "id": 870,
                                "isConstant": false,
                                "isLValue": true,
                                "isPure": false,
                                "lValueRequested": false,
                                "memberLocation": "11855:9:3",
                                "memberName": "proposals",
                                "nodeType": "MemberAccess",
                                "referencedDeclaration": 412,
                                "src": "11834:30:3",
                                "typeDescriptions": {
                                  "typeIdentifier": "t_array$_t_struct$_Proposal_$391_storage_$dyn_storage",
                                  "typeString": "struct Voting.Proposal storage ref[] storage ref"
                                }
                              },
                              "id": 871,
                              "isConstant": false,
                              "isLValue": false,
                              "isPure": false,
                              "lValueRequested": false,
                              "memberLocation": "11865:6:3",
                              "memberName": "length",
                              "nodeType": "MemberAccess",
                              "src": "11834:37:3",
                              "typeDescriptions": {
                                "typeIdentifier": "t_uint256",
                                "typeString": "uint256"
                              }
                            }
                          ],
                          "expression": {
                            "argumentTypes": [
                              {
                                "typeIdentifier": "t_uint256",
                                "typeString": "uint256"
                              }
                            ],
                            "id": 866,
                            "isConstant": false,
                            "isLValue": false,
                            "isPure": true,
                            "lValueRequested": false,
                            "nodeType": "NewExpression",
                            "src": "11819:14:3",
                            "typeDescriptions": {
                              "typeIdentifier": "t_function_objectcreation_pure$_t_uint256_$returns$_t_array$_t_struct$_Proposal_$391_memory_ptr_$dyn_memory_ptr_$",
                              "typeString": "function (uint256) pure returns (struct Voting.Proposal memory[] memory)"
                            },
                            "typeName": {
                              "baseType": {
                                "id": 864,
                                "nodeType": "UserDefinedTypeName",
                                "pathNode": {
                                  "id": 863,
                                  "name": "Proposal",
                                  "nameLocations": ["11823:8:3"],
                                  "nodeType": "IdentifierPath",
                                  "referencedDeclaration": 391,
                                  "src": "11823:8:3"
                                },
                                "referencedDeclaration": 391,
                                "src": "11823:8:3",
                                "typeDescriptions": {
                                  "typeIdentifier": "t_struct$_Proposal_$391_storage_ptr",
                                  "typeString": "struct Voting.Proposal"
                                }
                              },
                              "id": 865,
                              "nodeType": "ArrayTypeName",
                              "src": "11823:10:3",
                              "typeDescriptions": {
                                "typeIdentifier": "t_array$_t_struct$_Proposal_$391_storage_$dyn_storage_ptr",
                                "typeString": "struct Voting.Proposal[]"
                              }
                            }
                          },
                          "id": 872,
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": false,
                          "kind": "functionCall",
                          "lValueRequested": false,
                          "nameLocations": [],
                          "names": [],
                          "nodeType": "FunctionCall",
                          "src": "11819:53:3",
                          "tryCall": false,
                          "typeDescriptions": {
                            "typeIdentifier": "t_array$_t_struct$_Proposal_$391_memory_ptr_$dyn_memory_ptr",
                            "typeString": "struct Voting.Proposal memory[] memory"
                          }
                        },
                        "nodeType": "VariableDeclarationStatement",
                        "src": "11781:91:3"
                      },
                      {
                        "body": {
                          "id": 963,
                          "nodeType": "Block",
                          "src": "12029:570:3",
                          "statements": [
                            {
                              "condition": {
                                "commonType": {
                                  "typeIdentifier": "t_uint256",
                                  "typeString": "uint256"
                                },
                                "id": 896,
                                "isConstant": false,
                                "isLValue": false,
                                "isPure": false,
                                "lValueRequested": false,
                                "leftExpression": {
                                  "expression": {
                                    "baseExpression": {
                                      "expression": {
                                        "baseExpression": {
                                          "id": 888,
                                          "name": "sessions",
                                          "nodeType": "Identifier",
                                          "overloadedDeclarations": [],
                                          "referencedDeclaration": 480,
                                          "src": "12047:8:3",
                                          "typeDescriptions": {
                                            "typeIdentifier": "t_mapping$_t_uint256_$_t_struct$_Session_$418_storage_$",
                                            "typeString": "mapping(uint256 => struct Voting.Session storage ref)"
                                          }
                                        },
                                        "id": 890,
                                        "indexExpression": {
                                          "id": 889,
                                          "name": "_sessionId",
                                          "nodeType": "Identifier",
                                          "overloadedDeclarations": [],
                                          "referencedDeclaration": 840,
                                          "src": "12056:10:3",
                                          "typeDescriptions": {
                                            "typeIdentifier": "t_uint256",
                                            "typeString": "uint256"
                                          }
                                        },
                                        "isConstant": false,
                                        "isLValue": true,
                                        "isPure": false,
                                        "lValueRequested": false,
                                        "nodeType": "IndexAccess",
                                        "src": "12047:20:3",
                                        "typeDescriptions": {
                                          "typeIdentifier": "t_struct$_Session_$418_storage",
                                          "typeString": "struct Voting.Session storage ref"
                                        }
                                      },
                                      "id": 891,
                                      "isConstant": false,
                                      "isLValue": true,
                                      "isPure": false,
                                      "lValueRequested": false,
                                      "memberLocation": "12068:9:3",
                                      "memberName": "proposals",
                                      "nodeType": "MemberAccess",
                                      "referencedDeclaration": 412,
                                      "src": "12047:30:3",
                                      "typeDescriptions": {
                                        "typeIdentifier": "t_array$_t_struct$_Proposal_$391_storage_$dyn_storage",
                                        "typeString": "struct Voting.Proposal storage ref[] storage ref"
                                      }
                                    },
                                    "id": 893,
                                    "indexExpression": {
                                      "id": 892,
                                      "name": "i",
                                      "nodeType": "Identifier",
                                      "overloadedDeclarations": [],
                                      "referencedDeclaration": 875,
                                      "src": "12078:1:3",
                                      "typeDescriptions": {
                                        "typeIdentifier": "t_uint256",
                                        "typeString": "uint256"
                                      }
                                    },
                                    "isConstant": false,
                                    "isLValue": true,
                                    "isPure": false,
                                    "lValueRequested": false,
                                    "nodeType": "IndexAccess",
                                    "src": "12047:33:3",
                                    "typeDescriptions": {
                                      "typeIdentifier": "t_struct$_Proposal_$391_storage",
                                      "typeString": "struct Voting.Proposal storage ref"
                                    }
                                  },
                                  "id": 894,
                                  "isConstant": false,
                                  "isLValue": true,
                                  "isPure": false,
                                  "lValueRequested": false,
                                  "memberLocation": "12081:9:3",
                                  "memberName": "voteCount",
                                  "nodeType": "MemberAccess",
                                  "referencedDeclaration": 388,
                                  "src": "12047:43:3",
                                  "typeDescriptions": {
                                    "typeIdentifier": "t_uint256",
                                    "typeString": "uint256"
                                  }
                                },
                                "nodeType": "BinaryOperation",
                                "operator": ">",
                                "rightExpression": {
                                  "id": 895,
                                  "name": "_bestVoteCount",
                                  "nodeType": "Identifier",
                                  "overloadedDeclarations": [],
                                  "referencedDeclaration": 851,
                                  "src": "12093:14:3",
                                  "typeDescriptions": {
                                    "typeIdentifier": "t_uint256",
                                    "typeString": "uint256"
                                  }
                                },
                                "src": "12047:60:3",
                                "typeDescriptions": {
                                  "typeIdentifier": "t_bool",
                                  "typeString": "bool"
                                }
                              },
                              "falseBody": {
                                "condition": {
                                  "commonType": {
                                    "typeIdentifier": "t_bool",
                                    "typeString": "bool"
                                  },
                                  "id": 943,
                                  "isConstant": false,
                                  "isLValue": false,
                                  "isPure": false,
                                  "lValueRequested": false,
                                  "leftExpression": {
                                    "commonType": {
                                      "typeIdentifier": "t_uint256",
                                      "typeString": "uint256"
                                    },
                                    "id": 933,
                                    "isConstant": false,
                                    "isLValue": false,
                                    "isPure": false,
                                    "lValueRequested": false,
                                    "leftExpression": {
                                      "expression": {
                                        "baseExpression": {
                                          "expression": {
                                            "baseExpression": {
                                              "id": 925,
                                              "name": "sessions",
                                              "nodeType": "Identifier",
                                              "overloadedDeclarations": [],
                                              "referencedDeclaration": 480,
                                              "src": "12337:8:3",
                                              "typeDescriptions": {
                                                "typeIdentifier": "t_mapping$_t_uint256_$_t_struct$_Session_$418_storage_$",
                                                "typeString": "mapping(uint256 => struct Voting.Session storage ref)"
                                              }
                                            },
                                            "id": 927,
                                            "indexExpression": {
                                              "id": 926,
                                              "name": "_sessionId",
                                              "nodeType": "Identifier",
                                              "overloadedDeclarations": [],
                                              "referencedDeclaration": 840,
                                              "src": "12346:10:3",
                                              "typeDescriptions": {
                                                "typeIdentifier": "t_uint256",
                                                "typeString": "uint256"
                                              }
                                            },
                                            "isConstant": false,
                                            "isLValue": true,
                                            "isPure": false,
                                            "lValueRequested": false,
                                            "nodeType": "IndexAccess",
                                            "src": "12337:20:3",
                                            "typeDescriptions": {
                                              "typeIdentifier": "t_struct$_Session_$418_storage",
                                              "typeString": "struct Voting.Session storage ref"
                                            }
                                          },
                                          "id": 928,
                                          "isConstant": false,
                                          "isLValue": true,
                                          "isPure": false,
                                          "lValueRequested": false,
                                          "memberLocation": "12358:9:3",
                                          "memberName": "proposals",
                                          "nodeType": "MemberAccess",
                                          "referencedDeclaration": 412,
                                          "src": "12337:30:3",
                                          "typeDescriptions": {
                                            "typeIdentifier": "t_array$_t_struct$_Proposal_$391_storage_$dyn_storage",
                                            "typeString": "struct Voting.Proposal storage ref[] storage ref"
                                          }
                                        },
                                        "id": 930,
                                        "indexExpression": {
                                          "id": 929,
                                          "name": "i",
                                          "nodeType": "Identifier",
                                          "overloadedDeclarations": [],
                                          "referencedDeclaration": 875,
                                          "src": "12368:1:3",
                                          "typeDescriptions": {
                                            "typeIdentifier": "t_uint256",
                                            "typeString": "uint256"
                                          }
                                        },
                                        "isConstant": false,
                                        "isLValue": true,
                                        "isPure": false,
                                        "lValueRequested": false,
                                        "nodeType": "IndexAccess",
                                        "src": "12337:33:3",
                                        "typeDescriptions": {
                                          "typeIdentifier": "t_struct$_Proposal_$391_storage",
                                          "typeString": "struct Voting.Proposal storage ref"
                                        }
                                      },
                                      "id": 931,
                                      "isConstant": false,
                                      "isLValue": true,
                                      "isPure": false,
                                      "lValueRequested": false,
                                      "memberLocation": "12371:9:3",
                                      "memberName": "voteCount",
                                      "nodeType": "MemberAccess",
                                      "referencedDeclaration": 388,
                                      "src": "12337:43:3",
                                      "typeDescriptions": {
                                        "typeIdentifier": "t_uint256",
                                        "typeString": "uint256"
                                      }
                                    },
                                    "nodeType": "BinaryOperation",
                                    "operator": ">",
                                    "rightExpression": {
                                      "hexValue": "30",
                                      "id": 932,
                                      "isConstant": false,
                                      "isLValue": false,
                                      "isPure": true,
                                      "kind": "number",
                                      "lValueRequested": false,
                                      "nodeType": "Literal",
                                      "src": "12383:1:3",
                                      "typeDescriptions": {
                                        "typeIdentifier": "t_rational_0_by_1",
                                        "typeString": "int_const 0"
                                      },
                                      "value": "0"
                                    },
                                    "src": "12337:47:3",
                                    "typeDescriptions": {
                                      "typeIdentifier": "t_bool",
                                      "typeString": "bool"
                                    }
                                  },
                                  "nodeType": "BinaryOperation",
                                  "operator": "&&",
                                  "rightExpression": {
                                    "commonType": {
                                      "typeIdentifier": "t_uint256",
                                      "typeString": "uint256"
                                    },
                                    "id": 942,
                                    "isConstant": false,
                                    "isLValue": false,
                                    "isPure": false,
                                    "lValueRequested": false,
                                    "leftExpression": {
                                      "expression": {
                                        "baseExpression": {
                                          "expression": {
                                            "baseExpression": {
                                              "id": 934,
                                              "name": "sessions",
                                              "nodeType": "Identifier",
                                              "overloadedDeclarations": [],
                                              "referencedDeclaration": 480,
                                              "src": "12388:8:3",
                                              "typeDescriptions": {
                                                "typeIdentifier": "t_mapping$_t_uint256_$_t_struct$_Session_$418_storage_$",
                                                "typeString": "mapping(uint256 => struct Voting.Session storage ref)"
                                              }
                                            },
                                            "id": 936,
                                            "indexExpression": {
                                              "id": 935,
                                              "name": "_sessionId",
                                              "nodeType": "Identifier",
                                              "overloadedDeclarations": [],
                                              "referencedDeclaration": 840,
                                              "src": "12397:10:3",
                                              "typeDescriptions": {
                                                "typeIdentifier": "t_uint256",
                                                "typeString": "uint256"
                                              }
                                            },
                                            "isConstant": false,
                                            "isLValue": true,
                                            "isPure": false,
                                            "lValueRequested": false,
                                            "nodeType": "IndexAccess",
                                            "src": "12388:20:3",
                                            "typeDescriptions": {
                                              "typeIdentifier": "t_struct$_Session_$418_storage",
                                              "typeString": "struct Voting.Session storage ref"
                                            }
                                          },
                                          "id": 937,
                                          "isConstant": false,
                                          "isLValue": true,
                                          "isPure": false,
                                          "lValueRequested": false,
                                          "memberLocation": "12409:9:3",
                                          "memberName": "proposals",
                                          "nodeType": "MemberAccess",
                                          "referencedDeclaration": 412,
                                          "src": "12388:30:3",
                                          "typeDescriptions": {
                                            "typeIdentifier": "t_array$_t_struct$_Proposal_$391_storage_$dyn_storage",
                                            "typeString": "struct Voting.Proposal storage ref[] storage ref"
                                          }
                                        },
                                        "id": 939,
                                        "indexExpression": {
                                          "id": 938,
                                          "name": "i",
                                          "nodeType": "Identifier",
                                          "overloadedDeclarations": [],
                                          "referencedDeclaration": 875,
                                          "src": "12419:1:3",
                                          "typeDescriptions": {
                                            "typeIdentifier": "t_uint256",
                                            "typeString": "uint256"
                                          }
                                        },
                                        "isConstant": false,
                                        "isLValue": true,
                                        "isPure": false,
                                        "lValueRequested": false,
                                        "nodeType": "IndexAccess",
                                        "src": "12388:33:3",
                                        "typeDescriptions": {
                                          "typeIdentifier": "t_struct$_Proposal_$391_storage",
                                          "typeString": "struct Voting.Proposal storage ref"
                                        }
                                      },
                                      "id": 940,
                                      "isConstant": false,
                                      "isLValue": true,
                                      "isPure": false,
                                      "lValueRequested": false,
                                      "memberLocation": "12422:9:3",
                                      "memberName": "voteCount",
                                      "nodeType": "MemberAccess",
                                      "referencedDeclaration": 388,
                                      "src": "12388:43:3",
                                      "typeDescriptions": {
                                        "typeIdentifier": "t_uint256",
                                        "typeString": "uint256"
                                      }
                                    },
                                    "nodeType": "BinaryOperation",
                                    "operator": "==",
                                    "rightExpression": {
                                      "id": 941,
                                      "name": "_bestVoteCount",
                                      "nodeType": "Identifier",
                                      "overloadedDeclarations": [],
                                      "referencedDeclaration": 851,
                                      "src": "12435:14:3",
                                      "typeDescriptions": {
                                        "typeIdentifier": "t_uint256",
                                        "typeString": "uint256"
                                      }
                                    },
                                    "src": "12388:61:3",
                                    "typeDescriptions": {
                                      "typeIdentifier": "t_bool",
                                      "typeString": "bool"
                                    }
                                  },
                                  "src": "12337:112:3",
                                  "typeDescriptions": {
                                    "typeIdentifier": "t_bool",
                                    "typeString": "bool"
                                  }
                                },
                                "id": 961,
                                "nodeType": "IfStatement",
                                "src": "12333:256:3",
                                "trueBody": {
                                  "id": 960,
                                  "nodeType": "Block",
                                  "src": "12451:138:3",
                                  "statements": [
                                    {
                                      "expression": {
                                        "id": 945,
                                        "isConstant": false,
                                        "isLValue": false,
                                        "isPure": false,
                                        "lValueRequested": false,
                                        "nodeType": "UnaryOperation",
                                        "operator": "++",
                                        "prefix": false,
                                        "src": "12469:15:3",
                                        "subExpression": {
                                          "id": 944,
                                          "name": "_winnersCount",
                                          "nodeType": "Identifier",
                                          "overloadedDeclarations": [],
                                          "referencedDeclaration": 855,
                                          "src": "12469:13:3",
                                          "typeDescriptions": {
                                            "typeIdentifier": "t_uint256",
                                            "typeString": "uint256"
                                          }
                                        },
                                        "typeDescriptions": {
                                          "typeIdentifier": "t_uint256",
                                          "typeString": "uint256"
                                        }
                                      },
                                      "id": 946,
                                      "nodeType": "ExpressionStatement",
                                      "src": "12469:15:3"
                                    },
                                    {
                                      "expression": {
                                        "id": 958,
                                        "isConstant": false,
                                        "isLValue": false,
                                        "isPure": false,
                                        "lValueRequested": false,
                                        "leftHandSide": {
                                          "baseExpression": {
                                            "id": 947,
                                            "name": "_winningProposals",
                                            "nodeType": "Identifier",
                                            "overloadedDeclarations": [],
                                            "referencedDeclaration": 862,
                                            "src": "12502:17:3",
                                            "typeDescriptions": {
                                              "typeIdentifier": "t_array$_t_struct$_Proposal_$391_memory_ptr_$dyn_memory_ptr",
                                              "typeString": "struct Voting.Proposal memory[] memory"
                                            }
                                          },
                                          "id": 951,
                                          "indexExpression": {
                                            "commonType": {
                                              "typeIdentifier": "t_uint256",
                                              "typeString": "uint256"
                                            },
                                            "id": 950,
                                            "isConstant": false,
                                            "isLValue": false,
                                            "isPure": false,
                                            "lValueRequested": false,
                                            "leftExpression": {
                                              "id": 948,
                                              "name": "_winnersCount",
                                              "nodeType": "Identifier",
                                              "overloadedDeclarations": [],
                                              "referencedDeclaration": 855,
                                              "src": "12520:13:3",
                                              "typeDescriptions": {
                                                "typeIdentifier": "t_uint256",
                                                "typeString": "uint256"
                                              }
                                            },
                                            "nodeType": "BinaryOperation",
                                            "operator": "-",
                                            "rightExpression": {
                                              "hexValue": "31",
                                              "id": 949,
                                              "isConstant": false,
                                              "isLValue": false,
                                              "isPure": true,
                                              "kind": "number",
                                              "lValueRequested": false,
                                              "nodeType": "Literal",
                                              "src": "12536:1:3",
                                              "typeDescriptions": {
                                                "typeIdentifier": "t_rational_1_by_1",
                                                "typeString": "int_const 1"
                                              },
                                              "value": "1"
                                            },
                                            "src": "12520:17:3",
                                            "typeDescriptions": {
                                              "typeIdentifier": "t_uint256",
                                              "typeString": "uint256"
                                            }
                                          },
                                          "isConstant": false,
                                          "isLValue": true,
                                          "isPure": false,
                                          "lValueRequested": true,
                                          "nodeType": "IndexAccess",
                                          "src": "12502:36:3",
                                          "typeDescriptions": {
                                            "typeIdentifier": "t_struct$_Proposal_$391_memory_ptr",
                                            "typeString": "struct Voting.Proposal memory"
                                          }
                                        },
                                        "nodeType": "Assignment",
                                        "operator": "=",
                                        "rightHandSide": {
                                          "baseExpression": {
                                            "expression": {
                                              "baseExpression": {
                                                "id": 952,
                                                "name": "sessions",
                                                "nodeType": "Identifier",
                                                "overloadedDeclarations": [],
                                                "referencedDeclaration": 480,
                                                "src": "12541:8:3",
                                                "typeDescriptions": {
                                                  "typeIdentifier": "t_mapping$_t_uint256_$_t_struct$_Session_$418_storage_$",
                                                  "typeString": "mapping(uint256 => struct Voting.Session storage ref)"
                                                }
                                              },
                                              "id": 954,
                                              "indexExpression": {
                                                "id": 953,
                                                "name": "_sessionId",
                                                "nodeType": "Identifier",
                                                "overloadedDeclarations": [],
                                                "referencedDeclaration": 840,
                                                "src": "12550:10:3",
                                                "typeDescriptions": {
                                                  "typeIdentifier": "t_uint256",
                                                  "typeString": "uint256"
                                                }
                                              },
                                              "isConstant": false,
                                              "isLValue": true,
                                              "isPure": false,
                                              "lValueRequested": false,
                                              "nodeType": "IndexAccess",
                                              "src": "12541:20:3",
                                              "typeDescriptions": {
                                                "typeIdentifier": "t_struct$_Session_$418_storage",
                                                "typeString": "struct Voting.Session storage ref"
                                              }
                                            },
                                            "id": 955,
                                            "isConstant": false,
                                            "isLValue": true,
                                            "isPure": false,
                                            "lValueRequested": false,
                                            "memberLocation": "12562:9:3",
                                            "memberName": "proposals",
                                            "nodeType": "MemberAccess",
                                            "referencedDeclaration": 412,
                                            "src": "12541:30:3",
                                            "typeDescriptions": {
                                              "typeIdentifier": "t_array$_t_struct$_Proposal_$391_storage_$dyn_storage",
                                              "typeString": "struct Voting.Proposal storage ref[] storage ref"
                                            }
                                          },
                                          "id": 957,
                                          "indexExpression": {
                                            "id": 956,
                                            "name": "i",
                                            "nodeType": "Identifier",
                                            "overloadedDeclarations": [],
                                            "referencedDeclaration": 875,
                                            "src": "12572:1:3",
                                            "typeDescriptions": {
                                              "typeIdentifier": "t_uint256",
                                              "typeString": "uint256"
                                            }
                                          },
                                          "isConstant": false,
                                          "isLValue": true,
                                          "isPure": false,
                                          "lValueRequested": false,
                                          "nodeType": "IndexAccess",
                                          "src": "12541:33:3",
                                          "typeDescriptions": {
                                            "typeIdentifier": "t_struct$_Proposal_$391_storage",
                                            "typeString": "struct Voting.Proposal storage ref"
                                          }
                                        },
                                        "src": "12502:72:3",
                                        "typeDescriptions": {
                                          "typeIdentifier": "t_struct$_Proposal_$391_memory_ptr",
                                          "typeString": "struct Voting.Proposal memory"
                                        }
                                      },
                                      "id": 959,
                                      "nodeType": "ExpressionStatement",
                                      "src": "12502:72:3"
                                    }
                                  ]
                                }
                              },
                              "id": 962,
                              "nodeType": "IfStatement",
                              "src": "12043:546:3",
                              "trueBody": {
                                "id": 924,
                                "nodeType": "Block",
                                "src": "12109:218:3",
                                "statements": [
                                  {
                                    "expression": {
                                      "id": 905,
                                      "isConstant": false,
                                      "isLValue": false,
                                      "isPure": false,
                                      "lValueRequested": false,
                                      "leftHandSide": {
                                        "id": 897,
                                        "name": "_bestVoteCount",
                                        "nodeType": "Identifier",
                                        "overloadedDeclarations": [],
                                        "referencedDeclaration": 851,
                                        "src": "12127:14:3",
                                        "typeDescriptions": {
                                          "typeIdentifier": "t_uint256",
                                          "typeString": "uint256"
                                        }
                                      },
                                      "nodeType": "Assignment",
                                      "operator": "=",
                                      "rightHandSide": {
                                        "expression": {
                                          "baseExpression": {
                                            "expression": {
                                              "baseExpression": {
                                                "id": 898,
                                                "name": "sessions",
                                                "nodeType": "Identifier",
                                                "overloadedDeclarations": [],
                                                "referencedDeclaration": 480,
                                                "src": "12144:8:3",
                                                "typeDescriptions": {
                                                  "typeIdentifier": "t_mapping$_t_uint256_$_t_struct$_Session_$418_storage_$",
                                                  "typeString": "mapping(uint256 => struct Voting.Session storage ref)"
                                                }
                                              },
                                              "id": 900,
                                              "indexExpression": {
                                                "id": 899,
                                                "name": "_sessionId",
                                                "nodeType": "Identifier",
                                                "overloadedDeclarations": [],
                                                "referencedDeclaration": 840,
                                                "src": "12153:10:3",
                                                "typeDescriptions": {
                                                  "typeIdentifier": "t_uint256",
                                                  "typeString": "uint256"
                                                }
                                              },
                                              "isConstant": false,
                                              "isLValue": true,
                                              "isPure": false,
                                              "lValueRequested": false,
                                              "nodeType": "IndexAccess",
                                              "src": "12144:20:3",
                                              "typeDescriptions": {
                                                "typeIdentifier": "t_struct$_Session_$418_storage",
                                                "typeString": "struct Voting.Session storage ref"
                                              }
                                            },
                                            "id": 901,
                                            "isConstant": false,
                                            "isLValue": true,
                                            "isPure": false,
                                            "lValueRequested": false,
                                            "memberLocation": "12165:9:3",
                                            "memberName": "proposals",
                                            "nodeType": "MemberAccess",
                                            "referencedDeclaration": 412,
                                            "src": "12144:30:3",
                                            "typeDescriptions": {
                                              "typeIdentifier": "t_array$_t_struct$_Proposal_$391_storage_$dyn_storage",
                                              "typeString": "struct Voting.Proposal storage ref[] storage ref"
                                            }
                                          },
                                          "id": 903,
                                          "indexExpression": {
                                            "id": 902,
                                            "name": "i",
                                            "nodeType": "Identifier",
                                            "overloadedDeclarations": [],
                                            "referencedDeclaration": 875,
                                            "src": "12175:1:3",
                                            "typeDescriptions": {
                                              "typeIdentifier": "t_uint256",
                                              "typeString": "uint256"
                                            }
                                          },
                                          "isConstant": false,
                                          "isLValue": true,
                                          "isPure": false,
                                          "lValueRequested": false,
                                          "nodeType": "IndexAccess",
                                          "src": "12144:33:3",
                                          "typeDescriptions": {
                                            "typeIdentifier": "t_struct$_Proposal_$391_storage",
                                            "typeString": "struct Voting.Proposal storage ref"
                                          }
                                        },
                                        "id": 904,
                                        "isConstant": false,
                                        "isLValue": true,
                                        "isPure": false,
                                        "lValueRequested": false,
                                        "memberLocation": "12178:9:3",
                                        "memberName": "voteCount",
                                        "nodeType": "MemberAccess",
                                        "referencedDeclaration": 388,
                                        "src": "12144:43:3",
                                        "typeDescriptions": {
                                          "typeIdentifier": "t_uint256",
                                          "typeString": "uint256"
                                        }
                                      },
                                      "src": "12127:60:3",
                                      "typeDescriptions": {
                                        "typeIdentifier": "t_uint256",
                                        "typeString": "uint256"
                                      }
                                    },
                                    "id": 906,
                                    "nodeType": "ExpressionStatement",
                                    "src": "12127:60:3"
                                  },
                                  {
                                    "expression": {
                                      "id": 909,
                                      "isConstant": false,
                                      "isLValue": false,
                                      "isPure": false,
                                      "lValueRequested": false,
                                      "leftHandSide": {
                                        "id": 907,
                                        "name": "_winnersCount",
                                        "nodeType": "Identifier",
                                        "overloadedDeclarations": [],
                                        "referencedDeclaration": 855,
                                        "src": "12205:13:3",
                                        "typeDescriptions": {
                                          "typeIdentifier": "t_uint256",
                                          "typeString": "uint256"
                                        }
                                      },
                                      "nodeType": "Assignment",
                                      "operator": "=",
                                      "rightHandSide": {
                                        "hexValue": "31",
                                        "id": 908,
                                        "isConstant": false,
                                        "isLValue": false,
                                        "isPure": true,
                                        "kind": "number",
                                        "lValueRequested": false,
                                        "nodeType": "Literal",
                                        "src": "12221:1:3",
                                        "typeDescriptions": {
                                          "typeIdentifier": "t_rational_1_by_1",
                                          "typeString": "int_const 1"
                                        },
                                        "value": "1"
                                      },
                                      "src": "12205:17:3",
                                      "typeDescriptions": {
                                        "typeIdentifier": "t_uint256",
                                        "typeString": "uint256"
                                      }
                                    },
                                    "id": 910,
                                    "nodeType": "ExpressionStatement",
                                    "src": "12205:17:3"
                                  },
                                  {
                                    "expression": {
                                      "id": 922,
                                      "isConstant": false,
                                      "isLValue": false,
                                      "isPure": false,
                                      "lValueRequested": false,
                                      "leftHandSide": {
                                        "baseExpression": {
                                          "id": 911,
                                          "name": "_winningProposals",
                                          "nodeType": "Identifier",
                                          "overloadedDeclarations": [],
                                          "referencedDeclaration": 862,
                                          "src": "12240:17:3",
                                          "typeDescriptions": {
                                            "typeIdentifier": "t_array$_t_struct$_Proposal_$391_memory_ptr_$dyn_memory_ptr",
                                            "typeString": "struct Voting.Proposal memory[] memory"
                                          }
                                        },
                                        "id": 915,
                                        "indexExpression": {
                                          "commonType": {
                                            "typeIdentifier": "t_uint256",
                                            "typeString": "uint256"
                                          },
                                          "id": 914,
                                          "isConstant": false,
                                          "isLValue": false,
                                          "isPure": false,
                                          "lValueRequested": false,
                                          "leftExpression": {
                                            "id": 912,
                                            "name": "_winnersCount",
                                            "nodeType": "Identifier",
                                            "overloadedDeclarations": [],
                                            "referencedDeclaration": 855,
                                            "src": "12258:13:3",
                                            "typeDescriptions": {
                                              "typeIdentifier": "t_uint256",
                                              "typeString": "uint256"
                                            }
                                          },
                                          "nodeType": "BinaryOperation",
                                          "operator": "-",
                                          "rightExpression": {
                                            "hexValue": "31",
                                            "id": 913,
                                            "isConstant": false,
                                            "isLValue": false,
                                            "isPure": true,
                                            "kind": "number",
                                            "lValueRequested": false,
                                            "nodeType": "Literal",
                                            "src": "12274:1:3",
                                            "typeDescriptions": {
                                              "typeIdentifier": "t_rational_1_by_1",
                                              "typeString": "int_const 1"
                                            },
                                            "value": "1"
                                          },
                                          "src": "12258:17:3",
                                          "typeDescriptions": {
                                            "typeIdentifier": "t_uint256",
                                            "typeString": "uint256"
                                          }
                                        },
                                        "isConstant": false,
                                        "isLValue": true,
                                        "isPure": false,
                                        "lValueRequested": true,
                                        "nodeType": "IndexAccess",
                                        "src": "12240:36:3",
                                        "typeDescriptions": {
                                          "typeIdentifier": "t_struct$_Proposal_$391_memory_ptr",
                                          "typeString": "struct Voting.Proposal memory"
                                        }
                                      },
                                      "nodeType": "Assignment",
                                      "operator": "=",
                                      "rightHandSide": {
                                        "baseExpression": {
                                          "expression": {
                                            "baseExpression": {
                                              "id": 916,
                                              "name": "sessions",
                                              "nodeType": "Identifier",
                                              "overloadedDeclarations": [],
                                              "referencedDeclaration": 480,
                                              "src": "12279:8:3",
                                              "typeDescriptions": {
                                                "typeIdentifier": "t_mapping$_t_uint256_$_t_struct$_Session_$418_storage_$",
                                                "typeString": "mapping(uint256 => struct Voting.Session storage ref)"
                                              }
                                            },
                                            "id": 918,
                                            "indexExpression": {
                                              "id": 917,
                                              "name": "_sessionId",
                                              "nodeType": "Identifier",
                                              "overloadedDeclarations": [],
                                              "referencedDeclaration": 840,
                                              "src": "12288:10:3",
                                              "typeDescriptions": {
                                                "typeIdentifier": "t_uint256",
                                                "typeString": "uint256"
                                              }
                                            },
                                            "isConstant": false,
                                            "isLValue": true,
                                            "isPure": false,
                                            "lValueRequested": false,
                                            "nodeType": "IndexAccess",
                                            "src": "12279:20:3",
                                            "typeDescriptions": {
                                              "typeIdentifier": "t_struct$_Session_$418_storage",
                                              "typeString": "struct Voting.Session storage ref"
                                            }
                                          },
                                          "id": 919,
                                          "isConstant": false,
                                          "isLValue": true,
                                          "isPure": false,
                                          "lValueRequested": false,
                                          "memberLocation": "12300:9:3",
                                          "memberName": "proposals",
                                          "nodeType": "MemberAccess",
                                          "referencedDeclaration": 412,
                                          "src": "12279:30:3",
                                          "typeDescriptions": {
                                            "typeIdentifier": "t_array$_t_struct$_Proposal_$391_storage_$dyn_storage",
                                            "typeString": "struct Voting.Proposal storage ref[] storage ref"
                                          }
                                        },
                                        "id": 921,
                                        "indexExpression": {
                                          "id": 920,
                                          "name": "i",
                                          "nodeType": "Identifier",
                                          "overloadedDeclarations": [],
                                          "referencedDeclaration": 875,
                                          "src": "12310:1:3",
                                          "typeDescriptions": {
                                            "typeIdentifier": "t_uint256",
                                            "typeString": "uint256"
                                          }
                                        },
                                        "isConstant": false,
                                        "isLValue": true,
                                        "isPure": false,
                                        "lValueRequested": false,
                                        "nodeType": "IndexAccess",
                                        "src": "12279:33:3",
                                        "typeDescriptions": {
                                          "typeIdentifier": "t_struct$_Proposal_$391_storage",
                                          "typeString": "struct Voting.Proposal storage ref"
                                        }
                                      },
                                      "src": "12240:72:3",
                                      "typeDescriptions": {
                                        "typeIdentifier": "t_struct$_Proposal_$391_memory_ptr",
                                        "typeString": "struct Voting.Proposal memory"
                                      }
                                    },
                                    "id": 923,
                                    "nodeType": "ExpressionStatement",
                                    "src": "12240:72:3"
                                  }
                                ]
                              }
                            }
                          ]
                        },
                        "condition": {
                          "commonType": {
                            "typeIdentifier": "t_uint256",
                            "typeString": "uint256"
                          },
                          "id": 884,
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": false,
                          "lValueRequested": false,
                          "leftExpression": {
                            "id": 878,
                            "name": "i",
                            "nodeType": "Identifier",
                            "overloadedDeclarations": [],
                            "referencedDeclaration": 875,
                            "src": "11981:1:3",
                            "typeDescriptions": {
                              "typeIdentifier": "t_uint256",
                              "typeString": "uint256"
                            }
                          },
                          "nodeType": "BinaryOperation",
                          "operator": "<",
                          "rightExpression": {
                            "expression": {
                              "expression": {
                                "baseExpression": {
                                  "id": 879,
                                  "name": "sessions",
                                  "nodeType": "Identifier",
                                  "overloadedDeclarations": [],
                                  "referencedDeclaration": 480,
                                  "src": "11985:8:3",
                                  "typeDescriptions": {
                                    "typeIdentifier": "t_mapping$_t_uint256_$_t_struct$_Session_$418_storage_$",
                                    "typeString": "mapping(uint256 => struct Voting.Session storage ref)"
                                  }
                                },
                                "id": 881,
                                "indexExpression": {
                                  "id": 880,
                                  "name": "_sessionId",
                                  "nodeType": "Identifier",
                                  "overloadedDeclarations": [],
                                  "referencedDeclaration": 840,
                                  "src": "11994:10:3",
                                  "typeDescriptions": {
                                    "typeIdentifier": "t_uint256",
                                    "typeString": "uint256"
                                  }
                                },
                                "isConstant": false,
                                "isLValue": true,
                                "isPure": false,
                                "lValueRequested": false,
                                "nodeType": "IndexAccess",
                                "src": "11985:20:3",
                                "typeDescriptions": {
                                  "typeIdentifier": "t_struct$_Session_$418_storage",
                                  "typeString": "struct Voting.Session storage ref"
                                }
                              },
                              "id": 882,
                              "isConstant": false,
                              "isLValue": true,
                              "isPure": false,
                              "lValueRequested": false,
                              "memberLocation": "12006:9:3",
                              "memberName": "proposals",
                              "nodeType": "MemberAccess",
                              "referencedDeclaration": 412,
                              "src": "11985:30:3",
                              "typeDescriptions": {
                                "typeIdentifier": "t_array$_t_struct$_Proposal_$391_storage_$dyn_storage",
                                "typeString": "struct Voting.Proposal storage ref[] storage ref"
                              }
                            },
                            "id": 883,
                            "isConstant": false,
                            "isLValue": false,
                            "isPure": false,
                            "lValueRequested": false,
                            "memberLocation": "12016:6:3",
                            "memberName": "length",
                            "nodeType": "MemberAccess",
                            "src": "11985:37:3",
                            "typeDescriptions": {
                              "typeIdentifier": "t_uint256",
                              "typeString": "uint256"
                            }
                          },
                          "src": "11981:41:3",
                          "typeDescriptions": {
                            "typeIdentifier": "t_bool",
                            "typeString": "bool"
                          }
                        },
                        "id": 964,
                        "initializationExpression": {
                          "assignments": [875],
                          "declarations": [
                            {
                              "constant": false,
                              "id": 875,
                              "mutability": "mutable",
                              "name": "i",
                              "nameLocation": "11974:1:3",
                              "nodeType": "VariableDeclaration",
                              "scope": 964,
                              "src": "11969:6:3",
                              "stateVariable": false,
                              "storageLocation": "default",
                              "typeDescriptions": {
                                "typeIdentifier": "t_uint256",
                                "typeString": "uint256"
                              },
                              "typeName": {
                                "id": 874,
                                "name": "uint",
                                "nodeType": "ElementaryTypeName",
                                "src": "11969:4:3",
                                "typeDescriptions": {
                                  "typeIdentifier": "t_uint256",
                                  "typeString": "uint256"
                                }
                              },
                              "visibility": "internal"
                            }
                          ],
                          "id": 877,
                          "initialValue": {
                            "hexValue": "32",
                            "id": 876,
                            "isConstant": false,
                            "isLValue": false,
                            "isPure": true,
                            "kind": "number",
                            "lValueRequested": false,
                            "nodeType": "Literal",
                            "src": "11978:1:3",
                            "typeDescriptions": {
                              "typeIdentifier": "t_rational_2_by_1",
                              "typeString": "int_const 2"
                            },
                            "value": "2"
                          },
                          "nodeType": "VariableDeclarationStatement",
                          "src": "11969:10:3"
                        },
                        "loopExpression": {
                          "expression": {
                            "id": 886,
                            "isConstant": false,
                            "isLValue": false,
                            "isPure": false,
                            "lValueRequested": false,
                            "nodeType": "UnaryOperation",
                            "operator": "++",
                            "prefix": false,
                            "src": "12024:3:3",
                            "subExpression": {
                              "id": 885,
                              "name": "i",
                              "nodeType": "Identifier",
                              "overloadedDeclarations": [],
                              "referencedDeclaration": 875,
                              "src": "12024:1:3",
                              "typeDescriptions": {
                                "typeIdentifier": "t_uint256",
                                "typeString": "uint256"
                              }
                            },
                            "typeDescriptions": {
                              "typeIdentifier": "t_uint256",
                              "typeString": "uint256"
                            }
                          },
                          "id": 887,
                          "nodeType": "ExpressionStatement",
                          "src": "12024:3:3"
                        },
                        "nodeType": "ForStatement",
                        "src": "11964:635:3"
                      },
                      {
                        "body": {
                          "id": 985,
                          "nodeType": "Block",
                          "src": "12650:89:3",
                          "statements": [
                            {
                              "expression": {
                                "arguments": [
                                  {
                                    "baseExpression": {
                                      "id": 980,
                                      "name": "_winningProposals",
                                      "nodeType": "Identifier",
                                      "overloadedDeclarations": [],
                                      "referencedDeclaration": 862,
                                      "src": "12707:17:3",
                                      "typeDescriptions": {
                                        "typeIdentifier": "t_array$_t_struct$_Proposal_$391_memory_ptr_$dyn_memory_ptr",
                                        "typeString": "struct Voting.Proposal memory[] memory"
                                      }
                                    },
                                    "id": 982,
                                    "indexExpression": {
                                      "id": 981,
                                      "name": "i",
                                      "nodeType": "Identifier",
                                      "overloadedDeclarations": [],
                                      "referencedDeclaration": 966,
                                      "src": "12725:1:3",
                                      "typeDescriptions": {
                                        "typeIdentifier": "t_uint256",
                                        "typeString": "uint256"
                                      }
                                    },
                                    "isConstant": false,
                                    "isLValue": true,
                                    "isPure": false,
                                    "lValueRequested": false,
                                    "nodeType": "IndexAccess",
                                    "src": "12707:20:3",
                                    "typeDescriptions": {
                                      "typeIdentifier": "t_struct$_Proposal_$391_memory_ptr",
                                      "typeString": "struct Voting.Proposal memory"
                                    }
                                  }
                                ],
                                "expression": {
                                  "argumentTypes": [
                                    {
                                      "typeIdentifier": "t_struct$_Proposal_$391_memory_ptr",
                                      "typeString": "struct Voting.Proposal memory"
                                    }
                                  ],
                                  "expression": {
                                    "expression": {
                                      "baseExpression": {
                                        "id": 975,
                                        "name": "sessions",
                                        "nodeType": "Identifier",
                                        "overloadedDeclarations": [],
                                        "referencedDeclaration": 480,
                                        "src": "12664:8:3",
                                        "typeDescriptions": {
                                          "typeIdentifier": "t_mapping$_t_uint256_$_t_struct$_Session_$418_storage_$",
                                          "typeString": "mapping(uint256 => struct Voting.Session storage ref)"
                                        }
                                      },
                                      "id": 977,
                                      "indexExpression": {
                                        "id": 976,
                                        "name": "_sessionId",
                                        "nodeType": "Identifier",
                                        "overloadedDeclarations": [],
                                        "referencedDeclaration": 840,
                                        "src": "12673:10:3",
                                        "typeDescriptions": {
                                          "typeIdentifier": "t_uint256",
                                          "typeString": "uint256"
                                        }
                                      },
                                      "isConstant": false,
                                      "isLValue": true,
                                      "isPure": false,
                                      "lValueRequested": false,
                                      "nodeType": "IndexAccess",
                                      "src": "12664:20:3",
                                      "typeDescriptions": {
                                        "typeIdentifier": "t_struct$_Session_$418_storage",
                                        "typeString": "struct Voting.Session storage ref"
                                      }
                                    },
                                    "id": 978,
                                    "isConstant": false,
                                    "isLValue": true,
                                    "isPure": false,
                                    "lValueRequested": false,
                                    "memberLocation": "12685:16:3",
                                    "memberName": "winningProposals",
                                    "nodeType": "MemberAccess",
                                    "referencedDeclaration": 417,
                                    "src": "12664:37:3",
                                    "typeDescriptions": {
                                      "typeIdentifier": "t_array$_t_struct$_Proposal_$391_storage_$dyn_storage",
                                      "typeString": "struct Voting.Proposal storage ref[] storage ref"
                                    }
                                  },
                                  "id": 979,
                                  "isConstant": false,
                                  "isLValue": false,
                                  "isPure": false,
                                  "lValueRequested": false,
                                  "memberLocation": "12702:4:3",
                                  "memberName": "push",
                                  "nodeType": "MemberAccess",
                                  "src": "12664:42:3",
                                  "typeDescriptions": {
                                    "typeIdentifier": "t_function_arraypush_nonpayable$_t_array$_t_struct$_Proposal_$391_storage_$dyn_storage_ptr_$_t_struct$_Proposal_$391_storage_$returns$__$bound_to$_t_array$_t_struct$_Proposal_$391_storage_$dyn_storage_ptr_$",
                                    "typeString": "function (struct Voting.Proposal storage ref[] storage pointer,struct Voting.Proposal storage ref)"
                                  }
                                },
                                "id": 983,
                                "isConstant": false,
                                "isLValue": false,
                                "isPure": false,
                                "kind": "functionCall",
                                "lValueRequested": false,
                                "nameLocations": [],
                                "names": [],
                                "nodeType": "FunctionCall",
                                "src": "12664:64:3",
                                "tryCall": false,
                                "typeDescriptions": {
                                  "typeIdentifier": "t_tuple$__$",
                                  "typeString": "tuple()"
                                }
                              },
                              "id": 984,
                              "nodeType": "ExpressionStatement",
                              "src": "12664:64:3"
                            }
                          ]
                        },
                        "condition": {
                          "commonType": {
                            "typeIdentifier": "t_uint256",
                            "typeString": "uint256"
                          },
                          "id": 971,
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": false,
                          "lValueRequested": false,
                          "leftExpression": {
                            "id": 969,
                            "name": "i",
                            "nodeType": "Identifier",
                            "overloadedDeclarations": [],
                            "referencedDeclaration": 966,
                            "src": "12626:1:3",
                            "typeDescriptions": {
                              "typeIdentifier": "t_uint256",
                              "typeString": "uint256"
                            }
                          },
                          "nodeType": "BinaryOperation",
                          "operator": "<",
                          "rightExpression": {
                            "id": 970,
                            "name": "_winnersCount",
                            "nodeType": "Identifier",
                            "overloadedDeclarations": [],
                            "referencedDeclaration": 855,
                            "src": "12630:13:3",
                            "typeDescriptions": {
                              "typeIdentifier": "t_uint256",
                              "typeString": "uint256"
                            }
                          },
                          "src": "12626:17:3",
                          "typeDescriptions": {
                            "typeIdentifier": "t_bool",
                            "typeString": "bool"
                          }
                        },
                        "id": 986,
                        "initializationExpression": {
                          "assignments": [966],
                          "declarations": [
                            {
                              "constant": false,
                              "id": 966,
                              "mutability": "mutable",
                              "name": "i",
                              "nameLocation": "12619:1:3",
                              "nodeType": "VariableDeclaration",
                              "scope": 986,
                              "src": "12614:6:3",
                              "stateVariable": false,
                              "storageLocation": "default",
                              "typeDescriptions": {
                                "typeIdentifier": "t_uint256",
                                "typeString": "uint256"
                              },
                              "typeName": {
                                "id": 965,
                                "name": "uint",
                                "nodeType": "ElementaryTypeName",
                                "src": "12614:4:3",
                                "typeDescriptions": {
                                  "typeIdentifier": "t_uint256",
                                  "typeString": "uint256"
                                }
                              },
                              "visibility": "internal"
                            }
                          ],
                          "id": 968,
                          "initialValue": {
                            "hexValue": "30",
                            "id": 967,
                            "isConstant": false,
                            "isLValue": false,
                            "isPure": true,
                            "kind": "number",
                            "lValueRequested": false,
                            "nodeType": "Literal",
                            "src": "12623:1:3",
                            "typeDescriptions": {
                              "typeIdentifier": "t_rational_0_by_1",
                              "typeString": "int_const 0"
                            },
                            "value": "0"
                          },
                          "nodeType": "VariableDeclarationStatement",
                          "src": "12614:10:3"
                        },
                        "loopExpression": {
                          "expression": {
                            "id": 973,
                            "isConstant": false,
                            "isLValue": false,
                            "isPure": false,
                            "lValueRequested": false,
                            "nodeType": "UnaryOperation",
                            "operator": "++",
                            "prefix": false,
                            "src": "12645:3:3",
                            "subExpression": {
                              "id": 972,
                              "name": "i",
                              "nodeType": "Identifier",
                              "overloadedDeclarations": [],
                              "referencedDeclaration": 966,
                              "src": "12645:1:3",
                              "typeDescriptions": {
                                "typeIdentifier": "t_uint256",
                                "typeString": "uint256"
                              }
                            },
                            "typeDescriptions": {
                              "typeIdentifier": "t_uint256",
                              "typeString": "uint256"
                            }
                          },
                          "id": 974,
                          "nodeType": "ExpressionStatement",
                          "src": "12645:3:3"
                        },
                        "nodeType": "ForStatement",
                        "src": "12609:130:3"
                      },
                      {
                        "expression": {
                          "id": 993,
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": false,
                          "lValueRequested": false,
                          "leftHandSide": {
                            "expression": {
                              "baseExpression": {
                                "id": 987,
                                "name": "sessions",
                                "nodeType": "Identifier",
                                "overloadedDeclarations": [],
                                "referencedDeclaration": 480,
                                "src": "12749:8:3",
                                "typeDescriptions": {
                                  "typeIdentifier": "t_mapping$_t_uint256_$_t_struct$_Session_$418_storage_$",
                                  "typeString": "mapping(uint256 => struct Voting.Session storage ref)"
                                }
                              },
                              "id": 989,
                              "indexExpression": {
                                "id": 988,
                                "name": "_sessionId",
                                "nodeType": "Identifier",
                                "overloadedDeclarations": [],
                                "referencedDeclaration": 840,
                                "src": "12758:10:3",
                                "typeDescriptions": {
                                  "typeIdentifier": "t_uint256",
                                  "typeString": "uint256"
                                }
                              },
                              "isConstant": false,
                              "isLValue": true,
                              "isPure": false,
                              "lValueRequested": false,
                              "nodeType": "IndexAccess",
                              "src": "12749:20:3",
                              "typeDescriptions": {
                                "typeIdentifier": "t_struct$_Session_$418_storage",
                                "typeString": "struct Voting.Session storage ref"
                              }
                            },
                            "id": 990,
                            "isConstant": false,
                            "isLValue": true,
                            "isPure": false,
                            "lValueRequested": true,
                            "memberLocation": "12770:6:3",
                            "memberName": "status",
                            "nodeType": "MemberAccess",
                            "referencedDeclaration": 395,
                            "src": "12749:27:3",
                            "typeDescriptions": {
                              "typeIdentifier": "t_enum$_WorkflowStatus_$375",
                              "typeString": "enum Voting.WorkflowStatus"
                            }
                          },
                          "nodeType": "Assignment",
                          "operator": "=",
                          "rightHandSide": {
                            "expression": {
                              "id": 991,
                              "name": "WorkflowStatus",
                              "nodeType": "Identifier",
                              "overloadedDeclarations": [],
                              "referencedDeclaration": 375,
                              "src": "12779:14:3",
                              "typeDescriptions": {
                                "typeIdentifier": "t_type$_t_enum$_WorkflowStatus_$375_$",
                                "typeString": "type(enum Voting.WorkflowStatus)"
                              }
                            },
                            "id": 992,
                            "isConstant": false,
                            "isLValue": false,
                            "isPure": true,
                            "lValueRequested": false,
                            "memberLocation": "12794:12:3",
                            "memberName": "VotesTallied",
                            "nodeType": "MemberAccess",
                            "referencedDeclaration": 374,
                            "src": "12779:27:3",
                            "typeDescriptions": {
                              "typeIdentifier": "t_enum$_WorkflowStatus_$375",
                              "typeString": "enum Voting.WorkflowStatus"
                            }
                          },
                          "src": "12749:57:3",
                          "typeDescriptions": {
                            "typeIdentifier": "t_enum$_WorkflowStatus_$375",
                            "typeString": "enum Voting.WorkflowStatus"
                          }
                        },
                        "id": 994,
                        "nodeType": "ExpressionStatement",
                        "src": "12749:57:3"
                      },
                      {
                        "eventCall": {
                          "arguments": [
                            {
                              "id": 996,
                              "name": "_sessionId",
                              "nodeType": "Identifier",
                              "overloadedDeclarations": [],
                              "referencedDeclaration": 840,
                              "src": "12842:10:3",
                              "typeDescriptions": {
                                "typeIdentifier": "t_uint256",
                                "typeString": "uint256"
                              }
                            },
                            {
                              "expression": {
                                "id": 997,
                                "name": "WorkflowStatus",
                                "nodeType": "Identifier",
                                "overloadedDeclarations": [],
                                "referencedDeclaration": 375,
                                "src": "12854:14:3",
                                "typeDescriptions": {
                                  "typeIdentifier": "t_type$_t_enum$_WorkflowStatus_$375_$",
                                  "typeString": "type(enum Voting.WorkflowStatus)"
                                }
                              },
                              "id": 998,
                              "isConstant": false,
                              "isLValue": false,
                              "isPure": true,
                              "lValueRequested": false,
                              "memberLocation": "12869:18:3",
                              "memberName": "VotingSessionEnded",
                              "nodeType": "MemberAccess",
                              "referencedDeclaration": 373,
                              "src": "12854:33:3",
                              "typeDescriptions": {
                                "typeIdentifier": "t_enum$_WorkflowStatus_$375",
                                "typeString": "enum Voting.WorkflowStatus"
                              }
                            },
                            {
                              "expression": {
                                "id": 999,
                                "name": "WorkflowStatus",
                                "nodeType": "Identifier",
                                "overloadedDeclarations": [],
                                "referencedDeclaration": 375,
                                "src": "12889:14:3",
                                "typeDescriptions": {
                                  "typeIdentifier": "t_type$_t_enum$_WorkflowStatus_$375_$",
                                  "typeString": "type(enum Voting.WorkflowStatus)"
                                }
                              },
                              "id": 1000,
                              "isConstant": false,
                              "isLValue": false,
                              "isPure": true,
                              "lValueRequested": false,
                              "memberLocation": "12904:12:3",
                              "memberName": "VotesTallied",
                              "nodeType": "MemberAccess",
                              "referencedDeclaration": 374,
                              "src": "12889:27:3",
                              "typeDescriptions": {
                                "typeIdentifier": "t_enum$_WorkflowStatus_$375",
                                "typeString": "enum Voting.WorkflowStatus"
                              }
                            }
                          ],
                          "expression": {
                            "argumentTypes": [
                              {
                                "typeIdentifier": "t_uint256",
                                "typeString": "uint256"
                              },
                              {
                                "typeIdentifier": "t_enum$_WorkflowStatus_$375",
                                "typeString": "enum Voting.WorkflowStatus"
                              },
                              {
                                "typeIdentifier": "t_enum$_WorkflowStatus_$375",
                                "typeString": "enum Voting.WorkflowStatus"
                              }
                            ],
                            "id": 995,
                            "name": "WorkflowStatusChange",
                            "nodeType": "Identifier",
                            "overloadedDeclarations": [],
                            "referencedDeclaration": 443,
                            "src": "12821:20:3",
                            "typeDescriptions": {
                              "typeIdentifier": "t_function_event_nonpayable$_t_uint256_$_t_enum$_WorkflowStatus_$375_$_t_enum$_WorkflowStatus_$375_$returns$__$",
                              "typeString": "function (uint256,enum Voting.WorkflowStatus,enum Voting.WorkflowStatus)"
                            }
                          },
                          "id": 1001,
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": false,
                          "kind": "functionCall",
                          "lValueRequested": false,
                          "nameLocations": [],
                          "names": [],
                          "nodeType": "FunctionCall",
                          "src": "12821:96:3",
                          "tryCall": false,
                          "typeDescriptions": {
                            "typeIdentifier": "t_tuple$__$",
                            "typeString": "tuple()"
                          }
                        },
                        "id": 1002,
                        "nodeType": "EmitStatement",
                        "src": "12816:101:3"
                      },
                      {
                        "assignments": [1004],
                        "declarations": [
                          {
                            "constant": false,
                            "id": 1004,
                            "mutability": "mutable",
                            "name": "abstention",
                            "nameLocation": "12933:10:3",
                            "nodeType": "VariableDeclaration",
                            "scope": 1047,
                            "src": "12928:15:3",
                            "stateVariable": false,
                            "storageLocation": "default",
                            "typeDescriptions": {
                              "typeIdentifier": "t_uint256",
                              "typeString": "uint256"
                            },
                            "typeName": {
                              "id": 1003,
                              "name": "uint",
                              "nodeType": "ElementaryTypeName",
                              "src": "12928:4:3",
                              "typeDescriptions": {
                                "typeIdentifier": "t_uint256",
                                "typeString": "uint256"
                              }
                            },
                            "visibility": "internal"
                          }
                        ],
                        "id": 1022,
                        "initialValue": {
                          "condition": {
                            "commonType": {
                              "typeIdentifier": "t_uint256",
                              "typeString": "uint256"
                            },
                            "id": 1010,
                            "isConstant": false,
                            "isLValue": false,
                            "isPure": false,
                            "lValueRequested": false,
                            "leftExpression": {
                              "expression": {
                                "baseExpression": {
                                  "id": 1005,
                                  "name": "sessions",
                                  "nodeType": "Identifier",
                                  "overloadedDeclarations": [],
                                  "referencedDeclaration": 480,
                                  "src": "12946:8:3",
                                  "typeDescriptions": {
                                    "typeIdentifier": "t_mapping$_t_uint256_$_t_struct$_Session_$418_storage_$",
                                    "typeString": "mapping(uint256 => struct Voting.Session storage ref)"
                                  }
                                },
                                "id": 1007,
                                "indexExpression": {
                                  "id": 1006,
                                  "name": "_sessionId",
                                  "nodeType": "Identifier",
                                  "overloadedDeclarations": [],
                                  "referencedDeclaration": 840,
                                  "src": "12955:10:3",
                                  "typeDescriptions": {
                                    "typeIdentifier": "t_uint256",
                                    "typeString": "uint256"
                                  }
                                },
                                "isConstant": false,
                                "isLValue": true,
                                "isPure": false,
                                "lValueRequested": false,
                                "nodeType": "IndexAccess",
                                "src": "12946:20:3",
                                "typeDescriptions": {
                                  "typeIdentifier": "t_struct$_Session_$418_storage",
                                  "typeString": "struct Voting.Session storage ref"
                                }
                              },
                              "id": 1008,
                              "isConstant": false,
                              "isLValue": true,
                              "isPure": false,
                              "lValueRequested": false,
                              "memberLocation": "12967:11:3",
                              "memberName": "votersCount",
                              "nodeType": "MemberAccess",
                              "referencedDeclaration": 404,
                              "src": "12946:32:3",
                              "typeDescriptions": {
                                "typeIdentifier": "t_uint256",
                                "typeString": "uint256"
                              }
                            },
                            "nodeType": "BinaryOperation",
                            "operator": ">",
                            "rightExpression": {
                              "hexValue": "30",
                              "id": 1009,
                              "isConstant": false,
                              "isLValue": false,
                              "isPure": true,
                              "kind": "number",
                              "lValueRequested": false,
                              "nodeType": "Literal",
                              "src": "12981:1:3",
                              "typeDescriptions": {
                                "typeIdentifier": "t_rational_0_by_1",
                                "typeString": "int_const 0"
                              },
                              "value": "0"
                            },
                            "src": "12946:36:3",
                            "typeDescriptions": {
                              "typeIdentifier": "t_bool",
                              "typeString": "bool"
                            }
                          },
                          "falseExpression": {
                            "hexValue": "30",
                            "id": 1020,
                            "isConstant": false,
                            "isLValue": false,
                            "isPure": true,
                            "kind": "number",
                            "lValueRequested": false,
                            "nodeType": "Literal",
                            "src": "13059:1:3",
                            "typeDescriptions": {
                              "typeIdentifier": "t_rational_0_by_1",
                              "typeString": "int_const 0"
                            },
                            "value": "0"
                          },
                          "id": 1021,
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": false,
                          "lValueRequested": false,
                          "nodeType": "Conditional",
                          "src": "12946:114:3",
                          "trueExpression": {
                            "commonType": {
                              "typeIdentifier": "t_uint256",
                              "typeString": "uint256"
                            },
                            "id": 1019,
                            "isConstant": false,
                            "isLValue": false,
                            "isPure": false,
                            "lValueRequested": false,
                            "leftExpression": {
                              "expression": {
                                "baseExpression": {
                                  "id": 1011,
                                  "name": "sessions",
                                  "nodeType": "Identifier",
                                  "overloadedDeclarations": [],
                                  "referencedDeclaration": 480,
                                  "src": "12985:8:3",
                                  "typeDescriptions": {
                                    "typeIdentifier": "t_mapping$_t_uint256_$_t_struct$_Session_$418_storage_$",
                                    "typeString": "mapping(uint256 => struct Voting.Session storage ref)"
                                  }
                                },
                                "id": 1013,
                                "indexExpression": {
                                  "id": 1012,
                                  "name": "_sessionId",
                                  "nodeType": "Identifier",
                                  "overloadedDeclarations": [],
                                  "referencedDeclaration": 840,
                                  "src": "12994:10:3",
                                  "typeDescriptions": {
                                    "typeIdentifier": "t_uint256",
                                    "typeString": "uint256"
                                  }
                                },
                                "isConstant": false,
                                "isLValue": true,
                                "isPure": false,
                                "lValueRequested": false,
                                "nodeType": "IndexAccess",
                                "src": "12985:20:3",
                                "typeDescriptions": {
                                  "typeIdentifier": "t_struct$_Session_$418_storage",
                                  "typeString": "struct Voting.Session storage ref"
                                }
                              },
                              "id": 1014,
                              "isConstant": false,
                              "isLValue": true,
                              "isPure": false,
                              "lValueRequested": false,
                              "memberLocation": "13006:11:3",
                              "memberName": "votersCount",
                              "nodeType": "MemberAccess",
                              "referencedDeclaration": 404,
                              "src": "12985:32:3",
                              "typeDescriptions": {
                                "typeIdentifier": "t_uint256",
                                "typeString": "uint256"
                              }
                            },
                            "nodeType": "BinaryOperation",
                            "operator": "-",
                            "rightExpression": {
                              "expression": {
                                "baseExpression": {
                                  "id": 1015,
                                  "name": "sessions",
                                  "nodeType": "Identifier",
                                  "overloadedDeclarations": [],
                                  "referencedDeclaration": 480,
                                  "src": "13020:8:3",
                                  "typeDescriptions": {
                                    "typeIdentifier": "t_mapping$_t_uint256_$_t_struct$_Session_$418_storage_$",
                                    "typeString": "mapping(uint256 => struct Voting.Session storage ref)"
                                  }
                                },
                                "id": 1017,
                                "indexExpression": {
                                  "id": 1016,
                                  "name": "_sessionId",
                                  "nodeType": "Identifier",
                                  "overloadedDeclarations": [],
                                  "referencedDeclaration": 840,
                                  "src": "13029:10:3",
                                  "typeDescriptions": {
                                    "typeIdentifier": "t_uint256",
                                    "typeString": "uint256"
                                  }
                                },
                                "isConstant": false,
                                "isLValue": true,
                                "isPure": false,
                                "lValueRequested": false,
                                "nodeType": "IndexAccess",
                                "src": "13020:20:3",
                                "typeDescriptions": {
                                  "typeIdentifier": "t_struct$_Session_$418_storage",
                                  "typeString": "struct Voting.Session storage ref"
                                }
                              },
                              "id": 1018,
                              "isConstant": false,
                              "isLValue": true,
                              "isPure": false,
                              "lValueRequested": false,
                              "memberLocation": "13041:15:3",
                              "memberName": "totalVotesCount",
                              "nodeType": "MemberAccess",
                              "referencedDeclaration": 407,
                              "src": "13020:36:3",
                              "typeDescriptions": {
                                "typeIdentifier": "t_uint256",
                                "typeString": "uint256"
                              }
                            },
                            "src": "12985:71:3",
                            "typeDescriptions": {
                              "typeIdentifier": "t_uint256",
                              "typeString": "uint256"
                            }
                          },
                          "typeDescriptions": {
                            "typeIdentifier": "t_uint256",
                            "typeString": "uint256"
                          }
                        },
                        "nodeType": "VariableDeclarationStatement",
                        "src": "12928:132:3"
                      },
                      {
                        "eventCall": {
                          "arguments": [
                            {
                              "id": 1024,
                              "name": "_sessionId",
                              "nodeType": "Identifier",
                              "overloadedDeclarations": [],
                              "referencedDeclaration": 840,
                              "src": "13088:10:3",
                              "typeDescriptions": {
                                "typeIdentifier": "t_uint256",
                                "typeString": "uint256"
                              }
                            },
                            {
                              "expression": {
                                "baseExpression": {
                                  "id": 1025,
                                  "name": "sessions",
                                  "nodeType": "Identifier",
                                  "overloadedDeclarations": [],
                                  "referencedDeclaration": 480,
                                  "src": "13100:8:3",
                                  "typeDescriptions": {
                                    "typeIdentifier": "t_mapping$_t_uint256_$_t_struct$_Session_$418_storage_$",
                                    "typeString": "mapping(uint256 => struct Voting.Session storage ref)"
                                  }
                                },
                                "id": 1027,
                                "indexExpression": {
                                  "id": 1026,
                                  "name": "_sessionId",
                                  "nodeType": "Identifier",
                                  "overloadedDeclarations": [],
                                  "referencedDeclaration": 840,
                                  "src": "13109:10:3",
                                  "typeDescriptions": {
                                    "typeIdentifier": "t_uint256",
                                    "typeString": "uint256"
                                  }
                                },
                                "isConstant": false,
                                "isLValue": true,
                                "isPure": false,
                                "lValueRequested": false,
                                "nodeType": "IndexAccess",
                                "src": "13100:20:3",
                                "typeDescriptions": {
                                  "typeIdentifier": "t_struct$_Session_$418_storage",
                                  "typeString": "struct Voting.Session storage ref"
                                }
                              },
                              "id": 1028,
                              "isConstant": false,
                              "isLValue": true,
                              "isPure": false,
                              "lValueRequested": false,
                              "memberLocation": "13121:11:3",
                              "memberName": "votersCount",
                              "nodeType": "MemberAccess",
                              "referencedDeclaration": 404,
                              "src": "13100:32:3",
                              "typeDescriptions": {
                                "typeIdentifier": "t_uint256",
                                "typeString": "uint256"
                              }
                            },
                            {
                              "expression": {
                                "baseExpression": {
                                  "id": 1029,
                                  "name": "sessions",
                                  "nodeType": "Identifier",
                                  "overloadedDeclarations": [],
                                  "referencedDeclaration": 480,
                                  "src": "13134:8:3",
                                  "typeDescriptions": {
                                    "typeIdentifier": "t_mapping$_t_uint256_$_t_struct$_Session_$418_storage_$",
                                    "typeString": "mapping(uint256 => struct Voting.Session storage ref)"
                                  }
                                },
                                "id": 1031,
                                "indexExpression": {
                                  "id": 1030,
                                  "name": "_sessionId",
                                  "nodeType": "Identifier",
                                  "overloadedDeclarations": [],
                                  "referencedDeclaration": 840,
                                  "src": "13143:10:3",
                                  "typeDescriptions": {
                                    "typeIdentifier": "t_uint256",
                                    "typeString": "uint256"
                                  }
                                },
                                "isConstant": false,
                                "isLValue": true,
                                "isPure": false,
                                "lValueRequested": false,
                                "nodeType": "IndexAccess",
                                "src": "13134:20:3",
                                "typeDescriptions": {
                                  "typeIdentifier": "t_struct$_Session_$418_storage",
                                  "typeString": "struct Voting.Session storage ref"
                                }
                              },
                              "id": 1032,
                              "isConstant": false,
                              "isLValue": true,
                              "isPure": false,
                              "lValueRequested": false,
                              "memberLocation": "13155:15:3",
                              "memberName": "totalVotesCount",
                              "nodeType": "MemberAccess",
                              "referencedDeclaration": 407,
                              "src": "13134:36:3",
                              "typeDescriptions": {
                                "typeIdentifier": "t_uint256",
                                "typeString": "uint256"
                              }
                            },
                            {
                              "expression": {
                                "baseExpression": {
                                  "expression": {
                                    "baseExpression": {
                                      "id": 1033,
                                      "name": "sessions",
                                      "nodeType": "Identifier",
                                      "overloadedDeclarations": [],
                                      "referencedDeclaration": 480,
                                      "src": "13172:8:3",
                                      "typeDescriptions": {
                                        "typeIdentifier": "t_mapping$_t_uint256_$_t_struct$_Session_$418_storage_$",
                                        "typeString": "mapping(uint256 => struct Voting.Session storage ref)"
                                      }
                                    },
                                    "id": 1035,
                                    "indexExpression": {
                                      "id": 1034,
                                      "name": "_sessionId",
                                      "nodeType": "Identifier",
                                      "overloadedDeclarations": [],
                                      "referencedDeclaration": 840,
                                      "src": "13181:10:3",
                                      "typeDescriptions": {
                                        "typeIdentifier": "t_uint256",
                                        "typeString": "uint256"
                                      }
                                    },
                                    "isConstant": false,
                                    "isLValue": true,
                                    "isPure": false,
                                    "lValueRequested": false,
                                    "nodeType": "IndexAccess",
                                    "src": "13172:20:3",
                                    "typeDescriptions": {
                                      "typeIdentifier": "t_struct$_Session_$418_storage",
                                      "typeString": "struct Voting.Session storage ref"
                                    }
                                  },
                                  "id": 1036,
                                  "isConstant": false,
                                  "isLValue": true,
                                  "isPure": false,
                                  "lValueRequested": false,
                                  "memberLocation": "13193:9:3",
                                  "memberName": "proposals",
                                  "nodeType": "MemberAccess",
                                  "referencedDeclaration": 412,
                                  "src": "13172:30:3",
                                  "typeDescriptions": {
                                    "typeIdentifier": "t_array$_t_struct$_Proposal_$391_storage_$dyn_storage",
                                    "typeString": "struct Voting.Proposal storage ref[] storage ref"
                                  }
                                },
                                "id": 1038,
                                "indexExpression": {
                                  "hexValue": "31",
                                  "id": 1037,
                                  "isConstant": false,
                                  "isLValue": false,
                                  "isPure": true,
                                  "kind": "number",
                                  "lValueRequested": false,
                                  "nodeType": "Literal",
                                  "src": "13203:1:3",
                                  "typeDescriptions": {
                                    "typeIdentifier": "t_rational_1_by_1",
                                    "typeString": "int_const 1"
                                  },
                                  "value": "1"
                                },
                                "isConstant": false,
                                "isLValue": true,
                                "isPure": false,
                                "lValueRequested": false,
                                "nodeType": "IndexAccess",
                                "src": "13172:33:3",
                                "typeDescriptions": {
                                  "typeIdentifier": "t_struct$_Proposal_$391_storage",
                                  "typeString": "struct Voting.Proposal storage ref"
                                }
                              },
                              "id": 1039,
                              "isConstant": false,
                              "isLValue": true,
                              "isPure": false,
                              "lValueRequested": false,
                              "memberLocation": "13206:9:3",
                              "memberName": "voteCount",
                              "nodeType": "MemberAccess",
                              "referencedDeclaration": 388,
                              "src": "13172:43:3",
                              "typeDescriptions": {
                                "typeIdentifier": "t_uint256",
                                "typeString": "uint256"
                              }
                            },
                            {
                              "id": 1040,
                              "name": "abstention",
                              "nodeType": "Identifier",
                              "overloadedDeclarations": [],
                              "referencedDeclaration": 1004,
                              "src": "13217:10:3",
                              "typeDescriptions": {
                                "typeIdentifier": "t_uint256",
                                "typeString": "uint256"
                              }
                            },
                            {
                              "expression": {
                                "baseExpression": {
                                  "id": 1041,
                                  "name": "sessions",
                                  "nodeType": "Identifier",
                                  "overloadedDeclarations": [],
                                  "referencedDeclaration": 480,
                                  "src": "13229:8:3",
                                  "typeDescriptions": {
                                    "typeIdentifier": "t_mapping$_t_uint256_$_t_struct$_Session_$418_storage_$",
                                    "typeString": "mapping(uint256 => struct Voting.Session storage ref)"
                                  }
                                },
                                "id": 1043,
                                "indexExpression": {
                                  "id": 1042,
                                  "name": "_sessionId",
                                  "nodeType": "Identifier",
                                  "overloadedDeclarations": [],
                                  "referencedDeclaration": 840,
                                  "src": "13238:10:3",
                                  "typeDescriptions": {
                                    "typeIdentifier": "t_uint256",
                                    "typeString": "uint256"
                                  }
                                },
                                "isConstant": false,
                                "isLValue": true,
                                "isPure": false,
                                "lValueRequested": false,
                                "nodeType": "IndexAccess",
                                "src": "13229:20:3",
                                "typeDescriptions": {
                                  "typeIdentifier": "t_struct$_Session_$418_storage",
                                  "typeString": "struct Voting.Session storage ref"
                                }
                              },
                              "id": 1044,
                              "isConstant": false,
                              "isLValue": true,
                              "isPure": false,
                              "lValueRequested": false,
                              "memberLocation": "13250:16:3",
                              "memberName": "winningProposals",
                              "nodeType": "MemberAccess",
                              "referencedDeclaration": 417,
                              "src": "13229:37:3",
                              "typeDescriptions": {
                                "typeIdentifier": "t_array$_t_struct$_Proposal_$391_storage_$dyn_storage",
                                "typeString": "struct Voting.Proposal storage ref[] storage ref"
                              }
                            }
                          ],
                          "expression": {
                            "argumentTypes": [
                              {
                                "typeIdentifier": "t_uint256",
                                "typeString": "uint256"
                              },
                              {
                                "typeIdentifier": "t_uint256",
                                "typeString": "uint256"
                              },
                              {
                                "typeIdentifier": "t_uint256",
                                "typeString": "uint256"
                              },
                              {
                                "typeIdentifier": "t_uint256",
                                "typeString": "uint256"
                              },
                              {
                                "typeIdentifier": "t_uint256",
                                "typeString": "uint256"
                              },
                              {
                                "typeIdentifier": "t_array$_t_struct$_Proposal_$391_storage_$dyn_storage",
                                "typeString": "struct Voting.Proposal storage ref[] storage ref"
                              }
                            ],
                            "id": 1023,
                            "name": "VotesTallied",
                            "nodeType": "Identifier",
                            "overloadedDeclarations": [],
                            "referencedDeclaration": 475,
                            "src": "13075:12:3",
                            "typeDescriptions": {
                              "typeIdentifier": "t_function_event_nonpayable$_t_uint256_$_t_uint256_$_t_uint256_$_t_uint256_$_t_uint256_$_t_array$_t_struct$_Proposal_$391_memory_ptr_$dyn_memory_ptr_$returns$__$",
                              "typeString": "function (uint256,uint256,uint256,uint256,uint256,struct Voting.Proposal memory[] memory)"
                            }
                          },
                          "id": 1045,
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": false,
                          "kind": "functionCall",
                          "lValueRequested": false,
                          "nameLocations": [],
                          "names": [],
                          "nodeType": "FunctionCall",
                          "src": "13075:192:3",
                          "tryCall": false,
                          "typeDescriptions": {
                            "typeIdentifier": "t_tuple$__$",
                            "typeString": "tuple()"
                          }
                        },
                        "id": 1046,
                        "nodeType": "EmitStatement",
                        "src": "13070:197:3"
                      }
                    ]
                  },
                  "documentation": {
                    "id": 838,
                    "nodeType": "StructuredDocumentation",
                    "src": "11057:372:3",
                    "text": " Administrator can trigger votes talling.\n \n @dev After votes talling, it is possible that we got many winning proposals.\n Votes talling can be triggered only by contract owner when voting session status is set to VotingSessionEnded\n An event WorkflowStatusChange is emitted\n @param _sessionId The session identifier "
                  },
                  "functionSelector": "4d318b0e",
                  "id": 1048,
                  "implemented": true,
                  "kind": "function",
                  "modifiers": [
                    {
                      "id": 843,
                      "kind": "modifierInvocation",
                      "modifierName": {
                        "id": 842,
                        "name": "onlyOwner",
                        "nameLocations": ["11480:9:3"],
                        "nodeType": "IdentifierPath",
                        "referencedDeclaration": 31,
                        "src": "11480:9:3"
                      },
                      "nodeType": "ModifierInvocation",
                      "src": "11480:9:3"
                    },
                    {
                      "arguments": [
                        {
                          "id": 845,
                          "name": "_sessionId",
                          "nodeType": "Identifier",
                          "overloadedDeclarations": [],
                          "referencedDeclaration": 840,
                          "src": "11499:10:3",
                          "typeDescriptions": {
                            "typeIdentifier": "t_uint256",
                            "typeString": "uint256"
                          }
                        },
                        {
                          "expression": {
                            "id": 846,
                            "name": "WorkflowStatus",
                            "nodeType": "Identifier",
                            "overloadedDeclarations": [],
                            "referencedDeclaration": 375,
                            "src": "11511:14:3",
                            "typeDescriptions": {
                              "typeIdentifier": "t_type$_t_enum$_WorkflowStatus_$375_$",
                              "typeString": "type(enum Voting.WorkflowStatus)"
                            }
                          },
                          "id": 847,
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": true,
                          "lValueRequested": false,
                          "memberLocation": "11526:18:3",
                          "memberName": "VotingSessionEnded",
                          "nodeType": "MemberAccess",
                          "referencedDeclaration": 373,
                          "src": "11511:33:3",
                          "typeDescriptions": {
                            "typeIdentifier": "t_enum$_WorkflowStatus_$375",
                            "typeString": "enum Voting.WorkflowStatus"
                          }
                        }
                      ],
                      "id": 848,
                      "kind": "modifierInvocation",
                      "modifierName": {
                        "id": 844,
                        "name": "statusIs",
                        "nameLocations": ["11490:8:3"],
                        "nodeType": "IdentifierPath",
                        "referencedDeclaration": 524,
                        "src": "11490:8:3"
                      },
                      "nodeType": "ModifierInvocation",
                      "src": "11490:55:3"
                    }
                  ],
                  "name": "tallyVotes",
                  "nameLocation": "11443:10:3",
                  "nodeType": "FunctionDefinition",
                  "parameters": {
                    "id": 841,
                    "nodeType": "ParameterList",
                    "parameters": [
                      {
                        "constant": false,
                        "id": 840,
                        "mutability": "mutable",
                        "name": "_sessionId",
                        "nameLocation": "11459:10:3",
                        "nodeType": "VariableDeclaration",
                        "scope": 1048,
                        "src": "11454:15:3",
                        "stateVariable": false,
                        "storageLocation": "default",
                        "typeDescriptions": {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        },
                        "typeName": {
                          "id": 839,
                          "name": "uint",
                          "nodeType": "ElementaryTypeName",
                          "src": "11454:4:3",
                          "typeDescriptions": {
                            "typeIdentifier": "t_uint256",
                            "typeString": "uint256"
                          }
                        },
                        "visibility": "internal"
                      }
                    ],
                    "src": "11453:17:3"
                  },
                  "returnParameters": {
                    "id": 849,
                    "nodeType": "ParameterList",
                    "parameters": [],
                    "src": "11546:0:3"
                  },
                  "scope": 1321,
                  "src": "11434:1840:3",
                  "stateMutability": "nonpayable",
                  "virtual": false,
                  "visibility": "external"
                },
                {
                  "body": {
                    "id": 1083,
                    "nodeType": "Block",
                    "src": "14039:197:3",
                    "statements": [
                      {
                        "expression": {
                          "arguments": [
                            {
                              "commonType": {
                                "typeIdentifier": "t_uint8",
                                "typeString": "uint8"
                              },
                              "id": 1074,
                              "isConstant": false,
                              "isLValue": false,
                              "isPure": false,
                              "lValueRequested": false,
                              "leftExpression": {
                                "expression": {
                                  "baseExpression": {
                                    "expression": {
                                      "baseExpression": {
                                        "id": 1065,
                                        "name": "sessions",
                                        "nodeType": "Identifier",
                                        "overloadedDeclarations": [],
                                        "referencedDeclaration": 480,
                                        "src": "14057:8:3",
                                        "typeDescriptions": {
                                          "typeIdentifier": "t_mapping$_t_uint256_$_t_struct$_Session_$418_storage_$",
                                          "typeString": "mapping(uint256 => struct Voting.Session storage ref)"
                                        }
                                      },
                                      "id": 1067,
                                      "indexExpression": {
                                        "id": 1066,
                                        "name": "_sessionId",
                                        "nodeType": "Identifier",
                                        "overloadedDeclarations": [],
                                        "referencedDeclaration": 1051,
                                        "src": "14066:10:3",
                                        "typeDescriptions": {
                                          "typeIdentifier": "t_uint256",
                                          "typeString": "uint256"
                                        }
                                      },
                                      "isConstant": false,
                                      "isLValue": true,
                                      "isPure": false,
                                      "lValueRequested": false,
                                      "nodeType": "IndexAccess",
                                      "src": "14057:20:3",
                                      "typeDescriptions": {
                                        "typeIdentifier": "t_struct$_Session_$418_storage",
                                        "typeString": "struct Voting.Session storage ref"
                                      }
                                    },
                                    "id": 1068,
                                    "isConstant": false,
                                    "isLValue": true,
                                    "isPure": false,
                                    "lValueRequested": false,
                                    "memberLocation": "14078:6:3",
                                    "memberName": "voters",
                                    "nodeType": "MemberAccess",
                                    "referencedDeclaration": 401,
                                    "src": "14057:27:3",
                                    "typeDescriptions": {
                                      "typeIdentifier": "t_mapping$_t_address_$_t_struct$_Voter_$384_storage_$",
                                      "typeString": "mapping(address => struct Voting.Voter storage ref)"
                                    }
                                  },
                                  "id": 1071,
                                  "indexExpression": {
                                    "expression": {
                                      "id": 1069,
                                      "name": "msg",
                                      "nodeType": "Identifier",
                                      "overloadedDeclarations": [],
                                      "referencedDeclaration": -15,
                                      "src": "14085:3:3",
                                      "typeDescriptions": {
                                        "typeIdentifier": "t_magic_message",
                                        "typeString": "msg"
                                      }
                                    },
                                    "id": 1070,
                                    "isConstant": false,
                                    "isLValue": false,
                                    "isPure": false,
                                    "lValueRequested": false,
                                    "memberLocation": "14089:6:3",
                                    "memberName": "sender",
                                    "nodeType": "MemberAccess",
                                    "src": "14085:10:3",
                                    "typeDescriptions": {
                                      "typeIdentifier": "t_address",
                                      "typeString": "address"
                                    }
                                  },
                                  "isConstant": false,
                                  "isLValue": true,
                                  "isPure": false,
                                  "lValueRequested": false,
                                  "nodeType": "IndexAccess",
                                  "src": "14057:39:3",
                                  "typeDescriptions": {
                                    "typeIdentifier": "t_struct$_Voter_$384_storage",
                                    "typeString": "struct Voting.Voter storage ref"
                                  }
                                },
                                "id": 1072,
                                "isConstant": false,
                                "isLValue": true,
                                "isPure": false,
                                "lValueRequested": false,
                                "memberLocation": "14097:11:3",
                                "memberName": "nbProposals",
                                "nodeType": "MemberAccess",
                                "referencedDeclaration": 383,
                                "src": "14057:51:3",
                                "typeDescriptions": {
                                  "typeIdentifier": "t_uint8",
                                  "typeString": "uint8"
                                }
                              },
                              "nodeType": "BinaryOperation",
                              "operator": "<",
                              "rightExpression": {
                                "hexValue": "33",
                                "id": 1073,
                                "isConstant": false,
                                "isLValue": false,
                                "isPure": true,
                                "kind": "number",
                                "lValueRequested": false,
                                "nodeType": "Literal",
                                "src": "14111:1:3",
                                "typeDescriptions": {
                                  "typeIdentifier": "t_rational_3_by_1",
                                  "typeString": "int_const 3"
                                },
                                "value": "3"
                              },
                              "src": "14057:55:3",
                              "typeDescriptions": {
                                "typeIdentifier": "t_bool",
                                "typeString": "bool"
                              }
                            },
                            {
                              "hexValue": "596f7520616c726561647920706f7374656420332070726f706f73616c7320776869636820697320746865206d6178696d756d20616c6c6f776564",
                              "id": 1075,
                              "isConstant": false,
                              "isLValue": false,
                              "isPure": true,
                              "kind": "string",
                              "lValueRequested": false,
                              "nodeType": "Literal",
                              "src": "14114:61:3",
                              "typeDescriptions": {
                                "typeIdentifier": "t_stringliteral_d24d376fc3ad7408358c4aa13f0947d07c04aac09c9f911a7015829a44041ee6",
                                "typeString": "literal_string \"You already posted 3 proposals which is the maximum allowed\""
                              },
                              "value": "You already posted 3 proposals which is the maximum allowed"
                            }
                          ],
                          "expression": {
                            "argumentTypes": [
                              {
                                "typeIdentifier": "t_bool",
                                "typeString": "bool"
                              },
                              {
                                "typeIdentifier": "t_stringliteral_d24d376fc3ad7408358c4aa13f0947d07c04aac09c9f911a7015829a44041ee6",
                                "typeString": "literal_string \"You already posted 3 proposals which is the maximum allowed\""
                              }
                            ],
                            "id": 1064,
                            "name": "require",
                            "nodeType": "Identifier",
                            "overloadedDeclarations": [-18, -18],
                            "referencedDeclaration": -18,
                            "src": "14049:7:3",
                            "typeDescriptions": {
                              "typeIdentifier": "t_function_require_pure$_t_bool_$_t_string_memory_ptr_$returns$__$",
                              "typeString": "function (bool,string memory) pure"
                            }
                          },
                          "id": 1076,
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": false,
                          "kind": "functionCall",
                          "lValueRequested": false,
                          "nameLocations": [],
                          "names": [],
                          "nodeType": "FunctionCall",
                          "src": "14049:127:3",
                          "tryCall": false,
                          "typeDescriptions": {
                            "typeIdentifier": "t_tuple$__$",
                            "typeString": "tuple()"
                          }
                        },
                        "id": 1077,
                        "nodeType": "ExpressionStatement",
                        "src": "14049:127:3"
                      },
                      {
                        "expression": {
                          "arguments": [
                            {
                              "id": 1079,
                              "name": "_sessionId",
                              "nodeType": "Identifier",
                              "overloadedDeclarations": [],
                              "referencedDeclaration": 1051,
                              "src": "14204:10:3",
                              "typeDescriptions": {
                                "typeIdentifier": "t_uint256",
                                "typeString": "uint256"
                              }
                            },
                            {
                              "id": 1080,
                              "name": "_description",
                              "nodeType": "Identifier",
                              "overloadedDeclarations": [],
                              "referencedDeclaration": 1053,
                              "src": "14216:12:3",
                              "typeDescriptions": {
                                "typeIdentifier": "t_string_calldata_ptr",
                                "typeString": "string calldata"
                              }
                            }
                          ],
                          "expression": {
                            "argumentTypes": [
                              {
                                "typeIdentifier": "t_uint256",
                                "typeString": "uint256"
                              },
                              {
                                "typeIdentifier": "t_string_calldata_ptr",
                                "typeString": "string calldata"
                              }
                            ],
                            "id": 1078,
                            "name": "_registerProposal",
                            "nodeType": "Identifier",
                            "overloadedDeclarations": [],
                            "referencedDeclaration": 1320,
                            "src": "14186:17:3",
                            "typeDescriptions": {
                              "typeIdentifier": "t_function_internal_nonpayable$_t_uint256_$_t_string_memory_ptr_$returns$__$",
                              "typeString": "function (uint256,string memory)"
                            }
                          },
                          "id": 1081,
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": false,
                          "kind": "functionCall",
                          "lValueRequested": false,
                          "nameLocations": [],
                          "names": [],
                          "nodeType": "FunctionCall",
                          "src": "14186:43:3",
                          "tryCall": false,
                          "typeDescriptions": {
                            "typeIdentifier": "t_tuple$__$",
                            "typeString": "tuple()"
                          }
                        },
                        "id": 1082,
                        "nodeType": "ExpressionStatement",
                        "src": "14186:43:3"
                      }
                    ]
                  },
                  "documentation": {
                    "id": 1049,
                    "nodeType": "StructuredDocumentation",
                    "src": "13355:511:3",
                    "text": " A voter can register a new proposal.\n \n @dev Each voter can register many proposals.\n As the vote is considered to be done in small organization context, the maximum number of proposals is limited to 256.\n Maximum number of proposals per voter is also limited to 3.\n A vote can be added only by registered voter when status is set to VotingSessionStarted\n \n @param _sessionId The session identifier\n @param _description The proposal description"
                  },
                  "functionSelector": "7ace4184",
                  "id": 1084,
                  "implemented": true,
                  "kind": "function",
                  "modifiers": [
                    {
                      "arguments": [
                        {
                          "id": 1056,
                          "name": "_sessionId",
                          "nodeType": "Identifier",
                          "overloadedDeclarations": [],
                          "referencedDeclaration": 1051,
                          "src": "13961:10:3",
                          "typeDescriptions": {
                            "typeIdentifier": "t_uint256",
                            "typeString": "uint256"
                          }
                        }
                      ],
                      "id": 1057,
                      "kind": "modifierInvocation",
                      "modifierName": {
                        "id": 1055,
                        "name": "onlyVoter",
                        "nameLocations": ["13951:9:3"],
                        "nodeType": "IdentifierPath",
                        "referencedDeclaration": 585,
                        "src": "13951:9:3"
                      },
                      "nodeType": "ModifierInvocation",
                      "src": "13951:21:3"
                    },
                    {
                      "arguments": [
                        {
                          "id": 1059,
                          "name": "_sessionId",
                          "nodeType": "Identifier",
                          "overloadedDeclarations": [],
                          "referencedDeclaration": 1051,
                          "src": "13982:10:3",
                          "typeDescriptions": {
                            "typeIdentifier": "t_uint256",
                            "typeString": "uint256"
                          }
                        },
                        {
                          "expression": {
                            "id": 1060,
                            "name": "WorkflowStatus",
                            "nodeType": "Identifier",
                            "overloadedDeclarations": [],
                            "referencedDeclaration": 375,
                            "src": "13994:14:3",
                            "typeDescriptions": {
                              "typeIdentifier": "t_type$_t_enum$_WorkflowStatus_$375_$",
                              "typeString": "type(enum Voting.WorkflowStatus)"
                            }
                          },
                          "id": 1061,
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": true,
                          "lValueRequested": false,
                          "memberLocation": "14009:28:3",
                          "memberName": "ProposalsRegistrationStarted",
                          "nodeType": "MemberAccess",
                          "referencedDeclaration": 370,
                          "src": "13994:43:3",
                          "typeDescriptions": {
                            "typeIdentifier": "t_enum$_WorkflowStatus_$375",
                            "typeString": "enum Voting.WorkflowStatus"
                          }
                        }
                      ],
                      "id": 1062,
                      "kind": "modifierInvocation",
                      "modifierName": {
                        "id": 1058,
                        "name": "statusIs",
                        "nameLocations": ["13973:8:3"],
                        "nodeType": "IdentifierPath",
                        "referencedDeclaration": 524,
                        "src": "13973:8:3"
                      },
                      "nodeType": "ModifierInvocation",
                      "src": "13973:65:3"
                    }
                  ],
                  "name": "registerProposal",
                  "nameLocation": "13880:16:3",
                  "nodeType": "FunctionDefinition",
                  "parameters": {
                    "id": 1054,
                    "nodeType": "ParameterList",
                    "parameters": [
                      {
                        "constant": false,
                        "id": 1051,
                        "mutability": "mutable",
                        "name": "_sessionId",
                        "nameLocation": "13902:10:3",
                        "nodeType": "VariableDeclaration",
                        "scope": 1084,
                        "src": "13897:15:3",
                        "stateVariable": false,
                        "storageLocation": "default",
                        "typeDescriptions": {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        },
                        "typeName": {
                          "id": 1050,
                          "name": "uint",
                          "nodeType": "ElementaryTypeName",
                          "src": "13897:4:3",
                          "typeDescriptions": {
                            "typeIdentifier": "t_uint256",
                            "typeString": "uint256"
                          }
                        },
                        "visibility": "internal"
                      },
                      {
                        "constant": false,
                        "id": 1053,
                        "mutability": "mutable",
                        "name": "_description",
                        "nameLocation": "13930:12:3",
                        "nodeType": "VariableDeclaration",
                        "scope": 1084,
                        "src": "13914:28:3",
                        "stateVariable": false,
                        "storageLocation": "calldata",
                        "typeDescriptions": {
                          "typeIdentifier": "t_string_calldata_ptr",
                          "typeString": "string"
                        },
                        "typeName": {
                          "id": 1052,
                          "name": "string",
                          "nodeType": "ElementaryTypeName",
                          "src": "13914:6:3",
                          "typeDescriptions": {
                            "typeIdentifier": "t_string_storage_ptr",
                            "typeString": "string"
                          }
                        },
                        "visibility": "internal"
                      }
                    ],
                    "src": "13896:47:3"
                  },
                  "returnParameters": {
                    "id": 1063,
                    "nodeType": "ParameterList",
                    "parameters": [],
                    "src": "14039:0:3"
                  },
                  "scope": 1321,
                  "src": "13871:365:3",
                  "stateMutability": "nonpayable",
                  "virtual": false,
                  "visibility": "public"
                },
                {
                  "body": {
                    "id": 1197,
                    "nodeType": "Block",
                    "src": "14725:770:3",
                    "statements": [
                      {
                        "expression": {
                          "arguments": [
                            {
                              "id": 1109,
                              "isConstant": false,
                              "isLValue": false,
                              "isPure": false,
                              "lValueRequested": false,
                              "nodeType": "UnaryOperation",
                              "operator": "!",
                              "prefix": true,
                              "src": "14743:49:3",
                              "subExpression": {
                                "expression": {
                                  "baseExpression": {
                                    "expression": {
                                      "baseExpression": {
                                        "id": 1101,
                                        "name": "sessions",
                                        "nodeType": "Identifier",
                                        "overloadedDeclarations": [],
                                        "referencedDeclaration": 480,
                                        "src": "14744:8:3",
                                        "typeDescriptions": {
                                          "typeIdentifier": "t_mapping$_t_uint256_$_t_struct$_Session_$418_storage_$",
                                          "typeString": "mapping(uint256 => struct Voting.Session storage ref)"
                                        }
                                      },
                                      "id": 1103,
                                      "indexExpression": {
                                        "id": 1102,
                                        "name": "_sessionId",
                                        "nodeType": "Identifier",
                                        "overloadedDeclarations": [],
                                        "referencedDeclaration": 1087,
                                        "src": "14753:10:3",
                                        "typeDescriptions": {
                                          "typeIdentifier": "t_uint256",
                                          "typeString": "uint256"
                                        }
                                      },
                                      "isConstant": false,
                                      "isLValue": true,
                                      "isPure": false,
                                      "lValueRequested": false,
                                      "nodeType": "IndexAccess",
                                      "src": "14744:20:3",
                                      "typeDescriptions": {
                                        "typeIdentifier": "t_struct$_Session_$418_storage",
                                        "typeString": "struct Voting.Session storage ref"
                                      }
                                    },
                                    "id": 1104,
                                    "isConstant": false,
                                    "isLValue": true,
                                    "isPure": false,
                                    "lValueRequested": false,
                                    "memberLocation": "14765:6:3",
                                    "memberName": "voters",
                                    "nodeType": "MemberAccess",
                                    "referencedDeclaration": 401,
                                    "src": "14744:27:3",
                                    "typeDescriptions": {
                                      "typeIdentifier": "t_mapping$_t_address_$_t_struct$_Voter_$384_storage_$",
                                      "typeString": "mapping(address => struct Voting.Voter storage ref)"
                                    }
                                  },
                                  "id": 1107,
                                  "indexExpression": {
                                    "expression": {
                                      "id": 1105,
                                      "name": "msg",
                                      "nodeType": "Identifier",
                                      "overloadedDeclarations": [],
                                      "referencedDeclaration": -15,
                                      "src": "14772:3:3",
                                      "typeDescriptions": {
                                        "typeIdentifier": "t_magic_message",
                                        "typeString": "msg"
                                      }
                                    },
                                    "id": 1106,
                                    "isConstant": false,
                                    "isLValue": false,
                                    "isPure": false,
                                    "lValueRequested": false,
                                    "memberLocation": "14776:6:3",
                                    "memberName": "sender",
                                    "nodeType": "MemberAccess",
                                    "src": "14772:10:3",
                                    "typeDescriptions": {
                                      "typeIdentifier": "t_address",
                                      "typeString": "address"
                                    }
                                  },
                                  "isConstant": false,
                                  "isLValue": true,
                                  "isPure": false,
                                  "lValueRequested": false,
                                  "nodeType": "IndexAccess",
                                  "src": "14744:39:3",
                                  "typeDescriptions": {
                                    "typeIdentifier": "t_struct$_Voter_$384_storage",
                                    "typeString": "struct Voting.Voter storage ref"
                                  }
                                },
                                "id": 1108,
                                "isConstant": false,
                                "isLValue": true,
                                "isPure": false,
                                "lValueRequested": false,
                                "memberLocation": "14784:8:3",
                                "memberName": "hasVoted",
                                "nodeType": "MemberAccess",
                                "referencedDeclaration": 379,
                                "src": "14744:48:3",
                                "typeDescriptions": {
                                  "typeIdentifier": "t_bool",
                                  "typeString": "bool"
                                }
                              },
                              "typeDescriptions": {
                                "typeIdentifier": "t_bool",
                                "typeString": "bool"
                              }
                            },
                            {
                              "hexValue": "566f7465722068617320616c726561647920766f746564",
                              "id": 1110,
                              "isConstant": false,
                              "isLValue": false,
                              "isPure": true,
                              "kind": "string",
                              "lValueRequested": false,
                              "nodeType": "Literal",
                              "src": "14794:25:3",
                              "typeDescriptions": {
                                "typeIdentifier": "t_stringliteral_b5b832c47e2f8575ded4ab7736997e2d3cd77de518ea3cc88b64a21464bbf6a2",
                                "typeString": "literal_string \"Voter has already voted\""
                              },
                              "value": "Voter has already voted"
                            }
                          ],
                          "expression": {
                            "argumentTypes": [
                              {
                                "typeIdentifier": "t_bool",
                                "typeString": "bool"
                              },
                              {
                                "typeIdentifier": "t_stringliteral_b5b832c47e2f8575ded4ab7736997e2d3cd77de518ea3cc88b64a21464bbf6a2",
                                "typeString": "literal_string \"Voter has already voted\""
                              }
                            ],
                            "id": 1100,
                            "name": "require",
                            "nodeType": "Identifier",
                            "overloadedDeclarations": [-18, -18],
                            "referencedDeclaration": -18,
                            "src": "14735:7:3",
                            "typeDescriptions": {
                              "typeIdentifier": "t_function_require_pure$_t_bool_$_t_string_memory_ptr_$returns$__$",
                              "typeString": "function (bool,string memory) pure"
                            }
                          },
                          "id": 1111,
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": false,
                          "kind": "functionCall",
                          "lValueRequested": false,
                          "nameLocations": [],
                          "names": [],
                          "nodeType": "FunctionCall",
                          "src": "14735:85:3",
                          "tryCall": false,
                          "typeDescriptions": {
                            "typeIdentifier": "t_tuple$__$",
                            "typeString": "tuple()"
                          }
                        },
                        "id": 1112,
                        "nodeType": "ExpressionStatement",
                        "src": "14735:85:3"
                      },
                      {
                        "expression": {
                          "arguments": [
                            {
                              "commonType": {
                                "typeIdentifier": "t_uint256",
                                "typeString": "uint256"
                              },
                              "id": 1120,
                              "isConstant": false,
                              "isLValue": false,
                              "isPure": false,
                              "lValueRequested": false,
                              "leftExpression": {
                                "id": 1114,
                                "name": "_proposalId",
                                "nodeType": "Identifier",
                                "overloadedDeclarations": [],
                                "referencedDeclaration": 1089,
                                "src": "14838:11:3",
                                "typeDescriptions": {
                                  "typeIdentifier": "t_uint8",
                                  "typeString": "uint8"
                                }
                              },
                              "nodeType": "BinaryOperation",
                              "operator": "<",
                              "rightExpression": {
                                "expression": {
                                  "expression": {
                                    "baseExpression": {
                                      "id": 1115,
                                      "name": "sessions",
                                      "nodeType": "Identifier",
                                      "overloadedDeclarations": [],
                                      "referencedDeclaration": 480,
                                      "src": "14852:8:3",
                                      "typeDescriptions": {
                                        "typeIdentifier": "t_mapping$_t_uint256_$_t_struct$_Session_$418_storage_$",
                                        "typeString": "mapping(uint256 => struct Voting.Session storage ref)"
                                      }
                                    },
                                    "id": 1117,
                                    "indexExpression": {
                                      "id": 1116,
                                      "name": "_sessionId",
                                      "nodeType": "Identifier",
                                      "overloadedDeclarations": [],
                                      "referencedDeclaration": 1087,
                                      "src": "14861:10:3",
                                      "typeDescriptions": {
                                        "typeIdentifier": "t_uint256",
                                        "typeString": "uint256"
                                      }
                                    },
                                    "isConstant": false,
                                    "isLValue": true,
                                    "isPure": false,
                                    "lValueRequested": false,
                                    "nodeType": "IndexAccess",
                                    "src": "14852:20:3",
                                    "typeDescriptions": {
                                      "typeIdentifier": "t_struct$_Session_$418_storage",
                                      "typeString": "struct Voting.Session storage ref"
                                    }
                                  },
                                  "id": 1118,
                                  "isConstant": false,
                                  "isLValue": true,
                                  "isPure": false,
                                  "lValueRequested": false,
                                  "memberLocation": "14873:9:3",
                                  "memberName": "proposals",
                                  "nodeType": "MemberAccess",
                                  "referencedDeclaration": 412,
                                  "src": "14852:30:3",
                                  "typeDescriptions": {
                                    "typeIdentifier": "t_array$_t_struct$_Proposal_$391_storage_$dyn_storage",
                                    "typeString": "struct Voting.Proposal storage ref[] storage ref"
                                  }
                                },
                                "id": 1119,
                                "isConstant": false,
                                "isLValue": false,
                                "isPure": false,
                                "lValueRequested": false,
                                "memberLocation": "14883:6:3",
                                "memberName": "length",
                                "nodeType": "MemberAccess",
                                "src": "14852:37:3",
                                "typeDescriptions": {
                                  "typeIdentifier": "t_uint256",
                                  "typeString": "uint256"
                                }
                              },
                              "src": "14838:51:3",
                              "typeDescriptions": {
                                "typeIdentifier": "t_bool",
                                "typeString": "bool"
                              }
                            },
                            {
                              "arguments": [
                                {
                                  "hexValue": "50726f706f73616c20",
                                  "id": 1124,
                                  "isConstant": false,
                                  "isLValue": false,
                                  "isPure": true,
                                  "kind": "string",
                                  "lValueRequested": false,
                                  "nodeType": "Literal",
                                  "src": "14905:11:3",
                                  "typeDescriptions": {
                                    "typeIdentifier": "t_stringliteral_95941de2cf661822a59b247d118deba693dab348b1a72d43aed94ab15dfa3818",
                                    "typeString": "literal_string \"Proposal \""
                                  },
                                  "value": "Proposal "
                                },
                                {
                                  "arguments": [
                                    {
                                      "id": 1127,
                                      "name": "_proposalId",
                                      "nodeType": "Identifier",
                                      "overloadedDeclarations": [],
                                      "referencedDeclaration": 1089,
                                      "src": "14935:11:3",
                                      "typeDescriptions": {
                                        "typeIdentifier": "t_uint8",
                                        "typeString": "uint8"
                                      }
                                    }
                                  ],
                                  "expression": {
                                    "argumentTypes": [
                                      {
                                        "typeIdentifier": "t_uint8",
                                        "typeString": "uint8"
                                      }
                                    ],
                                    "expression": {
                                      "id": 1125,
                                      "name": "Strings",
                                      "nodeType": "Identifier",
                                      "overloadedDeclarations": [],
                                      "referencedDeclaration": 360,
                                      "src": "14918:7:3",
                                      "typeDescriptions": {
                                        "typeIdentifier": "t_type$_t_contract$_Strings_$360_$",
                                        "typeString": "type(library Strings)"
                                      }
                                    },
                                    "id": 1126,
                                    "isConstant": false,
                                    "isLValue": false,
                                    "isPure": false,
                                    "lValueRequested": false,
                                    "memberLocation": "14926:8:3",
                                    "memberName": "toString",
                                    "nodeType": "MemberAccess",
                                    "referencedDeclaration": 222,
                                    "src": "14918:16:3",
                                    "typeDescriptions": {
                                      "typeIdentifier": "t_function_internal_pure$_t_uint256_$returns$_t_string_memory_ptr_$",
                                      "typeString": "function (uint256) pure returns (string memory)"
                                    }
                                  },
                                  "id": 1128,
                                  "isConstant": false,
                                  "isLValue": false,
                                  "isPure": false,
                                  "kind": "functionCall",
                                  "lValueRequested": false,
                                  "nameLocations": [],
                                  "names": [],
                                  "nodeType": "FunctionCall",
                                  "src": "14918:29:3",
                                  "tryCall": false,
                                  "typeDescriptions": {
                                    "typeIdentifier": "t_string_memory_ptr",
                                    "typeString": "string memory"
                                  }
                                },
                                {
                                  "hexValue": "20646f6573206e6f74206578697374",
                                  "id": 1129,
                                  "isConstant": false,
                                  "isLValue": false,
                                  "isPure": true,
                                  "kind": "string",
                                  "lValueRequested": false,
                                  "nodeType": "Literal",
                                  "src": "14949:17:3",
                                  "typeDescriptions": {
                                    "typeIdentifier": "t_stringliteral_881a7c6e0d9cc1bef9dcc51a5535d0791dc9ce94b16aca73a1ce8b4583026adb",
                                    "typeString": "literal_string \" does not exist\""
                                  },
                                  "value": " does not exist"
                                }
                              ],
                              "expression": {
                                "argumentTypes": [
                                  {
                                    "typeIdentifier": "t_stringliteral_95941de2cf661822a59b247d118deba693dab348b1a72d43aed94ab15dfa3818",
                                    "typeString": "literal_string \"Proposal \""
                                  },
                                  {
                                    "typeIdentifier": "t_string_memory_ptr",
                                    "typeString": "string memory"
                                  },
                                  {
                                    "typeIdentifier": "t_stringliteral_881a7c6e0d9cc1bef9dcc51a5535d0791dc9ce94b16aca73a1ce8b4583026adb",
                                    "typeString": "literal_string \" does not exist\""
                                  }
                                ],
                                "expression": {
                                  "id": 1122,
                                  "isConstant": false,
                                  "isLValue": false,
                                  "isPure": true,
                                  "lValueRequested": false,
                                  "nodeType": "ElementaryTypeNameExpression",
                                  "src": "14891:6:3",
                                  "typeDescriptions": {
                                    "typeIdentifier": "t_type$_t_string_storage_ptr_$",
                                    "typeString": "type(string storage pointer)"
                                  },
                                  "typeName": {
                                    "id": 1121,
                                    "name": "string",
                                    "nodeType": "ElementaryTypeName",
                                    "src": "14891:6:3",
                                    "typeDescriptions": {}
                                  }
                                },
                                "id": 1123,
                                "isConstant": false,
                                "isLValue": false,
                                "isPure": false,
                                "lValueRequested": false,
                                "memberLocation": "14898:6:3",
                                "memberName": "concat",
                                "nodeType": "MemberAccess",
                                "src": "14891:13:3",
                                "typeDescriptions": {
                                  "typeIdentifier": "t_function_stringconcat_pure$__$returns$_t_string_memory_ptr_$",
                                  "typeString": "function () pure returns (string memory)"
                                }
                              },
                              "id": 1130,
                              "isConstant": false,
                              "isLValue": false,
                              "isPure": false,
                              "kind": "functionCall",
                              "lValueRequested": false,
                              "nameLocations": [],
                              "names": [],
                              "nodeType": "FunctionCall",
                              "src": "14891:76:3",
                              "tryCall": false,
                              "typeDescriptions": {
                                "typeIdentifier": "t_string_memory_ptr",
                                "typeString": "string memory"
                              }
                            }
                          ],
                          "expression": {
                            "argumentTypes": [
                              {
                                "typeIdentifier": "t_bool",
                                "typeString": "bool"
                              },
                              {
                                "typeIdentifier": "t_string_memory_ptr",
                                "typeString": "string memory"
                              }
                            ],
                            "id": 1113,
                            "name": "require",
                            "nodeType": "Identifier",
                            "overloadedDeclarations": [-18, -18],
                            "referencedDeclaration": -18,
                            "src": "14830:7:3",
                            "typeDescriptions": {
                              "typeIdentifier": "t_function_require_pure$_t_bool_$_t_string_memory_ptr_$returns$__$",
                              "typeString": "function (bool,string memory) pure"
                            }
                          },
                          "id": 1131,
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": false,
                          "kind": "functionCall",
                          "lValueRequested": false,
                          "nameLocations": [],
                          "names": [],
                          "nodeType": "FunctionCall",
                          "src": "14830:138:3",
                          "tryCall": false,
                          "typeDescriptions": {
                            "typeIdentifier": "t_tuple$__$",
                            "typeString": "tuple()"
                          }
                        },
                        "id": 1132,
                        "nodeType": "ExpressionStatement",
                        "src": "14830:138:3"
                      },
                      {
                        "expression": {
                          "arguments": [
                            {
                              "commonType": {
                                "typeIdentifier": "t_address",
                                "typeString": "address"
                              },
                              "id": 1143,
                              "isConstant": false,
                              "isLValue": false,
                              "isPure": false,
                              "lValueRequested": false,
                              "leftExpression": {
                                "expression": {
                                  "baseExpression": {
                                    "expression": {
                                      "baseExpression": {
                                        "id": 1134,
                                        "name": "sessions",
                                        "nodeType": "Identifier",
                                        "overloadedDeclarations": [],
                                        "referencedDeclaration": 480,
                                        "src": "14986:8:3",
                                        "typeDescriptions": {
                                          "typeIdentifier": "t_mapping$_t_uint256_$_t_struct$_Session_$418_storage_$",
                                          "typeString": "mapping(uint256 => struct Voting.Session storage ref)"
                                        }
                                      },
                                      "id": 1136,
                                      "indexExpression": {
                                        "id": 1135,
                                        "name": "_sessionId",
                                        "nodeType": "Identifier",
                                        "overloadedDeclarations": [],
                                        "referencedDeclaration": 1087,
                                        "src": "14995:10:3",
                                        "typeDescriptions": {
                                          "typeIdentifier": "t_uint256",
                                          "typeString": "uint256"
                                        }
                                      },
                                      "isConstant": false,
                                      "isLValue": true,
                                      "isPure": false,
                                      "lValueRequested": false,
                                      "nodeType": "IndexAccess",
                                      "src": "14986:20:3",
                                      "typeDescriptions": {
                                        "typeIdentifier": "t_struct$_Session_$418_storage",
                                        "typeString": "struct Voting.Session storage ref"
                                      }
                                    },
                                    "id": 1137,
                                    "isConstant": false,
                                    "isLValue": true,
                                    "isPure": false,
                                    "lValueRequested": false,
                                    "memberLocation": "15007:9:3",
                                    "memberName": "proposals",
                                    "nodeType": "MemberAccess",
                                    "referencedDeclaration": 412,
                                    "src": "14986:30:3",
                                    "typeDescriptions": {
                                      "typeIdentifier": "t_array$_t_struct$_Proposal_$391_storage_$dyn_storage",
                                      "typeString": "struct Voting.Proposal storage ref[] storage ref"
                                    }
                                  },
                                  "id": 1139,
                                  "indexExpression": {
                                    "id": 1138,
                                    "name": "_proposalId",
                                    "nodeType": "Identifier",
                                    "overloadedDeclarations": [],
                                    "referencedDeclaration": 1089,
                                    "src": "15017:11:3",
                                    "typeDescriptions": {
                                      "typeIdentifier": "t_uint8",
                                      "typeString": "uint8"
                                    }
                                  },
                                  "isConstant": false,
                                  "isLValue": true,
                                  "isPure": false,
                                  "lValueRequested": false,
                                  "nodeType": "IndexAccess",
                                  "src": "14986:43:3",
                                  "typeDescriptions": {
                                    "typeIdentifier": "t_struct$_Proposal_$391_storage",
                                    "typeString": "struct Voting.Proposal storage ref"
                                  }
                                },
                                "id": 1140,
                                "isConstant": false,
                                "isLValue": true,
                                "isPure": false,
                                "lValueRequested": false,
                                "memberLocation": "15030:8:3",
                                "memberName": "proposer",
                                "nodeType": "MemberAccess",
                                "referencedDeclaration": 390,
                                "src": "14986:52:3",
                                "typeDescriptions": {
                                  "typeIdentifier": "t_address",
                                  "typeString": "address"
                                }
                              },
                              "nodeType": "BinaryOperation",
                              "operator": "!=",
                              "rightExpression": {
                                "expression": {
                                  "id": 1141,
                                  "name": "msg",
                                  "nodeType": "Identifier",
                                  "overloadedDeclarations": [],
                                  "referencedDeclaration": -15,
                                  "src": "15042:3:3",
                                  "typeDescriptions": {
                                    "typeIdentifier": "t_magic_message",
                                    "typeString": "msg"
                                  }
                                },
                                "id": 1142,
                                "isConstant": false,
                                "isLValue": false,
                                "isPure": false,
                                "lValueRequested": false,
                                "memberLocation": "15046:6:3",
                                "memberName": "sender",
                                "nodeType": "MemberAccess",
                                "src": "15042:10:3",
                                "typeDescriptions": {
                                  "typeIdentifier": "t_address",
                                  "typeString": "address"
                                }
                              },
                              "src": "14986:66:3",
                              "typeDescriptions": {
                                "typeIdentifier": "t_bool",
                                "typeString": "bool"
                              }
                            },
                            {
                              "hexValue": "4120766f7465722063616e206e6f7420766f746520666f7220697473206f776e2070726f706f73616c",
                              "id": 1144,
                              "isConstant": false,
                              "isLValue": false,
                              "isPure": true,
                              "kind": "string",
                              "lValueRequested": false,
                              "nodeType": "Literal",
                              "src": "15054:43:3",
                              "typeDescriptions": {
                                "typeIdentifier": "t_stringliteral_89875bf1134a296a98c92d31fb973ed2f2db2e6066c7892071b73ccbbecdb855",
                                "typeString": "literal_string \"A voter can not vote for its own proposal\""
                              },
                              "value": "A voter can not vote for its own proposal"
                            }
                          ],
                          "expression": {
                            "argumentTypes": [
                              {
                                "typeIdentifier": "t_bool",
                                "typeString": "bool"
                              },
                              {
                                "typeIdentifier": "t_stringliteral_89875bf1134a296a98c92d31fb973ed2f2db2e6066c7892071b73ccbbecdb855",
                                "typeString": "literal_string \"A voter can not vote for its own proposal\""
                              }
                            ],
                            "id": 1133,
                            "name": "require",
                            "nodeType": "Identifier",
                            "overloadedDeclarations": [-18, -18],
                            "referencedDeclaration": -18,
                            "src": "14978:7:3",
                            "typeDescriptions": {
                              "typeIdentifier": "t_function_require_pure$_t_bool_$_t_string_memory_ptr_$returns$__$",
                              "typeString": "function (bool,string memory) pure"
                            }
                          },
                          "id": 1145,
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": false,
                          "kind": "functionCall",
                          "lValueRequested": false,
                          "nameLocations": [],
                          "names": [],
                          "nodeType": "FunctionCall",
                          "src": "14978:120:3",
                          "tryCall": false,
                          "typeDescriptions": {
                            "typeIdentifier": "t_tuple$__$",
                            "typeString": "tuple()"
                          }
                        },
                        "id": 1146,
                        "nodeType": "ExpressionStatement",
                        "src": "14978:120:3"
                      },
                      {
                        "expression": {
                          "arguments": [
                            {
                              "commonType": {
                                "typeIdentifier": "t_uint8",
                                "typeString": "uint8"
                              },
                              "id": 1150,
                              "isConstant": false,
                              "isLValue": false,
                              "isPure": false,
                              "lValueRequested": false,
                              "leftExpression": {
                                "id": 1148,
                                "name": "_proposalId",
                                "nodeType": "Identifier",
                                "overloadedDeclarations": [],
                                "referencedDeclaration": 1089,
                                "src": "15116:11:3",
                                "typeDescriptions": {
                                  "typeIdentifier": "t_uint8",
                                  "typeString": "uint8"
                                }
                              },
                              "nodeType": "BinaryOperation",
                              "operator": ">",
                              "rightExpression": {
                                "hexValue": "30",
                                "id": 1149,
                                "isConstant": false,
                                "isLValue": false,
                                "isPure": true,
                                "kind": "number",
                                "lValueRequested": false,
                                "nodeType": "Literal",
                                "src": "15130:1:3",
                                "typeDescriptions": {
                                  "typeIdentifier": "t_rational_0_by_1",
                                  "typeString": "int_const 0"
                                },
                                "value": "0"
                              },
                              "src": "15116:15:3",
                              "typeDescriptions": {
                                "typeIdentifier": "t_bool",
                                "typeString": "bool"
                              }
                            },
                            {
                              "hexValue": "46697273742070726f706f73616c20697320726573657276656420666f722061627374656e74696f6e",
                              "id": 1151,
                              "isConstant": false,
                              "isLValue": false,
                              "isPure": true,
                              "kind": "string",
                              "lValueRequested": false,
                              "nodeType": "Literal",
                              "src": "15133:43:3",
                              "typeDescriptions": {
                                "typeIdentifier": "t_stringliteral_c2b306736cf2f0443edc2a88db6aa1550013162c69422af0169a5e9d5a7a35c7",
                                "typeString": "literal_string \"First proposal is reserved for abstention\""
                              },
                              "value": "First proposal is reserved for abstention"
                            }
                          ],
                          "expression": {
                            "argumentTypes": [
                              {
                                "typeIdentifier": "t_bool",
                                "typeString": "bool"
                              },
                              {
                                "typeIdentifier": "t_stringliteral_c2b306736cf2f0443edc2a88db6aa1550013162c69422af0169a5e9d5a7a35c7",
                                "typeString": "literal_string \"First proposal is reserved for abstention\""
                              }
                            ],
                            "id": 1147,
                            "name": "require",
                            "nodeType": "Identifier",
                            "overloadedDeclarations": [-18, -18],
                            "referencedDeclaration": -18,
                            "src": "15108:7:3",
                            "typeDescriptions": {
                              "typeIdentifier": "t_function_require_pure$_t_bool_$_t_string_memory_ptr_$returns$__$",
                              "typeString": "function (bool,string memory) pure"
                            }
                          },
                          "id": 1152,
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": false,
                          "kind": "functionCall",
                          "lValueRequested": false,
                          "nameLocations": [],
                          "names": [],
                          "nodeType": "FunctionCall",
                          "src": "15108:69:3",
                          "tryCall": false,
                          "typeDescriptions": {
                            "typeIdentifier": "t_tuple$__$",
                            "typeString": "tuple()"
                          }
                        },
                        "id": 1153,
                        "nodeType": "ExpressionStatement",
                        "src": "15108:69:3"
                      },
                      {
                        "expression": {
                          "id": 1161,
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": false,
                          "lValueRequested": false,
                          "nodeType": "UnaryOperation",
                          "operator": "++",
                          "prefix": false,
                          "src": "15188:55:3",
                          "subExpression": {
                            "expression": {
                              "baseExpression": {
                                "expression": {
                                  "baseExpression": {
                                    "id": 1154,
                                    "name": "sessions",
                                    "nodeType": "Identifier",
                                    "overloadedDeclarations": [],
                                    "referencedDeclaration": 480,
                                    "src": "15188:8:3",
                                    "typeDescriptions": {
                                      "typeIdentifier": "t_mapping$_t_uint256_$_t_struct$_Session_$418_storage_$",
                                      "typeString": "mapping(uint256 => struct Voting.Session storage ref)"
                                    }
                                  },
                                  "id": 1156,
                                  "indexExpression": {
                                    "id": 1155,
                                    "name": "_sessionId",
                                    "nodeType": "Identifier",
                                    "overloadedDeclarations": [],
                                    "referencedDeclaration": 1087,
                                    "src": "15197:10:3",
                                    "typeDescriptions": {
                                      "typeIdentifier": "t_uint256",
                                      "typeString": "uint256"
                                    }
                                  },
                                  "isConstant": false,
                                  "isLValue": true,
                                  "isPure": false,
                                  "lValueRequested": false,
                                  "nodeType": "IndexAccess",
                                  "src": "15188:20:3",
                                  "typeDescriptions": {
                                    "typeIdentifier": "t_struct$_Session_$418_storage",
                                    "typeString": "struct Voting.Session storage ref"
                                  }
                                },
                                "id": 1157,
                                "isConstant": false,
                                "isLValue": true,
                                "isPure": false,
                                "lValueRequested": false,
                                "memberLocation": "15209:9:3",
                                "memberName": "proposals",
                                "nodeType": "MemberAccess",
                                "referencedDeclaration": 412,
                                "src": "15188:30:3",
                                "typeDescriptions": {
                                  "typeIdentifier": "t_array$_t_struct$_Proposal_$391_storage_$dyn_storage",
                                  "typeString": "struct Voting.Proposal storage ref[] storage ref"
                                }
                              },
                              "id": 1159,
                              "indexExpression": {
                                "id": 1158,
                                "name": "_proposalId",
                                "nodeType": "Identifier",
                                "overloadedDeclarations": [],
                                "referencedDeclaration": 1089,
                                "src": "15219:11:3",
                                "typeDescriptions": {
                                  "typeIdentifier": "t_uint8",
                                  "typeString": "uint8"
                                }
                              },
                              "isConstant": false,
                              "isLValue": true,
                              "isPure": false,
                              "lValueRequested": false,
                              "nodeType": "IndexAccess",
                              "src": "15188:43:3",
                              "typeDescriptions": {
                                "typeIdentifier": "t_struct$_Proposal_$391_storage",
                                "typeString": "struct Voting.Proposal storage ref"
                              }
                            },
                            "id": 1160,
                            "isConstant": false,
                            "isLValue": true,
                            "isPure": false,
                            "lValueRequested": true,
                            "memberLocation": "15232:9:3",
                            "memberName": "voteCount",
                            "nodeType": "MemberAccess",
                            "referencedDeclaration": 388,
                            "src": "15188:53:3",
                            "typeDescriptions": {
                              "typeIdentifier": "t_uint256",
                              "typeString": "uint256"
                            }
                          },
                          "typeDescriptions": {
                            "typeIdentifier": "t_uint256",
                            "typeString": "uint256"
                          }
                        },
                        "id": 1162,
                        "nodeType": "ExpressionStatement",
                        "src": "15188:55:3"
                      },
                      {
                        "expression": {
                          "id": 1172,
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": false,
                          "lValueRequested": false,
                          "leftHandSide": {
                            "expression": {
                              "baseExpression": {
                                "expression": {
                                  "baseExpression": {
                                    "id": 1163,
                                    "name": "sessions",
                                    "nodeType": "Identifier",
                                    "overloadedDeclarations": [],
                                    "referencedDeclaration": 480,
                                    "src": "15253:8:3",
                                    "typeDescriptions": {
                                      "typeIdentifier": "t_mapping$_t_uint256_$_t_struct$_Session_$418_storage_$",
                                      "typeString": "mapping(uint256 => struct Voting.Session storage ref)"
                                    }
                                  },
                                  "id": 1165,
                                  "indexExpression": {
                                    "id": 1164,
                                    "name": "_sessionId",
                                    "nodeType": "Identifier",
                                    "overloadedDeclarations": [],
                                    "referencedDeclaration": 1087,
                                    "src": "15262:10:3",
                                    "typeDescriptions": {
                                      "typeIdentifier": "t_uint256",
                                      "typeString": "uint256"
                                    }
                                  },
                                  "isConstant": false,
                                  "isLValue": true,
                                  "isPure": false,
                                  "lValueRequested": false,
                                  "nodeType": "IndexAccess",
                                  "src": "15253:20:3",
                                  "typeDescriptions": {
                                    "typeIdentifier": "t_struct$_Session_$418_storage",
                                    "typeString": "struct Voting.Session storage ref"
                                  }
                                },
                                "id": 1166,
                                "isConstant": false,
                                "isLValue": true,
                                "isPure": false,
                                "lValueRequested": false,
                                "memberLocation": "15274:6:3",
                                "memberName": "voters",
                                "nodeType": "MemberAccess",
                                "referencedDeclaration": 401,
                                "src": "15253:27:3",
                                "typeDescriptions": {
                                  "typeIdentifier": "t_mapping$_t_address_$_t_struct$_Voter_$384_storage_$",
                                  "typeString": "mapping(address => struct Voting.Voter storage ref)"
                                }
                              },
                              "id": 1169,
                              "indexExpression": {
                                "expression": {
                                  "id": 1167,
                                  "name": "msg",
                                  "nodeType": "Identifier",
                                  "overloadedDeclarations": [],
                                  "referencedDeclaration": -15,
                                  "src": "15281:3:3",
                                  "typeDescriptions": {
                                    "typeIdentifier": "t_magic_message",
                                    "typeString": "msg"
                                  }
                                },
                                "id": 1168,
                                "isConstant": false,
                                "isLValue": false,
                                "isPure": false,
                                "lValueRequested": false,
                                "memberLocation": "15285:6:3",
                                "memberName": "sender",
                                "nodeType": "MemberAccess",
                                "src": "15281:10:3",
                                "typeDescriptions": {
                                  "typeIdentifier": "t_address",
                                  "typeString": "address"
                                }
                              },
                              "isConstant": false,
                              "isLValue": true,
                              "isPure": false,
                              "lValueRequested": false,
                              "nodeType": "IndexAccess",
                              "src": "15253:39:3",
                              "typeDescriptions": {
                                "typeIdentifier": "t_struct$_Voter_$384_storage",
                                "typeString": "struct Voting.Voter storage ref"
                              }
                            },
                            "id": 1170,
                            "isConstant": false,
                            "isLValue": true,
                            "isPure": false,
                            "lValueRequested": true,
                            "memberLocation": "15293:8:3",
                            "memberName": "hasVoted",
                            "nodeType": "MemberAccess",
                            "referencedDeclaration": 379,
                            "src": "15253:48:3",
                            "typeDescriptions": {
                              "typeIdentifier": "t_bool",
                              "typeString": "bool"
                            }
                          },
                          "nodeType": "Assignment",
                          "operator": "=",
                          "rightHandSide": {
                            "hexValue": "74727565",
                            "id": 1171,
                            "isConstant": false,
                            "isLValue": false,
                            "isPure": true,
                            "kind": "bool",
                            "lValueRequested": false,
                            "nodeType": "Literal",
                            "src": "15304:4:3",
                            "typeDescriptions": {
                              "typeIdentifier": "t_bool",
                              "typeString": "bool"
                            },
                            "value": "true"
                          },
                          "src": "15253:55:3",
                          "typeDescriptions": {
                            "typeIdentifier": "t_bool",
                            "typeString": "bool"
                          }
                        },
                        "id": 1173,
                        "nodeType": "ExpressionStatement",
                        "src": "15253:55:3"
                      },
                      {
                        "expression": {
                          "id": 1183,
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": false,
                          "lValueRequested": false,
                          "leftHandSide": {
                            "expression": {
                              "baseExpression": {
                                "expression": {
                                  "baseExpression": {
                                    "id": 1174,
                                    "name": "sessions",
                                    "nodeType": "Identifier",
                                    "overloadedDeclarations": [],
                                    "referencedDeclaration": 480,
                                    "src": "15318:8:3",
                                    "typeDescriptions": {
                                      "typeIdentifier": "t_mapping$_t_uint256_$_t_struct$_Session_$418_storage_$",
                                      "typeString": "mapping(uint256 => struct Voting.Session storage ref)"
                                    }
                                  },
                                  "id": 1176,
                                  "indexExpression": {
                                    "id": 1175,
                                    "name": "_sessionId",
                                    "nodeType": "Identifier",
                                    "overloadedDeclarations": [],
                                    "referencedDeclaration": 1087,
                                    "src": "15327:10:3",
                                    "typeDescriptions": {
                                      "typeIdentifier": "t_uint256",
                                      "typeString": "uint256"
                                    }
                                  },
                                  "isConstant": false,
                                  "isLValue": true,
                                  "isPure": false,
                                  "lValueRequested": false,
                                  "nodeType": "IndexAccess",
                                  "src": "15318:20:3",
                                  "typeDescriptions": {
                                    "typeIdentifier": "t_struct$_Session_$418_storage",
                                    "typeString": "struct Voting.Session storage ref"
                                  }
                                },
                                "id": 1177,
                                "isConstant": false,
                                "isLValue": true,
                                "isPure": false,
                                "lValueRequested": false,
                                "memberLocation": "15339:6:3",
                                "memberName": "voters",
                                "nodeType": "MemberAccess",
                                "referencedDeclaration": 401,
                                "src": "15318:27:3",
                                "typeDescriptions": {
                                  "typeIdentifier": "t_mapping$_t_address_$_t_struct$_Voter_$384_storage_$",
                                  "typeString": "mapping(address => struct Voting.Voter storage ref)"
                                }
                              },
                              "id": 1180,
                              "indexExpression": {
                                "expression": {
                                  "id": 1178,
                                  "name": "msg",
                                  "nodeType": "Identifier",
                                  "overloadedDeclarations": [],
                                  "referencedDeclaration": -15,
                                  "src": "15346:3:3",
                                  "typeDescriptions": {
                                    "typeIdentifier": "t_magic_message",
                                    "typeString": "msg"
                                  }
                                },
                                "id": 1179,
                                "isConstant": false,
                                "isLValue": false,
                                "isPure": false,
                                "lValueRequested": false,
                                "memberLocation": "15350:6:3",
                                "memberName": "sender",
                                "nodeType": "MemberAccess",
                                "src": "15346:10:3",
                                "typeDescriptions": {
                                  "typeIdentifier": "t_address",
                                  "typeString": "address"
                                }
                              },
                              "isConstant": false,
                              "isLValue": true,
                              "isPure": false,
                              "lValueRequested": false,
                              "nodeType": "IndexAccess",
                              "src": "15318:39:3",
                              "typeDescriptions": {
                                "typeIdentifier": "t_struct$_Voter_$384_storage",
                                "typeString": "struct Voting.Voter storage ref"
                              }
                            },
                            "id": 1181,
                            "isConstant": false,
                            "isLValue": true,
                            "isPure": false,
                            "lValueRequested": true,
                            "memberLocation": "15358:15:3",
                            "memberName": "votedProposalId",
                            "nodeType": "MemberAccess",
                            "referencedDeclaration": 381,
                            "src": "15318:55:3",
                            "typeDescriptions": {
                              "typeIdentifier": "t_uint8",
                              "typeString": "uint8"
                            }
                          },
                          "nodeType": "Assignment",
                          "operator": "=",
                          "rightHandSide": {
                            "id": 1182,
                            "name": "_proposalId",
                            "nodeType": "Identifier",
                            "overloadedDeclarations": [],
                            "referencedDeclaration": 1089,
                            "src": "15376:11:3",
                            "typeDescriptions": {
                              "typeIdentifier": "t_uint8",
                              "typeString": "uint8"
                            }
                          },
                          "src": "15318:69:3",
                          "typeDescriptions": {
                            "typeIdentifier": "t_uint8",
                            "typeString": "uint8"
                          }
                        },
                        "id": 1184,
                        "nodeType": "ExpressionStatement",
                        "src": "15318:69:3"
                      },
                      {
                        "expression": {
                          "id": 1189,
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": false,
                          "lValueRequested": false,
                          "nodeType": "UnaryOperation",
                          "operator": "++",
                          "prefix": false,
                          "src": "15397:38:3",
                          "subExpression": {
                            "expression": {
                              "baseExpression": {
                                "id": 1185,
                                "name": "sessions",
                                "nodeType": "Identifier",
                                "overloadedDeclarations": [],
                                "referencedDeclaration": 480,
                                "src": "15397:8:3",
                                "typeDescriptions": {
                                  "typeIdentifier": "t_mapping$_t_uint256_$_t_struct$_Session_$418_storage_$",
                                  "typeString": "mapping(uint256 => struct Voting.Session storage ref)"
                                }
                              },
                              "id": 1187,
                              "indexExpression": {
                                "id": 1186,
                                "name": "_sessionId",
                                "nodeType": "Identifier",
                                "overloadedDeclarations": [],
                                "referencedDeclaration": 1087,
                                "src": "15406:10:3",
                                "typeDescriptions": {
                                  "typeIdentifier": "t_uint256",
                                  "typeString": "uint256"
                                }
                              },
                              "isConstant": false,
                              "isLValue": true,
                              "isPure": false,
                              "lValueRequested": false,
                              "nodeType": "IndexAccess",
                              "src": "15397:20:3",
                              "typeDescriptions": {
                                "typeIdentifier": "t_struct$_Session_$418_storage",
                                "typeString": "struct Voting.Session storage ref"
                              }
                            },
                            "id": 1188,
                            "isConstant": false,
                            "isLValue": true,
                            "isPure": false,
                            "lValueRequested": true,
                            "memberLocation": "15418:15:3",
                            "memberName": "totalVotesCount",
                            "nodeType": "MemberAccess",
                            "referencedDeclaration": 407,
                            "src": "15397:36:3",
                            "typeDescriptions": {
                              "typeIdentifier": "t_uint256",
                              "typeString": "uint256"
                            }
                          },
                          "typeDescriptions": {
                            "typeIdentifier": "t_uint256",
                            "typeString": "uint256"
                          }
                        },
                        "id": 1190,
                        "nodeType": "ExpressionStatement",
                        "src": "15397:38:3"
                      },
                      {
                        "eventCall": {
                          "arguments": [
                            {
                              "id": 1192,
                              "name": "_sessionId",
                              "nodeType": "Identifier",
                              "overloadedDeclarations": [],
                              "referencedDeclaration": 1087,
                              "src": "15465:10:3",
                              "typeDescriptions": {
                                "typeIdentifier": "t_uint256",
                                "typeString": "uint256"
                              }
                            },
                            {
                              "expression": {
                                "id": 1193,
                                "name": "msg",
                                "nodeType": "Identifier",
                                "overloadedDeclarations": [],
                                "referencedDeclaration": -15,
                                "src": "15477:3:3",
                                "typeDescriptions": {
                                  "typeIdentifier": "t_magic_message",
                                  "typeString": "msg"
                                }
                              },
                              "id": 1194,
                              "isConstant": false,
                              "isLValue": false,
                              "isPure": false,
                              "lValueRequested": false,
                              "memberLocation": "15481:6:3",
                              "memberName": "sender",
                              "nodeType": "MemberAccess",
                              "src": "15477:10:3",
                              "typeDescriptions": {
                                "typeIdentifier": "t_address",
                                "typeString": "address"
                              }
                            }
                          ],
                          "expression": {
                            "argumentTypes": [
                              {
                                "typeIdentifier": "t_uint256",
                                "typeString": "uint256"
                              },
                              {
                                "typeIdentifier": "t_address",
                                "typeString": "address"
                              }
                            ],
                            "id": 1191,
                            "name": "Voted",
                            "nodeType": "Identifier",
                            "overloadedDeclarations": [],
                            "referencedDeclaration": 459,
                            "src": "15459:5:3",
                            "typeDescriptions": {
                              "typeIdentifier": "t_function_event_nonpayable$_t_uint256_$_t_address_$returns$__$",
                              "typeString": "function (uint256,address)"
                            }
                          },
                          "id": 1195,
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": false,
                          "kind": "functionCall",
                          "lValueRequested": false,
                          "nameLocations": [],
                          "names": [],
                          "nodeType": "FunctionCall",
                          "src": "15459:29:3",
                          "tryCall": false,
                          "typeDescriptions": {
                            "typeIdentifier": "t_tuple$__$",
                            "typeString": "tuple()"
                          }
                        },
                        "id": 1196,
                        "nodeType": "EmitStatement",
                        "src": "15454:34:3"
                      }
                    ]
                  },
                  "documentation": {
                    "id": 1085,
                    "nodeType": "StructuredDocumentation",
                    "src": "14242:339:3",
                    "text": " A voter can register his vote for a proposal.\n \n @dev Each voter can vote only once for one proposal.\n Votes can be added only by registered voter when status is set to VotingSessionStarted\n \n @param _sessionId The session identifier\n @param _proposalId The chosen proposal identifier"
                  },
                  "functionSelector": "943e8216",
                  "id": 1198,
                  "implemented": true,
                  "kind": "function",
                  "modifiers": [
                    {
                      "arguments": [
                        {
                          "id": 1092,
                          "name": "_sessionId",
                          "nodeType": "Identifier",
                          "overloadedDeclarations": [],
                          "referencedDeclaration": 1087,
                          "src": "14655:10:3",
                          "typeDescriptions": {
                            "typeIdentifier": "t_uint256",
                            "typeString": "uint256"
                          }
                        }
                      ],
                      "id": 1093,
                      "kind": "modifierInvocation",
                      "modifierName": {
                        "id": 1091,
                        "name": "onlyVoter",
                        "nameLocations": ["14645:9:3"],
                        "nodeType": "IdentifierPath",
                        "referencedDeclaration": 585,
                        "src": "14645:9:3"
                      },
                      "nodeType": "ModifierInvocation",
                      "src": "14645:21:3"
                    },
                    {
                      "arguments": [
                        {
                          "id": 1095,
                          "name": "_sessionId",
                          "nodeType": "Identifier",
                          "overloadedDeclarations": [],
                          "referencedDeclaration": 1087,
                          "src": "14676:10:3",
                          "typeDescriptions": {
                            "typeIdentifier": "t_uint256",
                            "typeString": "uint256"
                          }
                        },
                        {
                          "expression": {
                            "id": 1096,
                            "name": "WorkflowStatus",
                            "nodeType": "Identifier",
                            "overloadedDeclarations": [],
                            "referencedDeclaration": 375,
                            "src": "14688:14:3",
                            "typeDescriptions": {
                              "typeIdentifier": "t_type$_t_enum$_WorkflowStatus_$375_$",
                              "typeString": "type(enum Voting.WorkflowStatus)"
                            }
                          },
                          "id": 1097,
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": true,
                          "lValueRequested": false,
                          "memberLocation": "14703:20:3",
                          "memberName": "VotingSessionStarted",
                          "nodeType": "MemberAccess",
                          "referencedDeclaration": 372,
                          "src": "14688:35:3",
                          "typeDescriptions": {
                            "typeIdentifier": "t_enum$_WorkflowStatus_$375",
                            "typeString": "enum Voting.WorkflowStatus"
                          }
                        }
                      ],
                      "id": 1098,
                      "kind": "modifierInvocation",
                      "modifierName": {
                        "id": 1094,
                        "name": "statusIs",
                        "nameLocations": ["14667:8:3"],
                        "nodeType": "IdentifierPath",
                        "referencedDeclaration": 524,
                        "src": "14667:8:3"
                      },
                      "nodeType": "ModifierInvocation",
                      "src": "14667:57:3"
                    }
                  ],
                  "name": "vote",
                  "nameLocation": "14595:4:3",
                  "nodeType": "FunctionDefinition",
                  "parameters": {
                    "id": 1090,
                    "nodeType": "ParameterList",
                    "parameters": [
                      {
                        "constant": false,
                        "id": 1087,
                        "mutability": "mutable",
                        "name": "_sessionId",
                        "nameLocation": "14605:10:3",
                        "nodeType": "VariableDeclaration",
                        "scope": 1198,
                        "src": "14600:15:3",
                        "stateVariable": false,
                        "storageLocation": "default",
                        "typeDescriptions": {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        },
                        "typeName": {
                          "id": 1086,
                          "name": "uint",
                          "nodeType": "ElementaryTypeName",
                          "src": "14600:4:3",
                          "typeDescriptions": {
                            "typeIdentifier": "t_uint256",
                            "typeString": "uint256"
                          }
                        },
                        "visibility": "internal"
                      },
                      {
                        "constant": false,
                        "id": 1089,
                        "mutability": "mutable",
                        "name": "_proposalId",
                        "nameLocation": "14623:11:3",
                        "nodeType": "VariableDeclaration",
                        "scope": 1198,
                        "src": "14617:17:3",
                        "stateVariable": false,
                        "storageLocation": "default",
                        "typeDescriptions": {
                          "typeIdentifier": "t_uint8",
                          "typeString": "uint8"
                        },
                        "typeName": {
                          "id": 1088,
                          "name": "uint8",
                          "nodeType": "ElementaryTypeName",
                          "src": "14617:5:3",
                          "typeDescriptions": {
                            "typeIdentifier": "t_uint8",
                            "typeString": "uint8"
                          }
                        },
                        "visibility": "internal"
                      }
                    ],
                    "src": "14599:36:3"
                  },
                  "returnParameters": {
                    "id": 1099,
                    "nodeType": "ParameterList",
                    "parameters": [],
                    "src": "14725:0:3"
                  },
                  "scope": 1321,
                  "src": "14586:909:3",
                  "stateMutability": "nonpayable",
                  "virtual": false,
                  "visibility": "external"
                },
                {
                  "body": {
                    "id": 1224,
                    "nodeType": "Block",
                    "src": "16070:75:3",
                    "statements": [
                      {
                        "expression": {
                          "expression": {
                            "baseExpression": {
                              "expression": {
                                "baseExpression": {
                                  "id": 1216,
                                  "name": "sessions",
                                  "nodeType": "Identifier",
                                  "overloadedDeclarations": [],
                                  "referencedDeclaration": 480,
                                  "src": "16087:8:3",
                                  "typeDescriptions": {
                                    "typeIdentifier": "t_mapping$_t_uint256_$_t_struct$_Session_$418_storage_$",
                                    "typeString": "mapping(uint256 => struct Voting.Session storage ref)"
                                  }
                                },
                                "id": 1218,
                                "indexExpression": {
                                  "id": 1217,
                                  "name": "_sessionId",
                                  "nodeType": "Identifier",
                                  "overloadedDeclarations": [],
                                  "referencedDeclaration": 1201,
                                  "src": "16096:10:3",
                                  "typeDescriptions": {
                                    "typeIdentifier": "t_uint256",
                                    "typeString": "uint256"
                                  }
                                },
                                "isConstant": false,
                                "isLValue": true,
                                "isPure": false,
                                "lValueRequested": false,
                                "nodeType": "IndexAccess",
                                "src": "16087:20:3",
                                "typeDescriptions": {
                                  "typeIdentifier": "t_struct$_Session_$418_storage",
                                  "typeString": "struct Voting.Session storage ref"
                                }
                              },
                              "id": 1219,
                              "isConstant": false,
                              "isLValue": true,
                              "isPure": false,
                              "lValueRequested": false,
                              "memberLocation": "16108:6:3",
                              "memberName": "voters",
                              "nodeType": "MemberAccess",
                              "referencedDeclaration": 401,
                              "src": "16087:27:3",
                              "typeDescriptions": {
                                "typeIdentifier": "t_mapping$_t_address_$_t_struct$_Voter_$384_storage_$",
                                "typeString": "mapping(address => struct Voting.Voter storage ref)"
                              }
                            },
                            "id": 1221,
                            "indexExpression": {
                              "id": 1220,
                              "name": "_voter",
                              "nodeType": "Identifier",
                              "overloadedDeclarations": [],
                              "referencedDeclaration": 1203,
                              "src": "16115:6:3",
                              "typeDescriptions": {
                                "typeIdentifier": "t_address",
                                "typeString": "address"
                              }
                            },
                            "isConstant": false,
                            "isLValue": true,
                            "isPure": false,
                            "lValueRequested": false,
                            "nodeType": "IndexAccess",
                            "src": "16087:35:3",
                            "typeDescriptions": {
                              "typeIdentifier": "t_struct$_Voter_$384_storage",
                              "typeString": "struct Voting.Voter storage ref"
                            }
                          },
                          "id": 1222,
                          "isConstant": false,
                          "isLValue": true,
                          "isPure": false,
                          "lValueRequested": false,
                          "memberLocation": "16123:15:3",
                          "memberName": "votedProposalId",
                          "nodeType": "MemberAccess",
                          "referencedDeclaration": 381,
                          "src": "16087:51:3",
                          "typeDescriptions": {
                            "typeIdentifier": "t_uint8",
                            "typeString": "uint8"
                          }
                        },
                        "functionReturnParameters": 1215,
                        "id": 1223,
                        "nodeType": "Return",
                        "src": "16080:58:3"
                      }
                    ]
                  },
                  "documentation": {
                    "id": 1199,
                    "nodeType": "StructuredDocumentation",
                    "src": "15585:306:3",
                    "text": " Retreive vote\n \n @dev Administrator and registered voters can all access to everybody votes but only at the end of voting session.\n \n @param _sessionId The session identifier\n @param _voter The voter address\n @return uint8 target voter proposal choice"
                  },
                  "functionSelector": "bc3f931f",
                  "id": 1225,
                  "implemented": true,
                  "kind": "function",
                  "modifiers": [
                    {
                      "arguments": [
                        {
                          "id": 1206,
                          "name": "_sessionId",
                          "nodeType": "Identifier",
                          "overloadedDeclarations": [],
                          "referencedDeclaration": 1201,
                          "src": "15981:10:3",
                          "typeDescriptions": {
                            "typeIdentifier": "t_uint256",
                            "typeString": "uint256"
                          }
                        }
                      ],
                      "id": 1207,
                      "kind": "modifierInvocation",
                      "modifierName": {
                        "id": 1205,
                        "name": "onlyVoterOrOwner",
                        "nameLocations": ["15964:16:3"],
                        "nodeType": "IdentifierPath",
                        "referencedDeclaration": 610,
                        "src": "15964:16:3"
                      },
                      "nodeType": "ModifierInvocation",
                      "src": "15964:28:3"
                    },
                    {
                      "arguments": [
                        {
                          "id": 1209,
                          "name": "_sessionId",
                          "nodeType": "Identifier",
                          "overloadedDeclarations": [],
                          "referencedDeclaration": 1201,
                          "src": "16007:10:3",
                          "typeDescriptions": {
                            "typeIdentifier": "t_uint256",
                            "typeString": "uint256"
                          }
                        },
                        {
                          "expression": {
                            "id": 1210,
                            "name": "WorkflowStatus",
                            "nodeType": "Identifier",
                            "overloadedDeclarations": [],
                            "referencedDeclaration": 375,
                            "src": "16019:14:3",
                            "typeDescriptions": {
                              "typeIdentifier": "t_type$_t_enum$_WorkflowStatus_$375_$",
                              "typeString": "type(enum Voting.WorkflowStatus)"
                            }
                          },
                          "id": 1211,
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": true,
                          "lValueRequested": false,
                          "memberLocation": "16034:18:3",
                          "memberName": "VotingSessionEnded",
                          "nodeType": "MemberAccess",
                          "referencedDeclaration": 373,
                          "src": "16019:33:3",
                          "typeDescriptions": {
                            "typeIdentifier": "t_enum$_WorkflowStatus_$375",
                            "typeString": "enum Voting.WorkflowStatus"
                          }
                        }
                      ],
                      "id": 1212,
                      "kind": "modifierInvocation",
                      "modifierName": {
                        "id": 1208,
                        "name": "statusAtLeast",
                        "nameLocations": ["15993:13:3"],
                        "nodeType": "IdentifierPath",
                        "referencedDeclaration": 566,
                        "src": "15993:13:3"
                      },
                      "nodeType": "ModifierInvocation",
                      "src": "15993:60:3"
                    }
                  ],
                  "name": "getVote",
                  "nameLocation": "15909:7:3",
                  "nodeType": "FunctionDefinition",
                  "parameters": {
                    "id": 1204,
                    "nodeType": "ParameterList",
                    "parameters": [
                      {
                        "constant": false,
                        "id": 1201,
                        "mutability": "mutable",
                        "name": "_sessionId",
                        "nameLocation": "15922:10:3",
                        "nodeType": "VariableDeclaration",
                        "scope": 1225,
                        "src": "15917:15:3",
                        "stateVariable": false,
                        "storageLocation": "default",
                        "typeDescriptions": {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        },
                        "typeName": {
                          "id": 1200,
                          "name": "uint",
                          "nodeType": "ElementaryTypeName",
                          "src": "15917:4:3",
                          "typeDescriptions": {
                            "typeIdentifier": "t_uint256",
                            "typeString": "uint256"
                          }
                        },
                        "visibility": "internal"
                      },
                      {
                        "constant": false,
                        "id": 1203,
                        "mutability": "mutable",
                        "name": "_voter",
                        "nameLocation": "15942:6:3",
                        "nodeType": "VariableDeclaration",
                        "scope": 1225,
                        "src": "15934:14:3",
                        "stateVariable": false,
                        "storageLocation": "default",
                        "typeDescriptions": {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        },
                        "typeName": {
                          "id": 1202,
                          "name": "address",
                          "nodeType": "ElementaryTypeName",
                          "src": "15934:7:3",
                          "stateMutability": "nonpayable",
                          "typeDescriptions": {
                            "typeIdentifier": "t_address",
                            "typeString": "address"
                          }
                        },
                        "visibility": "internal"
                      }
                    ],
                    "src": "15916:33:3"
                  },
                  "returnParameters": {
                    "id": 1215,
                    "nodeType": "ParameterList",
                    "parameters": [
                      {
                        "constant": false,
                        "id": 1214,
                        "mutability": "mutable",
                        "name": "",
                        "nameLocation": "-1:-1:-1",
                        "nodeType": "VariableDeclaration",
                        "scope": 1225,
                        "src": "16063:5:3",
                        "stateVariable": false,
                        "storageLocation": "default",
                        "typeDescriptions": {
                          "typeIdentifier": "t_uint8",
                          "typeString": "uint8"
                        },
                        "typeName": {
                          "id": 1213,
                          "name": "uint8",
                          "nodeType": "ElementaryTypeName",
                          "src": "16063:5:3",
                          "typeDescriptions": {
                            "typeIdentifier": "t_uint8",
                            "typeString": "uint8"
                          }
                        },
                        "visibility": "internal"
                      }
                    ],
                    "src": "16062:7:3"
                  },
                  "scope": 1321,
                  "src": "15900:245:3",
                  "stateMutability": "view",
                  "virtual": false,
                  "visibility": "external"
                },
                {
                  "body": {
                    "id": 1248,
                    "nodeType": "Block",
                    "src": "16550:61:3",
                    "statements": [
                      {
                        "expression": {
                          "expression": {
                            "baseExpression": {
                              "id": 1243,
                              "name": "sessions",
                              "nodeType": "Identifier",
                              "overloadedDeclarations": [],
                              "referencedDeclaration": 480,
                              "src": "16567:8:3",
                              "typeDescriptions": {
                                "typeIdentifier": "t_mapping$_t_uint256_$_t_struct$_Session_$418_storage_$",
                                "typeString": "mapping(uint256 => struct Voting.Session storage ref)"
                              }
                            },
                            "id": 1245,
                            "indexExpression": {
                              "id": 1244,
                              "name": "_sessionId",
                              "nodeType": "Identifier",
                              "overloadedDeclarations": [],
                              "referencedDeclaration": 1228,
                              "src": "16576:10:3",
                              "typeDescriptions": {
                                "typeIdentifier": "t_uint256",
                                "typeString": "uint256"
                              }
                            },
                            "isConstant": false,
                            "isLValue": true,
                            "isPure": false,
                            "lValueRequested": false,
                            "nodeType": "IndexAccess",
                            "src": "16567:20:3",
                            "typeDescriptions": {
                              "typeIdentifier": "t_struct$_Session_$418_storage",
                              "typeString": "struct Voting.Session storage ref"
                            }
                          },
                          "id": 1246,
                          "isConstant": false,
                          "isLValue": true,
                          "isPure": false,
                          "lValueRequested": false,
                          "memberLocation": "16588:16:3",
                          "memberName": "winningProposals",
                          "nodeType": "MemberAccess",
                          "referencedDeclaration": 417,
                          "src": "16567:37:3",
                          "typeDescriptions": {
                            "typeIdentifier": "t_array$_t_struct$_Proposal_$391_storage_$dyn_storage",
                            "typeString": "struct Voting.Proposal storage ref[] storage ref"
                          }
                        },
                        "functionReturnParameters": 1242,
                        "id": 1247,
                        "nodeType": "Return",
                        "src": "16560:44:3"
                      }
                    ]
                  },
                  "documentation": {
                    "id": 1226,
                    "nodeType": "StructuredDocumentation",
                    "src": "16151:227:3",
                    "text": " Retreive winning proposals\n \n @dev Administrator and registered voters can retreive winning proposals but only at the end of voting session.\n \n @return Proposal[] The winning proposals"
                  },
                  "functionSelector": "6b1426a4",
                  "id": 1249,
                  "implemented": true,
                  "kind": "function",
                  "modifiers": [
                    {
                      "arguments": [
                        {
                          "id": 1231,
                          "name": "_sessionId",
                          "nodeType": "Identifier",
                          "overloadedDeclarations": [],
                          "referencedDeclaration": 1228,
                          "src": "16455:10:3",
                          "typeDescriptions": {
                            "typeIdentifier": "t_uint256",
                            "typeString": "uint256"
                          }
                        }
                      ],
                      "id": 1232,
                      "kind": "modifierInvocation",
                      "modifierName": {
                        "id": 1230,
                        "name": "onlyVoterOrOwner",
                        "nameLocations": ["16438:16:3"],
                        "nodeType": "IdentifierPath",
                        "referencedDeclaration": 610,
                        "src": "16438:16:3"
                      },
                      "nodeType": "ModifierInvocation",
                      "src": "16438:28:3"
                    },
                    {
                      "arguments": [
                        {
                          "id": 1234,
                          "name": "_sessionId",
                          "nodeType": "Identifier",
                          "overloadedDeclarations": [],
                          "referencedDeclaration": 1228,
                          "src": "16481:10:3",
                          "typeDescriptions": {
                            "typeIdentifier": "t_uint256",
                            "typeString": "uint256"
                          }
                        },
                        {
                          "expression": {
                            "id": 1235,
                            "name": "WorkflowStatus",
                            "nodeType": "Identifier",
                            "overloadedDeclarations": [],
                            "referencedDeclaration": 375,
                            "src": "16493:14:3",
                            "typeDescriptions": {
                              "typeIdentifier": "t_type$_t_enum$_WorkflowStatus_$375_$",
                              "typeString": "type(enum Voting.WorkflowStatus)"
                            }
                          },
                          "id": 1236,
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": true,
                          "lValueRequested": false,
                          "memberLocation": "16508:12:3",
                          "memberName": "VotesTallied",
                          "nodeType": "MemberAccess",
                          "referencedDeclaration": 374,
                          "src": "16493:27:3",
                          "typeDescriptions": {
                            "typeIdentifier": "t_enum$_WorkflowStatus_$375",
                            "typeString": "enum Voting.WorkflowStatus"
                          }
                        }
                      ],
                      "id": 1237,
                      "kind": "modifierInvocation",
                      "modifierName": {
                        "id": 1233,
                        "name": "statusAtLeast",
                        "nameLocations": ["16467:13:3"],
                        "nodeType": "IdentifierPath",
                        "referencedDeclaration": 566,
                        "src": "16467:13:3"
                      },
                      "nodeType": "ModifierInvocation",
                      "src": "16467:54:3"
                    }
                  ],
                  "name": "getWinners",
                  "nameLocation": "16396:10:3",
                  "nodeType": "FunctionDefinition",
                  "parameters": {
                    "id": 1229,
                    "nodeType": "ParameterList",
                    "parameters": [
                      {
                        "constant": false,
                        "id": 1228,
                        "mutability": "mutable",
                        "name": "_sessionId",
                        "nameLocation": "16412:10:3",
                        "nodeType": "VariableDeclaration",
                        "scope": 1249,
                        "src": "16407:15:3",
                        "stateVariable": false,
                        "storageLocation": "default",
                        "typeDescriptions": {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        },
                        "typeName": {
                          "id": 1227,
                          "name": "uint",
                          "nodeType": "ElementaryTypeName",
                          "src": "16407:4:3",
                          "typeDescriptions": {
                            "typeIdentifier": "t_uint256",
                            "typeString": "uint256"
                          }
                        },
                        "visibility": "internal"
                      }
                    ],
                    "src": "16406:17:3"
                  },
                  "returnParameters": {
                    "id": 1242,
                    "nodeType": "ParameterList",
                    "parameters": [
                      {
                        "constant": false,
                        "id": 1241,
                        "mutability": "mutable",
                        "name": "",
                        "nameLocation": "-1:-1:-1",
                        "nodeType": "VariableDeclaration",
                        "scope": 1249,
                        "src": "16531:17:3",
                        "stateVariable": false,
                        "storageLocation": "memory",
                        "typeDescriptions": {
                          "typeIdentifier": "t_array$_t_struct$_Proposal_$391_memory_ptr_$dyn_memory_ptr",
                          "typeString": "struct Voting.Proposal[]"
                        },
                        "typeName": {
                          "baseType": {
                            "id": 1239,
                            "nodeType": "UserDefinedTypeName",
                            "pathNode": {
                              "id": 1238,
                              "name": "Proposal",
                              "nameLocations": ["16531:8:3"],
                              "nodeType": "IdentifierPath",
                              "referencedDeclaration": 391,
                              "src": "16531:8:3"
                            },
                            "referencedDeclaration": 391,
                            "src": "16531:8:3",
                            "typeDescriptions": {
                              "typeIdentifier": "t_struct$_Proposal_$391_storage_ptr",
                              "typeString": "struct Voting.Proposal"
                            }
                          },
                          "id": 1240,
                          "nodeType": "ArrayTypeName",
                          "src": "16531:10:3",
                          "typeDescriptions": {
                            "typeIdentifier": "t_array$_t_struct$_Proposal_$391_storage_$dyn_storage_ptr",
                            "typeString": "struct Voting.Proposal[]"
                          }
                        },
                        "visibility": "internal"
                      }
                    ],
                    "src": "16530:19:3"
                  },
                  "scope": 1321,
                  "src": "16387:224:3",
                  "stateMutability": "view",
                  "virtual": false,
                  "visibility": "external"
                },
                {
                  "body": {
                    "id": 1319,
                    "nodeType": "Block",
                    "src": "16768:473:3",
                    "statements": [
                      {
                        "expression": {
                          "arguments": [
                            {
                              "commonType": {
                                "typeIdentifier": "t_uint256",
                                "typeString": "uint256"
                              },
                              "id": 1267,
                              "isConstant": false,
                              "isLValue": false,
                              "isPure": false,
                              "lValueRequested": false,
                              "leftExpression": {
                                "expression": {
                                  "expression": {
                                    "baseExpression": {
                                      "id": 1257,
                                      "name": "sessions",
                                      "nodeType": "Identifier",
                                      "overloadedDeclarations": [],
                                      "referencedDeclaration": 480,
                                      "src": "16786:8:3",
                                      "typeDescriptions": {
                                        "typeIdentifier": "t_mapping$_t_uint256_$_t_struct$_Session_$418_storage_$",
                                        "typeString": "mapping(uint256 => struct Voting.Session storage ref)"
                                      }
                                    },
                                    "id": 1259,
                                    "indexExpression": {
                                      "id": 1258,
                                      "name": "_sessionId",
                                      "nodeType": "Identifier",
                                      "overloadedDeclarations": [],
                                      "referencedDeclaration": 1251,
                                      "src": "16795:10:3",
                                      "typeDescriptions": {
                                        "typeIdentifier": "t_uint256",
                                        "typeString": "uint256"
                                      }
                                    },
                                    "isConstant": false,
                                    "isLValue": true,
                                    "isPure": false,
                                    "lValueRequested": false,
                                    "nodeType": "IndexAccess",
                                    "src": "16786:20:3",
                                    "typeDescriptions": {
                                      "typeIdentifier": "t_struct$_Session_$418_storage",
                                      "typeString": "struct Voting.Session storage ref"
                                    }
                                  },
                                  "id": 1260,
                                  "isConstant": false,
                                  "isLValue": true,
                                  "isPure": false,
                                  "lValueRequested": false,
                                  "memberLocation": "16807:9:3",
                                  "memberName": "proposals",
                                  "nodeType": "MemberAccess",
                                  "referencedDeclaration": 412,
                                  "src": "16786:30:3",
                                  "typeDescriptions": {
                                    "typeIdentifier": "t_array$_t_struct$_Proposal_$391_storage_$dyn_storage",
                                    "typeString": "struct Voting.Proposal storage ref[] storage ref"
                                  }
                                },
                                "id": 1261,
                                "isConstant": false,
                                "isLValue": false,
                                "isPure": false,
                                "lValueRequested": false,
                                "memberLocation": "16817:6:3",
                                "memberName": "length",
                                "nodeType": "MemberAccess",
                                "src": "16786:37:3",
                                "typeDescriptions": {
                                  "typeIdentifier": "t_uint256",
                                  "typeString": "uint256"
                                }
                              },
                              "nodeType": "BinaryOperation",
                              "operator": "<",
                              "rightExpression": {
                                "commonType": {
                                  "typeIdentifier": "t_rational_255_by_1",
                                  "typeString": "int_const 255"
                                },
                                "id": 1266,
                                "isConstant": false,
                                "isLValue": false,
                                "isPure": true,
                                "lValueRequested": false,
                                "leftExpression": {
                                  "commonType": {
                                    "typeIdentifier": "t_rational_256_by_1",
                                    "typeString": "int_const 256"
                                  },
                                  "id": 1264,
                                  "isConstant": false,
                                  "isLValue": false,
                                  "isPure": true,
                                  "lValueRequested": false,
                                  "leftExpression": {
                                    "hexValue": "32",
                                    "id": 1262,
                                    "isConstant": false,
                                    "isLValue": false,
                                    "isPure": true,
                                    "kind": "number",
                                    "lValueRequested": false,
                                    "nodeType": "Literal",
                                    "src": "16826:1:3",
                                    "typeDescriptions": {
                                      "typeIdentifier": "t_rational_2_by_1",
                                      "typeString": "int_const 2"
                                    },
                                    "value": "2"
                                  },
                                  "nodeType": "BinaryOperation",
                                  "operator": "**",
                                  "rightExpression": {
                                    "hexValue": "38",
                                    "id": 1263,
                                    "isConstant": false,
                                    "isLValue": false,
                                    "isPure": true,
                                    "kind": "number",
                                    "lValueRequested": false,
                                    "nodeType": "Literal",
                                    "src": "16831:1:3",
                                    "typeDescriptions": {
                                      "typeIdentifier": "t_rational_8_by_1",
                                      "typeString": "int_const 8"
                                    },
                                    "value": "8"
                                  },
                                  "src": "16826:6:3",
                                  "typeDescriptions": {
                                    "typeIdentifier": "t_rational_256_by_1",
                                    "typeString": "int_const 256"
                                  }
                                },
                                "nodeType": "BinaryOperation",
                                "operator": "-",
                                "rightExpression": {
                                  "hexValue": "31",
                                  "id": 1265,
                                  "isConstant": false,
                                  "isLValue": false,
                                  "isPure": true,
                                  "kind": "number",
                                  "lValueRequested": false,
                                  "nodeType": "Literal",
                                  "src": "16835:1:3",
                                  "typeDescriptions": {
                                    "typeIdentifier": "t_rational_1_by_1",
                                    "typeString": "int_const 1"
                                  },
                                  "value": "1"
                                },
                                "src": "16826:10:3",
                                "typeDescriptions": {
                                  "typeIdentifier": "t_rational_255_by_1",
                                  "typeString": "int_const 255"
                                }
                              },
                              "src": "16786:50:3",
                              "typeDescriptions": {
                                "typeIdentifier": "t_bool",
                                "typeString": "bool"
                              }
                            },
                            {
                              "hexValue": "546f6f206d616e792070726f706f73616c73",
                              "id": 1268,
                              "isConstant": false,
                              "isLValue": false,
                              "isPure": true,
                              "kind": "string",
                              "lValueRequested": false,
                              "nodeType": "Literal",
                              "src": "16838:20:3",
                              "typeDescriptions": {
                                "typeIdentifier": "t_stringliteral_2db7cd1b4eea613955c7b12727741acc45d26baff48337119768869e1737afa9",
                                "typeString": "literal_string \"Too many proposals\""
                              },
                              "value": "Too many proposals"
                            }
                          ],
                          "expression": {
                            "argumentTypes": [
                              {
                                "typeIdentifier": "t_bool",
                                "typeString": "bool"
                              },
                              {
                                "typeIdentifier": "t_stringliteral_2db7cd1b4eea613955c7b12727741acc45d26baff48337119768869e1737afa9",
                                "typeString": "literal_string \"Too many proposals\""
                              }
                            ],
                            "id": 1256,
                            "name": "require",
                            "nodeType": "Identifier",
                            "overloadedDeclarations": [-18, -18],
                            "referencedDeclaration": -18,
                            "src": "16778:7:3",
                            "typeDescriptions": {
                              "typeIdentifier": "t_function_require_pure$_t_bool_$_t_string_memory_ptr_$returns$__$",
                              "typeString": "function (bool,string memory) pure"
                            }
                          },
                          "id": 1269,
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": false,
                          "kind": "functionCall",
                          "lValueRequested": false,
                          "nameLocations": [],
                          "names": [],
                          "nodeType": "FunctionCall",
                          "src": "16778:81:3",
                          "tryCall": false,
                          "typeDescriptions": {
                            "typeIdentifier": "t_tuple$__$",
                            "typeString": "tuple()"
                          }
                        },
                        "id": 1270,
                        "nodeType": "ExpressionStatement",
                        "src": "16778:81:3"
                      },
                      {
                        "expression": {
                          "arguments": [
                            {
                              "arguments": [
                                {
                                  "id": 1277,
                                  "name": "_description",
                                  "nodeType": "Identifier",
                                  "overloadedDeclarations": [],
                                  "referencedDeclaration": 1253,
                                  "src": "16952:12:3",
                                  "typeDescriptions": {
                                    "typeIdentifier": "t_string_memory_ptr",
                                    "typeString": "string memory"
                                  }
                                },
                                {
                                  "hexValue": "30",
                                  "id": 1278,
                                  "isConstant": false,
                                  "isLValue": false,
                                  "isPure": true,
                                  "kind": "number",
                                  "lValueRequested": false,
                                  "nodeType": "Literal",
                                  "src": "16966:1:3",
                                  "typeDescriptions": {
                                    "typeIdentifier": "t_rational_0_by_1",
                                    "typeString": "int_const 0"
                                  },
                                  "value": "0"
                                },
                                {
                                  "expression": {
                                    "id": 1279,
                                    "name": "msg",
                                    "nodeType": "Identifier",
                                    "overloadedDeclarations": [],
                                    "referencedDeclaration": -15,
                                    "src": "16969:3:3",
                                    "typeDescriptions": {
                                      "typeIdentifier": "t_magic_message",
                                      "typeString": "msg"
                                    }
                                  },
                                  "id": 1280,
                                  "isConstant": false,
                                  "isLValue": false,
                                  "isPure": false,
                                  "lValueRequested": false,
                                  "memberLocation": "16973:6:3",
                                  "memberName": "sender",
                                  "nodeType": "MemberAccess",
                                  "src": "16969:10:3",
                                  "typeDescriptions": {
                                    "typeIdentifier": "t_address",
                                    "typeString": "address"
                                  }
                                }
                              ],
                              "expression": {
                                "argumentTypes": [
                                  {
                                    "typeIdentifier": "t_string_memory_ptr",
                                    "typeString": "string memory"
                                  },
                                  {
                                    "typeIdentifier": "t_rational_0_by_1",
                                    "typeString": "int_const 0"
                                  },
                                  {
                                    "typeIdentifier": "t_address",
                                    "typeString": "address"
                                  }
                                ],
                                "id": 1276,
                                "name": "Proposal",
                                "nodeType": "Identifier",
                                "overloadedDeclarations": [],
                                "referencedDeclaration": 391,
                                "src": "16943:8:3",
                                "typeDescriptions": {
                                  "typeIdentifier": "t_type$_t_struct$_Proposal_$391_storage_ptr_$",
                                  "typeString": "type(struct Voting.Proposal storage pointer)"
                                }
                              },
                              "id": 1281,
                              "isConstant": false,
                              "isLValue": false,
                              "isPure": false,
                              "kind": "structConstructorCall",
                              "lValueRequested": false,
                              "nameLocations": [],
                              "names": [],
                              "nodeType": "FunctionCall",
                              "src": "16943:37:3",
                              "tryCall": false,
                              "typeDescriptions": {
                                "typeIdentifier": "t_struct$_Proposal_$391_memory_ptr",
                                "typeString": "struct Voting.Proposal memory"
                              }
                            }
                          ],
                          "expression": {
                            "argumentTypes": [
                              {
                                "typeIdentifier": "t_struct$_Proposal_$391_memory_ptr",
                                "typeString": "struct Voting.Proposal memory"
                              }
                            ],
                            "expression": {
                              "expression": {
                                "baseExpression": {
                                  "id": 1271,
                                  "name": "sessions",
                                  "nodeType": "Identifier",
                                  "overloadedDeclarations": [],
                                  "referencedDeclaration": 480,
                                  "src": "16907:8:3",
                                  "typeDescriptions": {
                                    "typeIdentifier": "t_mapping$_t_uint256_$_t_struct$_Session_$418_storage_$",
                                    "typeString": "mapping(uint256 => struct Voting.Session storage ref)"
                                  }
                                },
                                "id": 1273,
                                "indexExpression": {
                                  "id": 1272,
                                  "name": "_sessionId",
                                  "nodeType": "Identifier",
                                  "overloadedDeclarations": [],
                                  "referencedDeclaration": 1251,
                                  "src": "16916:10:3",
                                  "typeDescriptions": {
                                    "typeIdentifier": "t_uint256",
                                    "typeString": "uint256"
                                  }
                                },
                                "isConstant": false,
                                "isLValue": true,
                                "isPure": false,
                                "lValueRequested": false,
                                "nodeType": "IndexAccess",
                                "src": "16907:20:3",
                                "typeDescriptions": {
                                  "typeIdentifier": "t_struct$_Session_$418_storage",
                                  "typeString": "struct Voting.Session storage ref"
                                }
                              },
                              "id": 1274,
                              "isConstant": false,
                              "isLValue": true,
                              "isPure": false,
                              "lValueRequested": false,
                              "memberLocation": "16928:9:3",
                              "memberName": "proposals",
                              "nodeType": "MemberAccess",
                              "referencedDeclaration": 412,
                              "src": "16907:30:3",
                              "typeDescriptions": {
                                "typeIdentifier": "t_array$_t_struct$_Proposal_$391_storage_$dyn_storage",
                                "typeString": "struct Voting.Proposal storage ref[] storage ref"
                              }
                            },
                            "id": 1275,
                            "isConstant": false,
                            "isLValue": false,
                            "isPure": false,
                            "lValueRequested": false,
                            "memberLocation": "16938:4:3",
                            "memberName": "push",
                            "nodeType": "MemberAccess",
                            "src": "16907:35:3",
                            "typeDescriptions": {
                              "typeIdentifier": "t_function_arraypush_nonpayable$_t_array$_t_struct$_Proposal_$391_storage_$dyn_storage_ptr_$_t_struct$_Proposal_$391_storage_$returns$__$bound_to$_t_array$_t_struct$_Proposal_$391_storage_$dyn_storage_ptr_$",
                              "typeString": "function (struct Voting.Proposal storage ref[] storage pointer,struct Voting.Proposal storage ref)"
                            }
                          },
                          "id": 1282,
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": false,
                          "kind": "functionCall",
                          "lValueRequested": false,
                          "nameLocations": [],
                          "names": [],
                          "nodeType": "FunctionCall",
                          "src": "16907:74:3",
                          "tryCall": false,
                          "typeDescriptions": {
                            "typeIdentifier": "t_tuple$__$",
                            "typeString": "tuple()"
                          }
                        },
                        "id": 1283,
                        "nodeType": "ExpressionStatement",
                        "src": "16907:74:3"
                      },
                      {
                        "expression": {
                          "id": 1292,
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": false,
                          "lValueRequested": false,
                          "nodeType": "UnaryOperation",
                          "operator": "++",
                          "prefix": false,
                          "src": "16991:53:3",
                          "subExpression": {
                            "expression": {
                              "baseExpression": {
                                "expression": {
                                  "baseExpression": {
                                    "id": 1284,
                                    "name": "sessions",
                                    "nodeType": "Identifier",
                                    "overloadedDeclarations": [],
                                    "referencedDeclaration": 480,
                                    "src": "16991:8:3",
                                    "typeDescriptions": {
                                      "typeIdentifier": "t_mapping$_t_uint256_$_t_struct$_Session_$418_storage_$",
                                      "typeString": "mapping(uint256 => struct Voting.Session storage ref)"
                                    }
                                  },
                                  "id": 1286,
                                  "indexExpression": {
                                    "id": 1285,
                                    "name": "_sessionId",
                                    "nodeType": "Identifier",
                                    "overloadedDeclarations": [],
                                    "referencedDeclaration": 1251,
                                    "src": "17000:10:3",
                                    "typeDescriptions": {
                                      "typeIdentifier": "t_uint256",
                                      "typeString": "uint256"
                                    }
                                  },
                                  "isConstant": false,
                                  "isLValue": true,
                                  "isPure": false,
                                  "lValueRequested": false,
                                  "nodeType": "IndexAccess",
                                  "src": "16991:20:3",
                                  "typeDescriptions": {
                                    "typeIdentifier": "t_struct$_Session_$418_storage",
                                    "typeString": "struct Voting.Session storage ref"
                                  }
                                },
                                "id": 1287,
                                "isConstant": false,
                                "isLValue": true,
                                "isPure": false,
                                "lValueRequested": false,
                                "memberLocation": "17012:6:3",
                                "memberName": "voters",
                                "nodeType": "MemberAccess",
                                "referencedDeclaration": 401,
                                "src": "16991:27:3",
                                "typeDescriptions": {
                                  "typeIdentifier": "t_mapping$_t_address_$_t_struct$_Voter_$384_storage_$",
                                  "typeString": "mapping(address => struct Voting.Voter storage ref)"
                                }
                              },
                              "id": 1290,
                              "indexExpression": {
                                "expression": {
                                  "id": 1288,
                                  "name": "msg",
                                  "nodeType": "Identifier",
                                  "overloadedDeclarations": [],
                                  "referencedDeclaration": -15,
                                  "src": "17019:3:3",
                                  "typeDescriptions": {
                                    "typeIdentifier": "t_magic_message",
                                    "typeString": "msg"
                                  }
                                },
                                "id": 1289,
                                "isConstant": false,
                                "isLValue": false,
                                "isPure": false,
                                "lValueRequested": false,
                                "memberLocation": "17023:6:3",
                                "memberName": "sender",
                                "nodeType": "MemberAccess",
                                "src": "17019:10:3",
                                "typeDescriptions": {
                                  "typeIdentifier": "t_address",
                                  "typeString": "address"
                                }
                              },
                              "isConstant": false,
                              "isLValue": true,
                              "isPure": false,
                              "lValueRequested": false,
                              "nodeType": "IndexAccess",
                              "src": "16991:39:3",
                              "typeDescriptions": {
                                "typeIdentifier": "t_struct$_Voter_$384_storage",
                                "typeString": "struct Voting.Voter storage ref"
                              }
                            },
                            "id": 1291,
                            "isConstant": false,
                            "isLValue": true,
                            "isPure": false,
                            "lValueRequested": true,
                            "memberLocation": "17031:11:3",
                            "memberName": "nbProposals",
                            "nodeType": "MemberAccess",
                            "referencedDeclaration": 383,
                            "src": "16991:51:3",
                            "typeDescriptions": {
                              "typeIdentifier": "t_uint8",
                              "typeString": "uint8"
                            }
                          },
                          "typeDescriptions": {
                            "typeIdentifier": "t_uint8",
                            "typeString": "uint8"
                          }
                        },
                        "id": 1293,
                        "nodeType": "ExpressionStatement",
                        "src": "16991:53:3"
                      },
                      {
                        "assignments": [1295],
                        "declarations": [
                          {
                            "constant": false,
                            "id": 1295,
                            "mutability": "mutable",
                            "name": "proposalId",
                            "nameLocation": "17060:10:3",
                            "nodeType": "VariableDeclaration",
                            "scope": 1319,
                            "src": "17054:16:3",
                            "stateVariable": false,
                            "storageLocation": "default",
                            "typeDescriptions": {
                              "typeIdentifier": "t_uint8",
                              "typeString": "uint8"
                            },
                            "typeName": {
                              "id": 1294,
                              "name": "uint8",
                              "nodeType": "ElementaryTypeName",
                              "src": "17054:5:3",
                              "typeDescriptions": {
                                "typeIdentifier": "t_uint8",
                                "typeString": "uint8"
                              }
                            },
                            "visibility": "internal"
                          }
                        ],
                        "id": 1306,
                        "initialValue": {
                          "arguments": [
                            {
                              "commonType": {
                                "typeIdentifier": "t_uint256",
                                "typeString": "uint256"
                              },
                              "id": 1304,
                              "isConstant": false,
                              "isLValue": false,
                              "isPure": false,
                              "lValueRequested": false,
                              "leftExpression": {
                                "expression": {
                                  "expression": {
                                    "baseExpression": {
                                      "id": 1298,
                                      "name": "sessions",
                                      "nodeType": "Identifier",
                                      "overloadedDeclarations": [],
                                      "referencedDeclaration": 480,
                                      "src": "17079:8:3",
                                      "typeDescriptions": {
                                        "typeIdentifier": "t_mapping$_t_uint256_$_t_struct$_Session_$418_storage_$",
                                        "typeString": "mapping(uint256 => struct Voting.Session storage ref)"
                                      }
                                    },
                                    "id": 1300,
                                    "indexExpression": {
                                      "id": 1299,
                                      "name": "_sessionId",
                                      "nodeType": "Identifier",
                                      "overloadedDeclarations": [],
                                      "referencedDeclaration": 1251,
                                      "src": "17088:10:3",
                                      "typeDescriptions": {
                                        "typeIdentifier": "t_uint256",
                                        "typeString": "uint256"
                                      }
                                    },
                                    "isConstant": false,
                                    "isLValue": true,
                                    "isPure": false,
                                    "lValueRequested": false,
                                    "nodeType": "IndexAccess",
                                    "src": "17079:20:3",
                                    "typeDescriptions": {
                                      "typeIdentifier": "t_struct$_Session_$418_storage",
                                      "typeString": "struct Voting.Session storage ref"
                                    }
                                  },
                                  "id": 1301,
                                  "isConstant": false,
                                  "isLValue": true,
                                  "isPure": false,
                                  "lValueRequested": false,
                                  "memberLocation": "17100:9:3",
                                  "memberName": "proposals",
                                  "nodeType": "MemberAccess",
                                  "referencedDeclaration": 412,
                                  "src": "17079:30:3",
                                  "typeDescriptions": {
                                    "typeIdentifier": "t_array$_t_struct$_Proposal_$391_storage_$dyn_storage",
                                    "typeString": "struct Voting.Proposal storage ref[] storage ref"
                                  }
                                },
                                "id": 1302,
                                "isConstant": false,
                                "isLValue": false,
                                "isPure": false,
                                "lValueRequested": false,
                                "memberLocation": "17110:6:3",
                                "memberName": "length",
                                "nodeType": "MemberAccess",
                                "src": "17079:37:3",
                                "typeDescriptions": {
                                  "typeIdentifier": "t_uint256",
                                  "typeString": "uint256"
                                }
                              },
                              "nodeType": "BinaryOperation",
                              "operator": "-",
                              "rightExpression": {
                                "hexValue": "31",
                                "id": 1303,
                                "isConstant": false,
                                "isLValue": false,
                                "isPure": true,
                                "kind": "number",
                                "lValueRequested": false,
                                "nodeType": "Literal",
                                "src": "17119:1:3",
                                "typeDescriptions": {
                                  "typeIdentifier": "t_rational_1_by_1",
                                  "typeString": "int_const 1"
                                },
                                "value": "1"
                              },
                              "src": "17079:41:3",
                              "typeDescriptions": {
                                "typeIdentifier": "t_uint256",
                                "typeString": "uint256"
                              }
                            }
                          ],
                          "expression": {
                            "argumentTypes": [
                              {
                                "typeIdentifier": "t_uint256",
                                "typeString": "uint256"
                              }
                            ],
                            "id": 1297,
                            "isConstant": false,
                            "isLValue": false,
                            "isPure": true,
                            "lValueRequested": false,
                            "nodeType": "ElementaryTypeNameExpression",
                            "src": "17073:5:3",
                            "typeDescriptions": {
                              "typeIdentifier": "t_type$_t_uint8_$",
                              "typeString": "type(uint8)"
                            },
                            "typeName": {
                              "id": 1296,
                              "name": "uint8",
                              "nodeType": "ElementaryTypeName",
                              "src": "17073:5:3",
                              "typeDescriptions": {}
                            }
                          },
                          "id": 1305,
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": false,
                          "kind": "typeConversion",
                          "lValueRequested": false,
                          "nameLocations": [],
                          "names": [],
                          "nodeType": "FunctionCall",
                          "src": "17073:48:3",
                          "tryCall": false,
                          "typeDescriptions": {
                            "typeIdentifier": "t_uint8",
                            "typeString": "uint8"
                          }
                        },
                        "nodeType": "VariableDeclarationStatement",
                        "src": "17054:67:3"
                      },
                      {
                        "eventCall": {
                          "arguments": [
                            {
                              "id": 1308,
                              "name": "_sessionId",
                              "nodeType": "Identifier",
                              "overloadedDeclarations": [],
                              "referencedDeclaration": 1251,
                              "src": "17155:10:3",
                              "typeDescriptions": {
                                "typeIdentifier": "t_uint256",
                                "typeString": "uint256"
                              }
                            },
                            {
                              "id": 1309,
                              "name": "proposalId",
                              "nodeType": "Identifier",
                              "overloadedDeclarations": [],
                              "referencedDeclaration": 1295,
                              "src": "17167:10:3",
                              "typeDescriptions": {
                                "typeIdentifier": "t_uint8",
                                "typeString": "uint8"
                              }
                            },
                            {
                              "expression": {
                                "baseExpression": {
                                  "expression": {
                                    "baseExpression": {
                                      "id": 1310,
                                      "name": "sessions",
                                      "nodeType": "Identifier",
                                      "overloadedDeclarations": [],
                                      "referencedDeclaration": 480,
                                      "src": "17179:8:3",
                                      "typeDescriptions": {
                                        "typeIdentifier": "t_mapping$_t_uint256_$_t_struct$_Session_$418_storage_$",
                                        "typeString": "mapping(uint256 => struct Voting.Session storage ref)"
                                      }
                                    },
                                    "id": 1312,
                                    "indexExpression": {
                                      "id": 1311,
                                      "name": "_sessionId",
                                      "nodeType": "Identifier",
                                      "overloadedDeclarations": [],
                                      "referencedDeclaration": 1251,
                                      "src": "17188:10:3",
                                      "typeDescriptions": {
                                        "typeIdentifier": "t_uint256",
                                        "typeString": "uint256"
                                      }
                                    },
                                    "isConstant": false,
                                    "isLValue": true,
                                    "isPure": false,
                                    "lValueRequested": false,
                                    "nodeType": "IndexAccess",
                                    "src": "17179:20:3",
                                    "typeDescriptions": {
                                      "typeIdentifier": "t_struct$_Session_$418_storage",
                                      "typeString": "struct Voting.Session storage ref"
                                    }
                                  },
                                  "id": 1313,
                                  "isConstant": false,
                                  "isLValue": true,
                                  "isPure": false,
                                  "lValueRequested": false,
                                  "memberLocation": "17200:9:3",
                                  "memberName": "proposals",
                                  "nodeType": "MemberAccess",
                                  "referencedDeclaration": 412,
                                  "src": "17179:30:3",
                                  "typeDescriptions": {
                                    "typeIdentifier": "t_array$_t_struct$_Proposal_$391_storage_$dyn_storage",
                                    "typeString": "struct Voting.Proposal storage ref[] storage ref"
                                  }
                                },
                                "id": 1315,
                                "indexExpression": {
                                  "id": 1314,
                                  "name": "proposalId",
                                  "nodeType": "Identifier",
                                  "overloadedDeclarations": [],
                                  "referencedDeclaration": 1295,
                                  "src": "17210:10:3",
                                  "typeDescriptions": {
                                    "typeIdentifier": "t_uint8",
                                    "typeString": "uint8"
                                  }
                                },
                                "isConstant": false,
                                "isLValue": true,
                                "isPure": false,
                                "lValueRequested": false,
                                "nodeType": "IndexAccess",
                                "src": "17179:42:3",
                                "typeDescriptions": {
                                  "typeIdentifier": "t_struct$_Proposal_$391_storage",
                                  "typeString": "struct Voting.Proposal storage ref"
                                }
                              },
                              "id": 1316,
                              "isConstant": false,
                              "isLValue": true,
                              "isPure": false,
                              "lValueRequested": false,
                              "memberLocation": "17222:11:3",
                              "memberName": "description",
                              "nodeType": "MemberAccess",
                              "referencedDeclaration": 386,
                              "src": "17179:54:3",
                              "typeDescriptions": {
                                "typeIdentifier": "t_string_storage",
                                "typeString": "string storage ref"
                              }
                            }
                          ],
                          "expression": {
                            "argumentTypes": [
                              {
                                "typeIdentifier": "t_uint256",
                                "typeString": "uint256"
                              },
                              {
                                "typeIdentifier": "t_uint8",
                                "typeString": "uint8"
                              },
                              {
                                "typeIdentifier": "t_string_storage",
                                "typeString": "string storage ref"
                              }
                            ],
                            "id": 1307,
                            "name": "ProposalRegistered",
                            "nodeType": "Identifier",
                            "overloadedDeclarations": [],
                            "referencedDeclaration": 452,
                            "src": "17136:18:3",
                            "typeDescriptions": {
                              "typeIdentifier": "t_function_event_nonpayable$_t_uint256_$_t_uint8_$_t_string_memory_ptr_$returns$__$",
                              "typeString": "function (uint256,uint8,string memory)"
                            }
                          },
                          "id": 1317,
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": false,
                          "kind": "functionCall",
                          "lValueRequested": false,
                          "nameLocations": [],
                          "names": [],
                          "nodeType": "FunctionCall",
                          "src": "17136:98:3",
                          "tryCall": false,
                          "typeDescriptions": {
                            "typeIdentifier": "t_tuple$__$",
                            "typeString": "tuple()"
                          }
                        },
                        "id": 1318,
                        "nodeType": "EmitStatement",
                        "src": "17131:103:3"
                      }
                    ]
                  },
                  "id": 1320,
                  "implemented": true,
                  "kind": "function",
                  "modifiers": [],
                  "name": "_registerProposal",
                  "nameLocation": "16697:17:3",
                  "nodeType": "FunctionDefinition",
                  "parameters": {
                    "id": 1254,
                    "nodeType": "ParameterList",
                    "parameters": [
                      {
                        "constant": false,
                        "id": 1251,
                        "mutability": "mutable",
                        "name": "_sessionId",
                        "nameLocation": "16720:10:3",
                        "nodeType": "VariableDeclaration",
                        "scope": 1320,
                        "src": "16715:15:3",
                        "stateVariable": false,
                        "storageLocation": "default",
                        "typeDescriptions": {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        },
                        "typeName": {
                          "id": 1250,
                          "name": "uint",
                          "nodeType": "ElementaryTypeName",
                          "src": "16715:4:3",
                          "typeDescriptions": {
                            "typeIdentifier": "t_uint256",
                            "typeString": "uint256"
                          }
                        },
                        "visibility": "internal"
                      },
                      {
                        "constant": false,
                        "id": 1253,
                        "mutability": "mutable",
                        "name": "_description",
                        "nameLocation": "16746:12:3",
                        "nodeType": "VariableDeclaration",
                        "scope": 1320,
                        "src": "16732:26:3",
                        "stateVariable": false,
                        "storageLocation": "memory",
                        "typeDescriptions": {
                          "typeIdentifier": "t_string_memory_ptr",
                          "typeString": "string"
                        },
                        "typeName": {
                          "id": 1252,
                          "name": "string",
                          "nodeType": "ElementaryTypeName",
                          "src": "16732:6:3",
                          "typeDescriptions": {
                            "typeIdentifier": "t_string_storage_ptr",
                            "typeString": "string"
                          }
                        },
                        "visibility": "internal"
                      }
                    ],
                    "src": "16714:45:3"
                  },
                  "returnParameters": {
                    "id": 1255,
                    "nodeType": "ParameterList",
                    "parameters": [],
                    "src": "16768:0:3"
                  },
                  "scope": 1321,
                  "src": "16688:553:3",
                  "stateMutability": "nonpayable",
                  "virtual": false,
                  "visibility": "private"
                }
              ],
              "scope": 1322,
              "src": "1520:15723:3",
              "usedErrors": []
            }
          ],
          "src": "36:17207:3"
        },
        "id": 3
      },
      "contracts/VotingAlyra.sol": {
        "ast": {
          "absolutePath": "contracts/VotingAlyra.sol",
          "exportedSymbols": {
            "Context": [134],
            "Ownable": [112],
            "VotingAlyra": [1762]
          },
          "id": 1763,
          "license": "MIT",
          "nodeType": "SourceUnit",
          "nodes": [
            {
              "id": 1323,
              "literals": ["solidity", "0.8", ".17"],
              "nodeType": "PragmaDirective",
              "src": "33:23:4"
            },
            {
              "absolutePath": "@openzeppelin/contracts/access/Ownable.sol",
              "file": "@openzeppelin/contracts/access/Ownable.sol",
              "id": 1324,
              "nameLocation": "-1:-1:-1",
              "nodeType": "ImportDirective",
              "scope": 1763,
              "sourceUnit": 113,
              "src": "57:52:4",
              "symbolAliases": [],
              "unitAlias": ""
            },
            {
              "abstract": false,
              "baseContracts": [
                {
                  "baseName": {
                    "id": 1325,
                    "name": "Ownable",
                    "nameLocations": ["136:7:4"],
                    "nodeType": "IdentifierPath",
                    "referencedDeclaration": 112,
                    "src": "136:7:4"
                  },
                  "id": 1326,
                  "nodeType": "InheritanceSpecifier",
                  "src": "136:7:4"
                }
              ],
              "canonicalName": "VotingAlyra",
              "contractDependencies": [],
              "contractKind": "contract",
              "fullyImplemented": true,
              "id": 1762,
              "linearizedBaseContracts": [1762, 112, 134],
              "name": "VotingAlyra",
              "nameLocation": "121:11:4",
              "nodeType": "ContractDefinition",
              "nodes": [
                {
                  "constant": false,
                  "functionSelector": "bdc01431",
                  "id": 1328,
                  "mutability": "mutable",
                  "name": "winningProposalID",
                  "nameLocation": "163:17:4",
                  "nodeType": "VariableDeclaration",
                  "scope": 1762,
                  "src": "151:29:4",
                  "stateVariable": true,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_uint256",
                    "typeString": "uint256"
                  },
                  "typeName": {
                    "id": 1327,
                    "name": "uint",
                    "nodeType": "ElementaryTypeName",
                    "src": "151:4:4",
                    "typeDescriptions": {
                      "typeIdentifier": "t_uint256",
                      "typeString": "uint256"
                    }
                  },
                  "visibility": "public"
                },
                {
                  "canonicalName": "VotingAlyra.Voter",
                  "id": 1335,
                  "members": [
                    {
                      "constant": false,
                      "id": 1330,
                      "mutability": "mutable",
                      "name": "isRegistered",
                      "nameLocation": "219:12:4",
                      "nodeType": "VariableDeclaration",
                      "scope": 1335,
                      "src": "214:17:4",
                      "stateVariable": false,
                      "storageLocation": "default",
                      "typeDescriptions": {
                        "typeIdentifier": "t_bool",
                        "typeString": "bool"
                      },
                      "typeName": {
                        "id": 1329,
                        "name": "bool",
                        "nodeType": "ElementaryTypeName",
                        "src": "214:4:4",
                        "typeDescriptions": {
                          "typeIdentifier": "t_bool",
                          "typeString": "bool"
                        }
                      },
                      "visibility": "internal"
                    },
                    {
                      "constant": false,
                      "id": 1332,
                      "mutability": "mutable",
                      "name": "hasVoted",
                      "nameLocation": "246:8:4",
                      "nodeType": "VariableDeclaration",
                      "scope": 1335,
                      "src": "241:13:4",
                      "stateVariable": false,
                      "storageLocation": "default",
                      "typeDescriptions": {
                        "typeIdentifier": "t_bool",
                        "typeString": "bool"
                      },
                      "typeName": {
                        "id": 1331,
                        "name": "bool",
                        "nodeType": "ElementaryTypeName",
                        "src": "241:4:4",
                        "typeDescriptions": {
                          "typeIdentifier": "t_bool",
                          "typeString": "bool"
                        }
                      },
                      "visibility": "internal"
                    },
                    {
                      "constant": false,
                      "id": 1334,
                      "mutability": "mutable",
                      "name": "votedProposalId",
                      "nameLocation": "269:15:4",
                      "nodeType": "VariableDeclaration",
                      "scope": 1335,
                      "src": "264:20:4",
                      "stateVariable": false,
                      "storageLocation": "default",
                      "typeDescriptions": {
                        "typeIdentifier": "t_uint256",
                        "typeString": "uint256"
                      },
                      "typeName": {
                        "id": 1333,
                        "name": "uint",
                        "nodeType": "ElementaryTypeName",
                        "src": "264:4:4",
                        "typeDescriptions": {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        }
                      },
                      "visibility": "internal"
                    }
                  ],
                  "name": "Voter",
                  "nameLocation": "198:5:4",
                  "nodeType": "StructDefinition",
                  "scope": 1762,
                  "src": "191:100:4",
                  "visibility": "public"
                },
                {
                  "canonicalName": "VotingAlyra.Proposal",
                  "id": 1340,
                  "members": [
                    {
                      "constant": false,
                      "id": 1337,
                      "mutability": "mutable",
                      "name": "description",
                      "nameLocation": "330:11:4",
                      "nodeType": "VariableDeclaration",
                      "scope": 1340,
                      "src": "323:18:4",
                      "stateVariable": false,
                      "storageLocation": "default",
                      "typeDescriptions": {
                        "typeIdentifier": "t_string_storage_ptr",
                        "typeString": "string"
                      },
                      "typeName": {
                        "id": 1336,
                        "name": "string",
                        "nodeType": "ElementaryTypeName",
                        "src": "323:6:4",
                        "typeDescriptions": {
                          "typeIdentifier": "t_string_storage_ptr",
                          "typeString": "string"
                        }
                      },
                      "visibility": "internal"
                    },
                    {
                      "constant": false,
                      "id": 1339,
                      "mutability": "mutable",
                      "name": "voteCount",
                      "nameLocation": "356:9:4",
                      "nodeType": "VariableDeclaration",
                      "scope": 1340,
                      "src": "351:14:4",
                      "stateVariable": false,
                      "storageLocation": "default",
                      "typeDescriptions": {
                        "typeIdentifier": "t_uint256",
                        "typeString": "uint256"
                      },
                      "typeName": {
                        "id": 1338,
                        "name": "uint",
                        "nodeType": "ElementaryTypeName",
                        "src": "351:4:4",
                        "typeDescriptions": {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        }
                      },
                      "visibility": "internal"
                    }
                  ],
                  "name": "Proposal",
                  "nameLocation": "304:8:4",
                  "nodeType": "StructDefinition",
                  "scope": 1762,
                  "src": "297:75:4",
                  "visibility": "public"
                },
                {
                  "canonicalName": "VotingAlyra.WorkflowStatus",
                  "id": 1347,
                  "members": [
                    {
                      "id": 1341,
                      "name": "RegisteringVoters",
                      "nameLocation": "409:17:4",
                      "nodeType": "EnumValue",
                      "src": "409:17:4"
                    },
                    {
                      "id": 1342,
                      "name": "ProposalsRegistrationStarted",
                      "nameLocation": "436:28:4",
                      "nodeType": "EnumValue",
                      "src": "436:28:4"
                    },
                    {
                      "id": 1343,
                      "name": "ProposalsRegistrationEnded",
                      "nameLocation": "474:26:4",
                      "nodeType": "EnumValue",
                      "src": "474:26:4"
                    },
                    {
                      "id": 1344,
                      "name": "VotingSessionStarted",
                      "nameLocation": "510:20:4",
                      "nodeType": "EnumValue",
                      "src": "510:20:4"
                    },
                    {
                      "id": 1345,
                      "name": "VotingSessionEnded",
                      "nameLocation": "540:18:4",
                      "nodeType": "EnumValue",
                      "src": "540:18:4"
                    },
                    {
                      "id": 1346,
                      "name": "VotesTallied",
                      "nameLocation": "568:12:4",
                      "nodeType": "EnumValue",
                      "src": "568:12:4"
                    }
                  ],
                  "name": "WorkflowStatus",
                  "nameLocation": "384:14:4",
                  "nodeType": "EnumDefinition",
                  "src": "378:208:4"
                },
                {
                  "constant": false,
                  "functionSelector": "a1edffa2",
                  "id": 1350,
                  "mutability": "mutable",
                  "name": "workflowStatus",
                  "nameLocation": "614:14:4",
                  "nodeType": "VariableDeclaration",
                  "scope": 1762,
                  "src": "592:36:4",
                  "stateVariable": true,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_enum$_WorkflowStatus_$1347",
                    "typeString": "enum VotingAlyra.WorkflowStatus"
                  },
                  "typeName": {
                    "id": 1349,
                    "nodeType": "UserDefinedTypeName",
                    "pathNode": {
                      "id": 1348,
                      "name": "WorkflowStatus",
                      "nameLocations": ["592:14:4"],
                      "nodeType": "IdentifierPath",
                      "referencedDeclaration": 1347,
                      "src": "592:14:4"
                    },
                    "referencedDeclaration": 1347,
                    "src": "592:14:4",
                    "typeDescriptions": {
                      "typeIdentifier": "t_enum$_WorkflowStatus_$1347",
                      "typeString": "enum VotingAlyra.WorkflowStatus"
                    }
                  },
                  "visibility": "public"
                },
                {
                  "constant": false,
                  "id": 1354,
                  "mutability": "mutable",
                  "name": "proposalsArray",
                  "nameLocation": "645:14:4",
                  "nodeType": "VariableDeclaration",
                  "scope": 1762,
                  "src": "634:25:4",
                  "stateVariable": true,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_array$_t_struct$_Proposal_$1340_storage_$dyn_storage",
                    "typeString": "struct VotingAlyra.Proposal[]"
                  },
                  "typeName": {
                    "baseType": {
                      "id": 1352,
                      "nodeType": "UserDefinedTypeName",
                      "pathNode": {
                        "id": 1351,
                        "name": "Proposal",
                        "nameLocations": ["634:8:4"],
                        "nodeType": "IdentifierPath",
                        "referencedDeclaration": 1340,
                        "src": "634:8:4"
                      },
                      "referencedDeclaration": 1340,
                      "src": "634:8:4",
                      "typeDescriptions": {
                        "typeIdentifier": "t_struct$_Proposal_$1340_storage_ptr",
                        "typeString": "struct VotingAlyra.Proposal"
                      }
                    },
                    "id": 1353,
                    "nodeType": "ArrayTypeName",
                    "src": "634:10:4",
                    "typeDescriptions": {
                      "typeIdentifier": "t_array$_t_struct$_Proposal_$1340_storage_$dyn_storage_ptr",
                      "typeString": "struct VotingAlyra.Proposal[]"
                    }
                  },
                  "visibility": "internal"
                },
                {
                  "constant": false,
                  "id": 1359,
                  "mutability": "mutable",
                  "name": "voters",
                  "nameLocation": "692:6:4",
                  "nodeType": "VariableDeclaration",
                  "scope": 1762,
                  "src": "665:33:4",
                  "stateVariable": true,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_mapping$_t_address_$_t_struct$_Voter_$1335_storage_$",
                    "typeString": "mapping(address => struct VotingAlyra.Voter)"
                  },
                  "typeName": {
                    "id": 1358,
                    "keyType": {
                      "id": 1355,
                      "name": "address",
                      "nodeType": "ElementaryTypeName",
                      "src": "674:7:4",
                      "typeDescriptions": {
                        "typeIdentifier": "t_address",
                        "typeString": "address"
                      }
                    },
                    "nodeType": "Mapping",
                    "src": "665:26:4",
                    "typeDescriptions": {
                      "typeIdentifier": "t_mapping$_t_address_$_t_struct$_Voter_$1335_storage_$",
                      "typeString": "mapping(address => struct VotingAlyra.Voter)"
                    },
                    "valueType": {
                      "id": 1357,
                      "nodeType": "UserDefinedTypeName",
                      "pathNode": {
                        "id": 1356,
                        "name": "Voter",
                        "nameLocations": ["685:5:4"],
                        "nodeType": "IdentifierPath",
                        "referencedDeclaration": 1335,
                        "src": "685:5:4"
                      },
                      "referencedDeclaration": 1335,
                      "src": "685:5:4",
                      "typeDescriptions": {
                        "typeIdentifier": "t_struct$_Voter_$1335_storage_ptr",
                        "typeString": "struct VotingAlyra.Voter"
                      }
                    }
                  },
                  "visibility": "internal"
                },
                {
                  "anonymous": false,
                  "eventSelector": "b6be2187d059cc2a55fe29e0e503b566e1e0f8c8780096e185429350acffd3dd",
                  "id": 1363,
                  "name": "VoterRegistered",
                  "nameLocation": "712:15:4",
                  "nodeType": "EventDefinition",
                  "parameters": {
                    "id": 1362,
                    "nodeType": "ParameterList",
                    "parameters": [
                      {
                        "constant": false,
                        "id": 1361,
                        "indexed": false,
                        "mutability": "mutable",
                        "name": "voterAddress",
                        "nameLocation": "736:12:4",
                        "nodeType": "VariableDeclaration",
                        "scope": 1363,
                        "src": "728:20:4",
                        "stateVariable": false,
                        "storageLocation": "default",
                        "typeDescriptions": {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        },
                        "typeName": {
                          "id": 1360,
                          "name": "address",
                          "nodeType": "ElementaryTypeName",
                          "src": "728:7:4",
                          "stateMutability": "nonpayable",
                          "typeDescriptions": {
                            "typeIdentifier": "t_address",
                            "typeString": "address"
                          }
                        },
                        "visibility": "internal"
                      }
                    ],
                    "src": "727:22:4"
                  },
                  "src": "706:44:4"
                },
                {
                  "anonymous": false,
                  "eventSelector": "0a97a4ee45751e2abf3e4fc8946939630b11b371ea8ae39ccdc3056e98f5cc3f",
                  "id": 1371,
                  "name": "WorkflowStatusChange",
                  "nameLocation": "762:20:4",
                  "nodeType": "EventDefinition",
                  "parameters": {
                    "id": 1370,
                    "nodeType": "ParameterList",
                    "parameters": [
                      {
                        "constant": false,
                        "id": 1366,
                        "indexed": false,
                        "mutability": "mutable",
                        "name": "previousStatus",
                        "nameLocation": "798:14:4",
                        "nodeType": "VariableDeclaration",
                        "scope": 1371,
                        "src": "783:29:4",
                        "stateVariable": false,
                        "storageLocation": "default",
                        "typeDescriptions": {
                          "typeIdentifier": "t_enum$_WorkflowStatus_$1347",
                          "typeString": "enum VotingAlyra.WorkflowStatus"
                        },
                        "typeName": {
                          "id": 1365,
                          "nodeType": "UserDefinedTypeName",
                          "pathNode": {
                            "id": 1364,
                            "name": "WorkflowStatus",
                            "nameLocations": ["783:14:4"],
                            "nodeType": "IdentifierPath",
                            "referencedDeclaration": 1347,
                            "src": "783:14:4"
                          },
                          "referencedDeclaration": 1347,
                          "src": "783:14:4",
                          "typeDescriptions": {
                            "typeIdentifier": "t_enum$_WorkflowStatus_$1347",
                            "typeString": "enum VotingAlyra.WorkflowStatus"
                          }
                        },
                        "visibility": "internal"
                      },
                      {
                        "constant": false,
                        "id": 1369,
                        "indexed": false,
                        "mutability": "mutable",
                        "name": "newStatus",
                        "nameLocation": "829:9:4",
                        "nodeType": "VariableDeclaration",
                        "scope": 1371,
                        "src": "814:24:4",
                        "stateVariable": false,
                        "storageLocation": "default",
                        "typeDescriptions": {
                          "typeIdentifier": "t_enum$_WorkflowStatus_$1347",
                          "typeString": "enum VotingAlyra.WorkflowStatus"
                        },
                        "typeName": {
                          "id": 1368,
                          "nodeType": "UserDefinedTypeName",
                          "pathNode": {
                            "id": 1367,
                            "name": "WorkflowStatus",
                            "nameLocations": ["814:14:4"],
                            "nodeType": "IdentifierPath",
                            "referencedDeclaration": 1347,
                            "src": "814:14:4"
                          },
                          "referencedDeclaration": 1347,
                          "src": "814:14:4",
                          "typeDescriptions": {
                            "typeIdentifier": "t_enum$_WorkflowStatus_$1347",
                            "typeString": "enum VotingAlyra.WorkflowStatus"
                          }
                        },
                        "visibility": "internal"
                      }
                    ],
                    "src": "782:57:4"
                  },
                  "src": "756:84:4"
                },
                {
                  "anonymous": false,
                  "eventSelector": "92e393e9b54e2f801d3ea4beb0c5e71a21cc34a5d34b77d0fb8a3aa1650dc18f",
                  "id": 1375,
                  "name": "ProposalRegistered",
                  "nameLocation": "851:18:4",
                  "nodeType": "EventDefinition",
                  "parameters": {
                    "id": 1374,
                    "nodeType": "ParameterList",
                    "parameters": [
                      {
                        "constant": false,
                        "id": 1373,
                        "indexed": false,
                        "mutability": "mutable",
                        "name": "proposalId",
                        "nameLocation": "875:10:4",
                        "nodeType": "VariableDeclaration",
                        "scope": 1375,
                        "src": "870:15:4",
                        "stateVariable": false,
                        "storageLocation": "default",
                        "typeDescriptions": {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        },
                        "typeName": {
                          "id": 1372,
                          "name": "uint",
                          "nodeType": "ElementaryTypeName",
                          "src": "870:4:4",
                          "typeDescriptions": {
                            "typeIdentifier": "t_uint256",
                            "typeString": "uint256"
                          }
                        },
                        "visibility": "internal"
                      }
                    ],
                    "src": "869:17:4"
                  },
                  "src": "845:42:4"
                },
                {
                  "anonymous": false,
                  "eventSelector": "4d99b957a2bc29a30ebd96a7be8e68fe50a3c701db28a91436490b7d53870ca4",
                  "id": 1381,
                  "name": "Voted",
                  "nameLocation": "898:5:4",
                  "nodeType": "EventDefinition",
                  "parameters": {
                    "id": 1380,
                    "nodeType": "ParameterList",
                    "parameters": [
                      {
                        "constant": false,
                        "id": 1377,
                        "indexed": false,
                        "mutability": "mutable",
                        "name": "voter",
                        "nameLocation": "913:5:4",
                        "nodeType": "VariableDeclaration",
                        "scope": 1381,
                        "src": "905:13:4",
                        "stateVariable": false,
                        "storageLocation": "default",
                        "typeDescriptions": {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        },
                        "typeName": {
                          "id": 1376,
                          "name": "address",
                          "nodeType": "ElementaryTypeName",
                          "src": "905:7:4",
                          "stateMutability": "nonpayable",
                          "typeDescriptions": {
                            "typeIdentifier": "t_address",
                            "typeString": "address"
                          }
                        },
                        "visibility": "internal"
                      },
                      {
                        "constant": false,
                        "id": 1379,
                        "indexed": false,
                        "mutability": "mutable",
                        "name": "proposalId",
                        "nameLocation": "925:10:4",
                        "nodeType": "VariableDeclaration",
                        "scope": 1381,
                        "src": "920:15:4",
                        "stateVariable": false,
                        "storageLocation": "default",
                        "typeDescriptions": {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        },
                        "typeName": {
                          "id": 1378,
                          "name": "uint",
                          "nodeType": "ElementaryTypeName",
                          "src": "920:4:4",
                          "typeDescriptions": {
                            "typeIdentifier": "t_uint256",
                            "typeString": "uint256"
                          }
                        },
                        "visibility": "internal"
                      }
                    ],
                    "src": "904:32:4"
                  },
                  "src": "892:45:4"
                },
                {
                  "body": {
                    "id": 1393,
                    "nodeType": "Block",
                    "src": "969:90:4",
                    "statements": [
                      {
                        "expression": {
                          "arguments": [
                            {
                              "expression": {
                                "baseExpression": {
                                  "id": 1384,
                                  "name": "voters",
                                  "nodeType": "Identifier",
                                  "overloadedDeclarations": [],
                                  "referencedDeclaration": 1359,
                                  "src": "987:6:4",
                                  "typeDescriptions": {
                                    "typeIdentifier": "t_mapping$_t_address_$_t_struct$_Voter_$1335_storage_$",
                                    "typeString": "mapping(address => struct VotingAlyra.Voter storage ref)"
                                  }
                                },
                                "id": 1387,
                                "indexExpression": {
                                  "expression": {
                                    "id": 1385,
                                    "name": "msg",
                                    "nodeType": "Identifier",
                                    "overloadedDeclarations": [],
                                    "referencedDeclaration": -15,
                                    "src": "994:3:4",
                                    "typeDescriptions": {
                                      "typeIdentifier": "t_magic_message",
                                      "typeString": "msg"
                                    }
                                  },
                                  "id": 1386,
                                  "isConstant": false,
                                  "isLValue": false,
                                  "isPure": false,
                                  "lValueRequested": false,
                                  "memberLocation": "998:6:4",
                                  "memberName": "sender",
                                  "nodeType": "MemberAccess",
                                  "src": "994:10:4",
                                  "typeDescriptions": {
                                    "typeIdentifier": "t_address",
                                    "typeString": "address"
                                  }
                                },
                                "isConstant": false,
                                "isLValue": true,
                                "isPure": false,
                                "lValueRequested": false,
                                "nodeType": "IndexAccess",
                                "src": "987:18:4",
                                "typeDescriptions": {
                                  "typeIdentifier": "t_struct$_Voter_$1335_storage",
                                  "typeString": "struct VotingAlyra.Voter storage ref"
                                }
                              },
                              "id": 1388,
                              "isConstant": false,
                              "isLValue": true,
                              "isPure": false,
                              "lValueRequested": false,
                              "memberLocation": "1006:12:4",
                              "memberName": "isRegistered",
                              "nodeType": "MemberAccess",
                              "referencedDeclaration": 1330,
                              "src": "987:31:4",
                              "typeDescriptions": {
                                "typeIdentifier": "t_bool",
                                "typeString": "bool"
                              }
                            },
                            {
                              "hexValue": "596f75277265206e6f74206120766f746572",
                              "id": 1389,
                              "isConstant": false,
                              "isLValue": false,
                              "isPure": true,
                              "kind": "string",
                              "lValueRequested": false,
                              "nodeType": "Literal",
                              "src": "1020:20:4",
                              "typeDescriptions": {
                                "typeIdentifier": "t_stringliteral_4ac8d0af2cd45fcc1fa588da657d5362c91a987e5991f233eaf7fb5c4b0c5a0a",
                                "typeString": "literal_string \"You're not a voter\""
                              },
                              "value": "You're not a voter"
                            }
                          ],
                          "expression": {
                            "argumentTypes": [
                              {
                                "typeIdentifier": "t_bool",
                                "typeString": "bool"
                              },
                              {
                                "typeIdentifier": "t_stringliteral_4ac8d0af2cd45fcc1fa588da657d5362c91a987e5991f233eaf7fb5c4b0c5a0a",
                                "typeString": "literal_string \"You're not a voter\""
                              }
                            ],
                            "id": 1383,
                            "name": "require",
                            "nodeType": "Identifier",
                            "overloadedDeclarations": [-18, -18],
                            "referencedDeclaration": -18,
                            "src": "979:7:4",
                            "typeDescriptions": {
                              "typeIdentifier": "t_function_require_pure$_t_bool_$_t_string_memory_ptr_$returns$__$",
                              "typeString": "function (bool,string memory) pure"
                            }
                          },
                          "id": 1390,
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": false,
                          "kind": "functionCall",
                          "lValueRequested": false,
                          "nameLocations": [],
                          "names": [],
                          "nodeType": "FunctionCall",
                          "src": "979:62:4",
                          "tryCall": false,
                          "typeDescriptions": {
                            "typeIdentifier": "t_tuple$__$",
                            "typeString": "tuple()"
                          }
                        },
                        "id": 1391,
                        "nodeType": "ExpressionStatement",
                        "src": "979:62:4"
                      },
                      {
                        "id": 1392,
                        "nodeType": "PlaceholderStatement",
                        "src": "1051:1:4"
                      }
                    ]
                  },
                  "id": 1394,
                  "name": "onlyVoters",
                  "nameLocation": "956:10:4",
                  "nodeType": "ModifierDefinition",
                  "parameters": {
                    "id": 1382,
                    "nodeType": "ParameterList",
                    "parameters": [],
                    "src": "966:2:4"
                  },
                  "src": "947:112:4",
                  "virtual": false,
                  "visibility": "internal"
                },
                {
                  "body": {
                    "id": 1408,
                    "nodeType": "Block",
                    "src": "1247:37:4",
                    "statements": [
                      {
                        "expression": {
                          "baseExpression": {
                            "id": 1404,
                            "name": "voters",
                            "nodeType": "Identifier",
                            "overloadedDeclarations": [],
                            "referencedDeclaration": 1359,
                            "src": "1264:6:4",
                            "typeDescriptions": {
                              "typeIdentifier": "t_mapping$_t_address_$_t_struct$_Voter_$1335_storage_$",
                              "typeString": "mapping(address => struct VotingAlyra.Voter storage ref)"
                            }
                          },
                          "id": 1406,
                          "indexExpression": {
                            "id": 1405,
                            "name": "_addr",
                            "nodeType": "Identifier",
                            "overloadedDeclarations": [],
                            "referencedDeclaration": 1396,
                            "src": "1271:5:4",
                            "typeDescriptions": {
                              "typeIdentifier": "t_address",
                              "typeString": "address"
                            }
                          },
                          "isConstant": false,
                          "isLValue": true,
                          "isPure": false,
                          "lValueRequested": false,
                          "nodeType": "IndexAccess",
                          "src": "1264:13:4",
                          "typeDescriptions": {
                            "typeIdentifier": "t_struct$_Voter_$1335_storage",
                            "typeString": "struct VotingAlyra.Voter storage ref"
                          }
                        },
                        "functionReturnParameters": 1403,
                        "id": 1407,
                        "nodeType": "Return",
                        "src": "1257:20:4"
                      }
                    ]
                  },
                  "functionSelector": "d4f50f98",
                  "id": 1409,
                  "implemented": true,
                  "kind": "function",
                  "modifiers": [
                    {
                      "id": 1399,
                      "kind": "modifierInvocation",
                      "modifierName": {
                        "id": 1398,
                        "name": "onlyVoters",
                        "nameLocations": ["1208:10:4"],
                        "nodeType": "IdentifierPath",
                        "referencedDeclaration": 1394,
                        "src": "1208:10:4"
                      },
                      "nodeType": "ModifierInvocation",
                      "src": "1208:10:4"
                    }
                  ],
                  "name": "getVoter",
                  "nameLocation": "1175:8:4",
                  "nodeType": "FunctionDefinition",
                  "parameters": {
                    "id": 1397,
                    "nodeType": "ParameterList",
                    "parameters": [
                      {
                        "constant": false,
                        "id": 1396,
                        "mutability": "mutable",
                        "name": "_addr",
                        "nameLocation": "1192:5:4",
                        "nodeType": "VariableDeclaration",
                        "scope": 1409,
                        "src": "1184:13:4",
                        "stateVariable": false,
                        "storageLocation": "default",
                        "typeDescriptions": {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        },
                        "typeName": {
                          "id": 1395,
                          "name": "address",
                          "nodeType": "ElementaryTypeName",
                          "src": "1184:7:4",
                          "stateMutability": "nonpayable",
                          "typeDescriptions": {
                            "typeIdentifier": "t_address",
                            "typeString": "address"
                          }
                        },
                        "visibility": "internal"
                      }
                    ],
                    "src": "1183:15:4"
                  },
                  "returnParameters": {
                    "id": 1403,
                    "nodeType": "ParameterList",
                    "parameters": [
                      {
                        "constant": false,
                        "id": 1402,
                        "mutability": "mutable",
                        "name": "",
                        "nameLocation": "-1:-1:-1",
                        "nodeType": "VariableDeclaration",
                        "scope": 1409,
                        "src": "1233:12:4",
                        "stateVariable": false,
                        "storageLocation": "memory",
                        "typeDescriptions": {
                          "typeIdentifier": "t_struct$_Voter_$1335_memory_ptr",
                          "typeString": "struct VotingAlyra.Voter"
                        },
                        "typeName": {
                          "id": 1401,
                          "nodeType": "UserDefinedTypeName",
                          "pathNode": {
                            "id": 1400,
                            "name": "Voter",
                            "nameLocations": ["1233:5:4"],
                            "nodeType": "IdentifierPath",
                            "referencedDeclaration": 1335,
                            "src": "1233:5:4"
                          },
                          "referencedDeclaration": 1335,
                          "src": "1233:5:4",
                          "typeDescriptions": {
                            "typeIdentifier": "t_struct$_Voter_$1335_storage_ptr",
                            "typeString": "struct VotingAlyra.Voter"
                          }
                        },
                        "visibility": "internal"
                      }
                    ],
                    "src": "1232:14:4"
                  },
                  "scope": 1762,
                  "src": "1166:118:4",
                  "stateMutability": "view",
                  "virtual": false,
                  "visibility": "external"
                },
                {
                  "body": {
                    "id": 1423,
                    "nodeType": "Block",
                    "src": "1379:43:4",
                    "statements": [
                      {
                        "expression": {
                          "baseExpression": {
                            "id": 1419,
                            "name": "proposalsArray",
                            "nodeType": "Identifier",
                            "overloadedDeclarations": [],
                            "referencedDeclaration": 1354,
                            "src": "1396:14:4",
                            "typeDescriptions": {
                              "typeIdentifier": "t_array$_t_struct$_Proposal_$1340_storage_$dyn_storage",
                              "typeString": "struct VotingAlyra.Proposal storage ref[] storage ref"
                            }
                          },
                          "id": 1421,
                          "indexExpression": {
                            "id": 1420,
                            "name": "_id",
                            "nodeType": "Identifier",
                            "overloadedDeclarations": [],
                            "referencedDeclaration": 1411,
                            "src": "1411:3:4",
                            "typeDescriptions": {
                              "typeIdentifier": "t_uint256",
                              "typeString": "uint256"
                            }
                          },
                          "isConstant": false,
                          "isLValue": true,
                          "isPure": false,
                          "lValueRequested": false,
                          "nodeType": "IndexAccess",
                          "src": "1396:19:4",
                          "typeDescriptions": {
                            "typeIdentifier": "t_struct$_Proposal_$1340_storage",
                            "typeString": "struct VotingAlyra.Proposal storage ref"
                          }
                        },
                        "functionReturnParameters": 1418,
                        "id": 1422,
                        "nodeType": "Return",
                        "src": "1389:26:4"
                      }
                    ]
                  },
                  "functionSelector": "a2788cce",
                  "id": 1424,
                  "implemented": true,
                  "kind": "function",
                  "modifiers": [
                    {
                      "id": 1414,
                      "kind": "modifierInvocation",
                      "modifierName": {
                        "id": 1413,
                        "name": "onlyVoters",
                        "nameLocations": ["1337:10:4"],
                        "nodeType": "IdentifierPath",
                        "referencedDeclaration": 1394,
                        "src": "1337:10:4"
                      },
                      "nodeType": "ModifierInvocation",
                      "src": "1337:10:4"
                    }
                  ],
                  "name": "getOneProposal",
                  "nameLocation": "1303:14:4",
                  "nodeType": "FunctionDefinition",
                  "parameters": {
                    "id": 1412,
                    "nodeType": "ParameterList",
                    "parameters": [
                      {
                        "constant": false,
                        "id": 1411,
                        "mutability": "mutable",
                        "name": "_id",
                        "nameLocation": "1323:3:4",
                        "nodeType": "VariableDeclaration",
                        "scope": 1424,
                        "src": "1318:8:4",
                        "stateVariable": false,
                        "storageLocation": "default",
                        "typeDescriptions": {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        },
                        "typeName": {
                          "id": 1410,
                          "name": "uint",
                          "nodeType": "ElementaryTypeName",
                          "src": "1318:4:4",
                          "typeDescriptions": {
                            "typeIdentifier": "t_uint256",
                            "typeString": "uint256"
                          }
                        },
                        "visibility": "internal"
                      }
                    ],
                    "src": "1317:10:4"
                  },
                  "returnParameters": {
                    "id": 1418,
                    "nodeType": "ParameterList",
                    "parameters": [
                      {
                        "constant": false,
                        "id": 1417,
                        "mutability": "mutable",
                        "name": "",
                        "nameLocation": "-1:-1:-1",
                        "nodeType": "VariableDeclaration",
                        "scope": 1424,
                        "src": "1362:15:4",
                        "stateVariable": false,
                        "storageLocation": "memory",
                        "typeDescriptions": {
                          "typeIdentifier": "t_struct$_Proposal_$1340_memory_ptr",
                          "typeString": "struct VotingAlyra.Proposal"
                        },
                        "typeName": {
                          "id": 1416,
                          "nodeType": "UserDefinedTypeName",
                          "pathNode": {
                            "id": 1415,
                            "name": "Proposal",
                            "nameLocations": ["1362:8:4"],
                            "nodeType": "IdentifierPath",
                            "referencedDeclaration": 1340,
                            "src": "1362:8:4"
                          },
                          "referencedDeclaration": 1340,
                          "src": "1362:8:4",
                          "typeDescriptions": {
                            "typeIdentifier": "t_struct$_Proposal_$1340_storage_ptr",
                            "typeString": "struct VotingAlyra.Proposal"
                          }
                        },
                        "visibility": "internal"
                      }
                    ],
                    "src": "1361:17:4"
                  },
                  "scope": 1762,
                  "src": "1294:128:4",
                  "stateMutability": "view",
                  "virtual": false,
                  "visibility": "external"
                },
                {
                  "body": {
                    "id": 1460,
                    "nodeType": "Block",
                    "src": "1535:275:4",
                    "statements": [
                      {
                        "expression": {
                          "arguments": [
                            {
                              "commonType": {
                                "typeIdentifier": "t_enum$_WorkflowStatus_$1347",
                                "typeString": "enum VotingAlyra.WorkflowStatus"
                              },
                              "id": 1435,
                              "isConstant": false,
                              "isLValue": false,
                              "isPure": false,
                              "lValueRequested": false,
                              "leftExpression": {
                                "id": 1432,
                                "name": "workflowStatus",
                                "nodeType": "Identifier",
                                "overloadedDeclarations": [],
                                "referencedDeclaration": 1350,
                                "src": "1553:14:4",
                                "typeDescriptions": {
                                  "typeIdentifier": "t_enum$_WorkflowStatus_$1347",
                                  "typeString": "enum VotingAlyra.WorkflowStatus"
                                }
                              },
                              "nodeType": "BinaryOperation",
                              "operator": "==",
                              "rightExpression": {
                                "expression": {
                                  "id": 1433,
                                  "name": "WorkflowStatus",
                                  "nodeType": "Identifier",
                                  "overloadedDeclarations": [],
                                  "referencedDeclaration": 1347,
                                  "src": "1571:14:4",
                                  "typeDescriptions": {
                                    "typeIdentifier": "t_type$_t_enum$_WorkflowStatus_$1347_$",
                                    "typeString": "type(enum VotingAlyra.WorkflowStatus)"
                                  }
                                },
                                "id": 1434,
                                "isConstant": false,
                                "isLValue": false,
                                "isPure": true,
                                "lValueRequested": false,
                                "memberLocation": "1586:17:4",
                                "memberName": "RegisteringVoters",
                                "nodeType": "MemberAccess",
                                "referencedDeclaration": 1341,
                                "src": "1571:32:4",
                                "typeDescriptions": {
                                  "typeIdentifier": "t_enum$_WorkflowStatus_$1347",
                                  "typeString": "enum VotingAlyra.WorkflowStatus"
                                }
                              },
                              "src": "1553:50:4",
                              "typeDescriptions": {
                                "typeIdentifier": "t_bool",
                                "typeString": "bool"
                              }
                            },
                            {
                              "hexValue": "566f7465727320726567697374726174696f6e206973206e6f74206f70656e20796574",
                              "id": 1436,
                              "isConstant": false,
                              "isLValue": false,
                              "isPure": true,
                              "kind": "string",
                              "lValueRequested": false,
                              "nodeType": "Literal",
                              "src": "1605:37:4",
                              "typeDescriptions": {
                                "typeIdentifier": "t_stringliteral_ed5ce0bc94e9e9dfad6df12428397b8324b782ad847e98d94fc3bc087f13b0bd",
                                "typeString": "literal_string \"Voters registration is not open yet\""
                              },
                              "value": "Voters registration is not open yet"
                            }
                          ],
                          "expression": {
                            "argumentTypes": [
                              {
                                "typeIdentifier": "t_bool",
                                "typeString": "bool"
                              },
                              {
                                "typeIdentifier": "t_stringliteral_ed5ce0bc94e9e9dfad6df12428397b8324b782ad847e98d94fc3bc087f13b0bd",
                                "typeString": "literal_string \"Voters registration is not open yet\""
                              }
                            ],
                            "id": 1431,
                            "name": "require",
                            "nodeType": "Identifier",
                            "overloadedDeclarations": [-18, -18],
                            "referencedDeclaration": -18,
                            "src": "1545:7:4",
                            "typeDescriptions": {
                              "typeIdentifier": "t_function_require_pure$_t_bool_$_t_string_memory_ptr_$returns$__$",
                              "typeString": "function (bool,string memory) pure"
                            }
                          },
                          "id": 1437,
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": false,
                          "kind": "functionCall",
                          "lValueRequested": false,
                          "nameLocations": [],
                          "names": [],
                          "nodeType": "FunctionCall",
                          "src": "1545:98:4",
                          "tryCall": false,
                          "typeDescriptions": {
                            "typeIdentifier": "t_tuple$__$",
                            "typeString": "tuple()"
                          }
                        },
                        "id": 1438,
                        "nodeType": "ExpressionStatement",
                        "src": "1545:98:4"
                      },
                      {
                        "expression": {
                          "arguments": [
                            {
                              "commonType": {
                                "typeIdentifier": "t_bool",
                                "typeString": "bool"
                              },
                              "id": 1445,
                              "isConstant": false,
                              "isLValue": false,
                              "isPure": false,
                              "lValueRequested": false,
                              "leftExpression": {
                                "expression": {
                                  "baseExpression": {
                                    "id": 1440,
                                    "name": "voters",
                                    "nodeType": "Identifier",
                                    "overloadedDeclarations": [],
                                    "referencedDeclaration": 1359,
                                    "src": "1661:6:4",
                                    "typeDescriptions": {
                                      "typeIdentifier": "t_mapping$_t_address_$_t_struct$_Voter_$1335_storage_$",
                                      "typeString": "mapping(address => struct VotingAlyra.Voter storage ref)"
                                    }
                                  },
                                  "id": 1442,
                                  "indexExpression": {
                                    "id": 1441,
                                    "name": "_addr",
                                    "nodeType": "Identifier",
                                    "overloadedDeclarations": [],
                                    "referencedDeclaration": 1426,
                                    "src": "1668:5:4",
                                    "typeDescriptions": {
                                      "typeIdentifier": "t_address",
                                      "typeString": "address"
                                    }
                                  },
                                  "isConstant": false,
                                  "isLValue": true,
                                  "isPure": false,
                                  "lValueRequested": false,
                                  "nodeType": "IndexAccess",
                                  "src": "1661:13:4",
                                  "typeDescriptions": {
                                    "typeIdentifier": "t_struct$_Voter_$1335_storage",
                                    "typeString": "struct VotingAlyra.Voter storage ref"
                                  }
                                },
                                "id": 1443,
                                "isConstant": false,
                                "isLValue": true,
                                "isPure": false,
                                "lValueRequested": false,
                                "memberLocation": "1675:12:4",
                                "memberName": "isRegistered",
                                "nodeType": "MemberAccess",
                                "referencedDeclaration": 1330,
                                "src": "1661:26:4",
                                "typeDescriptions": {
                                  "typeIdentifier": "t_bool",
                                  "typeString": "bool"
                                }
                              },
                              "nodeType": "BinaryOperation",
                              "operator": "!=",
                              "rightExpression": {
                                "hexValue": "74727565",
                                "id": 1444,
                                "isConstant": false,
                                "isLValue": false,
                                "isPure": true,
                                "kind": "bool",
                                "lValueRequested": false,
                                "nodeType": "Literal",
                                "src": "1691:4:4",
                                "typeDescriptions": {
                                  "typeIdentifier": "t_bool",
                                  "typeString": "bool"
                                },
                                "value": "true"
                              },
                              "src": "1661:34:4",
                              "typeDescriptions": {
                                "typeIdentifier": "t_bool",
                                "typeString": "bool"
                              }
                            },
                            {
                              "hexValue": "416c72656164792072656769737465726564",
                              "id": 1446,
                              "isConstant": false,
                              "isLValue": false,
                              "isPure": true,
                              "kind": "string",
                              "lValueRequested": false,
                              "nodeType": "Literal",
                              "src": "1697:20:4",
                              "typeDescriptions": {
                                "typeIdentifier": "t_stringliteral_4935f8dc8deae1355305b992e890d0242809a3705c9c83131ed47acca0dd4fe2",
                                "typeString": "literal_string \"Already registered\""
                              },
                              "value": "Already registered"
                            }
                          ],
                          "expression": {
                            "argumentTypes": [
                              {
                                "typeIdentifier": "t_bool",
                                "typeString": "bool"
                              },
                              {
                                "typeIdentifier": "t_stringliteral_4935f8dc8deae1355305b992e890d0242809a3705c9c83131ed47acca0dd4fe2",
                                "typeString": "literal_string \"Already registered\""
                              }
                            ],
                            "id": 1439,
                            "name": "require",
                            "nodeType": "Identifier",
                            "overloadedDeclarations": [-18, -18],
                            "referencedDeclaration": -18,
                            "src": "1653:7:4",
                            "typeDescriptions": {
                              "typeIdentifier": "t_function_require_pure$_t_bool_$_t_string_memory_ptr_$returns$__$",
                              "typeString": "function (bool,string memory) pure"
                            }
                          },
                          "id": 1447,
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": false,
                          "kind": "functionCall",
                          "lValueRequested": false,
                          "nameLocations": [],
                          "names": [],
                          "nodeType": "FunctionCall",
                          "src": "1653:65:4",
                          "tryCall": false,
                          "typeDescriptions": {
                            "typeIdentifier": "t_tuple$__$",
                            "typeString": "tuple()"
                          }
                        },
                        "id": 1448,
                        "nodeType": "ExpressionStatement",
                        "src": "1653:65:4"
                      },
                      {
                        "expression": {
                          "id": 1454,
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": false,
                          "lValueRequested": false,
                          "leftHandSide": {
                            "expression": {
                              "baseExpression": {
                                "id": 1449,
                                "name": "voters",
                                "nodeType": "Identifier",
                                "overloadedDeclarations": [],
                                "referencedDeclaration": 1359,
                                "src": "1733:6:4",
                                "typeDescriptions": {
                                  "typeIdentifier": "t_mapping$_t_address_$_t_struct$_Voter_$1335_storage_$",
                                  "typeString": "mapping(address => struct VotingAlyra.Voter storage ref)"
                                }
                              },
                              "id": 1451,
                              "indexExpression": {
                                "id": 1450,
                                "name": "_addr",
                                "nodeType": "Identifier",
                                "overloadedDeclarations": [],
                                "referencedDeclaration": 1426,
                                "src": "1740:5:4",
                                "typeDescriptions": {
                                  "typeIdentifier": "t_address",
                                  "typeString": "address"
                                }
                              },
                              "isConstant": false,
                              "isLValue": true,
                              "isPure": false,
                              "lValueRequested": false,
                              "nodeType": "IndexAccess",
                              "src": "1733:13:4",
                              "typeDescriptions": {
                                "typeIdentifier": "t_struct$_Voter_$1335_storage",
                                "typeString": "struct VotingAlyra.Voter storage ref"
                              }
                            },
                            "id": 1452,
                            "isConstant": false,
                            "isLValue": true,
                            "isPure": false,
                            "lValueRequested": true,
                            "memberLocation": "1747:12:4",
                            "memberName": "isRegistered",
                            "nodeType": "MemberAccess",
                            "referencedDeclaration": 1330,
                            "src": "1733:26:4",
                            "typeDescriptions": {
                              "typeIdentifier": "t_bool",
                              "typeString": "bool"
                            }
                          },
                          "nodeType": "Assignment",
                          "operator": "=",
                          "rightHandSide": {
                            "hexValue": "74727565",
                            "id": 1453,
                            "isConstant": false,
                            "isLValue": false,
                            "isPure": true,
                            "kind": "bool",
                            "lValueRequested": false,
                            "nodeType": "Literal",
                            "src": "1762:4:4",
                            "typeDescriptions": {
                              "typeIdentifier": "t_bool",
                              "typeString": "bool"
                            },
                            "value": "true"
                          },
                          "src": "1733:33:4",
                          "typeDescriptions": {
                            "typeIdentifier": "t_bool",
                            "typeString": "bool"
                          }
                        },
                        "id": 1455,
                        "nodeType": "ExpressionStatement",
                        "src": "1733:33:4"
                      },
                      {
                        "eventCall": {
                          "arguments": [
                            {
                              "id": 1457,
                              "name": "_addr",
                              "nodeType": "Identifier",
                              "overloadedDeclarations": [],
                              "referencedDeclaration": 1426,
                              "src": "1797:5:4",
                              "typeDescriptions": {
                                "typeIdentifier": "t_address",
                                "typeString": "address"
                              }
                            }
                          ],
                          "expression": {
                            "argumentTypes": [
                              {
                                "typeIdentifier": "t_address",
                                "typeString": "address"
                              }
                            ],
                            "id": 1456,
                            "name": "VoterRegistered",
                            "nodeType": "Identifier",
                            "overloadedDeclarations": [],
                            "referencedDeclaration": 1363,
                            "src": "1781:15:4",
                            "typeDescriptions": {
                              "typeIdentifier": "t_function_event_nonpayable$_t_address_$returns$__$",
                              "typeString": "function (address)"
                            }
                          },
                          "id": 1458,
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": false,
                          "kind": "functionCall",
                          "lValueRequested": false,
                          "nameLocations": [],
                          "names": [],
                          "nodeType": "FunctionCall",
                          "src": "1781:22:4",
                          "tryCall": false,
                          "typeDescriptions": {
                            "typeIdentifier": "t_tuple$__$",
                            "typeString": "tuple()"
                          }
                        },
                        "id": 1459,
                        "nodeType": "EmitStatement",
                        "src": "1776:27:4"
                      }
                    ]
                  },
                  "functionSelector": "f4ab9adf",
                  "id": 1461,
                  "implemented": true,
                  "kind": "function",
                  "modifiers": [
                    {
                      "id": 1429,
                      "kind": "modifierInvocation",
                      "modifierName": {
                        "id": 1428,
                        "name": "onlyOwner",
                        "nameLocations": ["1525:9:4"],
                        "nodeType": "IdentifierPath",
                        "referencedDeclaration": 31,
                        "src": "1525:9:4"
                      },
                      "nodeType": "ModifierInvocation",
                      "src": "1525:9:4"
                    }
                  ],
                  "name": "addVoter",
                  "nameLocation": "1492:8:4",
                  "nodeType": "FunctionDefinition",
                  "parameters": {
                    "id": 1427,
                    "nodeType": "ParameterList",
                    "parameters": [
                      {
                        "constant": false,
                        "id": 1426,
                        "mutability": "mutable",
                        "name": "_addr",
                        "nameLocation": "1509:5:4",
                        "nodeType": "VariableDeclaration",
                        "scope": 1461,
                        "src": "1501:13:4",
                        "stateVariable": false,
                        "storageLocation": "default",
                        "typeDescriptions": {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        },
                        "typeName": {
                          "id": 1425,
                          "name": "address",
                          "nodeType": "ElementaryTypeName",
                          "src": "1501:7:4",
                          "stateMutability": "nonpayable",
                          "typeDescriptions": {
                            "typeIdentifier": "t_address",
                            "typeString": "address"
                          }
                        },
                        "visibility": "internal"
                      }
                    ],
                    "src": "1500:15:4"
                  },
                  "returnParameters": {
                    "id": 1430,
                    "nodeType": "ParameterList",
                    "parameters": [],
                    "src": "1535:0:4"
                  },
                  "scope": 1762,
                  "src": "1483:327:4",
                  "stateMutability": "nonpayable",
                  "virtual": false,
                  "visibility": "external"
                },
                {
                  "body": {
                    "id": 1516,
                    "nodeType": "Block",
                    "src": "1931:469:4",
                    "statements": [
                      {
                        "expression": {
                          "arguments": [
                            {
                              "commonType": {
                                "typeIdentifier": "t_enum$_WorkflowStatus_$1347",
                                "typeString": "enum VotingAlyra.WorkflowStatus"
                              },
                              "id": 1472,
                              "isConstant": false,
                              "isLValue": false,
                              "isPure": false,
                              "lValueRequested": false,
                              "leftExpression": {
                                "id": 1469,
                                "name": "workflowStatus",
                                "nodeType": "Identifier",
                                "overloadedDeclarations": [],
                                "referencedDeclaration": 1350,
                                "src": "1949:14:4",
                                "typeDescriptions": {
                                  "typeIdentifier": "t_enum$_WorkflowStatus_$1347",
                                  "typeString": "enum VotingAlyra.WorkflowStatus"
                                }
                              },
                              "nodeType": "BinaryOperation",
                              "operator": "==",
                              "rightExpression": {
                                "expression": {
                                  "id": 1470,
                                  "name": "WorkflowStatus",
                                  "nodeType": "Identifier",
                                  "overloadedDeclarations": [],
                                  "referencedDeclaration": 1347,
                                  "src": "1967:14:4",
                                  "typeDescriptions": {
                                    "typeIdentifier": "t_type$_t_enum$_WorkflowStatus_$1347_$",
                                    "typeString": "type(enum VotingAlyra.WorkflowStatus)"
                                  }
                                },
                                "id": 1471,
                                "isConstant": false,
                                "isLValue": false,
                                "isPure": true,
                                "lValueRequested": false,
                                "memberLocation": "1982:28:4",
                                "memberName": "ProposalsRegistrationStarted",
                                "nodeType": "MemberAccess",
                                "referencedDeclaration": 1342,
                                "src": "1967:43:4",
                                "typeDescriptions": {
                                  "typeIdentifier": "t_enum$_WorkflowStatus_$1347",
                                  "typeString": "enum VotingAlyra.WorkflowStatus"
                                }
                              },
                              "src": "1949:61:4",
                              "typeDescriptions": {
                                "typeIdentifier": "t_bool",
                                "typeString": "bool"
                              }
                            },
                            {
                              "hexValue": "50726f706f73616c7320617265206e6f7420616c6c6f77656420796574",
                              "id": 1473,
                              "isConstant": false,
                              "isLValue": false,
                              "isPure": true,
                              "kind": "string",
                              "lValueRequested": false,
                              "nodeType": "Literal",
                              "src": "2012:31:4",
                              "typeDescriptions": {
                                "typeIdentifier": "t_stringliteral_6cc4ccc1a7d3097254b36ddb7a78effd34b6d9f8b0b1bad60ab55e8a2f5f45a4",
                                "typeString": "literal_string \"Proposals are not allowed yet\""
                              },
                              "value": "Proposals are not allowed yet"
                            }
                          ],
                          "expression": {
                            "argumentTypes": [
                              {
                                "typeIdentifier": "t_bool",
                                "typeString": "bool"
                              },
                              {
                                "typeIdentifier": "t_stringliteral_6cc4ccc1a7d3097254b36ddb7a78effd34b6d9f8b0b1bad60ab55e8a2f5f45a4",
                                "typeString": "literal_string \"Proposals are not allowed yet\""
                              }
                            ],
                            "id": 1468,
                            "name": "require",
                            "nodeType": "Identifier",
                            "overloadedDeclarations": [-18, -18],
                            "referencedDeclaration": -18,
                            "src": "1941:7:4",
                            "typeDescriptions": {
                              "typeIdentifier": "t_function_require_pure$_t_bool_$_t_string_memory_ptr_$returns$__$",
                              "typeString": "function (bool,string memory) pure"
                            }
                          },
                          "id": 1474,
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": false,
                          "kind": "functionCall",
                          "lValueRequested": false,
                          "nameLocations": [],
                          "names": [],
                          "nodeType": "FunctionCall",
                          "src": "1941:103:4",
                          "tryCall": false,
                          "typeDescriptions": {
                            "typeIdentifier": "t_tuple$__$",
                            "typeString": "tuple()"
                          }
                        },
                        "id": 1475,
                        "nodeType": "ExpressionStatement",
                        "src": "1941:103:4"
                      },
                      {
                        "expression": {
                          "arguments": [
                            {
                              "commonType": {
                                "typeIdentifier": "t_bytes32",
                                "typeString": "bytes32"
                              },
                              "id": 1489,
                              "isConstant": false,
                              "isLValue": false,
                              "isPure": false,
                              "lValueRequested": false,
                              "leftExpression": {
                                "arguments": [
                                  {
                                    "arguments": [
                                      {
                                        "id": 1480,
                                        "name": "_desc",
                                        "nodeType": "Identifier",
                                        "overloadedDeclarations": [],
                                        "referencedDeclaration": 1463,
                                        "src": "2083:5:4",
                                        "typeDescriptions": {
                                          "typeIdentifier": "t_string_calldata_ptr",
                                          "typeString": "string calldata"
                                        }
                                      }
                                    ],
                                    "expression": {
                                      "argumentTypes": [
                                        {
                                          "typeIdentifier": "t_string_calldata_ptr",
                                          "typeString": "string calldata"
                                        }
                                      ],
                                      "expression": {
                                        "id": 1478,
                                        "name": "abi",
                                        "nodeType": "Identifier",
                                        "overloadedDeclarations": [],
                                        "referencedDeclaration": -1,
                                        "src": "2072:3:4",
                                        "typeDescriptions": {
                                          "typeIdentifier": "t_magic_abi",
                                          "typeString": "abi"
                                        }
                                      },
                                      "id": 1479,
                                      "isConstant": false,
                                      "isLValue": false,
                                      "isPure": true,
                                      "lValueRequested": false,
                                      "memberLocation": "2076:6:4",
                                      "memberName": "encode",
                                      "nodeType": "MemberAccess",
                                      "src": "2072:10:4",
                                      "typeDescriptions": {
                                        "typeIdentifier": "t_function_abiencode_pure$__$returns$_t_bytes_memory_ptr_$",
                                        "typeString": "function () pure returns (bytes memory)"
                                      }
                                    },
                                    "id": 1481,
                                    "isConstant": false,
                                    "isLValue": false,
                                    "isPure": false,
                                    "kind": "functionCall",
                                    "lValueRequested": false,
                                    "nameLocations": [],
                                    "names": [],
                                    "nodeType": "FunctionCall",
                                    "src": "2072:17:4",
                                    "tryCall": false,
                                    "typeDescriptions": {
                                      "typeIdentifier": "t_bytes_memory_ptr",
                                      "typeString": "bytes memory"
                                    }
                                  }
                                ],
                                "expression": {
                                  "argumentTypes": [
                                    {
                                      "typeIdentifier": "t_bytes_memory_ptr",
                                      "typeString": "bytes memory"
                                    }
                                  ],
                                  "id": 1477,
                                  "name": "keccak256",
                                  "nodeType": "Identifier",
                                  "overloadedDeclarations": [],
                                  "referencedDeclaration": -8,
                                  "src": "2062:9:4",
                                  "typeDescriptions": {
                                    "typeIdentifier": "t_function_keccak256_pure$_t_bytes_memory_ptr_$returns$_t_bytes32_$",
                                    "typeString": "function (bytes memory) pure returns (bytes32)"
                                  }
                                },
                                "id": 1482,
                                "isConstant": false,
                                "isLValue": false,
                                "isPure": false,
                                "kind": "functionCall",
                                "lValueRequested": false,
                                "nameLocations": [],
                                "names": [],
                                "nodeType": "FunctionCall",
                                "src": "2062:28:4",
                                "tryCall": false,
                                "typeDescriptions": {
                                  "typeIdentifier": "t_bytes32",
                                  "typeString": "bytes32"
                                }
                              },
                              "nodeType": "BinaryOperation",
                              "operator": "!=",
                              "rightExpression": {
                                "arguments": [
                                  {
                                    "arguments": [
                                      {
                                        "hexValue": "",
                                        "id": 1486,
                                        "isConstant": false,
                                        "isLValue": false,
                                        "isPure": true,
                                        "kind": "string",
                                        "lValueRequested": false,
                                        "nodeType": "Literal",
                                        "src": "2115:2:4",
                                        "typeDescriptions": {
                                          "typeIdentifier": "t_stringliteral_c5d2460186f7233c927e7db2dcc703c0e500b653ca82273b7bfad8045d85a470",
                                          "typeString": "literal_string \"\""
                                        },
                                        "value": ""
                                      }
                                    ],
                                    "expression": {
                                      "argumentTypes": [
                                        {
                                          "typeIdentifier": "t_stringliteral_c5d2460186f7233c927e7db2dcc703c0e500b653ca82273b7bfad8045d85a470",
                                          "typeString": "literal_string \"\""
                                        }
                                      ],
                                      "expression": {
                                        "id": 1484,
                                        "name": "abi",
                                        "nodeType": "Identifier",
                                        "overloadedDeclarations": [],
                                        "referencedDeclaration": -1,
                                        "src": "2104:3:4",
                                        "typeDescriptions": {
                                          "typeIdentifier": "t_magic_abi",
                                          "typeString": "abi"
                                        }
                                      },
                                      "id": 1485,
                                      "isConstant": false,
                                      "isLValue": false,
                                      "isPure": true,
                                      "lValueRequested": false,
                                      "memberLocation": "2108:6:4",
                                      "memberName": "encode",
                                      "nodeType": "MemberAccess",
                                      "src": "2104:10:4",
                                      "typeDescriptions": {
                                        "typeIdentifier": "t_function_abiencode_pure$__$returns$_t_bytes_memory_ptr_$",
                                        "typeString": "function () pure returns (bytes memory)"
                                      }
                                    },
                                    "id": 1487,
                                    "isConstant": false,
                                    "isLValue": false,
                                    "isPure": true,
                                    "kind": "functionCall",
                                    "lValueRequested": false,
                                    "nameLocations": [],
                                    "names": [],
                                    "nodeType": "FunctionCall",
                                    "src": "2104:14:4",
                                    "tryCall": false,
                                    "typeDescriptions": {
                                      "typeIdentifier": "t_bytes_memory_ptr",
                                      "typeString": "bytes memory"
                                    }
                                  }
                                ],
                                "expression": {
                                  "argumentTypes": [
                                    {
                                      "typeIdentifier": "t_bytes_memory_ptr",
                                      "typeString": "bytes memory"
                                    }
                                  ],
                                  "id": 1483,
                                  "name": "keccak256",
                                  "nodeType": "Identifier",
                                  "overloadedDeclarations": [],
                                  "referencedDeclaration": -8,
                                  "src": "2094:9:4",
                                  "typeDescriptions": {
                                    "typeIdentifier": "t_function_keccak256_pure$_t_bytes_memory_ptr_$returns$_t_bytes32_$",
                                    "typeString": "function (bytes memory) pure returns (bytes32)"
                                  }
                                },
                                "id": 1488,
                                "isConstant": false,
                                "isLValue": false,
                                "isPure": true,
                                "kind": "functionCall",
                                "lValueRequested": false,
                                "nameLocations": [],
                                "names": [],
                                "nodeType": "FunctionCall",
                                "src": "2094:25:4",
                                "tryCall": false,
                                "typeDescriptions": {
                                  "typeIdentifier": "t_bytes32",
                                  "typeString": "bytes32"
                                }
                              },
                              "src": "2062:57:4",
                              "typeDescriptions": {
                                "typeIdentifier": "t_bool",
                                "typeString": "bool"
                              }
                            },
                            {
                              "hexValue": "566f7573206e6520706f7576657a20706173206e65207269656e2070726f706f736572",
                              "id": 1490,
                              "isConstant": false,
                              "isLValue": false,
                              "isPure": true,
                              "kind": "string",
                              "lValueRequested": false,
                              "nodeType": "Literal",
                              "src": "2121:37:4",
                              "typeDescriptions": {
                                "typeIdentifier": "t_stringliteral_a4c3e15cbc00caa216d105711ac6ae2f726d0f810654930587c82d89febb3184",
                                "typeString": "literal_string \"Vous ne pouvez pas ne rien proposer\""
                              },
                              "value": "Vous ne pouvez pas ne rien proposer"
                            }
                          ],
                          "expression": {
                            "argumentTypes": [
                              {
                                "typeIdentifier": "t_bool",
                                "typeString": "bool"
                              },
                              {
                                "typeIdentifier": "t_stringliteral_a4c3e15cbc00caa216d105711ac6ae2f726d0f810654930587c82d89febb3184",
                                "typeString": "literal_string \"Vous ne pouvez pas ne rien proposer\""
                              }
                            ],
                            "id": 1476,
                            "name": "require",
                            "nodeType": "Identifier",
                            "overloadedDeclarations": [-18, -18],
                            "referencedDeclaration": -18,
                            "src": "2054:7:4",
                            "typeDescriptions": {
                              "typeIdentifier": "t_function_require_pure$_t_bool_$_t_string_memory_ptr_$returns$__$",
                              "typeString": "function (bool,string memory) pure"
                            }
                          },
                          "id": 1491,
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": false,
                          "kind": "functionCall",
                          "lValueRequested": false,
                          "nameLocations": [],
                          "names": [],
                          "nodeType": "FunctionCall",
                          "src": "2054:105:4",
                          "tryCall": false,
                          "typeDescriptions": {
                            "typeIdentifier": "t_tuple$__$",
                            "typeString": "tuple()"
                          }
                        },
                        "id": 1492,
                        "nodeType": "ExpressionStatement",
                        "src": "2054:105:4"
                      },
                      {
                        "assignments": [1495],
                        "declarations": [
                          {
                            "constant": false,
                            "id": 1495,
                            "mutability": "mutable",
                            "name": "proposal",
                            "nameLocation": "2250:8:4",
                            "nodeType": "VariableDeclaration",
                            "scope": 1516,
                            "src": "2234:24:4",
                            "stateVariable": false,
                            "storageLocation": "memory",
                            "typeDescriptions": {
                              "typeIdentifier": "t_struct$_Proposal_$1340_memory_ptr",
                              "typeString": "struct VotingAlyra.Proposal"
                            },
                            "typeName": {
                              "id": 1494,
                              "nodeType": "UserDefinedTypeName",
                              "pathNode": {
                                "id": 1493,
                                "name": "Proposal",
                                "nameLocations": ["2234:8:4"],
                                "nodeType": "IdentifierPath",
                                "referencedDeclaration": 1340,
                                "src": "2234:8:4"
                              },
                              "referencedDeclaration": 1340,
                              "src": "2234:8:4",
                              "typeDescriptions": {
                                "typeIdentifier": "t_struct$_Proposal_$1340_storage_ptr",
                                "typeString": "struct VotingAlyra.Proposal"
                              }
                            },
                            "visibility": "internal"
                          }
                        ],
                        "id": 1496,
                        "nodeType": "VariableDeclarationStatement",
                        "src": "2234:24:4"
                      },
                      {
                        "expression": {
                          "id": 1501,
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": false,
                          "lValueRequested": false,
                          "leftHandSide": {
                            "expression": {
                              "id": 1497,
                              "name": "proposal",
                              "nodeType": "Identifier",
                              "overloadedDeclarations": [],
                              "referencedDeclaration": 1495,
                              "src": "2268:8:4",
                              "typeDescriptions": {
                                "typeIdentifier": "t_struct$_Proposal_$1340_memory_ptr",
                                "typeString": "struct VotingAlyra.Proposal memory"
                              }
                            },
                            "id": 1499,
                            "isConstant": false,
                            "isLValue": true,
                            "isPure": false,
                            "lValueRequested": true,
                            "memberLocation": "2277:11:4",
                            "memberName": "description",
                            "nodeType": "MemberAccess",
                            "referencedDeclaration": 1337,
                            "src": "2268:20:4",
                            "typeDescriptions": {
                              "typeIdentifier": "t_string_memory_ptr",
                              "typeString": "string memory"
                            }
                          },
                          "nodeType": "Assignment",
                          "operator": "=",
                          "rightHandSide": {
                            "id": 1500,
                            "name": "_desc",
                            "nodeType": "Identifier",
                            "overloadedDeclarations": [],
                            "referencedDeclaration": 1463,
                            "src": "2291:5:4",
                            "typeDescriptions": {
                              "typeIdentifier": "t_string_calldata_ptr",
                              "typeString": "string calldata"
                            }
                          },
                          "src": "2268:28:4",
                          "typeDescriptions": {
                            "typeIdentifier": "t_string_memory_ptr",
                            "typeString": "string memory"
                          }
                        },
                        "id": 1502,
                        "nodeType": "ExpressionStatement",
                        "src": "2268:28:4"
                      },
                      {
                        "expression": {
                          "arguments": [
                            {
                              "id": 1506,
                              "name": "proposal",
                              "nodeType": "Identifier",
                              "overloadedDeclarations": [],
                              "referencedDeclaration": 1495,
                              "src": "2326:8:4",
                              "typeDescriptions": {
                                "typeIdentifier": "t_struct$_Proposal_$1340_memory_ptr",
                                "typeString": "struct VotingAlyra.Proposal memory"
                              }
                            }
                          ],
                          "expression": {
                            "argumentTypes": [
                              {
                                "typeIdentifier": "t_struct$_Proposal_$1340_memory_ptr",
                                "typeString": "struct VotingAlyra.Proposal memory"
                              }
                            ],
                            "expression": {
                              "id": 1503,
                              "name": "proposalsArray",
                              "nodeType": "Identifier",
                              "overloadedDeclarations": [],
                              "referencedDeclaration": 1354,
                              "src": "2306:14:4",
                              "typeDescriptions": {
                                "typeIdentifier": "t_array$_t_struct$_Proposal_$1340_storage_$dyn_storage",
                                "typeString": "struct VotingAlyra.Proposal storage ref[] storage ref"
                              }
                            },
                            "id": 1505,
                            "isConstant": false,
                            "isLValue": false,
                            "isPure": false,
                            "lValueRequested": false,
                            "memberLocation": "2321:4:4",
                            "memberName": "push",
                            "nodeType": "MemberAccess",
                            "src": "2306:19:4",
                            "typeDescriptions": {
                              "typeIdentifier": "t_function_arraypush_nonpayable$_t_array$_t_struct$_Proposal_$1340_storage_$dyn_storage_ptr_$_t_struct$_Proposal_$1340_storage_$returns$__$bound_to$_t_array$_t_struct$_Proposal_$1340_storage_$dyn_storage_ptr_$",
                              "typeString": "function (struct VotingAlyra.Proposal storage ref[] storage pointer,struct VotingAlyra.Proposal storage ref)"
                            }
                          },
                          "id": 1507,
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": false,
                          "kind": "functionCall",
                          "lValueRequested": false,
                          "nameLocations": [],
                          "names": [],
                          "nodeType": "FunctionCall",
                          "src": "2306:29:4",
                          "tryCall": false,
                          "typeDescriptions": {
                            "typeIdentifier": "t_tuple$__$",
                            "typeString": "tuple()"
                          }
                        },
                        "id": 1508,
                        "nodeType": "ExpressionStatement",
                        "src": "2306:29:4"
                      },
                      {
                        "eventCall": {
                          "arguments": [
                            {
                              "commonType": {
                                "typeIdentifier": "t_uint256",
                                "typeString": "uint256"
                              },
                              "id": 1513,
                              "isConstant": false,
                              "isLValue": false,
                              "isPure": false,
                              "lValueRequested": false,
                              "leftExpression": {
                                "expression": {
                                  "id": 1510,
                                  "name": "proposalsArray",
                                  "nodeType": "Identifier",
                                  "overloadedDeclarations": [],
                                  "referencedDeclaration": 1354,
                                  "src": "2369:14:4",
                                  "typeDescriptions": {
                                    "typeIdentifier": "t_array$_t_struct$_Proposal_$1340_storage_$dyn_storage",
                                    "typeString": "struct VotingAlyra.Proposal storage ref[] storage ref"
                                  }
                                },
                                "id": 1511,
                                "isConstant": false,
                                "isLValue": false,
                                "isPure": false,
                                "lValueRequested": false,
                                "memberLocation": "2384:6:4",
                                "memberName": "length",
                                "nodeType": "MemberAccess",
                                "src": "2369:21:4",
                                "typeDescriptions": {
                                  "typeIdentifier": "t_uint256",
                                  "typeString": "uint256"
                                }
                              },
                              "nodeType": "BinaryOperation",
                              "operator": "-",
                              "rightExpression": {
                                "hexValue": "31",
                                "id": 1512,
                                "isConstant": false,
                                "isLValue": false,
                                "isPure": true,
                                "kind": "number",
                                "lValueRequested": false,
                                "nodeType": "Literal",
                                "src": "2391:1:4",
                                "typeDescriptions": {
                                  "typeIdentifier": "t_rational_1_by_1",
                                  "typeString": "int_const 1"
                                },
                                "value": "1"
                              },
                              "src": "2369:23:4",
                              "typeDescriptions": {
                                "typeIdentifier": "t_uint256",
                                "typeString": "uint256"
                              }
                            }
                          ],
                          "expression": {
                            "argumentTypes": [
                              {
                                "typeIdentifier": "t_uint256",
                                "typeString": "uint256"
                              }
                            ],
                            "id": 1509,
                            "name": "ProposalRegistered",
                            "nodeType": "Identifier",
                            "overloadedDeclarations": [],
                            "referencedDeclaration": 1375,
                            "src": "2350:18:4",
                            "typeDescriptions": {
                              "typeIdentifier": "t_function_event_nonpayable$_t_uint256_$returns$__$",
                              "typeString": "function (uint256)"
                            }
                          },
                          "id": 1514,
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": false,
                          "kind": "functionCall",
                          "lValueRequested": false,
                          "nameLocations": [],
                          "names": [],
                          "nodeType": "FunctionCall",
                          "src": "2350:43:4",
                          "tryCall": false,
                          "typeDescriptions": {
                            "typeIdentifier": "t_tuple$__$",
                            "typeString": "tuple()"
                          }
                        },
                        "id": 1515,
                        "nodeType": "EmitStatement",
                        "src": "2345:48:4"
                      }
                    ]
                  },
                  "functionSelector": "2fdae3c5",
                  "id": 1517,
                  "implemented": true,
                  "kind": "function",
                  "modifiers": [
                    {
                      "id": 1466,
                      "kind": "modifierInvocation",
                      "modifierName": {
                        "id": 1465,
                        "name": "onlyVoters",
                        "nameLocations": ["1920:10:4"],
                        "nodeType": "IdentifierPath",
                        "referencedDeclaration": 1394,
                        "src": "1920:10:4"
                      },
                      "nodeType": "ModifierInvocation",
                      "src": "1920:10:4"
                    }
                  ],
                  "name": "addProposal",
                  "nameLocation": "1876:11:4",
                  "nodeType": "FunctionDefinition",
                  "parameters": {
                    "id": 1464,
                    "nodeType": "ParameterList",
                    "parameters": [
                      {
                        "constant": false,
                        "id": 1463,
                        "mutability": "mutable",
                        "name": "_desc",
                        "nameLocation": "1904:5:4",
                        "nodeType": "VariableDeclaration",
                        "scope": 1517,
                        "src": "1888:21:4",
                        "stateVariable": false,
                        "storageLocation": "calldata",
                        "typeDescriptions": {
                          "typeIdentifier": "t_string_calldata_ptr",
                          "typeString": "string"
                        },
                        "typeName": {
                          "id": 1462,
                          "name": "string",
                          "nodeType": "ElementaryTypeName",
                          "src": "1888:6:4",
                          "typeDescriptions": {
                            "typeIdentifier": "t_string_storage_ptr",
                            "typeString": "string"
                          }
                        },
                        "visibility": "internal"
                      }
                    ],
                    "src": "1887:23:4"
                  },
                  "returnParameters": {
                    "id": 1467,
                    "nodeType": "ParameterList",
                    "parameters": [],
                    "src": "1931:0:4"
                  },
                  "scope": 1762,
                  "src": "1867:533:4",
                  "stateMutability": "nonpayable",
                  "virtual": false,
                  "visibility": "external"
                },
                {
                  "body": {
                    "id": 1579,
                    "nodeType": "Block",
                    "src": "2498:483:4",
                    "statements": [
                      {
                        "expression": {
                          "arguments": [
                            {
                              "commonType": {
                                "typeIdentifier": "t_enum$_WorkflowStatus_$1347",
                                "typeString": "enum VotingAlyra.WorkflowStatus"
                              },
                              "id": 1528,
                              "isConstant": false,
                              "isLValue": false,
                              "isPure": false,
                              "lValueRequested": false,
                              "leftExpression": {
                                "id": 1525,
                                "name": "workflowStatus",
                                "nodeType": "Identifier",
                                "overloadedDeclarations": [],
                                "referencedDeclaration": 1350,
                                "src": "2516:14:4",
                                "typeDescriptions": {
                                  "typeIdentifier": "t_enum$_WorkflowStatus_$1347",
                                  "typeString": "enum VotingAlyra.WorkflowStatus"
                                }
                              },
                              "nodeType": "BinaryOperation",
                              "operator": "==",
                              "rightExpression": {
                                "expression": {
                                  "id": 1526,
                                  "name": "WorkflowStatus",
                                  "nodeType": "Identifier",
                                  "overloadedDeclarations": [],
                                  "referencedDeclaration": 1347,
                                  "src": "2534:14:4",
                                  "typeDescriptions": {
                                    "typeIdentifier": "t_type$_t_enum$_WorkflowStatus_$1347_$",
                                    "typeString": "type(enum VotingAlyra.WorkflowStatus)"
                                  }
                                },
                                "id": 1527,
                                "isConstant": false,
                                "isLValue": false,
                                "isPure": true,
                                "lValueRequested": false,
                                "memberLocation": "2549:20:4",
                                "memberName": "VotingSessionStarted",
                                "nodeType": "MemberAccess",
                                "referencedDeclaration": 1344,
                                "src": "2534:35:4",
                                "typeDescriptions": {
                                  "typeIdentifier": "t_enum$_WorkflowStatus_$1347",
                                  "typeString": "enum VotingAlyra.WorkflowStatus"
                                }
                              },
                              "src": "2516:53:4",
                              "typeDescriptions": {
                                "typeIdentifier": "t_bool",
                                "typeString": "bool"
                              }
                            },
                            {
                              "hexValue": "566f74696e672073657373696f6e20686176656e74207374617274656420796574",
                              "id": 1529,
                              "isConstant": false,
                              "isLValue": false,
                              "isPure": true,
                              "kind": "string",
                              "lValueRequested": false,
                              "nodeType": "Literal",
                              "src": "2571:35:4",
                              "typeDescriptions": {
                                "typeIdentifier": "t_stringliteral_62400aa7da0e280fc286fd5482d79ac3e2aa4e6d6dca70b4997f2ac0f4a46e72",
                                "typeString": "literal_string \"Voting session havent started yet\""
                              },
                              "value": "Voting session havent started yet"
                            }
                          ],
                          "expression": {
                            "argumentTypes": [
                              {
                                "typeIdentifier": "t_bool",
                                "typeString": "bool"
                              },
                              {
                                "typeIdentifier": "t_stringliteral_62400aa7da0e280fc286fd5482d79ac3e2aa4e6d6dca70b4997f2ac0f4a46e72",
                                "typeString": "literal_string \"Voting session havent started yet\""
                              }
                            ],
                            "id": 1524,
                            "name": "require",
                            "nodeType": "Identifier",
                            "overloadedDeclarations": [-18, -18],
                            "referencedDeclaration": -18,
                            "src": "2508:7:4",
                            "typeDescriptions": {
                              "typeIdentifier": "t_function_require_pure$_t_bool_$_t_string_memory_ptr_$returns$__$",
                              "typeString": "function (bool,string memory) pure"
                            }
                          },
                          "id": 1530,
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": false,
                          "kind": "functionCall",
                          "lValueRequested": false,
                          "nameLocations": [],
                          "names": [],
                          "nodeType": "FunctionCall",
                          "src": "2508:99:4",
                          "tryCall": false,
                          "typeDescriptions": {
                            "typeIdentifier": "t_tuple$__$",
                            "typeString": "tuple()"
                          }
                        },
                        "id": 1531,
                        "nodeType": "ExpressionStatement",
                        "src": "2508:99:4"
                      },
                      {
                        "expression": {
                          "arguments": [
                            {
                              "commonType": {
                                "typeIdentifier": "t_bool",
                                "typeString": "bool"
                              },
                              "id": 1539,
                              "isConstant": false,
                              "isLValue": false,
                              "isPure": false,
                              "lValueRequested": false,
                              "leftExpression": {
                                "expression": {
                                  "baseExpression": {
                                    "id": 1533,
                                    "name": "voters",
                                    "nodeType": "Identifier",
                                    "overloadedDeclarations": [],
                                    "referencedDeclaration": 1359,
                                    "src": "2625:6:4",
                                    "typeDescriptions": {
                                      "typeIdentifier": "t_mapping$_t_address_$_t_struct$_Voter_$1335_storage_$",
                                      "typeString": "mapping(address => struct VotingAlyra.Voter storage ref)"
                                    }
                                  },
                                  "id": 1536,
                                  "indexExpression": {
                                    "expression": {
                                      "id": 1534,
                                      "name": "msg",
                                      "nodeType": "Identifier",
                                      "overloadedDeclarations": [],
                                      "referencedDeclaration": -15,
                                      "src": "2632:3:4",
                                      "typeDescriptions": {
                                        "typeIdentifier": "t_magic_message",
                                        "typeString": "msg"
                                      }
                                    },
                                    "id": 1535,
                                    "isConstant": false,
                                    "isLValue": false,
                                    "isPure": false,
                                    "lValueRequested": false,
                                    "memberLocation": "2636:6:4",
                                    "memberName": "sender",
                                    "nodeType": "MemberAccess",
                                    "src": "2632:10:4",
                                    "typeDescriptions": {
                                      "typeIdentifier": "t_address",
                                      "typeString": "address"
                                    }
                                  },
                                  "isConstant": false,
                                  "isLValue": true,
                                  "isPure": false,
                                  "lValueRequested": false,
                                  "nodeType": "IndexAccess",
                                  "src": "2625:18:4",
                                  "typeDescriptions": {
                                    "typeIdentifier": "t_struct$_Voter_$1335_storage",
                                    "typeString": "struct VotingAlyra.Voter storage ref"
                                  }
                                },
                                "id": 1537,
                                "isConstant": false,
                                "isLValue": true,
                                "isPure": false,
                                "lValueRequested": false,
                                "memberLocation": "2644:8:4",
                                "memberName": "hasVoted",
                                "nodeType": "MemberAccess",
                                "referencedDeclaration": 1332,
                                "src": "2625:27:4",
                                "typeDescriptions": {
                                  "typeIdentifier": "t_bool",
                                  "typeString": "bool"
                                }
                              },
                              "nodeType": "BinaryOperation",
                              "operator": "!=",
                              "rightExpression": {
                                "hexValue": "74727565",
                                "id": 1538,
                                "isConstant": false,
                                "isLValue": false,
                                "isPure": true,
                                "kind": "bool",
                                "lValueRequested": false,
                                "nodeType": "Literal",
                                "src": "2656:4:4",
                                "typeDescriptions": {
                                  "typeIdentifier": "t_bool",
                                  "typeString": "bool"
                                },
                                "value": "true"
                              },
                              "src": "2625:35:4",
                              "typeDescriptions": {
                                "typeIdentifier": "t_bool",
                                "typeString": "bool"
                              }
                            },
                            {
                              "hexValue": "596f75206861766520616c726561647920766f746564",
                              "id": 1540,
                              "isConstant": false,
                              "isLValue": false,
                              "isPure": true,
                              "kind": "string",
                              "lValueRequested": false,
                              "nodeType": "Literal",
                              "src": "2662:24:4",
                              "typeDescriptions": {
                                "typeIdentifier": "t_stringliteral_f717c48f565c1f6c8c7139cf54f577e481ac65760eb92c077a08597c622f2a8a",
                                "typeString": "literal_string \"You have already voted\""
                              },
                              "value": "You have already voted"
                            }
                          ],
                          "expression": {
                            "argumentTypes": [
                              {
                                "typeIdentifier": "t_bool",
                                "typeString": "bool"
                              },
                              {
                                "typeIdentifier": "t_stringliteral_f717c48f565c1f6c8c7139cf54f577e481ac65760eb92c077a08597c622f2a8a",
                                "typeString": "literal_string \"You have already voted\""
                              }
                            ],
                            "id": 1532,
                            "name": "require",
                            "nodeType": "Identifier",
                            "overloadedDeclarations": [-18, -18],
                            "referencedDeclaration": -18,
                            "src": "2617:7:4",
                            "typeDescriptions": {
                              "typeIdentifier": "t_function_require_pure$_t_bool_$_t_string_memory_ptr_$returns$__$",
                              "typeString": "function (bool,string memory) pure"
                            }
                          },
                          "id": 1541,
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": false,
                          "kind": "functionCall",
                          "lValueRequested": false,
                          "nameLocations": [],
                          "names": [],
                          "nodeType": "FunctionCall",
                          "src": "2617:70:4",
                          "tryCall": false,
                          "typeDescriptions": {
                            "typeIdentifier": "t_tuple$__$",
                            "typeString": "tuple()"
                          }
                        },
                        "id": 1542,
                        "nodeType": "ExpressionStatement",
                        "src": "2617:70:4"
                      },
                      {
                        "expression": {
                          "arguments": [
                            {
                              "commonType": {
                                "typeIdentifier": "t_uint256",
                                "typeString": "uint256"
                              },
                              "id": 1547,
                              "isConstant": false,
                              "isLValue": false,
                              "isPure": false,
                              "lValueRequested": false,
                              "leftExpression": {
                                "id": 1544,
                                "name": "_id",
                                "nodeType": "Identifier",
                                "overloadedDeclarations": [],
                                "referencedDeclaration": 1519,
                                "src": "2705:3:4",
                                "typeDescriptions": {
                                  "typeIdentifier": "t_uint256",
                                  "typeString": "uint256"
                                }
                              },
                              "nodeType": "BinaryOperation",
                              "operator": "<",
                              "rightExpression": {
                                "expression": {
                                  "id": 1545,
                                  "name": "proposalsArray",
                                  "nodeType": "Identifier",
                                  "overloadedDeclarations": [],
                                  "referencedDeclaration": 1354,
                                  "src": "2711:14:4",
                                  "typeDescriptions": {
                                    "typeIdentifier": "t_array$_t_struct$_Proposal_$1340_storage_$dyn_storage",
                                    "typeString": "struct VotingAlyra.Proposal storage ref[] storage ref"
                                  }
                                },
                                "id": 1546,
                                "isConstant": false,
                                "isLValue": false,
                                "isPure": false,
                                "lValueRequested": false,
                                "memberLocation": "2726:6:4",
                                "memberName": "length",
                                "nodeType": "MemberAccess",
                                "src": "2711:21:4",
                                "typeDescriptions": {
                                  "typeIdentifier": "t_uint256",
                                  "typeString": "uint256"
                                }
                              },
                              "src": "2705:27:4",
                              "typeDescriptions": {
                                "typeIdentifier": "t_bool",
                                "typeString": "bool"
                              }
                            },
                            {
                              "hexValue": "50726f706f73616c206e6f7420666f756e64",
                              "id": 1548,
                              "isConstant": false,
                              "isLValue": false,
                              "isPure": true,
                              "kind": "string",
                              "lValueRequested": false,
                              "nodeType": "Literal",
                              "src": "2734:20:4",
                              "typeDescriptions": {
                                "typeIdentifier": "t_stringliteral_bcf95e6a362746bd232f2b944afd538b26aa461607b394f948bce2609a1a50c9",
                                "typeString": "literal_string \"Proposal not found\""
                              },
                              "value": "Proposal not found"
                            }
                          ],
                          "expression": {
                            "argumentTypes": [
                              {
                                "typeIdentifier": "t_bool",
                                "typeString": "bool"
                              },
                              {
                                "typeIdentifier": "t_stringliteral_bcf95e6a362746bd232f2b944afd538b26aa461607b394f948bce2609a1a50c9",
                                "typeString": "literal_string \"Proposal not found\""
                              }
                            ],
                            "id": 1543,
                            "name": "require",
                            "nodeType": "Identifier",
                            "overloadedDeclarations": [-18, -18],
                            "referencedDeclaration": -18,
                            "src": "2697:7:4",
                            "typeDescriptions": {
                              "typeIdentifier": "t_function_require_pure$_t_bool_$_t_string_memory_ptr_$returns$__$",
                              "typeString": "function (bool,string memory) pure"
                            }
                          },
                          "id": 1549,
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": false,
                          "kind": "functionCall",
                          "lValueRequested": false,
                          "nameLocations": [],
                          "names": [],
                          "nodeType": "FunctionCall",
                          "src": "2697:58:4",
                          "tryCall": false,
                          "typeDescriptions": {
                            "typeIdentifier": "t_tuple$__$",
                            "typeString": "tuple()"
                          }
                        },
                        "id": 1550,
                        "nodeType": "ExpressionStatement",
                        "src": "2697:58:4"
                      },
                      {
                        "expression": {
                          "id": 1557,
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": false,
                          "lValueRequested": false,
                          "leftHandSide": {
                            "expression": {
                              "baseExpression": {
                                "id": 1551,
                                "name": "voters",
                                "nodeType": "Identifier",
                                "overloadedDeclarations": [],
                                "referencedDeclaration": 1359,
                                "src": "2811:6:4",
                                "typeDescriptions": {
                                  "typeIdentifier": "t_mapping$_t_address_$_t_struct$_Voter_$1335_storage_$",
                                  "typeString": "mapping(address => struct VotingAlyra.Voter storage ref)"
                                }
                              },
                              "id": 1554,
                              "indexExpression": {
                                "expression": {
                                  "id": 1552,
                                  "name": "msg",
                                  "nodeType": "Identifier",
                                  "overloadedDeclarations": [],
                                  "referencedDeclaration": -15,
                                  "src": "2818:3:4",
                                  "typeDescriptions": {
                                    "typeIdentifier": "t_magic_message",
                                    "typeString": "msg"
                                  }
                                },
                                "id": 1553,
                                "isConstant": false,
                                "isLValue": false,
                                "isPure": false,
                                "lValueRequested": false,
                                "memberLocation": "2822:6:4",
                                "memberName": "sender",
                                "nodeType": "MemberAccess",
                                "src": "2818:10:4",
                                "typeDescriptions": {
                                  "typeIdentifier": "t_address",
                                  "typeString": "address"
                                }
                              },
                              "isConstant": false,
                              "isLValue": true,
                              "isPure": false,
                              "lValueRequested": false,
                              "nodeType": "IndexAccess",
                              "src": "2811:18:4",
                              "typeDescriptions": {
                                "typeIdentifier": "t_struct$_Voter_$1335_storage",
                                "typeString": "struct VotingAlyra.Voter storage ref"
                              }
                            },
                            "id": 1555,
                            "isConstant": false,
                            "isLValue": true,
                            "isPure": false,
                            "lValueRequested": true,
                            "memberLocation": "2830:15:4",
                            "memberName": "votedProposalId",
                            "nodeType": "MemberAccess",
                            "referencedDeclaration": 1334,
                            "src": "2811:34:4",
                            "typeDescriptions": {
                              "typeIdentifier": "t_uint256",
                              "typeString": "uint256"
                            }
                          },
                          "nodeType": "Assignment",
                          "operator": "=",
                          "rightHandSide": {
                            "id": 1556,
                            "name": "_id",
                            "nodeType": "Identifier",
                            "overloadedDeclarations": [],
                            "referencedDeclaration": 1519,
                            "src": "2848:3:4",
                            "typeDescriptions": {
                              "typeIdentifier": "t_uint256",
                              "typeString": "uint256"
                            }
                          },
                          "src": "2811:40:4",
                          "typeDescriptions": {
                            "typeIdentifier": "t_uint256",
                            "typeString": "uint256"
                          }
                        },
                        "id": 1558,
                        "nodeType": "ExpressionStatement",
                        "src": "2811:40:4"
                      },
                      {
                        "expression": {
                          "id": 1565,
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": false,
                          "lValueRequested": false,
                          "leftHandSide": {
                            "expression": {
                              "baseExpression": {
                                "id": 1559,
                                "name": "voters",
                                "nodeType": "Identifier",
                                "overloadedDeclarations": [],
                                "referencedDeclaration": 1359,
                                "src": "2861:6:4",
                                "typeDescriptions": {
                                  "typeIdentifier": "t_mapping$_t_address_$_t_struct$_Voter_$1335_storage_$",
                                  "typeString": "mapping(address => struct VotingAlyra.Voter storage ref)"
                                }
                              },
                              "id": 1562,
                              "indexExpression": {
                                "expression": {
                                  "id": 1560,
                                  "name": "msg",
                                  "nodeType": "Identifier",
                                  "overloadedDeclarations": [],
                                  "referencedDeclaration": -15,
                                  "src": "2868:3:4",
                                  "typeDescriptions": {
                                    "typeIdentifier": "t_magic_message",
                                    "typeString": "msg"
                                  }
                                },
                                "id": 1561,
                                "isConstant": false,
                                "isLValue": false,
                                "isPure": false,
                                "lValueRequested": false,
                                "memberLocation": "2872:6:4",
                                "memberName": "sender",
                                "nodeType": "MemberAccess",
                                "src": "2868:10:4",
                                "typeDescriptions": {
                                  "typeIdentifier": "t_address",
                                  "typeString": "address"
                                }
                              },
                              "isConstant": false,
                              "isLValue": true,
                              "isPure": false,
                              "lValueRequested": false,
                              "nodeType": "IndexAccess",
                              "src": "2861:18:4",
                              "typeDescriptions": {
                                "typeIdentifier": "t_struct$_Voter_$1335_storage",
                                "typeString": "struct VotingAlyra.Voter storage ref"
                              }
                            },
                            "id": 1563,
                            "isConstant": false,
                            "isLValue": true,
                            "isPure": false,
                            "lValueRequested": true,
                            "memberLocation": "2880:8:4",
                            "memberName": "hasVoted",
                            "nodeType": "MemberAccess",
                            "referencedDeclaration": 1332,
                            "src": "2861:27:4",
                            "typeDescriptions": {
                              "typeIdentifier": "t_bool",
                              "typeString": "bool"
                            }
                          },
                          "nodeType": "Assignment",
                          "operator": "=",
                          "rightHandSide": {
                            "hexValue": "74727565",
                            "id": 1564,
                            "isConstant": false,
                            "isLValue": false,
                            "isPure": true,
                            "kind": "bool",
                            "lValueRequested": false,
                            "nodeType": "Literal",
                            "src": "2891:4:4",
                            "typeDescriptions": {
                              "typeIdentifier": "t_bool",
                              "typeString": "bool"
                            },
                            "value": "true"
                          },
                          "src": "2861:34:4",
                          "typeDescriptions": {
                            "typeIdentifier": "t_bool",
                            "typeString": "bool"
                          }
                        },
                        "id": 1566,
                        "nodeType": "ExpressionStatement",
                        "src": "2861:34:4"
                      },
                      {
                        "expression": {
                          "id": 1571,
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": false,
                          "lValueRequested": false,
                          "nodeType": "UnaryOperation",
                          "operator": "++",
                          "prefix": false,
                          "src": "2905:31:4",
                          "subExpression": {
                            "expression": {
                              "baseExpression": {
                                "id": 1567,
                                "name": "proposalsArray",
                                "nodeType": "Identifier",
                                "overloadedDeclarations": [],
                                "referencedDeclaration": 1354,
                                "src": "2905:14:4",
                                "typeDescriptions": {
                                  "typeIdentifier": "t_array$_t_struct$_Proposal_$1340_storage_$dyn_storage",
                                  "typeString": "struct VotingAlyra.Proposal storage ref[] storage ref"
                                }
                              },
                              "id": 1569,
                              "indexExpression": {
                                "id": 1568,
                                "name": "_id",
                                "nodeType": "Identifier",
                                "overloadedDeclarations": [],
                                "referencedDeclaration": 1519,
                                "src": "2920:3:4",
                                "typeDescriptions": {
                                  "typeIdentifier": "t_uint256",
                                  "typeString": "uint256"
                                }
                              },
                              "isConstant": false,
                              "isLValue": true,
                              "isPure": false,
                              "lValueRequested": false,
                              "nodeType": "IndexAccess",
                              "src": "2905:19:4",
                              "typeDescriptions": {
                                "typeIdentifier": "t_struct$_Proposal_$1340_storage",
                                "typeString": "struct VotingAlyra.Proposal storage ref"
                              }
                            },
                            "id": 1570,
                            "isConstant": false,
                            "isLValue": true,
                            "isPure": false,
                            "lValueRequested": true,
                            "memberLocation": "2925:9:4",
                            "memberName": "voteCount",
                            "nodeType": "MemberAccess",
                            "referencedDeclaration": 1339,
                            "src": "2905:29:4",
                            "typeDescriptions": {
                              "typeIdentifier": "t_uint256",
                              "typeString": "uint256"
                            }
                          },
                          "typeDescriptions": {
                            "typeIdentifier": "t_uint256",
                            "typeString": "uint256"
                          }
                        },
                        "id": 1572,
                        "nodeType": "ExpressionStatement",
                        "src": "2905:31:4"
                      },
                      {
                        "eventCall": {
                          "arguments": [
                            {
                              "expression": {
                                "id": 1574,
                                "name": "msg",
                                "nodeType": "Identifier",
                                "overloadedDeclarations": [],
                                "referencedDeclaration": -15,
                                "src": "2958:3:4",
                                "typeDescriptions": {
                                  "typeIdentifier": "t_magic_message",
                                  "typeString": "msg"
                                }
                              },
                              "id": 1575,
                              "isConstant": false,
                              "isLValue": false,
                              "isPure": false,
                              "lValueRequested": false,
                              "memberLocation": "2962:6:4",
                              "memberName": "sender",
                              "nodeType": "MemberAccess",
                              "src": "2958:10:4",
                              "typeDescriptions": {
                                "typeIdentifier": "t_address",
                                "typeString": "address"
                              }
                            },
                            {
                              "id": 1576,
                              "name": "_id",
                              "nodeType": "Identifier",
                              "overloadedDeclarations": [],
                              "referencedDeclaration": 1519,
                              "src": "2970:3:4",
                              "typeDescriptions": {
                                "typeIdentifier": "t_uint256",
                                "typeString": "uint256"
                              }
                            }
                          ],
                          "expression": {
                            "argumentTypes": [
                              {
                                "typeIdentifier": "t_address",
                                "typeString": "address"
                              },
                              {
                                "typeIdentifier": "t_uint256",
                                "typeString": "uint256"
                              }
                            ],
                            "id": 1573,
                            "name": "Voted",
                            "nodeType": "Identifier",
                            "overloadedDeclarations": [],
                            "referencedDeclaration": 1381,
                            "src": "2952:5:4",
                            "typeDescriptions": {
                              "typeIdentifier": "t_function_event_nonpayable$_t_address_$_t_uint256_$returns$__$",
                              "typeString": "function (address,uint256)"
                            }
                          },
                          "id": 1577,
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": false,
                          "kind": "functionCall",
                          "lValueRequested": false,
                          "nameLocations": [],
                          "names": [],
                          "nodeType": "FunctionCall",
                          "src": "2952:22:4",
                          "tryCall": false,
                          "typeDescriptions": {
                            "typeIdentifier": "t_tuple$__$",
                            "typeString": "tuple()"
                          }
                        },
                        "id": 1578,
                        "nodeType": "EmitStatement",
                        "src": "2947:27:4"
                      }
                    ]
                  },
                  "functionSelector": "230796ae",
                  "id": 1580,
                  "implemented": true,
                  "kind": "function",
                  "modifiers": [
                    {
                      "id": 1522,
                      "kind": "modifierInvocation",
                      "modifierName": {
                        "id": 1521,
                        "name": "onlyVoters",
                        "nameLocations": ["2487:10:4"],
                        "nodeType": "IdentifierPath",
                        "referencedDeclaration": 1394,
                        "src": "2487:10:4"
                      },
                      "nodeType": "ModifierInvocation",
                      "src": "2487:10:4"
                    }
                  ],
                  "name": "setVote",
                  "nameLocation": "2459:7:4",
                  "nodeType": "FunctionDefinition",
                  "parameters": {
                    "id": 1520,
                    "nodeType": "ParameterList",
                    "parameters": [
                      {
                        "constant": false,
                        "id": 1519,
                        "mutability": "mutable",
                        "name": "_id",
                        "nameLocation": "2473:3:4",
                        "nodeType": "VariableDeclaration",
                        "scope": 1580,
                        "src": "2468:8:4",
                        "stateVariable": false,
                        "storageLocation": "default",
                        "typeDescriptions": {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        },
                        "typeName": {
                          "id": 1518,
                          "name": "uint",
                          "nodeType": "ElementaryTypeName",
                          "src": "2468:4:4",
                          "typeDescriptions": {
                            "typeIdentifier": "t_uint256",
                            "typeString": "uint256"
                          }
                        },
                        "visibility": "internal"
                      }
                    ],
                    "src": "2466:11:4"
                  },
                  "returnParameters": {
                    "id": 1523,
                    "nodeType": "ParameterList",
                    "parameters": [],
                    "src": "2498:0:4"
                  },
                  "scope": 1762,
                  "src": "2450:531:4",
                  "stateMutability": "nonpayable",
                  "virtual": false,
                  "visibility": "external"
                },
                {
                  "body": {
                    "id": 1621,
                    "nodeType": "Block",
                    "src": "3089:438:4",
                    "statements": [
                      {
                        "expression": {
                          "arguments": [
                            {
                              "commonType": {
                                "typeIdentifier": "t_enum$_WorkflowStatus_$1347",
                                "typeString": "enum VotingAlyra.WorkflowStatus"
                              },
                              "id": 1589,
                              "isConstant": false,
                              "isLValue": false,
                              "isPure": false,
                              "lValueRequested": false,
                              "leftExpression": {
                                "id": 1586,
                                "name": "workflowStatus",
                                "nodeType": "Identifier",
                                "overloadedDeclarations": [],
                                "referencedDeclaration": 1350,
                                "src": "3107:14:4",
                                "typeDescriptions": {
                                  "typeIdentifier": "t_enum$_WorkflowStatus_$1347",
                                  "typeString": "enum VotingAlyra.WorkflowStatus"
                                }
                              },
                              "nodeType": "BinaryOperation",
                              "operator": "==",
                              "rightExpression": {
                                "expression": {
                                  "id": 1587,
                                  "name": "WorkflowStatus",
                                  "nodeType": "Identifier",
                                  "overloadedDeclarations": [],
                                  "referencedDeclaration": 1347,
                                  "src": "3125:14:4",
                                  "typeDescriptions": {
                                    "typeIdentifier": "t_type$_t_enum$_WorkflowStatus_$1347_$",
                                    "typeString": "type(enum VotingAlyra.WorkflowStatus)"
                                  }
                                },
                                "id": 1588,
                                "isConstant": false,
                                "isLValue": false,
                                "isPure": true,
                                "lValueRequested": false,
                                "memberLocation": "3140:17:4",
                                "memberName": "RegisteringVoters",
                                "nodeType": "MemberAccess",
                                "referencedDeclaration": 1341,
                                "src": "3125:32:4",
                                "typeDescriptions": {
                                  "typeIdentifier": "t_enum$_WorkflowStatus_$1347",
                                  "typeString": "enum VotingAlyra.WorkflowStatus"
                                }
                              },
                              "src": "3107:50:4",
                              "typeDescriptions": {
                                "typeIdentifier": "t_bool",
                                "typeString": "bool"
                              }
                            },
                            {
                              "hexValue": "5265676973746572696e672070726f706f73616c732063616e742062652073746172746564206e6f77",
                              "id": 1590,
                              "isConstant": false,
                              "isLValue": false,
                              "isPure": true,
                              "kind": "string",
                              "lValueRequested": false,
                              "nodeType": "Literal",
                              "src": "3159:43:4",
                              "typeDescriptions": {
                                "typeIdentifier": "t_stringliteral_e2a80632f2fcd18d6496f0cfcfccd5b0e23dd9fc7a8b9b52e45db1b65d7da09e",
                                "typeString": "literal_string \"Registering proposals cant be started now\""
                              },
                              "value": "Registering proposals cant be started now"
                            }
                          ],
                          "expression": {
                            "argumentTypes": [
                              {
                                "typeIdentifier": "t_bool",
                                "typeString": "bool"
                              },
                              {
                                "typeIdentifier": "t_stringliteral_e2a80632f2fcd18d6496f0cfcfccd5b0e23dd9fc7a8b9b52e45db1b65d7da09e",
                                "typeString": "literal_string \"Registering proposals cant be started now\""
                              }
                            ],
                            "id": 1585,
                            "name": "require",
                            "nodeType": "Identifier",
                            "overloadedDeclarations": [-18, -18],
                            "referencedDeclaration": -18,
                            "src": "3099:7:4",
                            "typeDescriptions": {
                              "typeIdentifier": "t_function_require_pure$_t_bool_$_t_string_memory_ptr_$returns$__$",
                              "typeString": "function (bool,string memory) pure"
                            }
                          },
                          "id": 1591,
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": false,
                          "kind": "functionCall",
                          "lValueRequested": false,
                          "nameLocations": [],
                          "names": [],
                          "nodeType": "FunctionCall",
                          "src": "3099:104:4",
                          "tryCall": false,
                          "typeDescriptions": {
                            "typeIdentifier": "t_tuple$__$",
                            "typeString": "tuple()"
                          }
                        },
                        "id": 1592,
                        "nodeType": "ExpressionStatement",
                        "src": "3099:104:4"
                      },
                      {
                        "expression": {
                          "id": 1596,
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": false,
                          "lValueRequested": false,
                          "leftHandSide": {
                            "id": 1593,
                            "name": "workflowStatus",
                            "nodeType": "Identifier",
                            "overloadedDeclarations": [],
                            "referencedDeclaration": 1350,
                            "src": "3213:14:4",
                            "typeDescriptions": {
                              "typeIdentifier": "t_enum$_WorkflowStatus_$1347",
                              "typeString": "enum VotingAlyra.WorkflowStatus"
                            }
                          },
                          "nodeType": "Assignment",
                          "operator": "=",
                          "rightHandSide": {
                            "expression": {
                              "id": 1594,
                              "name": "WorkflowStatus",
                              "nodeType": "Identifier",
                              "overloadedDeclarations": [],
                              "referencedDeclaration": 1347,
                              "src": "3230:14:4",
                              "typeDescriptions": {
                                "typeIdentifier": "t_type$_t_enum$_WorkflowStatus_$1347_$",
                                "typeString": "type(enum VotingAlyra.WorkflowStatus)"
                              }
                            },
                            "id": 1595,
                            "isConstant": false,
                            "isLValue": false,
                            "isPure": true,
                            "lValueRequested": false,
                            "memberLocation": "3245:28:4",
                            "memberName": "ProposalsRegistrationStarted",
                            "nodeType": "MemberAccess",
                            "referencedDeclaration": 1342,
                            "src": "3230:43:4",
                            "typeDescriptions": {
                              "typeIdentifier": "t_enum$_WorkflowStatus_$1347",
                              "typeString": "enum VotingAlyra.WorkflowStatus"
                            }
                          },
                          "src": "3213:60:4",
                          "typeDescriptions": {
                            "typeIdentifier": "t_enum$_WorkflowStatus_$1347",
                            "typeString": "enum VotingAlyra.WorkflowStatus"
                          }
                        },
                        "id": 1597,
                        "nodeType": "ExpressionStatement",
                        "src": "3213:60:4"
                      },
                      {
                        "assignments": [1600],
                        "declarations": [
                          {
                            "constant": false,
                            "id": 1600,
                            "mutability": "mutable",
                            "name": "proposal",
                            "nameLocation": "3308:8:4",
                            "nodeType": "VariableDeclaration",
                            "scope": 1621,
                            "src": "3292:24:4",
                            "stateVariable": false,
                            "storageLocation": "memory",
                            "typeDescriptions": {
                              "typeIdentifier": "t_struct$_Proposal_$1340_memory_ptr",
                              "typeString": "struct VotingAlyra.Proposal"
                            },
                            "typeName": {
                              "id": 1599,
                              "nodeType": "UserDefinedTypeName",
                              "pathNode": {
                                "id": 1598,
                                "name": "Proposal",
                                "nameLocations": ["3292:8:4"],
                                "nodeType": "IdentifierPath",
                                "referencedDeclaration": 1340,
                                "src": "3292:8:4"
                              },
                              "referencedDeclaration": 1340,
                              "src": "3292:8:4",
                              "typeDescriptions": {
                                "typeIdentifier": "t_struct$_Proposal_$1340_storage_ptr",
                                "typeString": "struct VotingAlyra.Proposal"
                              }
                            },
                            "visibility": "internal"
                          }
                        ],
                        "id": 1601,
                        "nodeType": "VariableDeclarationStatement",
                        "src": "3292:24:4"
                      },
                      {
                        "expression": {
                          "id": 1606,
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": false,
                          "lValueRequested": false,
                          "leftHandSide": {
                            "expression": {
                              "id": 1602,
                              "name": "proposal",
                              "nodeType": "Identifier",
                              "overloadedDeclarations": [],
                              "referencedDeclaration": 1600,
                              "src": "3326:8:4",
                              "typeDescriptions": {
                                "typeIdentifier": "t_struct$_Proposal_$1340_memory_ptr",
                                "typeString": "struct VotingAlyra.Proposal memory"
                              }
                            },
                            "id": 1604,
                            "isConstant": false,
                            "isLValue": true,
                            "isPure": false,
                            "lValueRequested": true,
                            "memberLocation": "3335:11:4",
                            "memberName": "description",
                            "nodeType": "MemberAccess",
                            "referencedDeclaration": 1337,
                            "src": "3326:20:4",
                            "typeDescriptions": {
                              "typeIdentifier": "t_string_memory_ptr",
                              "typeString": "string memory"
                            }
                          },
                          "nodeType": "Assignment",
                          "operator": "=",
                          "rightHandSide": {
                            "hexValue": "47454e45534953",
                            "id": 1605,
                            "isConstant": false,
                            "isLValue": false,
                            "isPure": true,
                            "kind": "string",
                            "lValueRequested": false,
                            "nodeType": "Literal",
                            "src": "3349:9:4",
                            "typeDescriptions": {
                              "typeIdentifier": "t_stringliteral_019f6193080fa2ce1eb4082321d3fc1563ca3ee6f96dc5b2092d4bd08cc1b2cb",
                              "typeString": "literal_string \"GENESIS\""
                            },
                            "value": "GENESIS"
                          },
                          "src": "3326:32:4",
                          "typeDescriptions": {
                            "typeIdentifier": "t_string_memory_ptr",
                            "typeString": "string memory"
                          }
                        },
                        "id": 1607,
                        "nodeType": "ExpressionStatement",
                        "src": "3326:32:4"
                      },
                      {
                        "expression": {
                          "arguments": [
                            {
                              "id": 1611,
                              "name": "proposal",
                              "nodeType": "Identifier",
                              "overloadedDeclarations": [],
                              "referencedDeclaration": 1600,
                              "src": "3388:8:4",
                              "typeDescriptions": {
                                "typeIdentifier": "t_struct$_Proposal_$1340_memory_ptr",
                                "typeString": "struct VotingAlyra.Proposal memory"
                              }
                            }
                          ],
                          "expression": {
                            "argumentTypes": [
                              {
                                "typeIdentifier": "t_struct$_Proposal_$1340_memory_ptr",
                                "typeString": "struct VotingAlyra.Proposal memory"
                              }
                            ],
                            "expression": {
                              "id": 1608,
                              "name": "proposalsArray",
                              "nodeType": "Identifier",
                              "overloadedDeclarations": [],
                              "referencedDeclaration": 1354,
                              "src": "3368:14:4",
                              "typeDescriptions": {
                                "typeIdentifier": "t_array$_t_struct$_Proposal_$1340_storage_$dyn_storage",
                                "typeString": "struct VotingAlyra.Proposal storage ref[] storage ref"
                              }
                            },
                            "id": 1610,
                            "isConstant": false,
                            "isLValue": false,
                            "isPure": false,
                            "lValueRequested": false,
                            "memberLocation": "3383:4:4",
                            "memberName": "push",
                            "nodeType": "MemberAccess",
                            "src": "3368:19:4",
                            "typeDescriptions": {
                              "typeIdentifier": "t_function_arraypush_nonpayable$_t_array$_t_struct$_Proposal_$1340_storage_$dyn_storage_ptr_$_t_struct$_Proposal_$1340_storage_$returns$__$bound_to$_t_array$_t_struct$_Proposal_$1340_storage_$dyn_storage_ptr_$",
                              "typeString": "function (struct VotingAlyra.Proposal storage ref[] storage pointer,struct VotingAlyra.Proposal storage ref)"
                            }
                          },
                          "id": 1612,
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": false,
                          "kind": "functionCall",
                          "lValueRequested": false,
                          "nameLocations": [],
                          "names": [],
                          "nodeType": "FunctionCall",
                          "src": "3368:29:4",
                          "tryCall": false,
                          "typeDescriptions": {
                            "typeIdentifier": "t_tuple$__$",
                            "typeString": "tuple()"
                          }
                        },
                        "id": 1613,
                        "nodeType": "ExpressionStatement",
                        "src": "3368:29:4"
                      },
                      {
                        "eventCall": {
                          "arguments": [
                            {
                              "expression": {
                                "id": 1615,
                                "name": "WorkflowStatus",
                                "nodeType": "Identifier",
                                "overloadedDeclarations": [],
                                "referencedDeclaration": 1347,
                                "src": "3442:14:4",
                                "typeDescriptions": {
                                  "typeIdentifier": "t_type$_t_enum$_WorkflowStatus_$1347_$",
                                  "typeString": "type(enum VotingAlyra.WorkflowStatus)"
                                }
                              },
                              "id": 1616,
                              "isConstant": false,
                              "isLValue": false,
                              "isPure": true,
                              "lValueRequested": false,
                              "memberLocation": "3457:17:4",
                              "memberName": "RegisteringVoters",
                              "nodeType": "MemberAccess",
                              "referencedDeclaration": 1341,
                              "src": "3442:32:4",
                              "typeDescriptions": {
                                "typeIdentifier": "t_enum$_WorkflowStatus_$1347",
                                "typeString": "enum VotingAlyra.WorkflowStatus"
                              }
                            },
                            {
                              "expression": {
                                "id": 1617,
                                "name": "WorkflowStatus",
                                "nodeType": "Identifier",
                                "overloadedDeclarations": [],
                                "referencedDeclaration": 1347,
                                "src": "3476:14:4",
                                "typeDescriptions": {
                                  "typeIdentifier": "t_type$_t_enum$_WorkflowStatus_$1347_$",
                                  "typeString": "type(enum VotingAlyra.WorkflowStatus)"
                                }
                              },
                              "id": 1618,
                              "isConstant": false,
                              "isLValue": false,
                              "isPure": true,
                              "lValueRequested": false,
                              "memberLocation": "3491:28:4",
                              "memberName": "ProposalsRegistrationStarted",
                              "nodeType": "MemberAccess",
                              "referencedDeclaration": 1342,
                              "src": "3476:43:4",
                              "typeDescriptions": {
                                "typeIdentifier": "t_enum$_WorkflowStatus_$1347",
                                "typeString": "enum VotingAlyra.WorkflowStatus"
                              }
                            }
                          ],
                          "expression": {
                            "argumentTypes": [
                              {
                                "typeIdentifier": "t_enum$_WorkflowStatus_$1347",
                                "typeString": "enum VotingAlyra.WorkflowStatus"
                              },
                              {
                                "typeIdentifier": "t_enum$_WorkflowStatus_$1347",
                                "typeString": "enum VotingAlyra.WorkflowStatus"
                              }
                            ],
                            "id": 1614,
                            "name": "WorkflowStatusChange",
                            "nodeType": "Identifier",
                            "overloadedDeclarations": [],
                            "referencedDeclaration": 1371,
                            "src": "3421:20:4",
                            "typeDescriptions": {
                              "typeIdentifier": "t_function_event_nonpayable$_t_enum$_WorkflowStatus_$1347_$_t_enum$_WorkflowStatus_$1347_$returns$__$",
                              "typeString": "function (enum VotingAlyra.WorkflowStatus,enum VotingAlyra.WorkflowStatus)"
                            }
                          },
                          "id": 1619,
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": false,
                          "kind": "functionCall",
                          "lValueRequested": false,
                          "nameLocations": [],
                          "names": [],
                          "nodeType": "FunctionCall",
                          "src": "3421:99:4",
                          "tryCall": false,
                          "typeDescriptions": {
                            "typeIdentifier": "t_tuple$__$",
                            "typeString": "tuple()"
                          }
                        },
                        "id": 1620,
                        "nodeType": "EmitStatement",
                        "src": "3416:104:4"
                      }
                    ]
                  },
                  "functionSelector": "c7038a4e",
                  "id": 1622,
                  "implemented": true,
                  "kind": "function",
                  "modifiers": [
                    {
                      "id": 1583,
                      "kind": "modifierInvocation",
                      "modifierName": {
                        "id": 1582,
                        "name": "onlyOwner",
                        "nameLocations": ["3079:9:4"],
                        "nodeType": "IdentifierPath",
                        "referencedDeclaration": 31,
                        "src": "3079:9:4"
                      },
                      "nodeType": "ModifierInvocation",
                      "src": "3079:9:4"
                    }
                  ],
                  "name": "startProposalsRegistering",
                  "nameLocation": "3042:25:4",
                  "nodeType": "FunctionDefinition",
                  "parameters": {
                    "id": 1581,
                    "nodeType": "ParameterList",
                    "parameters": [],
                    "src": "3067:2:4"
                  },
                  "returnParameters": {
                    "id": 1584,
                    "nodeType": "ParameterList",
                    "parameters": [],
                    "src": "3089:0:4"
                  },
                  "scope": 1762,
                  "src": "3033:494:4",
                  "stateMutability": "nonpayable",
                  "virtual": false,
                  "visibility": "external"
                },
                {
                  "body": {
                    "id": 1647,
                    "nodeType": "Block",
                    "src": "3587:322:4",
                    "statements": [
                      {
                        "expression": {
                          "arguments": [
                            {
                              "commonType": {
                                "typeIdentifier": "t_enum$_WorkflowStatus_$1347",
                                "typeString": "enum VotingAlyra.WorkflowStatus"
                              },
                              "id": 1631,
                              "isConstant": false,
                              "isLValue": false,
                              "isPure": false,
                              "lValueRequested": false,
                              "leftExpression": {
                                "id": 1628,
                                "name": "workflowStatus",
                                "nodeType": "Identifier",
                                "overloadedDeclarations": [],
                                "referencedDeclaration": 1350,
                                "src": "3605:14:4",
                                "typeDescriptions": {
                                  "typeIdentifier": "t_enum$_WorkflowStatus_$1347",
                                  "typeString": "enum VotingAlyra.WorkflowStatus"
                                }
                              },
                              "nodeType": "BinaryOperation",
                              "operator": "==",
                              "rightExpression": {
                                "expression": {
                                  "id": 1629,
                                  "name": "WorkflowStatus",
                                  "nodeType": "Identifier",
                                  "overloadedDeclarations": [],
                                  "referencedDeclaration": 1347,
                                  "src": "3623:14:4",
                                  "typeDescriptions": {
                                    "typeIdentifier": "t_type$_t_enum$_WorkflowStatus_$1347_$",
                                    "typeString": "type(enum VotingAlyra.WorkflowStatus)"
                                  }
                                },
                                "id": 1630,
                                "isConstant": false,
                                "isLValue": false,
                                "isPure": true,
                                "lValueRequested": false,
                                "memberLocation": "3638:28:4",
                                "memberName": "ProposalsRegistrationStarted",
                                "nodeType": "MemberAccess",
                                "referencedDeclaration": 1342,
                                "src": "3623:43:4",
                                "typeDescriptions": {
                                  "typeIdentifier": "t_enum$_WorkflowStatus_$1347",
                                  "typeString": "enum VotingAlyra.WorkflowStatus"
                                }
                              },
                              "src": "3605:61:4",
                              "typeDescriptions": {
                                "typeIdentifier": "t_bool",
                                "typeString": "bool"
                              }
                            },
                            {
                              "hexValue": "5265676973746572696e672070726f706f73616c7320686176656e74207374617274656420796574",
                              "id": 1632,
                              "isConstant": false,
                              "isLValue": false,
                              "isPure": true,
                              "kind": "string",
                              "lValueRequested": false,
                              "nodeType": "Literal",
                              "src": "3668:42:4",
                              "typeDescriptions": {
                                "typeIdentifier": "t_stringliteral_e924b915216d9035118ecb3780d0b361b3358f4cd76cb017027ea4d540d49116",
                                "typeString": "literal_string \"Registering proposals havent started yet\""
                              },
                              "value": "Registering proposals havent started yet"
                            }
                          ],
                          "expression": {
                            "argumentTypes": [
                              {
                                "typeIdentifier": "t_bool",
                                "typeString": "bool"
                              },
                              {
                                "typeIdentifier": "t_stringliteral_e924b915216d9035118ecb3780d0b361b3358f4cd76cb017027ea4d540d49116",
                                "typeString": "literal_string \"Registering proposals havent started yet\""
                              }
                            ],
                            "id": 1627,
                            "name": "require",
                            "nodeType": "Identifier",
                            "overloadedDeclarations": [-18, -18],
                            "referencedDeclaration": -18,
                            "src": "3597:7:4",
                            "typeDescriptions": {
                              "typeIdentifier": "t_function_require_pure$_t_bool_$_t_string_memory_ptr_$returns$__$",
                              "typeString": "function (bool,string memory) pure"
                            }
                          },
                          "id": 1633,
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": false,
                          "kind": "functionCall",
                          "lValueRequested": false,
                          "nameLocations": [],
                          "names": [],
                          "nodeType": "FunctionCall",
                          "src": "3597:114:4",
                          "tryCall": false,
                          "typeDescriptions": {
                            "typeIdentifier": "t_tuple$__$",
                            "typeString": "tuple()"
                          }
                        },
                        "id": 1634,
                        "nodeType": "ExpressionStatement",
                        "src": "3597:114:4"
                      },
                      {
                        "expression": {
                          "id": 1638,
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": false,
                          "lValueRequested": false,
                          "leftHandSide": {
                            "id": 1635,
                            "name": "workflowStatus",
                            "nodeType": "Identifier",
                            "overloadedDeclarations": [],
                            "referencedDeclaration": 1350,
                            "src": "3721:14:4",
                            "typeDescriptions": {
                              "typeIdentifier": "t_enum$_WorkflowStatus_$1347",
                              "typeString": "enum VotingAlyra.WorkflowStatus"
                            }
                          },
                          "nodeType": "Assignment",
                          "operator": "=",
                          "rightHandSide": {
                            "expression": {
                              "id": 1636,
                              "name": "WorkflowStatus",
                              "nodeType": "Identifier",
                              "overloadedDeclarations": [],
                              "referencedDeclaration": 1347,
                              "src": "3738:14:4",
                              "typeDescriptions": {
                                "typeIdentifier": "t_type$_t_enum$_WorkflowStatus_$1347_$",
                                "typeString": "type(enum VotingAlyra.WorkflowStatus)"
                              }
                            },
                            "id": 1637,
                            "isConstant": false,
                            "isLValue": false,
                            "isPure": true,
                            "lValueRequested": false,
                            "memberLocation": "3753:26:4",
                            "memberName": "ProposalsRegistrationEnded",
                            "nodeType": "MemberAccess",
                            "referencedDeclaration": 1343,
                            "src": "3738:41:4",
                            "typeDescriptions": {
                              "typeIdentifier": "t_enum$_WorkflowStatus_$1347",
                              "typeString": "enum VotingAlyra.WorkflowStatus"
                            }
                          },
                          "src": "3721:58:4",
                          "typeDescriptions": {
                            "typeIdentifier": "t_enum$_WorkflowStatus_$1347",
                            "typeString": "enum VotingAlyra.WorkflowStatus"
                          }
                        },
                        "id": 1639,
                        "nodeType": "ExpressionStatement",
                        "src": "3721:58:4"
                      },
                      {
                        "eventCall": {
                          "arguments": [
                            {
                              "expression": {
                                "id": 1641,
                                "name": "WorkflowStatus",
                                "nodeType": "Identifier",
                                "overloadedDeclarations": [],
                                "referencedDeclaration": 1347,
                                "src": "3815:14:4",
                                "typeDescriptions": {
                                  "typeIdentifier": "t_type$_t_enum$_WorkflowStatus_$1347_$",
                                  "typeString": "type(enum VotingAlyra.WorkflowStatus)"
                                }
                              },
                              "id": 1642,
                              "isConstant": false,
                              "isLValue": false,
                              "isPure": true,
                              "lValueRequested": false,
                              "memberLocation": "3830:28:4",
                              "memberName": "ProposalsRegistrationStarted",
                              "nodeType": "MemberAccess",
                              "referencedDeclaration": 1342,
                              "src": "3815:43:4",
                              "typeDescriptions": {
                                "typeIdentifier": "t_enum$_WorkflowStatus_$1347",
                                "typeString": "enum VotingAlyra.WorkflowStatus"
                              }
                            },
                            {
                              "expression": {
                                "id": 1643,
                                "name": "WorkflowStatus",
                                "nodeType": "Identifier",
                                "overloadedDeclarations": [],
                                "referencedDeclaration": 1347,
                                "src": "3860:14:4",
                                "typeDescriptions": {
                                  "typeIdentifier": "t_type$_t_enum$_WorkflowStatus_$1347_$",
                                  "typeString": "type(enum VotingAlyra.WorkflowStatus)"
                                }
                              },
                              "id": 1644,
                              "isConstant": false,
                              "isLValue": false,
                              "isPure": true,
                              "lValueRequested": false,
                              "memberLocation": "3875:26:4",
                              "memberName": "ProposalsRegistrationEnded",
                              "nodeType": "MemberAccess",
                              "referencedDeclaration": 1343,
                              "src": "3860:41:4",
                              "typeDescriptions": {
                                "typeIdentifier": "t_enum$_WorkflowStatus_$1347",
                                "typeString": "enum VotingAlyra.WorkflowStatus"
                              }
                            }
                          ],
                          "expression": {
                            "argumentTypes": [
                              {
                                "typeIdentifier": "t_enum$_WorkflowStatus_$1347",
                                "typeString": "enum VotingAlyra.WorkflowStatus"
                              },
                              {
                                "typeIdentifier": "t_enum$_WorkflowStatus_$1347",
                                "typeString": "enum VotingAlyra.WorkflowStatus"
                              }
                            ],
                            "id": 1640,
                            "name": "WorkflowStatusChange",
                            "nodeType": "Identifier",
                            "overloadedDeclarations": [],
                            "referencedDeclaration": 1371,
                            "src": "3794:20:4",
                            "typeDescriptions": {
                              "typeIdentifier": "t_function_event_nonpayable$_t_enum$_WorkflowStatus_$1347_$_t_enum$_WorkflowStatus_$1347_$returns$__$",
                              "typeString": "function (enum VotingAlyra.WorkflowStatus,enum VotingAlyra.WorkflowStatus)"
                            }
                          },
                          "id": 1645,
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": false,
                          "kind": "functionCall",
                          "lValueRequested": false,
                          "nameLocations": [],
                          "names": [],
                          "nodeType": "FunctionCall",
                          "src": "3794:108:4",
                          "tryCall": false,
                          "typeDescriptions": {
                            "typeIdentifier": "t_tuple$__$",
                            "typeString": "tuple()"
                          }
                        },
                        "id": 1646,
                        "nodeType": "EmitStatement",
                        "src": "3789:113:4"
                      }
                    ]
                  },
                  "functionSelector": "c88af42f",
                  "id": 1648,
                  "implemented": true,
                  "kind": "function",
                  "modifiers": [
                    {
                      "id": 1625,
                      "kind": "modifierInvocation",
                      "modifierName": {
                        "id": 1624,
                        "name": "onlyOwner",
                        "nameLocations": ["3577:9:4"],
                        "nodeType": "IdentifierPath",
                        "referencedDeclaration": 31,
                        "src": "3577:9:4"
                      },
                      "nodeType": "ModifierInvocation",
                      "src": "3577:9:4"
                    }
                  ],
                  "name": "endProposalsRegistering",
                  "nameLocation": "3542:23:4",
                  "nodeType": "FunctionDefinition",
                  "parameters": {
                    "id": 1623,
                    "nodeType": "ParameterList",
                    "parameters": [],
                    "src": "3565:2:4"
                  },
                  "returnParameters": {
                    "id": 1626,
                    "nodeType": "ParameterList",
                    "parameters": [],
                    "src": "3587:0:4"
                  },
                  "scope": 1762,
                  "src": "3533:376:4",
                  "stateMutability": "nonpayable",
                  "virtual": false,
                  "visibility": "external"
                },
                {
                  "body": {
                    "id": 1673,
                    "nodeType": "Block",
                    "src": "3964:309:4",
                    "statements": [
                      {
                        "expression": {
                          "arguments": [
                            {
                              "commonType": {
                                "typeIdentifier": "t_enum$_WorkflowStatus_$1347",
                                "typeString": "enum VotingAlyra.WorkflowStatus"
                              },
                              "id": 1657,
                              "isConstant": false,
                              "isLValue": false,
                              "isPure": false,
                              "lValueRequested": false,
                              "leftExpression": {
                                "id": 1654,
                                "name": "workflowStatus",
                                "nodeType": "Identifier",
                                "overloadedDeclarations": [],
                                "referencedDeclaration": 1350,
                                "src": "3982:14:4",
                                "typeDescriptions": {
                                  "typeIdentifier": "t_enum$_WorkflowStatus_$1347",
                                  "typeString": "enum VotingAlyra.WorkflowStatus"
                                }
                              },
                              "nodeType": "BinaryOperation",
                              "operator": "==",
                              "rightExpression": {
                                "expression": {
                                  "id": 1655,
                                  "name": "WorkflowStatus",
                                  "nodeType": "Identifier",
                                  "overloadedDeclarations": [],
                                  "referencedDeclaration": 1347,
                                  "src": "4000:14:4",
                                  "typeDescriptions": {
                                    "typeIdentifier": "t_type$_t_enum$_WorkflowStatus_$1347_$",
                                    "typeString": "type(enum VotingAlyra.WorkflowStatus)"
                                  }
                                },
                                "id": 1656,
                                "isConstant": false,
                                "isLValue": false,
                                "isPure": true,
                                "lValueRequested": false,
                                "memberLocation": "4015:26:4",
                                "memberName": "ProposalsRegistrationEnded",
                                "nodeType": "MemberAccess",
                                "referencedDeclaration": 1343,
                                "src": "4000:41:4",
                                "typeDescriptions": {
                                  "typeIdentifier": "t_enum$_WorkflowStatus_$1347",
                                  "typeString": "enum VotingAlyra.WorkflowStatus"
                                }
                              },
                              "src": "3982:59:4",
                              "typeDescriptions": {
                                "typeIdentifier": "t_bool",
                                "typeString": "bool"
                              }
                            },
                            {
                              "hexValue": "5265676973746572696e672070726f706f73616c73207068617365206973206e6f742066696e6973686564",
                              "id": 1658,
                              "isConstant": false,
                              "isLValue": false,
                              "isPure": true,
                              "kind": "string",
                              "lValueRequested": false,
                              "nodeType": "Literal",
                              "src": "4043:45:4",
                              "typeDescriptions": {
                                "typeIdentifier": "t_stringliteral_c08ba2fb32a439193d402103beb50d60ed171e76f51206ca6a45d50440a03472",
                                "typeString": "literal_string \"Registering proposals phase is not finished\""
                              },
                              "value": "Registering proposals phase is not finished"
                            }
                          ],
                          "expression": {
                            "argumentTypes": [
                              {
                                "typeIdentifier": "t_bool",
                                "typeString": "bool"
                              },
                              {
                                "typeIdentifier": "t_stringliteral_c08ba2fb32a439193d402103beb50d60ed171e76f51206ca6a45d50440a03472",
                                "typeString": "literal_string \"Registering proposals phase is not finished\""
                              }
                            ],
                            "id": 1653,
                            "name": "require",
                            "nodeType": "Identifier",
                            "overloadedDeclarations": [-18, -18],
                            "referencedDeclaration": -18,
                            "src": "3974:7:4",
                            "typeDescriptions": {
                              "typeIdentifier": "t_function_require_pure$_t_bool_$_t_string_memory_ptr_$returns$__$",
                              "typeString": "function (bool,string memory) pure"
                            }
                          },
                          "id": 1659,
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": false,
                          "kind": "functionCall",
                          "lValueRequested": false,
                          "nameLocations": [],
                          "names": [],
                          "nodeType": "FunctionCall",
                          "src": "3974:115:4",
                          "tryCall": false,
                          "typeDescriptions": {
                            "typeIdentifier": "t_tuple$__$",
                            "typeString": "tuple()"
                          }
                        },
                        "id": 1660,
                        "nodeType": "ExpressionStatement",
                        "src": "3974:115:4"
                      },
                      {
                        "expression": {
                          "id": 1664,
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": false,
                          "lValueRequested": false,
                          "leftHandSide": {
                            "id": 1661,
                            "name": "workflowStatus",
                            "nodeType": "Identifier",
                            "overloadedDeclarations": [],
                            "referencedDeclaration": 1350,
                            "src": "4099:14:4",
                            "typeDescriptions": {
                              "typeIdentifier": "t_enum$_WorkflowStatus_$1347",
                              "typeString": "enum VotingAlyra.WorkflowStatus"
                            }
                          },
                          "nodeType": "Assignment",
                          "operator": "=",
                          "rightHandSide": {
                            "expression": {
                              "id": 1662,
                              "name": "WorkflowStatus",
                              "nodeType": "Identifier",
                              "overloadedDeclarations": [],
                              "referencedDeclaration": 1347,
                              "src": "4116:14:4",
                              "typeDescriptions": {
                                "typeIdentifier": "t_type$_t_enum$_WorkflowStatus_$1347_$",
                                "typeString": "type(enum VotingAlyra.WorkflowStatus)"
                              }
                            },
                            "id": 1663,
                            "isConstant": false,
                            "isLValue": false,
                            "isPure": true,
                            "lValueRequested": false,
                            "memberLocation": "4131:20:4",
                            "memberName": "VotingSessionStarted",
                            "nodeType": "MemberAccess",
                            "referencedDeclaration": 1344,
                            "src": "4116:35:4",
                            "typeDescriptions": {
                              "typeIdentifier": "t_enum$_WorkflowStatus_$1347",
                              "typeString": "enum VotingAlyra.WorkflowStatus"
                            }
                          },
                          "src": "4099:52:4",
                          "typeDescriptions": {
                            "typeIdentifier": "t_enum$_WorkflowStatus_$1347",
                            "typeString": "enum VotingAlyra.WorkflowStatus"
                          }
                        },
                        "id": 1665,
                        "nodeType": "ExpressionStatement",
                        "src": "4099:52:4"
                      },
                      {
                        "eventCall": {
                          "arguments": [
                            {
                              "expression": {
                                "id": 1667,
                                "name": "WorkflowStatus",
                                "nodeType": "Identifier",
                                "overloadedDeclarations": [],
                                "referencedDeclaration": 1347,
                                "src": "4187:14:4",
                                "typeDescriptions": {
                                  "typeIdentifier": "t_type$_t_enum$_WorkflowStatus_$1347_$",
                                  "typeString": "type(enum VotingAlyra.WorkflowStatus)"
                                }
                              },
                              "id": 1668,
                              "isConstant": false,
                              "isLValue": false,
                              "isPure": true,
                              "lValueRequested": false,
                              "memberLocation": "4202:26:4",
                              "memberName": "ProposalsRegistrationEnded",
                              "nodeType": "MemberAccess",
                              "referencedDeclaration": 1343,
                              "src": "4187:41:4",
                              "typeDescriptions": {
                                "typeIdentifier": "t_enum$_WorkflowStatus_$1347",
                                "typeString": "enum VotingAlyra.WorkflowStatus"
                              }
                            },
                            {
                              "expression": {
                                "id": 1669,
                                "name": "WorkflowStatus",
                                "nodeType": "Identifier",
                                "overloadedDeclarations": [],
                                "referencedDeclaration": 1347,
                                "src": "4230:14:4",
                                "typeDescriptions": {
                                  "typeIdentifier": "t_type$_t_enum$_WorkflowStatus_$1347_$",
                                  "typeString": "type(enum VotingAlyra.WorkflowStatus)"
                                }
                              },
                              "id": 1670,
                              "isConstant": false,
                              "isLValue": false,
                              "isPure": true,
                              "lValueRequested": false,
                              "memberLocation": "4245:20:4",
                              "memberName": "VotingSessionStarted",
                              "nodeType": "MemberAccess",
                              "referencedDeclaration": 1344,
                              "src": "4230:35:4",
                              "typeDescriptions": {
                                "typeIdentifier": "t_enum$_WorkflowStatus_$1347",
                                "typeString": "enum VotingAlyra.WorkflowStatus"
                              }
                            }
                          ],
                          "expression": {
                            "argumentTypes": [
                              {
                                "typeIdentifier": "t_enum$_WorkflowStatus_$1347",
                                "typeString": "enum VotingAlyra.WorkflowStatus"
                              },
                              {
                                "typeIdentifier": "t_enum$_WorkflowStatus_$1347",
                                "typeString": "enum VotingAlyra.WorkflowStatus"
                              }
                            ],
                            "id": 1666,
                            "name": "WorkflowStatusChange",
                            "nodeType": "Identifier",
                            "overloadedDeclarations": [],
                            "referencedDeclaration": 1371,
                            "src": "4166:20:4",
                            "typeDescriptions": {
                              "typeIdentifier": "t_function_event_nonpayable$_t_enum$_WorkflowStatus_$1347_$_t_enum$_WorkflowStatus_$1347_$returns$__$",
                              "typeString": "function (enum VotingAlyra.WorkflowStatus,enum VotingAlyra.WorkflowStatus)"
                            }
                          },
                          "id": 1671,
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": false,
                          "kind": "functionCall",
                          "lValueRequested": false,
                          "nameLocations": [],
                          "names": [],
                          "nodeType": "FunctionCall",
                          "src": "4166:100:4",
                          "tryCall": false,
                          "typeDescriptions": {
                            "typeIdentifier": "t_tuple$__$",
                            "typeString": "tuple()"
                          }
                        },
                        "id": 1672,
                        "nodeType": "EmitStatement",
                        "src": "4161:105:4"
                      }
                    ]
                  },
                  "functionSelector": "ee74c678",
                  "id": 1674,
                  "implemented": true,
                  "kind": "function",
                  "modifiers": [
                    {
                      "id": 1651,
                      "kind": "modifierInvocation",
                      "modifierName": {
                        "id": 1650,
                        "name": "onlyOwner",
                        "nameLocations": ["3954:9:4"],
                        "nodeType": "IdentifierPath",
                        "referencedDeclaration": 31,
                        "src": "3954:9:4"
                      },
                      "nodeType": "ModifierInvocation",
                      "src": "3954:9:4"
                    }
                  ],
                  "name": "startVotingSession",
                  "nameLocation": "3924:18:4",
                  "nodeType": "FunctionDefinition",
                  "parameters": {
                    "id": 1649,
                    "nodeType": "ParameterList",
                    "parameters": [],
                    "src": "3942:2:4"
                  },
                  "returnParameters": {
                    "id": 1652,
                    "nodeType": "ParameterList",
                    "parameters": [],
                    "src": "3964:0:4"
                  },
                  "scope": 1762,
                  "src": "3915:358:4",
                  "stateMutability": "nonpayable",
                  "virtual": false,
                  "visibility": "external"
                },
                {
                  "body": {
                    "id": 1699,
                    "nodeType": "Block",
                    "src": "4326:283:4",
                    "statements": [
                      {
                        "expression": {
                          "arguments": [
                            {
                              "commonType": {
                                "typeIdentifier": "t_enum$_WorkflowStatus_$1347",
                                "typeString": "enum VotingAlyra.WorkflowStatus"
                              },
                              "id": 1683,
                              "isConstant": false,
                              "isLValue": false,
                              "isPure": false,
                              "lValueRequested": false,
                              "leftExpression": {
                                "id": 1680,
                                "name": "workflowStatus",
                                "nodeType": "Identifier",
                                "overloadedDeclarations": [],
                                "referencedDeclaration": 1350,
                                "src": "4344:14:4",
                                "typeDescriptions": {
                                  "typeIdentifier": "t_enum$_WorkflowStatus_$1347",
                                  "typeString": "enum VotingAlyra.WorkflowStatus"
                                }
                              },
                              "nodeType": "BinaryOperation",
                              "operator": "==",
                              "rightExpression": {
                                "expression": {
                                  "id": 1681,
                                  "name": "WorkflowStatus",
                                  "nodeType": "Identifier",
                                  "overloadedDeclarations": [],
                                  "referencedDeclaration": 1347,
                                  "src": "4362:14:4",
                                  "typeDescriptions": {
                                    "typeIdentifier": "t_type$_t_enum$_WorkflowStatus_$1347_$",
                                    "typeString": "type(enum VotingAlyra.WorkflowStatus)"
                                  }
                                },
                                "id": 1682,
                                "isConstant": false,
                                "isLValue": false,
                                "isPure": true,
                                "lValueRequested": false,
                                "memberLocation": "4377:20:4",
                                "memberName": "VotingSessionStarted",
                                "nodeType": "MemberAccess",
                                "referencedDeclaration": 1344,
                                "src": "4362:35:4",
                                "typeDescriptions": {
                                  "typeIdentifier": "t_enum$_WorkflowStatus_$1347",
                                  "typeString": "enum VotingAlyra.WorkflowStatus"
                                }
                              },
                              "src": "4344:53:4",
                              "typeDescriptions": {
                                "typeIdentifier": "t_bool",
                                "typeString": "bool"
                              }
                            },
                            {
                              "hexValue": "566f74696e672073657373696f6e20686176656e74207374617274656420796574",
                              "id": 1684,
                              "isConstant": false,
                              "isLValue": false,
                              "isPure": true,
                              "kind": "string",
                              "lValueRequested": false,
                              "nodeType": "Literal",
                              "src": "4399:35:4",
                              "typeDescriptions": {
                                "typeIdentifier": "t_stringliteral_62400aa7da0e280fc286fd5482d79ac3e2aa4e6d6dca70b4997f2ac0f4a46e72",
                                "typeString": "literal_string \"Voting session havent started yet\""
                              },
                              "value": "Voting session havent started yet"
                            }
                          ],
                          "expression": {
                            "argumentTypes": [
                              {
                                "typeIdentifier": "t_bool",
                                "typeString": "bool"
                              },
                              {
                                "typeIdentifier": "t_stringliteral_62400aa7da0e280fc286fd5482d79ac3e2aa4e6d6dca70b4997f2ac0f4a46e72",
                                "typeString": "literal_string \"Voting session havent started yet\""
                              }
                            ],
                            "id": 1679,
                            "name": "require",
                            "nodeType": "Identifier",
                            "overloadedDeclarations": [-18, -18],
                            "referencedDeclaration": -18,
                            "src": "4336:7:4",
                            "typeDescriptions": {
                              "typeIdentifier": "t_function_require_pure$_t_bool_$_t_string_memory_ptr_$returns$__$",
                              "typeString": "function (bool,string memory) pure"
                            }
                          },
                          "id": 1685,
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": false,
                          "kind": "functionCall",
                          "lValueRequested": false,
                          "nameLocations": [],
                          "names": [],
                          "nodeType": "FunctionCall",
                          "src": "4336:99:4",
                          "tryCall": false,
                          "typeDescriptions": {
                            "typeIdentifier": "t_tuple$__$",
                            "typeString": "tuple()"
                          }
                        },
                        "id": 1686,
                        "nodeType": "ExpressionStatement",
                        "src": "4336:99:4"
                      },
                      {
                        "expression": {
                          "id": 1690,
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": false,
                          "lValueRequested": false,
                          "leftHandSide": {
                            "id": 1687,
                            "name": "workflowStatus",
                            "nodeType": "Identifier",
                            "overloadedDeclarations": [],
                            "referencedDeclaration": 1350,
                            "src": "4445:14:4",
                            "typeDescriptions": {
                              "typeIdentifier": "t_enum$_WorkflowStatus_$1347",
                              "typeString": "enum VotingAlyra.WorkflowStatus"
                            }
                          },
                          "nodeType": "Assignment",
                          "operator": "=",
                          "rightHandSide": {
                            "expression": {
                              "id": 1688,
                              "name": "WorkflowStatus",
                              "nodeType": "Identifier",
                              "overloadedDeclarations": [],
                              "referencedDeclaration": 1347,
                              "src": "4462:14:4",
                              "typeDescriptions": {
                                "typeIdentifier": "t_type$_t_enum$_WorkflowStatus_$1347_$",
                                "typeString": "type(enum VotingAlyra.WorkflowStatus)"
                              }
                            },
                            "id": 1689,
                            "isConstant": false,
                            "isLValue": false,
                            "isPure": true,
                            "lValueRequested": false,
                            "memberLocation": "4477:18:4",
                            "memberName": "VotingSessionEnded",
                            "nodeType": "MemberAccess",
                            "referencedDeclaration": 1345,
                            "src": "4462:33:4",
                            "typeDescriptions": {
                              "typeIdentifier": "t_enum$_WorkflowStatus_$1347",
                              "typeString": "enum VotingAlyra.WorkflowStatus"
                            }
                          },
                          "src": "4445:50:4",
                          "typeDescriptions": {
                            "typeIdentifier": "t_enum$_WorkflowStatus_$1347",
                            "typeString": "enum VotingAlyra.WorkflowStatus"
                          }
                        },
                        "id": 1691,
                        "nodeType": "ExpressionStatement",
                        "src": "4445:50:4"
                      },
                      {
                        "eventCall": {
                          "arguments": [
                            {
                              "expression": {
                                "id": 1693,
                                "name": "WorkflowStatus",
                                "nodeType": "Identifier",
                                "overloadedDeclarations": [],
                                "referencedDeclaration": 1347,
                                "src": "4531:14:4",
                                "typeDescriptions": {
                                  "typeIdentifier": "t_type$_t_enum$_WorkflowStatus_$1347_$",
                                  "typeString": "type(enum VotingAlyra.WorkflowStatus)"
                                }
                              },
                              "id": 1694,
                              "isConstant": false,
                              "isLValue": false,
                              "isPure": true,
                              "lValueRequested": false,
                              "memberLocation": "4546:20:4",
                              "memberName": "VotingSessionStarted",
                              "nodeType": "MemberAccess",
                              "referencedDeclaration": 1344,
                              "src": "4531:35:4",
                              "typeDescriptions": {
                                "typeIdentifier": "t_enum$_WorkflowStatus_$1347",
                                "typeString": "enum VotingAlyra.WorkflowStatus"
                              }
                            },
                            {
                              "expression": {
                                "id": 1695,
                                "name": "WorkflowStatus",
                                "nodeType": "Identifier",
                                "overloadedDeclarations": [],
                                "referencedDeclaration": 1347,
                                "src": "4568:14:4",
                                "typeDescriptions": {
                                  "typeIdentifier": "t_type$_t_enum$_WorkflowStatus_$1347_$",
                                  "typeString": "type(enum VotingAlyra.WorkflowStatus)"
                                }
                              },
                              "id": 1696,
                              "isConstant": false,
                              "isLValue": false,
                              "isPure": true,
                              "lValueRequested": false,
                              "memberLocation": "4583:18:4",
                              "memberName": "VotingSessionEnded",
                              "nodeType": "MemberAccess",
                              "referencedDeclaration": 1345,
                              "src": "4568:33:4",
                              "typeDescriptions": {
                                "typeIdentifier": "t_enum$_WorkflowStatus_$1347",
                                "typeString": "enum VotingAlyra.WorkflowStatus"
                              }
                            }
                          ],
                          "expression": {
                            "argumentTypes": [
                              {
                                "typeIdentifier": "t_enum$_WorkflowStatus_$1347",
                                "typeString": "enum VotingAlyra.WorkflowStatus"
                              },
                              {
                                "typeIdentifier": "t_enum$_WorkflowStatus_$1347",
                                "typeString": "enum VotingAlyra.WorkflowStatus"
                              }
                            ],
                            "id": 1692,
                            "name": "WorkflowStatusChange",
                            "nodeType": "Identifier",
                            "overloadedDeclarations": [],
                            "referencedDeclaration": 1371,
                            "src": "4510:20:4",
                            "typeDescriptions": {
                              "typeIdentifier": "t_function_event_nonpayable$_t_enum$_WorkflowStatus_$1347_$_t_enum$_WorkflowStatus_$1347_$returns$__$",
                              "typeString": "function (enum VotingAlyra.WorkflowStatus,enum VotingAlyra.WorkflowStatus)"
                            }
                          },
                          "id": 1697,
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": false,
                          "kind": "functionCall",
                          "lValueRequested": false,
                          "nameLocations": [],
                          "names": [],
                          "nodeType": "FunctionCall",
                          "src": "4510:92:4",
                          "tryCall": false,
                          "typeDescriptions": {
                            "typeIdentifier": "t_tuple$__$",
                            "typeString": "tuple()"
                          }
                        },
                        "id": 1698,
                        "nodeType": "EmitStatement",
                        "src": "4505:97:4"
                      }
                    ]
                  },
                  "functionSelector": "a7bfab16",
                  "id": 1700,
                  "implemented": true,
                  "kind": "function",
                  "modifiers": [
                    {
                      "id": 1677,
                      "kind": "modifierInvocation",
                      "modifierName": {
                        "id": 1676,
                        "name": "onlyOwner",
                        "nameLocations": ["4316:9:4"],
                        "nodeType": "IdentifierPath",
                        "referencedDeclaration": 31,
                        "src": "4316:9:4"
                      },
                      "nodeType": "ModifierInvocation",
                      "src": "4316:9:4"
                    }
                  ],
                  "name": "endVotingSession",
                  "nameLocation": "4288:16:4",
                  "nodeType": "FunctionDefinition",
                  "parameters": {
                    "id": 1675,
                    "nodeType": "ParameterList",
                    "parameters": [],
                    "src": "4304:2:4"
                  },
                  "returnParameters": {
                    "id": 1678,
                    "nodeType": "ParameterList",
                    "parameters": [],
                    "src": "4326:0:4"
                  },
                  "scope": 1762,
                  "src": "4279:330:4",
                  "stateMutability": "nonpayable",
                  "virtual": false,
                  "visibility": "external"
                },
                {
                  "body": {
                    "id": 1760,
                    "nodeType": "Block",
                    "src": "4656:573:4",
                    "statements": [
                      {
                        "expression": {
                          "arguments": [
                            {
                              "commonType": {
                                "typeIdentifier": "t_enum$_WorkflowStatus_$1347",
                                "typeString": "enum VotingAlyra.WorkflowStatus"
                              },
                              "id": 1709,
                              "isConstant": false,
                              "isLValue": false,
                              "isPure": false,
                              "lValueRequested": false,
                              "leftExpression": {
                                "id": 1706,
                                "name": "workflowStatus",
                                "nodeType": "Identifier",
                                "overloadedDeclarations": [],
                                "referencedDeclaration": 1350,
                                "src": "4673:14:4",
                                "typeDescriptions": {
                                  "typeIdentifier": "t_enum$_WorkflowStatus_$1347",
                                  "typeString": "enum VotingAlyra.WorkflowStatus"
                                }
                              },
                              "nodeType": "BinaryOperation",
                              "operator": "==",
                              "rightExpression": {
                                "expression": {
                                  "id": 1707,
                                  "name": "WorkflowStatus",
                                  "nodeType": "Identifier",
                                  "overloadedDeclarations": [],
                                  "referencedDeclaration": 1347,
                                  "src": "4691:14:4",
                                  "typeDescriptions": {
                                    "typeIdentifier": "t_type$_t_enum$_WorkflowStatus_$1347_$",
                                    "typeString": "type(enum VotingAlyra.WorkflowStatus)"
                                  }
                                },
                                "id": 1708,
                                "isConstant": false,
                                "isLValue": false,
                                "isPure": true,
                                "lValueRequested": false,
                                "memberLocation": "4706:18:4",
                                "memberName": "VotingSessionEnded",
                                "nodeType": "MemberAccess",
                                "referencedDeclaration": 1345,
                                "src": "4691:33:4",
                                "typeDescriptions": {
                                  "typeIdentifier": "t_enum$_WorkflowStatus_$1347",
                                  "typeString": "enum VotingAlyra.WorkflowStatus"
                                }
                              },
                              "src": "4673:51:4",
                              "typeDescriptions": {
                                "typeIdentifier": "t_bool",
                                "typeString": "bool"
                              }
                            },
                            {
                              "hexValue": "43757272656e7420737461747573206973206e6f7420766f74696e672073657373696f6e20656e646564",
                              "id": 1710,
                              "isConstant": false,
                              "isLValue": false,
                              "isPure": true,
                              "kind": "string",
                              "lValueRequested": false,
                              "nodeType": "Literal",
                              "src": "4726:44:4",
                              "typeDescriptions": {
                                "typeIdentifier": "t_stringliteral_ea2f0cf2e21bed202157d2615233837ad8b5dafcd570b1bb5b6197e0c7e41fcc",
                                "typeString": "literal_string \"Current status is not voting session ended\""
                              },
                              "value": "Current status is not voting session ended"
                            }
                          ],
                          "expression": {
                            "argumentTypes": [
                              {
                                "typeIdentifier": "t_bool",
                                "typeString": "bool"
                              },
                              {
                                "typeIdentifier": "t_stringliteral_ea2f0cf2e21bed202157d2615233837ad8b5dafcd570b1bb5b6197e0c7e41fcc",
                                "typeString": "literal_string \"Current status is not voting session ended\""
                              }
                            ],
                            "id": 1705,
                            "name": "require",
                            "nodeType": "Identifier",
                            "overloadedDeclarations": [-18, -18],
                            "referencedDeclaration": -18,
                            "src": "4665:7:4",
                            "typeDescriptions": {
                              "typeIdentifier": "t_function_require_pure$_t_bool_$_t_string_memory_ptr_$returns$__$",
                              "typeString": "function (bool,string memory) pure"
                            }
                          },
                          "id": 1711,
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": false,
                          "kind": "functionCall",
                          "lValueRequested": false,
                          "nameLocations": [],
                          "names": [],
                          "nodeType": "FunctionCall",
                          "src": "4665:106:4",
                          "tryCall": false,
                          "typeDescriptions": {
                            "typeIdentifier": "t_tuple$__$",
                            "typeString": "tuple()"
                          }
                        },
                        "id": 1712,
                        "nodeType": "ExpressionStatement",
                        "src": "4665:106:4"
                      },
                      {
                        "assignments": [1714],
                        "declarations": [
                          {
                            "constant": false,
                            "id": 1714,
                            "mutability": "mutable",
                            "name": "_winningProposalId",
                            "nameLocation": "4785:18:4",
                            "nodeType": "VariableDeclaration",
                            "scope": 1760,
                            "src": "4780:23:4",
                            "stateVariable": false,
                            "storageLocation": "default",
                            "typeDescriptions": {
                              "typeIdentifier": "t_uint256",
                              "typeString": "uint256"
                            },
                            "typeName": {
                              "id": 1713,
                              "name": "uint",
                              "nodeType": "ElementaryTypeName",
                              "src": "4780:4:4",
                              "typeDescriptions": {
                                "typeIdentifier": "t_uint256",
                                "typeString": "uint256"
                              }
                            },
                            "visibility": "internal"
                          }
                        ],
                        "id": 1715,
                        "nodeType": "VariableDeclarationStatement",
                        "src": "4780:23:4"
                      },
                      {
                        "body": {
                          "id": 1742,
                          "nodeType": "Block",
                          "src": "4863:154:4",
                          "statements": [
                            {
                              "condition": {
                                "commonType": {
                                  "typeIdentifier": "t_uint256",
                                  "typeString": "uint256"
                                },
                                "id": 1735,
                                "isConstant": false,
                                "isLValue": false,
                                "isPure": false,
                                "lValueRequested": false,
                                "leftExpression": {
                                  "expression": {
                                    "baseExpression": {
                                      "id": 1727,
                                      "name": "proposalsArray",
                                      "nodeType": "Identifier",
                                      "overloadedDeclarations": [],
                                      "referencedDeclaration": 1354,
                                      "src": "4880:14:4",
                                      "typeDescriptions": {
                                        "typeIdentifier": "t_array$_t_struct$_Proposal_$1340_storage_$dyn_storage",
                                        "typeString": "struct VotingAlyra.Proposal storage ref[] storage ref"
                                      }
                                    },
                                    "id": 1729,
                                    "indexExpression": {
                                      "id": 1728,
                                      "name": "p",
                                      "nodeType": "Identifier",
                                      "overloadedDeclarations": [],
                                      "referencedDeclaration": 1717,
                                      "src": "4895:1:4",
                                      "typeDescriptions": {
                                        "typeIdentifier": "t_uint256",
                                        "typeString": "uint256"
                                      }
                                    },
                                    "isConstant": false,
                                    "isLValue": true,
                                    "isPure": false,
                                    "lValueRequested": false,
                                    "nodeType": "IndexAccess",
                                    "src": "4880:17:4",
                                    "typeDescriptions": {
                                      "typeIdentifier": "t_struct$_Proposal_$1340_storage",
                                      "typeString": "struct VotingAlyra.Proposal storage ref"
                                    }
                                  },
                                  "id": 1730,
                                  "isConstant": false,
                                  "isLValue": true,
                                  "isPure": false,
                                  "lValueRequested": false,
                                  "memberLocation": "4898:9:4",
                                  "memberName": "voteCount",
                                  "nodeType": "MemberAccess",
                                  "referencedDeclaration": 1339,
                                  "src": "4880:27:4",
                                  "typeDescriptions": {
                                    "typeIdentifier": "t_uint256",
                                    "typeString": "uint256"
                                  }
                                },
                                "nodeType": "BinaryOperation",
                                "operator": ">",
                                "rightExpression": {
                                  "expression": {
                                    "baseExpression": {
                                      "id": 1731,
                                      "name": "proposalsArray",
                                      "nodeType": "Identifier",
                                      "overloadedDeclarations": [],
                                      "referencedDeclaration": 1354,
                                      "src": "4910:14:4",
                                      "typeDescriptions": {
                                        "typeIdentifier": "t_array$_t_struct$_Proposal_$1340_storage_$dyn_storage",
                                        "typeString": "struct VotingAlyra.Proposal storage ref[] storage ref"
                                      }
                                    },
                                    "id": 1733,
                                    "indexExpression": {
                                      "id": 1732,
                                      "name": "_winningProposalId",
                                      "nodeType": "Identifier",
                                      "overloadedDeclarations": [],
                                      "referencedDeclaration": 1714,
                                      "src": "4925:18:4",
                                      "typeDescriptions": {
                                        "typeIdentifier": "t_uint256",
                                        "typeString": "uint256"
                                      }
                                    },
                                    "isConstant": false,
                                    "isLValue": true,
                                    "isPure": false,
                                    "lValueRequested": false,
                                    "nodeType": "IndexAccess",
                                    "src": "4910:34:4",
                                    "typeDescriptions": {
                                      "typeIdentifier": "t_struct$_Proposal_$1340_storage",
                                      "typeString": "struct VotingAlyra.Proposal storage ref"
                                    }
                                  },
                                  "id": 1734,
                                  "isConstant": false,
                                  "isLValue": true,
                                  "isPure": false,
                                  "lValueRequested": false,
                                  "memberLocation": "4945:9:4",
                                  "memberName": "voteCount",
                                  "nodeType": "MemberAccess",
                                  "referencedDeclaration": 1339,
                                  "src": "4910:44:4",
                                  "typeDescriptions": {
                                    "typeIdentifier": "t_uint256",
                                    "typeString": "uint256"
                                  }
                                },
                                "src": "4880:74:4",
                                "typeDescriptions": {
                                  "typeIdentifier": "t_bool",
                                  "typeString": "bool"
                                }
                              },
                              "id": 1741,
                              "nodeType": "IfStatement",
                              "src": "4876:132:4",
                              "trueBody": {
                                "id": 1740,
                                "nodeType": "Block",
                                "src": "4956:52:4",
                                "statements": [
                                  {
                                    "expression": {
                                      "id": 1738,
                                      "isConstant": false,
                                      "isLValue": false,
                                      "isPure": false,
                                      "lValueRequested": false,
                                      "leftHandSide": {
                                        "id": 1736,
                                        "name": "_winningProposalId",
                                        "nodeType": "Identifier",
                                        "overloadedDeclarations": [],
                                        "referencedDeclaration": 1714,
                                        "src": "4973:18:4",
                                        "typeDescriptions": {
                                          "typeIdentifier": "t_uint256",
                                          "typeString": "uint256"
                                        }
                                      },
                                      "nodeType": "Assignment",
                                      "operator": "=",
                                      "rightHandSide": {
                                        "id": 1737,
                                        "name": "p",
                                        "nodeType": "Identifier",
                                        "overloadedDeclarations": [],
                                        "referencedDeclaration": 1717,
                                        "src": "4994:1:4",
                                        "typeDescriptions": {
                                          "typeIdentifier": "t_uint256",
                                          "typeString": "uint256"
                                        }
                                      },
                                      "src": "4973:22:4",
                                      "typeDescriptions": {
                                        "typeIdentifier": "t_uint256",
                                        "typeString": "uint256"
                                      }
                                    },
                                    "id": 1739,
                                    "nodeType": "ExpressionStatement",
                                    "src": "4973:22:4"
                                  }
                                ]
                              }
                            }
                          ]
                        },
                        "condition": {
                          "commonType": {
                            "typeIdentifier": "t_uint256",
                            "typeString": "uint256"
                          },
                          "id": 1723,
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": false,
                          "lValueRequested": false,
                          "leftExpression": {
                            "id": 1720,
                            "name": "p",
                            "nodeType": "Identifier",
                            "overloadedDeclarations": [],
                            "referencedDeclaration": 1717,
                            "src": "4831:1:4",
                            "typeDescriptions": {
                              "typeIdentifier": "t_uint256",
                              "typeString": "uint256"
                            }
                          },
                          "nodeType": "BinaryOperation",
                          "operator": "<",
                          "rightExpression": {
                            "expression": {
                              "id": 1721,
                              "name": "proposalsArray",
                              "nodeType": "Identifier",
                              "overloadedDeclarations": [],
                              "referencedDeclaration": 1354,
                              "src": "4835:14:4",
                              "typeDescriptions": {
                                "typeIdentifier": "t_array$_t_struct$_Proposal_$1340_storage_$dyn_storage",
                                "typeString": "struct VotingAlyra.Proposal storage ref[] storage ref"
                              }
                            },
                            "id": 1722,
                            "isConstant": false,
                            "isLValue": false,
                            "isPure": false,
                            "lValueRequested": false,
                            "memberLocation": "4850:6:4",
                            "memberName": "length",
                            "nodeType": "MemberAccess",
                            "src": "4835:21:4",
                            "typeDescriptions": {
                              "typeIdentifier": "t_uint256",
                              "typeString": "uint256"
                            }
                          },
                          "src": "4831:25:4",
                          "typeDescriptions": {
                            "typeIdentifier": "t_bool",
                            "typeString": "bool"
                          }
                        },
                        "id": 1743,
                        "initializationExpression": {
                          "assignments": [1717],
                          "declarations": [
                            {
                              "constant": false,
                              "id": 1717,
                              "mutability": "mutable",
                              "name": "p",
                              "nameLocation": "4824:1:4",
                              "nodeType": "VariableDeclaration",
                              "scope": 1743,
                              "src": "4816:9:4",
                              "stateVariable": false,
                              "storageLocation": "default",
                              "typeDescriptions": {
                                "typeIdentifier": "t_uint256",
                                "typeString": "uint256"
                              },
                              "typeName": {
                                "id": 1716,
                                "name": "uint256",
                                "nodeType": "ElementaryTypeName",
                                "src": "4816:7:4",
                                "typeDescriptions": {
                                  "typeIdentifier": "t_uint256",
                                  "typeString": "uint256"
                                }
                              },
                              "visibility": "internal"
                            }
                          ],
                          "id": 1719,
                          "initialValue": {
                            "hexValue": "30",
                            "id": 1718,
                            "isConstant": false,
                            "isLValue": false,
                            "isPure": true,
                            "kind": "number",
                            "lValueRequested": false,
                            "nodeType": "Literal",
                            "src": "4828:1:4",
                            "typeDescriptions": {
                              "typeIdentifier": "t_rational_0_by_1",
                              "typeString": "int_const 0"
                            },
                            "value": "0"
                          },
                          "nodeType": "VariableDeclarationStatement",
                          "src": "4816:13:4"
                        },
                        "loopExpression": {
                          "expression": {
                            "id": 1725,
                            "isConstant": false,
                            "isLValue": false,
                            "isPure": false,
                            "lValueRequested": false,
                            "nodeType": "UnaryOperation",
                            "operator": "++",
                            "prefix": false,
                            "src": "4858:3:4",
                            "subExpression": {
                              "id": 1724,
                              "name": "p",
                              "nodeType": "Identifier",
                              "overloadedDeclarations": [],
                              "referencedDeclaration": 1717,
                              "src": "4858:1:4",
                              "typeDescriptions": {
                                "typeIdentifier": "t_uint256",
                                "typeString": "uint256"
                              }
                            },
                            "typeDescriptions": {
                              "typeIdentifier": "t_uint256",
                              "typeString": "uint256"
                            }
                          },
                          "id": 1726,
                          "nodeType": "ExpressionStatement",
                          "src": "4858:3:4"
                        },
                        "nodeType": "ForStatement",
                        "src": "4811:206:4"
                      },
                      {
                        "expression": {
                          "id": 1746,
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": false,
                          "lValueRequested": false,
                          "leftHandSide": {
                            "id": 1744,
                            "name": "winningProposalID",
                            "nodeType": "Identifier",
                            "overloadedDeclarations": [],
                            "referencedDeclaration": 1328,
                            "src": "5025:17:4",
                            "typeDescriptions": {
                              "typeIdentifier": "t_uint256",
                              "typeString": "uint256"
                            }
                          },
                          "nodeType": "Assignment",
                          "operator": "=",
                          "rightHandSide": {
                            "id": 1745,
                            "name": "_winningProposalId",
                            "nodeType": "Identifier",
                            "overloadedDeclarations": [],
                            "referencedDeclaration": 1714,
                            "src": "5045:18:4",
                            "typeDescriptions": {
                              "typeIdentifier": "t_uint256",
                              "typeString": "uint256"
                            }
                          },
                          "src": "5025:38:4",
                          "typeDescriptions": {
                            "typeIdentifier": "t_uint256",
                            "typeString": "uint256"
                          }
                        },
                        "id": 1747,
                        "nodeType": "ExpressionStatement",
                        "src": "5025:38:4"
                      },
                      {
                        "expression": {
                          "id": 1751,
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": false,
                          "lValueRequested": false,
                          "leftHandSide": {
                            "id": 1748,
                            "name": "workflowStatus",
                            "nodeType": "Identifier",
                            "overloadedDeclarations": [],
                            "referencedDeclaration": 1350,
                            "src": "5080:14:4",
                            "typeDescriptions": {
                              "typeIdentifier": "t_enum$_WorkflowStatus_$1347",
                              "typeString": "enum VotingAlyra.WorkflowStatus"
                            }
                          },
                          "nodeType": "Assignment",
                          "operator": "=",
                          "rightHandSide": {
                            "expression": {
                              "id": 1749,
                              "name": "WorkflowStatus",
                              "nodeType": "Identifier",
                              "overloadedDeclarations": [],
                              "referencedDeclaration": 1347,
                              "src": "5097:14:4",
                              "typeDescriptions": {
                                "typeIdentifier": "t_type$_t_enum$_WorkflowStatus_$1347_$",
                                "typeString": "type(enum VotingAlyra.WorkflowStatus)"
                              }
                            },
                            "id": 1750,
                            "isConstant": false,
                            "isLValue": false,
                            "isPure": true,
                            "lValueRequested": false,
                            "memberLocation": "5112:12:4",
                            "memberName": "VotesTallied",
                            "nodeType": "MemberAccess",
                            "referencedDeclaration": 1346,
                            "src": "5097:27:4",
                            "typeDescriptions": {
                              "typeIdentifier": "t_enum$_WorkflowStatus_$1347",
                              "typeString": "enum VotingAlyra.WorkflowStatus"
                            }
                          },
                          "src": "5080:44:4",
                          "typeDescriptions": {
                            "typeIdentifier": "t_enum$_WorkflowStatus_$1347",
                            "typeString": "enum VotingAlyra.WorkflowStatus"
                          }
                        },
                        "id": 1752,
                        "nodeType": "ExpressionStatement",
                        "src": "5080:44:4"
                      },
                      {
                        "eventCall": {
                          "arguments": [
                            {
                              "expression": {
                                "id": 1754,
                                "name": "WorkflowStatus",
                                "nodeType": "Identifier",
                                "overloadedDeclarations": [],
                                "referencedDeclaration": 1347,
                                "src": "5159:14:4",
                                "typeDescriptions": {
                                  "typeIdentifier": "t_type$_t_enum$_WorkflowStatus_$1347_$",
                                  "typeString": "type(enum VotingAlyra.WorkflowStatus)"
                                }
                              },
                              "id": 1755,
                              "isConstant": false,
                              "isLValue": false,
                              "isPure": true,
                              "lValueRequested": false,
                              "memberLocation": "5174:18:4",
                              "memberName": "VotingSessionEnded",
                              "nodeType": "MemberAccess",
                              "referencedDeclaration": 1345,
                              "src": "5159:33:4",
                              "typeDescriptions": {
                                "typeIdentifier": "t_enum$_WorkflowStatus_$1347",
                                "typeString": "enum VotingAlyra.WorkflowStatus"
                              }
                            },
                            {
                              "expression": {
                                "id": 1756,
                                "name": "WorkflowStatus",
                                "nodeType": "Identifier",
                                "overloadedDeclarations": [],
                                "referencedDeclaration": 1347,
                                "src": "5194:14:4",
                                "typeDescriptions": {
                                  "typeIdentifier": "t_type$_t_enum$_WorkflowStatus_$1347_$",
                                  "typeString": "type(enum VotingAlyra.WorkflowStatus)"
                                }
                              },
                              "id": 1757,
                              "isConstant": false,
                              "isLValue": false,
                              "isPure": true,
                              "lValueRequested": false,
                              "memberLocation": "5209:12:4",
                              "memberName": "VotesTallied",
                              "nodeType": "MemberAccess",
                              "referencedDeclaration": 1346,
                              "src": "5194:27:4",
                              "typeDescriptions": {
                                "typeIdentifier": "t_enum$_WorkflowStatus_$1347",
                                "typeString": "enum VotingAlyra.WorkflowStatus"
                              }
                            }
                          ],
                          "expression": {
                            "argumentTypes": [
                              {
                                "typeIdentifier": "t_enum$_WorkflowStatus_$1347",
                                "typeString": "enum VotingAlyra.WorkflowStatus"
                              },
                              {
                                "typeIdentifier": "t_enum$_WorkflowStatus_$1347",
                                "typeString": "enum VotingAlyra.WorkflowStatus"
                              }
                            ],
                            "id": 1753,
                            "name": "WorkflowStatusChange",
                            "nodeType": "Identifier",
                            "overloadedDeclarations": [],
                            "referencedDeclaration": 1371,
                            "src": "5138:20:4",
                            "typeDescriptions": {
                              "typeIdentifier": "t_function_event_nonpayable$_t_enum$_WorkflowStatus_$1347_$_t_enum$_WorkflowStatus_$1347_$returns$__$",
                              "typeString": "function (enum VotingAlyra.WorkflowStatus,enum VotingAlyra.WorkflowStatus)"
                            }
                          },
                          "id": 1758,
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": false,
                          "kind": "functionCall",
                          "lValueRequested": false,
                          "nameLocations": [],
                          "names": [],
                          "nodeType": "FunctionCall",
                          "src": "5138:84:4",
                          "tryCall": false,
                          "typeDescriptions": {
                            "typeIdentifier": "t_tuple$__$",
                            "typeString": "tuple()"
                          }
                        },
                        "id": 1759,
                        "nodeType": "EmitStatement",
                        "src": "5133:89:4"
                      }
                    ]
                  },
                  "functionSelector": "378a2178",
                  "id": 1761,
                  "implemented": true,
                  "kind": "function",
                  "modifiers": [
                    {
                      "id": 1703,
                      "kind": "modifierInvocation",
                      "modifierName": {
                        "id": 1702,
                        "name": "onlyOwner",
                        "nameLocations": ["4646:9:4"],
                        "nodeType": "IdentifierPath",
                        "referencedDeclaration": 31,
                        "src": "4646:9:4"
                      },
                      "nodeType": "ModifierInvocation",
                      "src": "4646:9:4"
                    }
                  ],
                  "name": "tallyVotes",
                  "nameLocation": "4624:10:4",
                  "nodeType": "FunctionDefinition",
                  "parameters": {
                    "id": 1701,
                    "nodeType": "ParameterList",
                    "parameters": [],
                    "src": "4634:2:4"
                  },
                  "returnParameters": {
                    "id": 1704,
                    "nodeType": "ParameterList",
                    "parameters": [],
                    "src": "4656:0:4"
                  },
                  "scope": 1762,
                  "src": "4615:614:4",
                  "stateMutability": "nonpayable",
                  "virtual": false,
                  "visibility": "external"
                }
              ],
              "scope": 1763,
              "src": "112:5119:4",
              "usedErrors": []
            }
          ],
          "src": "33:5198:4"
        },
        "id": 4
      }
    },
    "contracts": {
      "@openzeppelin/contracts/access/Ownable.sol": {
        "Ownable": {
          "abi": [
            {
              "anonymous": false,
              "inputs": [
                {
                  "indexed": true,
                  "internalType": "address",
                  "name": "previousOwner",
                  "type": "address"
                },
                {
                  "indexed": true,
                  "internalType": "address",
                  "name": "newOwner",
                  "type": "address"
                }
              ],
              "name": "OwnershipTransferred",
              "type": "event"
            },
            {
              "inputs": [],
              "name": "owner",
              "outputs": [
                { "internalType": "address", "name": "", "type": "address" }
              ],
              "stateMutability": "view",
              "type": "function"
            },
            {
              "inputs": [],
              "name": "renounceOwnership",
              "outputs": [],
              "stateMutability": "nonpayable",
              "type": "function"
            },
            {
              "inputs": [
                {
                  "internalType": "address",
                  "name": "newOwner",
                  "type": "address"
                }
              ],
              "name": "transferOwnership",
              "outputs": [],
              "stateMutability": "nonpayable",
              "type": "function"
            }
          ],
          "devdoc": {
            "details": "Contract module which provides a basic access control mechanism, where there is an account (an owner) that can be granted exclusive access to specific functions. By default, the owner account will be the one that deploys the contract. This can later be changed with {transferOwnership}. This module is used through inheritance. It will make available the modifier `onlyOwner`, which can be applied to your functions to restrict their use to the owner.",
            "kind": "dev",
            "methods": {
              "constructor": {
                "details": "Initializes the contract setting the deployer as the initial owner."
              },
              "owner()": {
                "details": "Returns the address of the current owner."
              },
              "renounceOwnership()": {
                "details": "Leaves the contract without owner. It will not be possible to call `onlyOwner` functions anymore. Can only be called by the current owner. NOTE: Renouncing ownership will leave the contract without an owner, thereby removing any functionality that is only available to the owner."
              },
              "transferOwnership(address)": {
                "details": "Transfers ownership of the contract to a new account (`newOwner`). Can only be called by the current owner."
              }
            },
            "version": 1
          },
          "evm": {
            "bytecode": {
              "functionDebugData": {},
              "generatedSources": [],
              "linkReferences": {},
              "object": "",
              "opcodes": "",
              "sourceMap": ""
            },
            "deployedBytecode": {
              "functionDebugData": {},
              "generatedSources": [],
              "immutableReferences": {},
              "linkReferences": {},
              "object": "",
              "opcodes": "",
              "sourceMap": ""
            },
            "gasEstimates": null,
            "methodIdentifiers": {
              "owner()": "8da5cb5b",
              "renounceOwnership()": "715018a6",
              "transferOwnership(address)": "f2fde38b"
            }
          },
          "metadata": "{\"compiler\":{\"version\":\"0.8.17+commit.8df45f5f\"},\"language\":\"Solidity\",\"output\":{\"abi\":[{\"anonymous\":false,\"inputs\":[{\"indexed\":true,\"internalType\":\"address\",\"name\":\"previousOwner\",\"type\":\"address\"},{\"indexed\":true,\"internalType\":\"address\",\"name\":\"newOwner\",\"type\":\"address\"}],\"name\":\"OwnershipTransferred\",\"type\":\"event\"},{\"inputs\":[],\"name\":\"owner\",\"outputs\":[{\"internalType\":\"address\",\"name\":\"\",\"type\":\"address\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"renounceOwnership\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"newOwner\",\"type\":\"address\"}],\"name\":\"transferOwnership\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"}],\"devdoc\":{\"details\":\"Contract module which provides a basic access control mechanism, where there is an account (an owner) that can be granted exclusive access to specific functions. By default, the owner account will be the one that deploys the contract. This can later be changed with {transferOwnership}. This module is used through inheritance. It will make available the modifier `onlyOwner`, which can be applied to your functions to restrict their use to the owner.\",\"kind\":\"dev\",\"methods\":{\"constructor\":{\"details\":\"Initializes the contract setting the deployer as the initial owner.\"},\"owner()\":{\"details\":\"Returns the address of the current owner.\"},\"renounceOwnership()\":{\"details\":\"Leaves the contract without owner. It will not be possible to call `onlyOwner` functions anymore. Can only be called by the current owner. NOTE: Renouncing ownership will leave the contract without an owner, thereby removing any functionality that is only available to the owner.\"},\"transferOwnership(address)\":{\"details\":\"Transfers ownership of the contract to a new account (`newOwner`). Can only be called by the current owner.\"}},\"version\":1},\"userdoc\":{\"kind\":\"user\",\"methods\":{},\"version\":1}},\"settings\":{\"compilationTarget\":{\"@openzeppelin/contracts/access/Ownable.sol\":\"Ownable\"},\"evmVersion\":\"london\",\"libraries\":{},\"metadata\":{\"bytecodeHash\":\"ipfs\",\"useLiteralContent\":true},\"optimizer\":{\"enabled\":true,\"runs\":200},\"remappings\":[]},\"sources\":{\"@openzeppelin/contracts/access/Ownable.sol\":{\"content\":\"// SPDX-License-Identifier: MIT\\n// OpenZeppelin Contracts (last updated v4.7.0) (access/Ownable.sol)\\n\\npragma solidity ^0.8.0;\\n\\nimport \\\"../utils/Context.sol\\\";\\n\\n/**\\n * @dev Contract module which provides a basic access control mechanism, where\\n * there is an account (an owner) that can be granted exclusive access to\\n * specific functions.\\n *\\n * By default, the owner account will be the one that deploys the contract. This\\n * can later be changed with {transferOwnership}.\\n *\\n * This module is used through inheritance. It will make available the modifier\\n * `onlyOwner`, which can be applied to your functions to restrict their use to\\n * the owner.\\n */\\nabstract contract Ownable is Context {\\n    address private _owner;\\n\\n    event OwnershipTransferred(address indexed previousOwner, address indexed newOwner);\\n\\n    /**\\n     * @dev Initializes the contract setting the deployer as the initial owner.\\n     */\\n    constructor() {\\n        _transferOwnership(_msgSender());\\n    }\\n\\n    /**\\n     * @dev Throws if called by any account other than the owner.\\n     */\\n    modifier onlyOwner() {\\n        _checkOwner();\\n        _;\\n    }\\n\\n    /**\\n     * @dev Returns the address of the current owner.\\n     */\\n    function owner() public view virtual returns (address) {\\n        return _owner;\\n    }\\n\\n    /**\\n     * @dev Throws if the sender is not the owner.\\n     */\\n    function _checkOwner() internal view virtual {\\n        require(owner() == _msgSender(), \\\"Ownable: caller is not the owner\\\");\\n    }\\n\\n    /**\\n     * @dev Leaves the contract without owner. It will not be possible to call\\n     * `onlyOwner` functions anymore. Can only be called by the current owner.\\n     *\\n     * NOTE: Renouncing ownership will leave the contract without an owner,\\n     * thereby removing any functionality that is only available to the owner.\\n     */\\n    function renounceOwnership() public virtual onlyOwner {\\n        _transferOwnership(address(0));\\n    }\\n\\n    /**\\n     * @dev Transfers ownership of the contract to a new account (`newOwner`).\\n     * Can only be called by the current owner.\\n     */\\n    function transferOwnership(address newOwner) public virtual onlyOwner {\\n        require(newOwner != address(0), \\\"Ownable: new owner is the zero address\\\");\\n        _transferOwnership(newOwner);\\n    }\\n\\n    /**\\n     * @dev Transfers ownership of the contract to a new account (`newOwner`).\\n     * Internal function without access restriction.\\n     */\\n    function _transferOwnership(address newOwner) internal virtual {\\n        address oldOwner = _owner;\\n        _owner = newOwner;\\n        emit OwnershipTransferred(oldOwner, newOwner);\\n    }\\n}\\n\",\"keccak256\":\"0xa94b34880e3c1b0b931662cb1c09e5dfa6662f31cba80e07c5ee71cd135c9673\",\"license\":\"MIT\"},\"@openzeppelin/contracts/utils/Context.sol\":{\"content\":\"// SPDX-License-Identifier: MIT\\n// OpenZeppelin Contracts v4.4.1 (utils/Context.sol)\\n\\npragma solidity ^0.8.0;\\n\\n/**\\n * @dev Provides information about the current execution context, including the\\n * sender of the transaction and its data. While these are generally available\\n * via msg.sender and msg.data, they should not be accessed in such a direct\\n * manner, since when dealing with meta-transactions the account sending and\\n * paying for execution may not be the actual sender (as far as an application\\n * is concerned).\\n *\\n * This contract is only required for intermediate, library-like contracts.\\n */\\nabstract contract Context {\\n    function _msgSender() internal view virtual returns (address) {\\n        return msg.sender;\\n    }\\n\\n    function _msgData() internal view virtual returns (bytes calldata) {\\n        return msg.data;\\n    }\\n}\\n\",\"keccak256\":\"0xe2e337e6dde9ef6b680e07338c493ebea1b5fd09b43424112868e9cc1706bca7\",\"license\":\"MIT\"}},\"version\":1}",
          "storageLayout": {
            "storage": [
              {
                "astId": 7,
                "contract": "@openzeppelin/contracts/access/Ownable.sol:Ownable",
                "label": "_owner",
                "offset": 0,
                "slot": "0",
                "type": "t_address"
              }
            ],
            "types": {
              "t_address": {
                "encoding": "inplace",
                "label": "address",
                "numberOfBytes": "20"
              }
            }
          },
          "userdoc": { "kind": "user", "methods": {}, "version": 1 }
        }
      },
      "@openzeppelin/contracts/utils/Context.sol": {
        "Context": {
          "abi": [],
          "devdoc": {
            "details": "Provides information about the current execution context, including the sender of the transaction and its data. While these are generally available via msg.sender and msg.data, they should not be accessed in such a direct manner, since when dealing with meta-transactions the account sending and paying for execution may not be the actual sender (as far as an application is concerned). This contract is only required for intermediate, library-like contracts.",
            "kind": "dev",
            "methods": {},
            "version": 1
          },
          "evm": {
            "bytecode": {
              "functionDebugData": {},
              "generatedSources": [],
              "linkReferences": {},
              "object": "",
              "opcodes": "",
              "sourceMap": ""
            },
            "deployedBytecode": {
              "functionDebugData": {},
              "generatedSources": [],
              "immutableReferences": {},
              "linkReferences": {},
              "object": "",
              "opcodes": "",
              "sourceMap": ""
            },
            "gasEstimates": null,
            "methodIdentifiers": {}
          },
          "metadata": "{\"compiler\":{\"version\":\"0.8.17+commit.8df45f5f\"},\"language\":\"Solidity\",\"output\":{\"abi\":[],\"devdoc\":{\"details\":\"Provides information about the current execution context, including the sender of the transaction and its data. While these are generally available via msg.sender and msg.data, they should not be accessed in such a direct manner, since when dealing with meta-transactions the account sending and paying for execution may not be the actual sender (as far as an application is concerned). This contract is only required for intermediate, library-like contracts.\",\"kind\":\"dev\",\"methods\":{},\"version\":1},\"userdoc\":{\"kind\":\"user\",\"methods\":{},\"version\":1}},\"settings\":{\"compilationTarget\":{\"@openzeppelin/contracts/utils/Context.sol\":\"Context\"},\"evmVersion\":\"london\",\"libraries\":{},\"metadata\":{\"bytecodeHash\":\"ipfs\",\"useLiteralContent\":true},\"optimizer\":{\"enabled\":true,\"runs\":200},\"remappings\":[]},\"sources\":{\"@openzeppelin/contracts/utils/Context.sol\":{\"content\":\"// SPDX-License-Identifier: MIT\\n// OpenZeppelin Contracts v4.4.1 (utils/Context.sol)\\n\\npragma solidity ^0.8.0;\\n\\n/**\\n * @dev Provides information about the current execution context, including the\\n * sender of the transaction and its data. While these are generally available\\n * via msg.sender and msg.data, they should not be accessed in such a direct\\n * manner, since when dealing with meta-transactions the account sending and\\n * paying for execution may not be the actual sender (as far as an application\\n * is concerned).\\n *\\n * This contract is only required for intermediate, library-like contracts.\\n */\\nabstract contract Context {\\n    function _msgSender() internal view virtual returns (address) {\\n        return msg.sender;\\n    }\\n\\n    function _msgData() internal view virtual returns (bytes calldata) {\\n        return msg.data;\\n    }\\n}\\n\",\"keccak256\":\"0xe2e337e6dde9ef6b680e07338c493ebea1b5fd09b43424112868e9cc1706bca7\",\"license\":\"MIT\"}},\"version\":1}",
          "storageLayout": { "storage": [], "types": null },
          "userdoc": { "kind": "user", "methods": {}, "version": 1 }
        }
      },
      "@openzeppelin/contracts/utils/Strings.sol": {
        "Strings": {
          "abi": [],
          "devdoc": {
            "details": "String operations.",
            "kind": "dev",
            "methods": {},
            "version": 1
          },
          "evm": {
            "bytecode": {
              "functionDebugData": {},
              "generatedSources": [],
              "linkReferences": {},
              "object": "60566037600b82828239805160001a607314602a57634e487b7160e01b600052600060045260246000fd5b30600052607381538281f3fe73000000000000000000000000000000000000000030146080604052600080fdfea26469706673582212200cc627a96c5f2215617af4cb199c41eb5bf36afbdf48c1815b7b97c0cc68169d64736f6c63430008110033",
              "opcodes": "PUSH1 0x56 PUSH1 0x37 PUSH1 0xB DUP3 DUP3 DUP3 CODECOPY DUP1 MLOAD PUSH1 0x0 BYTE PUSH1 0x73 EQ PUSH1 0x2A JUMPI PUSH4 0x4E487B71 PUSH1 0xE0 SHL PUSH1 0x0 MSTORE PUSH1 0x0 PUSH1 0x4 MSTORE PUSH1 0x24 PUSH1 0x0 REVERT JUMPDEST ADDRESS PUSH1 0x0 MSTORE PUSH1 0x73 DUP2 MSTORE8 DUP3 DUP2 RETURN INVALID PUSH20 0x0 ADDRESS EQ PUSH1 0x80 PUSH1 0x40 MSTORE PUSH1 0x0 DUP1 REVERT INVALID LOG2 PUSH5 0x6970667358 0x22 SLT KECCAK256 0xC 0xC6 0x27 0xA9 PUSH13 0x5F2215617AF4CB199C41EB5BF3 PUSH11 0xFBDF48C1815B7B97C0CC68 AND SWAP14 PUSH5 0x736F6C6343 STOP ADDMOD GT STOP CALLER ",
              "sourceMap": "161:2235:2:-:0;;;;;;;;;;;;;;;-1:-1:-1;;;161:2235:2;;;;;;;;;;;;;;;;;"
            },
            "deployedBytecode": {
              "functionDebugData": {},
              "generatedSources": [],
              "immutableReferences": {},
              "linkReferences": {},
              "object": "73000000000000000000000000000000000000000030146080604052600080fdfea26469706673582212200cc627a96c5f2215617af4cb199c41eb5bf36afbdf48c1815b7b97c0cc68169d64736f6c63430008110033",
              "opcodes": "PUSH20 0x0 ADDRESS EQ PUSH1 0x80 PUSH1 0x40 MSTORE PUSH1 0x0 DUP1 REVERT INVALID LOG2 PUSH5 0x6970667358 0x22 SLT KECCAK256 0xC 0xC6 0x27 0xA9 PUSH13 0x5F2215617AF4CB199C41EB5BF3 PUSH11 0xFBDF48C1815B7B97C0CC68 AND SWAP14 PUSH5 0x736F6C6343 STOP ADDMOD GT STOP CALLER ",
              "sourceMap": "161:2235:2:-:0;;;;;;;;"
            },
            "gasEstimates": {
              "creation": {
                "codeDepositCost": "17200",
                "executionCost": "103",
                "totalCost": "17303"
              },
              "internal": {
                "toHexString(address)": "infinite",
                "toHexString(uint256)": "infinite",
                "toHexString(uint256,uint256)": "infinite",
                "toString(uint256)": "infinite"
              }
            },
            "methodIdentifiers": {}
          },
          "metadata": "{\"compiler\":{\"version\":\"0.8.17+commit.8df45f5f\"},\"language\":\"Solidity\",\"output\":{\"abi\":[],\"devdoc\":{\"details\":\"String operations.\",\"kind\":\"dev\",\"methods\":{},\"version\":1},\"userdoc\":{\"kind\":\"user\",\"methods\":{},\"version\":1}},\"settings\":{\"compilationTarget\":{\"@openzeppelin/contracts/utils/Strings.sol\":\"Strings\"},\"evmVersion\":\"london\",\"libraries\":{},\"metadata\":{\"bytecodeHash\":\"ipfs\",\"useLiteralContent\":true},\"optimizer\":{\"enabled\":true,\"runs\":200},\"remappings\":[]},\"sources\":{\"@openzeppelin/contracts/utils/Strings.sol\":{\"content\":\"// SPDX-License-Identifier: MIT\\n// OpenZeppelin Contracts (last updated v4.7.0) (utils/Strings.sol)\\n\\npragma solidity ^0.8.0;\\n\\n/**\\n * @dev String operations.\\n */\\nlibrary Strings {\\n    bytes16 private constant _HEX_SYMBOLS = \\\"0123456789abcdef\\\";\\n    uint8 private constant _ADDRESS_LENGTH = 20;\\n\\n    /**\\n     * @dev Converts a `uint256` to its ASCII `string` decimal representation.\\n     */\\n    function toString(uint256 value) internal pure returns (string memory) {\\n        // Inspired by OraclizeAPI's implementation - MIT licence\\n        // https://github.com/oraclize/ethereum-api/blob/b42146b063c7d6ee1358846c198246239e9360e8/oraclizeAPI_0.4.25.sol\\n\\n        if (value == 0) {\\n            return \\\"0\\\";\\n        }\\n        uint256 temp = value;\\n        uint256 digits;\\n        while (temp != 0) {\\n            digits++;\\n            temp /= 10;\\n        }\\n        bytes memory buffer = new bytes(digits);\\n        while (value != 0) {\\n            digits -= 1;\\n            buffer[digits] = bytes1(uint8(48 + uint256(value % 10)));\\n            value /= 10;\\n        }\\n        return string(buffer);\\n    }\\n\\n    /**\\n     * @dev Converts a `uint256` to its ASCII `string` hexadecimal representation.\\n     */\\n    function toHexString(uint256 value) internal pure returns (string memory) {\\n        if (value == 0) {\\n            return \\\"0x00\\\";\\n        }\\n        uint256 temp = value;\\n        uint256 length = 0;\\n        while (temp != 0) {\\n            length++;\\n            temp >>= 8;\\n        }\\n        return toHexString(value, length);\\n    }\\n\\n    /**\\n     * @dev Converts a `uint256` to its ASCII `string` hexadecimal representation with fixed length.\\n     */\\n    function toHexString(uint256 value, uint256 length) internal pure returns (string memory) {\\n        bytes memory buffer = new bytes(2 * length + 2);\\n        buffer[0] = \\\"0\\\";\\n        buffer[1] = \\\"x\\\";\\n        for (uint256 i = 2 * length + 1; i > 1; --i) {\\n            buffer[i] = _HEX_SYMBOLS[value & 0xf];\\n            value >>= 4;\\n        }\\n        require(value == 0, \\\"Strings: hex length insufficient\\\");\\n        return string(buffer);\\n    }\\n\\n    /**\\n     * @dev Converts an `address` with fixed length of 20 bytes to its not checksummed ASCII `string` hexadecimal representation.\\n     */\\n    function toHexString(address addr) internal pure returns (string memory) {\\n        return toHexString(uint256(uint160(addr)), _ADDRESS_LENGTH);\\n    }\\n}\\n\",\"keccak256\":\"0xaf159a8b1923ad2a26d516089bceca9bdeaeacd04be50983ea00ba63070f08a3\",\"license\":\"MIT\"}},\"version\":1}",
          "storageLayout": { "storage": [], "types": null },
          "userdoc": { "kind": "user", "methods": {}, "version": 1 }
        }
      },
      "contracts/Voting.sol": {
        "Voting": {
          "abi": [
            {
              "anonymous": false,
              "inputs": [
                {
                  "indexed": true,
                  "internalType": "address",
                  "name": "previousOwner",
                  "type": "address"
                },
                {
                  "indexed": true,
                  "internalType": "address",
                  "name": "newOwner",
                  "type": "address"
                }
              ],
              "name": "OwnershipTransferred",
              "type": "event"
            },
            {
              "anonymous": false,
              "inputs": [
                {
                  "indexed": true,
                  "internalType": "uint256",
                  "name": "sessionId",
                  "type": "uint256"
                },
                {
                  "indexed": false,
                  "internalType": "uint8",
                  "name": "proposalId",
                  "type": "uint8"
                },
                {
                  "indexed": false,
                  "internalType": "string",
                  "name": "description",
                  "type": "string"
                }
              ],
              "name": "ProposalRegistered",
              "type": "event"
            },
            {
              "anonymous": false,
              "inputs": [
                {
                  "indexed": true,
                  "internalType": "uint256",
                  "name": "sessionId",
                  "type": "uint256"
                },
                {
                  "indexed": false,
                  "internalType": "string",
                  "name": "name",
                  "type": "string"
                },
                {
                  "indexed": false,
                  "internalType": "string",
                  "name": "description",
                  "type": "string"
                }
              ],
              "name": "SessionCreated",
              "type": "event"
            },
            {
              "anonymous": false,
              "inputs": [
                {
                  "indexed": true,
                  "internalType": "uint256",
                  "name": "sessionId",
                  "type": "uint256"
                },
                {
                  "indexed": false,
                  "internalType": "address",
                  "name": "voter",
                  "type": "address"
                }
              ],
              "name": "Voted",
              "type": "event"
            },
            {
              "anonymous": false,
              "inputs": [
                {
                  "indexed": true,
                  "internalType": "uint256",
                  "name": "sessionId",
                  "type": "uint256"
                },
                {
                  "indexed": false,
                  "internalType": "address",
                  "name": "voterAddress",
                  "type": "address"
                }
              ],
              "name": "VoterRegistered",
              "type": "event"
            },
            {
              "anonymous": false,
              "inputs": [
                {
                  "indexed": true,
                  "internalType": "uint256",
                  "name": "sessionId",
                  "type": "uint256"
                },
                {
                  "indexed": false,
                  "internalType": "uint256",
                  "name": "votersCount",
                  "type": "uint256"
                },
                {
                  "indexed": false,
                  "internalType": "uint256",
                  "name": "totalVotes",
                  "type": "uint256"
                },
                {
                  "indexed": false,
                  "internalType": "uint256",
                  "name": "blankVotes",
                  "type": "uint256"
                },
                {
                  "indexed": false,
                  "internalType": "uint256",
                  "name": "abstention",
                  "type": "uint256"
                },
                {
                  "components": [
                    {
                      "internalType": "string",
                      "name": "description",
                      "type": "string"
                    },
                    {
                      "internalType": "uint256",
                      "name": "voteCount",
                      "type": "uint256"
                    },
                    {
                      "internalType": "address",
                      "name": "proposer",
                      "type": "address"
                    }
                  ],
                  "indexed": false,
                  "internalType": "struct Voting.Proposal[]",
                  "name": "winningProposals",
                  "type": "tuple[]"
                }
              ],
              "name": "VotesTallied",
              "type": "event"
            },
            {
              "anonymous": false,
              "inputs": [
                {
                  "indexed": true,
                  "internalType": "uint256",
                  "name": "sessionId",
                  "type": "uint256"
                },
                {
                  "indexed": false,
                  "internalType": "enum Voting.WorkflowStatus",
                  "name": "previousStatus",
                  "type": "uint8"
                },
                {
                  "indexed": false,
                  "internalType": "enum Voting.WorkflowStatus",
                  "name": "newStatus",
                  "type": "uint8"
                }
              ],
              "name": "WorkflowStatusChange",
              "type": "event"
            },
            {
              "inputs": [
                { "internalType": "string", "name": "_name", "type": "string" },
                {
                  "internalType": "string",
                  "name": "_description",
                  "type": "string"
                }
              ],
              "name": "createVotingSession",
              "outputs": [],
              "stateMutability": "nonpayable",
              "type": "function"
            },
            {
              "inputs": [
                {
                  "internalType": "uint256",
                  "name": "_sessionId",
                  "type": "uint256"
                },
                {
                  "internalType": "address",
                  "name": "_voter",
                  "type": "address"
                }
              ],
              "name": "getVote",
              "outputs": [
                { "internalType": "uint8", "name": "", "type": "uint8" }
              ],
              "stateMutability": "view",
              "type": "function"
            },
            {
              "inputs": [
                {
                  "internalType": "uint256",
                  "name": "_sessionId",
                  "type": "uint256"
                }
              ],
              "name": "getWinners",
              "outputs": [
                {
                  "components": [
                    {
                      "internalType": "string",
                      "name": "description",
                      "type": "string"
                    },
                    {
                      "internalType": "uint256",
                      "name": "voteCount",
                      "type": "uint256"
                    },
                    {
                      "internalType": "address",
                      "name": "proposer",
                      "type": "address"
                    }
                  ],
                  "internalType": "struct Voting.Proposal[]",
                  "name": "",
                  "type": "tuple[]"
                }
              ],
              "stateMutability": "view",
              "type": "function"
            },
            {
              "inputs": [],
              "name": "owner",
              "outputs": [
                { "internalType": "address", "name": "", "type": "address" }
              ],
              "stateMutability": "view",
              "type": "function"
            },
            {
              "inputs": [
                {
                  "internalType": "uint256",
                  "name": "_sessionId",
                  "type": "uint256"
                },
                {
                  "internalType": "string",
                  "name": "_description",
                  "type": "string"
                }
              ],
              "name": "registerProposal",
              "outputs": [],
              "stateMutability": "nonpayable",
              "type": "function"
            },
            {
              "inputs": [
                {
                  "internalType": "uint256",
                  "name": "_sessionId",
                  "type": "uint256"
                },
                {
                  "internalType": "address",
                  "name": "_voter",
                  "type": "address"
                }
              ],
              "name": "registerVoter",
              "outputs": [],
              "stateMutability": "nonpayable",
              "type": "function"
            },
            {
              "inputs": [],
              "name": "renounceOwnership",
              "outputs": [],
              "stateMutability": "nonpayable",
              "type": "function"
            },
            {
              "inputs": [
                {
                  "internalType": "uint256",
                  "name": "_sessionId",
                  "type": "uint256"
                }
              ],
              "name": "startProposalsRegistration",
              "outputs": [],
              "stateMutability": "nonpayable",
              "type": "function"
            },
            {
              "inputs": [
                {
                  "internalType": "uint256",
                  "name": "_sessionId",
                  "type": "uint256"
                }
              ],
              "name": "startVotingSession",
              "outputs": [],
              "stateMutability": "nonpayable",
              "type": "function"
            },
            {
              "inputs": [
                {
                  "internalType": "uint256",
                  "name": "_sessionId",
                  "type": "uint256"
                }
              ],
              "name": "stopProposalsRegistration",
              "outputs": [],
              "stateMutability": "nonpayable",
              "type": "function"
            },
            {
              "inputs": [
                {
                  "internalType": "uint256",
                  "name": "_sessionId",
                  "type": "uint256"
                }
              ],
              "name": "stopVotingSession",
              "outputs": [],
              "stateMutability": "nonpayable",
              "type": "function"
            },
            {
              "inputs": [
                {
                  "internalType": "uint256",
                  "name": "_sessionId",
                  "type": "uint256"
                }
              ],
              "name": "tallyVotes",
              "outputs": [],
              "stateMutability": "nonpayable",
              "type": "function"
            },
            {
              "inputs": [
                {
                  "internalType": "address",
                  "name": "newOwner",
                  "type": "address"
                }
              ],
              "name": "transferOwnership",
              "outputs": [],
              "stateMutability": "nonpayable",
              "type": "function"
            },
            {
              "inputs": [
                {
                  "internalType": "uint256",
                  "name": "_sessionId",
                  "type": "uint256"
                },
                {
                  "internalType": "uint8",
                  "name": "_proposalId",
                  "type": "uint8"
                }
              ],
              "name": "vote",
              "outputs": [],
              "stateMutability": "nonpayable",
              "type": "function"
            }
          ],
          "devdoc": {
            "author": "Teddy Chambard",
            "details": "Only the contract owner is able to create new voting session. The contract owner is also able to change the session status and activate next session steps. The word `Administrator` in contract documentation corresponds to contract owner. /!\\ BONUS: I took some decisions to change initial specifications to improve the features available in the exercice: 1) Many voting sessions can be created and evolve in parallel 2) Votes are kept secret until the end of session, then every votes become accessible to voters and contract owner 3) Every events expose sessionId as first parameter 4) `Voted` event does not expose chosen proposal ID in order to keep votes secret until the end of the session 5) A session is limited to 256 proposals 6) Two proposals are registered by default in every session: abstention and blank vote 7) A voter can not do more than 3 proposals by session 6) A voter can not vote for its own proposals 7) A vote session can terminate with equality if many proposals obtain same number of votes",
            "events": {
              "ProposalRegistered(uint256,uint8,string)": {
                "details": "I decided to add description into ProposalRegistered event in order to expose proposals during the voting session without the vote count. By this way voters are able to retrieve proposal information but they can not access to each proposal vote count before the end ot the session."
              },
              "SessionCreated(uint256,string,string)": {
                "details": "All events signatures integrate sessionId parameter that was not required in specification"
              },
              "Voted(uint256,address)": {
                "details": "I decided to remove proposalId from Voted event despite the specification as  I think no one should be able to see voters choice before the end of voting session"
              }
            },
            "kind": "dev",
            "methods": {
              "createVotingSession(string,string)": {
                "params": {
                  "_description": "The session description ",
                  "_name": "The session name "
                }
              },
              "getVote(uint256,address)": {
                "details": "Administrator and registered voters can all access to everybody votes but only at the end of voting session. ",
                "params": {
                  "_sessionId": "The session identifier",
                  "_voter": "The voter address"
                },
                "returns": { "_0": "uint8 target voter proposal choice" }
              },
              "getWinners(uint256)": {
                "details": "Administrator and registered voters can retreive winning proposals but only at the end of voting session. ",
                "returns": { "_0": "Proposal[] The winning proposals" }
              },
              "owner()": {
                "details": "Returns the address of the current owner."
              },
              "registerProposal(uint256,string)": {
                "details": "Each voter can register many proposals. As the vote is considered to be done in small organization context, the maximum number of proposals is limited to 256. Maximum number of proposals per voter is also limited to 3. A vote can be added only by registered voter when status is set to VotingSessionStarted ",
                "params": {
                  "_description": "The proposal description",
                  "_sessionId": "The session identifier"
                }
              },
              "registerVoter(uint256,address)": {
                "details": "voters can be added only by contract owner when status is set to RegisteringVoters An event VoterRegistered is emitted ",
                "params": {
                  "_sessionId": "The session identifier ",
                  "_voter": "The address to add into voters registry"
                }
              },
              "renounceOwnership()": {
                "details": "Leaves the contract without owner. It will not be possible to call `onlyOwner` functions anymore. Can only be called by the current owner. NOTE: Renouncing ownership will leave the contract without an owner, thereby removing any functionality that is only available to the owner."
              },
              "startProposalsRegistration(uint256)": {
                "details": "Can be called only when status is set to RegisteringVoters. Two default proposals are registered at the beginning of this step: `Abstention` and `Blank`. That means a registered voter that forget to vote will be counted as `abstention` thanks to `proposals` array index 0 An event WorkflowStatusChange is emitted",
                "params": { "_sessionId": "The session identifier " }
              },
              "startVotingSession(uint256)": {
                "details": "Can be called only when status is set to ProposalsRegistrationEnded. An event WorkflowStatusChange is emitted",
                "params": { "_sessionId": "The session identifier " }
              },
              "stopProposalsRegistration(uint256)": {
                "details": "Can be called only when status is set to ProposalsRegistrationStarted. An event WorkflowStatusChange is emitted",
                "params": { "_sessionId": "The session identifier " }
              },
              "stopVotingSession(uint256)": {
                "details": "Can be called only when status is set to VotingSessionStarted. An event WorkflowStatusChange is emitted",
                "params": { "_sessionId": "The session identifier " }
              },
              "tallyVotes(uint256)": {
                "details": "After votes talling, it is possible that we got many winning proposals. Votes talling can be triggered only by contract owner when voting session status is set to VotingSessionEnded An event WorkflowStatusChange is emitted",
                "params": { "_sessionId": "The session identifier " }
              },
              "transferOwnership(address)": {
                "details": "Transfers ownership of the contract to a new account (`newOwner`). Can only be called by the current owner."
              },
              "vote(uint256,uint8)": {
                "details": "Each voter can vote only once for one proposal. Votes can be added only by registered voter when status is set to VotingSessionStarted ",
                "params": {
                  "_proposalId": "The chosen proposal identifier",
                  "_sessionId": "The session identifier"
                }
              }
            },
            "title": "Alyra Project: Voting system",
            "version": 1
          },
          "evm": {
            "bytecode": {
              "functionDebugData": {
                "@_23": {
                  "entryPoint": null,
                  "id": 23,
                  "parameterSlots": 0,
                  "returnSlots": 0
                },
                "@_msgSender_124": {
                  "entryPoint": null,
                  "id": 124,
                  "parameterSlots": 0,
                  "returnSlots": 1
                },
                "@_transferOwnership_111": {
                  "entryPoint": 31,
                  "id": 111,
                  "parameterSlots": 1,
                  "returnSlots": 0
                }
              },
              "generatedSources": [],
              "linkReferences": {},
              "object": "",
              "opcodes": "PUSH1 0x80 PUSH1 0x40 MSTORE CALLVALUE DUP1 ISZERO PUSH2 0x10 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST POP PUSH2 0x1A CALLER PUSH2 0x1F JUMP JUMPDEST PUSH2 0x6F JUMP JUMPDEST PUSH1 0x0 DUP1 SLOAD PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB DUP4 DUP2 AND PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB NOT DUP4 AND DUP2 OR DUP5 SSTORE PUSH1 0x40 MLOAD SWAP2 SWAP1 SWAP3 AND SWAP3 DUP4 SWAP2 PUSH32 0x8BE0079C531659141344CD1FD0A4F28419497F9722A3DAAFE3B4186F6B6457E0 SWAP2 SWAP1 LOG3 POP POP JUMP JUMPDEST PUSH2 0x258D DUP1 PUSH2 0x7E PUSH1 0x0 CODECOPY PUSH1 0x0 RETURN INVALID PUSH1 0x80 PUSH1 0x40 MSTORE CALLVALUE DUP1 ISZERO PUSH2 0x10 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST POP PUSH1 0x4 CALLDATASIZE LT PUSH2 0xEA JUMPI PUSH1 0x0 CALLDATALOAD PUSH1 0xE0 SHR DUP1 PUSH4 0x8DA5CB5B GT PUSH2 0x8C JUMPI DUP1 PUSH4 0x9980A55A GT PUSH2 0x66 JUMPI DUP1 PUSH4 0x9980A55A EQ PUSH2 0x1C2 JUMPI DUP1 PUSH4 0xBC3F931F EQ PUSH2 0x1D5 JUMPI DUP1 PUSH4 0xC82DE38F EQ PUSH2 0x1FA JUMPI DUP1 PUSH4 0xF2FDE38B EQ PUSH2 0x20D JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST DUP1 PUSH4 0x8DA5CB5B EQ PUSH2 0x181 JUMPI DUP1 PUSH4 0x943E8216 EQ PUSH2 0x19C JUMPI DUP1 PUSH4 0x94C790BB EQ PUSH2 0x1AF JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST DUP1 PUSH4 0x6F3DC556 GT PUSH2 0xC8 JUMPI DUP1 PUSH4 0x6F3DC556 EQ PUSH2 0x140 JUMPI DUP1 PUSH4 0x715018A6 EQ PUSH2 0x153 JUMPI DUP1 PUSH4 0x7ACE4184 EQ PUSH2 0x15B JUMPI DUP1 PUSH4 0x8BC6A6DD EQ PUSH2 0x16E JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST DUP1 PUSH4 0x153BC95B EQ PUSH2 0xEF JUMPI DUP1 PUSH4 0x4D318B0E EQ PUSH2 0x104 JUMPI DUP1 PUSH4 0x6B1426A4 EQ PUSH2 0x117 JUMPI JUMPDEST PUSH1 0x0 DUP1 REVERT JUMPDEST PUSH2 0x102 PUSH2 0xFD CALLDATASIZE PUSH1 0x4 PUSH2 0x1D2B JUMP JUMPDEST PUSH2 0x220 JUMP JUMPDEST STOP JUMPDEST PUSH2 0x102 PUSH2 0x112 CALLDATASIZE PUSH1 0x4 PUSH2 0x1D97 JUMP JUMPDEST PUSH2 0x2D0 JUMP JUMPDEST PUSH2 0x12A PUSH2 0x125 CALLDATASIZE PUSH1 0x4 PUSH2 0x1D97 JUMP JUMPDEST PUSH2 0x954 JUMP JUMPDEST PUSH1 0x40 MLOAD PUSH2 0x137 SWAP2 SWAP1 PUSH2 0x1E00 JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 RETURN JUMPDEST PUSH2 0x102 PUSH2 0x14E CALLDATASIZE PUSH1 0x4 PUSH2 0x1D97 JUMP JUMPDEST PUSH2 0xB7B JUMP JUMPDEST PUSH2 0x102 PUSH2 0xC71 JUMP JUMPDEST PUSH2 0x102 PUSH2 0x169 CALLDATASIZE PUSH1 0x4 PUSH2 0x1E8A JUMP JUMPDEST PUSH2 0xC85 JUMP JUMPDEST PUSH2 0x102 PUSH2 0x17C CALLDATASIZE PUSH1 0x4 PUSH2 0x1D97 JUMP JUMPDEST PUSH2 0xE79 JUMP JUMPDEST PUSH1 0x0 SLOAD PUSH1 0x40 MLOAD PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB SWAP1 SWAP2 AND DUP2 MSTORE PUSH1 0x20 ADD PUSH2 0x137 JUMP JUMPDEST PUSH2 0x102 PUSH2 0x1AA CALLDATASIZE PUSH1 0x4 PUSH2 0x1ED6 JUMP JUMPDEST PUSH2 0xFB7 JUMP JUMPDEST PUSH2 0x102 PUSH2 0x1BD CALLDATASIZE PUSH1 0x4 PUSH2 0x1F28 JUMP JUMPDEST PUSH2 0x1378 JUMP JUMPDEST PUSH2 0x102 PUSH2 0x1D0 CALLDATASIZE PUSH1 0x4 PUSH2 0x1D97 JUMP JUMPDEST PUSH2 0x15F5 JUMP JUMPDEST PUSH2 0x1E8 PUSH2 0x1E3 CALLDATASIZE PUSH1 0x4 PUSH2 0x1F28 JUMP JUMPDEST PUSH2 0x16DE JUMP JUMPDEST PUSH1 0x40 MLOAD PUSH1 0xFF SWAP1 SWAP2 AND DUP2 MSTORE PUSH1 0x20 ADD PUSH2 0x137 JUMP JUMPDEST PUSH2 0x102 PUSH2 0x208 CALLDATASIZE PUSH1 0x4 PUSH2 0x1D97 JUMP JUMPDEST PUSH2 0x181C JUMP JUMPDEST PUSH2 0x102 PUSH2 0x21B CALLDATASIZE PUSH1 0x4 PUSH2 0x1F54 JUMP JUMPDEST PUSH2 0x1905 JUMP JUMPDEST PUSH2 0x228 PUSH2 0x197E JUMP JUMPDEST PUSH1 0x2 SLOAD PUSH1 0x0 SWAP1 DUP2 MSTORE PUSH1 0x1 PUSH1 0x20 DUP2 SWAP1 MSTORE PUSH1 0x40 SWAP1 SWAP2 KECCAK256 DUP1 SLOAD PUSH1 0xFF NOT AND DUP3 DUP1 MUL OR SWAP1 SSTORE POP PUSH1 0x2 SLOAD PUSH32 0xB824462EC90945EB31146C1C4CE6515D44B184FACB795BEA5D1F52355B243F8B DUP6 DUP6 DUP6 DUP6 PUSH1 0x40 MLOAD PUSH2 0x281 SWAP5 SWAP4 SWAP3 SWAP2 SWAP1 PUSH2 0x1FB5 JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 LOG2 PUSH1 0x2 SLOAD PUSH1 0x0 DUP1 MLOAD PUSH1 0x20 PUSH2 0x2538 DUP4 CODECOPY DUP2 MLOAD SWAP2 MSTORE PUSH1 0x0 PUSH1 0x1 PUSH1 0x40 MLOAD PUSH2 0x2AD SWAP3 SWAP2 SWAP1 PUSH2 0x2009 JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 LOG2 PUSH1 0x2 DUP1 SLOAD SWAP1 PUSH1 0x0 PUSH2 0x2C5 DUP4 PUSH2 0x203A JUMP JUMPDEST SWAP2 SWAP1 POP SSTORE POP POP POP POP POP JUMP JUMPDEST PUSH2 0x2D8 PUSH2 0x197E JUMP JUMPDEST DUP1 PUSH1 0x5 DUP1 PUSH1 0x0 DUP4 DUP2 MSTORE PUSH1 0x1 PUSH1 0x20 MSTORE PUSH1 0x40 SWAP1 KECCAK256 SLOAD PUSH1 0xFF AND PUSH1 0x6 DUP2 GT ISZERO PUSH2 0x2FF JUMPI PUSH2 0x2FF PUSH2 0x1F76 JUMP JUMPDEST EQ PUSH2 0x31A DUP3 PUSH1 0x6 DUP2 GT ISZERO PUSH2 0x315 JUMPI PUSH2 0x315 PUSH2 0x1F76 JUMP JUMPDEST PUSH2 0x19D8 JUMP JUMPDEST PUSH1 0x0 DUP5 DUP2 MSTORE PUSH1 0x1 PUSH1 0x20 MSTORE PUSH1 0x40 SWAP1 KECCAK256 SLOAD PUSH2 0x341 SWAP1 PUSH1 0xFF AND PUSH1 0x6 DUP2 GT ISZERO PUSH2 0x315 JUMPI PUSH2 0x315 PUSH2 0x1F76 JUMP JUMPDEST PUSH1 0x40 MLOAD PUSH1 0x20 ADD PUSH2 0x352 SWAP3 SWAP2 SWAP1 PUSH2 0x2053 JUMP JUMPDEST PUSH1 0x40 MLOAD PUSH1 0x20 DUP2 DUP4 SUB SUB DUP2 MSTORE SWAP1 PUSH1 0x40 MSTORE SWAP1 PUSH2 0x388 JUMPI PUSH1 0x40 MLOAD PUSH3 0x461BCD PUSH1 0xE5 SHL DUP2 MSTORE PUSH1 0x4 ADD PUSH2 0x37F SWAP2 SWAP1 PUSH2 0x20D4 JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 REVERT JUMPDEST POP PUSH1 0x0 DUP4 DUP2 MSTORE PUSH1 0x1 PUSH1 0x20 MSTORE PUSH1 0x40 DUP2 KECCAK256 PUSH1 0x4 ADD SLOAD DUP2 SWAP1 DUP2 SWAP1 PUSH8 0xFFFFFFFFFFFFFFFF DUP2 GT ISZERO PUSH2 0x3B7 JUMPI PUSH2 0x3B7 PUSH2 0x20E7 JUMP JUMPDEST PUSH1 0x40 MLOAD SWAP1 DUP1 DUP3 MSTORE DUP1 PUSH1 0x20 MUL PUSH1 0x20 ADD DUP3 ADD PUSH1 0x40 MSTORE DUP1 ISZERO PUSH2 0x415 JUMPI DUP2 PUSH1 0x20 ADD JUMPDEST PUSH2 0x402 PUSH1 0x40 MLOAD DUP1 PUSH1 0x60 ADD PUSH1 0x40 MSTORE DUP1 PUSH1 0x60 DUP2 MSTORE PUSH1 0x20 ADD PUSH1 0x0 DUP2 MSTORE PUSH1 0x20 ADD PUSH1 0x0 PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB AND DUP2 MSTORE POP SWAP1 JUMP JUMPDEST DUP2 MSTORE PUSH1 0x20 ADD SWAP1 PUSH1 0x1 SWAP1 SUB SWAP1 DUP2 PUSH2 0x3D5 JUMPI SWAP1 POP JUMPDEST POP SWAP1 POP PUSH1 0x2 JUMPDEST PUSH1 0x0 DUP8 DUP2 MSTORE PUSH1 0x1 PUSH1 0x20 MSTORE PUSH1 0x40 SWAP1 KECCAK256 PUSH1 0x4 ADD SLOAD DUP2 LT ISZERO PUSH2 0x77C JUMPI PUSH1 0x0 DUP8 DUP2 MSTORE PUSH1 0x1 PUSH1 0x20 MSTORE PUSH1 0x40 SWAP1 KECCAK256 PUSH1 0x4 ADD DUP1 SLOAD DUP6 SWAP2 SWAP1 DUP4 SWAP1 DUP2 LT PUSH2 0x45A JUMPI PUSH2 0x45A PUSH2 0x20FD JUMP JUMPDEST SWAP1 PUSH1 0x0 MSTORE PUSH1 0x20 PUSH1 0x0 KECCAK256 SWAP1 PUSH1 0x3 MUL ADD PUSH1 0x1 ADD SLOAD GT ISZERO PUSH2 0x5CA JUMPI PUSH1 0x0 DUP8 DUP2 MSTORE PUSH1 0x1 PUSH1 0x20 MSTORE PUSH1 0x40 SWAP1 KECCAK256 PUSH1 0x4 ADD DUP1 SLOAD DUP3 SWAP1 DUP2 LT PUSH2 0x495 JUMPI PUSH2 0x495 PUSH2 0x20FD JUMP JUMPDEST SWAP1 PUSH1 0x0 MSTORE PUSH1 0x20 PUSH1 0x0 KECCAK256 SWAP1 PUSH1 0x3 MUL ADD PUSH1 0x1 ADD SLOAD SWAP4 POP PUSH1 0x1 SWAP3 POP PUSH1 0x1 PUSH1 0x0 DUP9 DUP2 MSTORE PUSH1 0x20 ADD SWAP1 DUP2 MSTORE PUSH1 0x20 ADD PUSH1 0x0 KECCAK256 PUSH1 0x4 ADD DUP2 DUP2 SLOAD DUP2 LT PUSH2 0x4D4 JUMPI PUSH2 0x4D4 PUSH2 0x20FD JUMP JUMPDEST SWAP1 PUSH1 0x0 MSTORE PUSH1 0x20 PUSH1 0x0 KECCAK256 SWAP1 PUSH1 0x3 MUL ADD PUSH1 0x40 MLOAD DUP1 PUSH1 0x60 ADD PUSH1 0x40 MSTORE SWAP1 DUP2 PUSH1 0x0 DUP3 ADD DUP1 SLOAD PUSH2 0x4FD SWAP1 PUSH2 0x2113 JUMP JUMPDEST DUP1 PUSH1 0x1F ADD PUSH1 0x20 DUP1 SWAP2 DIV MUL PUSH1 0x20 ADD PUSH1 0x40 MLOAD SWAP1 DUP2 ADD PUSH1 0x40 MSTORE DUP1 SWAP3 SWAP2 SWAP1 DUP2 DUP2 MSTORE PUSH1 0x20 ADD DUP3 DUP1 SLOAD PUSH2 0x529 SWAP1 PUSH2 0x2113 JUMP JUMPDEST DUP1 ISZERO PUSH2 0x576 JUMPI DUP1 PUSH1 0x1F LT PUSH2 0x54B JUMPI PUSH2 0x100 DUP1 DUP4 SLOAD DIV MUL DUP4 MSTORE SWAP2 PUSH1 0x20 ADD SWAP2 PUSH2 0x576 JUMP JUMPDEST DUP3 ADD SWAP2 SWAP1 PUSH1 0x0 MSTORE PUSH1 0x20 PUSH1 0x0 KECCAK256 SWAP1 JUMPDEST DUP2 SLOAD DUP2 MSTORE SWAP1 PUSH1 0x1 ADD SWAP1 PUSH1 0x20 ADD DUP1 DUP4 GT PUSH2 0x559 JUMPI DUP3 SWAP1 SUB PUSH1 0x1F AND DUP3 ADD SWAP2 JUMPDEST POP POP POP SWAP2 DUP4 MSTORE POP POP PUSH1 0x1 DUP3 DUP2 ADD SLOAD PUSH1 0x20 DUP4 ADD MSTORE PUSH1 0x2 SWAP1 SWAP3 ADD SLOAD PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB AND PUSH1 0x40 SWAP1 SWAP2 ADD MSTORE DUP4 SWAP1 PUSH2 0x5AA SWAP1 DUP7 PUSH2 0x214D JUMP JUMPDEST DUP2 MLOAD DUP2 LT PUSH2 0x5BA JUMPI PUSH2 0x5BA PUSH2 0x20FD JUMP JUMPDEST PUSH1 0x20 MUL PUSH1 0x20 ADD ADD DUP2 SWAP1 MSTORE POP PUSH2 0x76A JUMP JUMPDEST PUSH1 0x0 DUP8 DUP2 MSTORE PUSH1 0x1 PUSH1 0x20 MSTORE PUSH1 0x40 DUP2 KECCAK256 PUSH1 0x4 ADD DUP1 SLOAD DUP4 SWAP1 DUP2 LT PUSH2 0x5ED JUMPI PUSH2 0x5ED PUSH2 0x20FD JUMP JUMPDEST SWAP1 PUSH1 0x0 MSTORE PUSH1 0x20 PUSH1 0x0 KECCAK256 SWAP1 PUSH1 0x3 MUL ADD PUSH1 0x1 ADD SLOAD GT DUP1 ISZERO PUSH2 0x641 JUMPI POP PUSH1 0x0 DUP8 DUP2 MSTORE PUSH1 0x1 PUSH1 0x20 MSTORE PUSH1 0x40 SWAP1 KECCAK256 PUSH1 0x4 ADD DUP1 SLOAD DUP6 SWAP2 SWAP1 DUP4 SWAP1 DUP2 LT PUSH2 0x62D JUMPI PUSH2 0x62D PUSH2 0x20FD JUMP JUMPDEST SWAP1 PUSH1 0x0 MSTORE PUSH1 0x20 PUSH1 0x0 KECCAK256 SWAP1 PUSH1 0x3 MUL ADD PUSH1 0x1 ADD SLOAD EQ JUMPDEST ISZERO PUSH2 0x76A JUMPI DUP3 PUSH2 0x650 DUP2 PUSH2 0x203A JUMP JUMPDEST PUSH1 0x0 DUP10 DUP2 MSTORE PUSH1 0x1 PUSH1 0x20 MSTORE PUSH1 0x40 SWAP1 KECCAK256 PUSH1 0x4 ADD DUP1 SLOAD SWAP2 SWAP6 POP SWAP2 POP DUP3 SWAP1 DUP2 LT PUSH2 0x678 JUMPI PUSH2 0x678 PUSH2 0x20FD JUMP JUMPDEST SWAP1 PUSH1 0x0 MSTORE PUSH1 0x20 PUSH1 0x0 KECCAK256 SWAP1 PUSH1 0x3 MUL ADD PUSH1 0x40 MLOAD DUP1 PUSH1 0x60 ADD PUSH1 0x40 MSTORE SWAP1 DUP2 PUSH1 0x0 DUP3 ADD DUP1 SLOAD PUSH2 0x6A1 SWAP1 PUSH2 0x2113 JUMP JUMPDEST DUP1 PUSH1 0x1F ADD PUSH1 0x20 DUP1 SWAP2 DIV MUL PUSH1 0x20 ADD PUSH1 0x40 MLOAD SWAP1 DUP2 ADD PUSH1 0x40 MSTORE DUP1 SWAP3 SWAP2 SWAP1 DUP2 DUP2 MSTORE PUSH1 0x20 ADD DUP3 DUP1 SLOAD PUSH2 0x6CD SWAP1 PUSH2 0x2113 JUMP JUMPDEST DUP1 ISZERO PUSH2 0x71A JUMPI DUP1 PUSH1 0x1F LT PUSH2 0x6EF JUMPI PUSH2 0x100 DUP1 DUP4 SLOAD DIV MUL DUP4 MSTORE SWAP2 PUSH1 0x20 ADD SWAP2 PUSH2 0x71A JUMP JUMPDEST DUP3 ADD SWAP2 SWAP1 PUSH1 0x0 MSTORE PUSH1 0x20 PUSH1 0x0 KECCAK256 SWAP1 JUMPDEST DUP2 SLOAD DUP2 MSTORE SWAP1 PUSH1 0x1 ADD SWAP1 PUSH1 0x20 ADD DUP1 DUP4 GT PUSH2 0x6FD JUMPI DUP3 SWAP1 SUB PUSH1 0x1F AND DUP3 ADD SWAP2 JUMPDEST POP POP POP SWAP2 DUP4 MSTORE POP POP PUSH1 0x1 DUP3 DUP2 ADD SLOAD PUSH1 0x20 DUP4 ADD MSTORE PUSH1 0x2 SWAP1 SWAP3 ADD SLOAD PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB AND PUSH1 0x40 SWAP1 SWAP2 ADD MSTORE DUP4 SWAP1 PUSH2 0x74E SWAP1 DUP7 PUSH2 0x214D JUMP JUMPDEST DUP2 MLOAD DUP2 LT PUSH2 0x75E JUMPI PUSH2 0x75E PUSH2 0x20FD JUMP JUMPDEST PUSH1 0x20 MUL PUSH1 0x20 ADD ADD DUP2 SWAP1 MSTORE POP JUMPDEST DUP1 PUSH2 0x774 DUP2 PUSH2 0x203A JUMP JUMPDEST SWAP2 POP POP PUSH2 0x41B JUMP JUMPDEST POP PUSH1 0x0 JUMPDEST DUP3 DUP2 LT ISZERO PUSH2 0x827 JUMPI PUSH1 0x1 PUSH1 0x0 DUP9 DUP2 MSTORE PUSH1 0x20 ADD SWAP1 DUP2 MSTORE PUSH1 0x20 ADD PUSH1 0x0 KECCAK256 PUSH1 0x5 ADD DUP3 DUP3 DUP2 MLOAD DUP2 LT PUSH2 0x7B0 JUMPI PUSH2 0x7B0 PUSH2 0x20FD JUMP JUMPDEST PUSH1 0x20 SWAP1 DUP2 MUL SWAP2 SWAP1 SWAP2 ADD DUP2 ADD MLOAD DUP3 SLOAD PUSH1 0x1 DUP2 ADD DUP5 SSTORE PUSH1 0x0 SWAP4 DUP5 MSTORE SWAP2 SWAP1 SWAP3 KECCAK256 DUP3 MLOAD PUSH1 0x3 SWAP1 SWAP3 MUL ADD SWAP1 DUP2 SWAP1 PUSH2 0x7E2 SWAP1 DUP3 PUSH2 0x21B1 JUMP JUMPDEST POP PUSH1 0x20 DUP3 ADD MLOAD PUSH1 0x1 DUP3 ADD SSTORE PUSH1 0x40 SWAP1 SWAP2 ADD MLOAD PUSH1 0x2 SWAP1 SWAP2 ADD DUP1 SLOAD PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB NOT AND PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB SWAP1 SWAP3 AND SWAP2 SWAP1 SWAP2 OR SWAP1 SSTORE DUP1 PUSH2 0x81F DUP2 PUSH2 0x203A JUMP JUMPDEST SWAP2 POP POP PUSH2 0x780 JUMP JUMPDEST POP PUSH1 0x0 DUP7 DUP2 MSTORE PUSH1 0x1 PUSH1 0x20 MSTORE PUSH1 0x40 SWAP1 DUP2 SWAP1 KECCAK256 DUP1 SLOAD PUSH1 0xFF NOT AND PUSH1 0x6 SWAP1 DUP2 OR SWAP1 SWAP2 SSTORE SWAP1 MLOAD DUP8 SWAP2 PUSH1 0x0 DUP1 MLOAD PUSH1 0x20 PUSH2 0x2538 DUP4 CODECOPY DUP2 MLOAD SWAP2 MSTORE SWAP2 PUSH2 0x866 SWAP2 PUSH1 0x5 SWAP2 PUSH2 0x2009 JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 LOG2 PUSH1 0x0 DUP7 DUP2 MSTORE PUSH1 0x1 PUSH1 0x20 MSTORE PUSH1 0x40 DUP2 KECCAK256 PUSH1 0x2 ADD SLOAD PUSH2 0x88B JUMPI PUSH1 0x0 PUSH2 0x8AE JUMP JUMPDEST PUSH1 0x0 DUP8 DUP2 MSTORE PUSH1 0x1 PUSH1 0x20 MSTORE PUSH1 0x40 SWAP1 KECCAK256 PUSH1 0x3 DUP2 ADD SLOAD PUSH1 0x2 SWAP1 SWAP2 ADD SLOAD PUSH2 0x8AE SWAP2 SWAP1 PUSH2 0x214D JUMP JUMPDEST PUSH1 0x0 DUP9 DUP2 MSTORE PUSH1 0x1 PUSH1 0x20 DUP2 SWAP1 MSTORE PUSH1 0x40 SWAP1 SWAP2 KECCAK256 PUSH1 0x2 DUP2 ADD SLOAD PUSH1 0x3 DUP3 ADD SLOAD PUSH1 0x4 SWAP1 SWAP3 ADD DUP1 SLOAD SWAP5 SWAP6 POP DUP12 SWAP5 PUSH32 0x8231621024A2914F448F5821E1168FA08EA32BE09DB6A89D94E306E0352D12F4 SWAP5 SWAP3 SWAP4 SWAP3 SWAP1 DUP2 LT PUSH2 0x909 JUMPI PUSH2 0x909 PUSH2 0x20FD JUMP JUMPDEST SWAP1 PUSH1 0x0 MSTORE PUSH1 0x20 PUSH1 0x0 KECCAK256 SWAP1 PUSH1 0x3 MUL ADD PUSH1 0x1 ADD SLOAD DUP6 PUSH1 0x1 PUSH1 0x0 DUP15 DUP2 MSTORE PUSH1 0x20 ADD SWAP1 DUP2 MSTORE PUSH1 0x20 ADD PUSH1 0x0 KECCAK256 PUSH1 0x5 ADD PUSH1 0x40 MLOAD PUSH2 0x943 SWAP6 SWAP5 SWAP4 SWAP3 SWAP2 SWAP1 PUSH2 0x22EE JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 LOG2 POP POP POP POP POP POP POP JUMP JUMPDEST PUSH1 0x60 DUP2 CALLER PUSH2 0x96A PUSH1 0x0 SLOAD PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB AND SWAP1 JUMP JUMPDEST PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB AND EQ DUP1 PUSH2 0x99A JUMPI POP PUSH1 0x0 DUP2 DUP2 MSTORE PUSH1 0x1 PUSH1 0x20 DUP2 DUP2 MSTORE PUSH1 0x40 DUP1 DUP5 KECCAK256 CALLER DUP6 MSTORE SWAP1 SWAP3 ADD SWAP1 MSTORE SWAP1 KECCAK256 SLOAD PUSH1 0xFF AND JUMPDEST PUSH2 0x9B6 JUMPI PUSH1 0x40 MLOAD PUSH3 0x461BCD PUSH1 0xE5 SHL DUP2 MSTORE PUSH1 0x4 ADD PUSH2 0x37F SWAP1 PUSH2 0x2398 JUMP JUMPDEST DUP3 PUSH1 0x6 DUP1 PUSH1 0x0 DUP4 DUP2 MSTORE PUSH1 0x1 PUSH1 0x20 MSTORE PUSH1 0x40 SWAP1 KECCAK256 SLOAD PUSH1 0xFF AND PUSH1 0x6 DUP2 GT ISZERO PUSH2 0x9DD JUMPI PUSH2 0x9DD PUSH2 0x1F76 JUMP JUMPDEST LT ISZERO PUSH2 0x9F4 DUP3 PUSH1 0x6 DUP2 GT ISZERO PUSH2 0x315 JUMPI PUSH2 0x315 PUSH2 0x1F76 JUMP JUMPDEST PUSH1 0x0 DUP5 DUP2 MSTORE PUSH1 0x1 PUSH1 0x20 MSTORE PUSH1 0x40 SWAP1 KECCAK256 SLOAD PUSH2 0xA1B SWAP1 PUSH1 0xFF AND PUSH1 0x6 DUP2 GT ISZERO PUSH2 0x315 JUMPI PUSH2 0x315 PUSH2 0x1F76 JUMP JUMPDEST PUSH1 0x40 MLOAD PUSH1 0x20 ADD PUSH2 0xA2C SWAP3 SWAP2 SWAP1 PUSH2 0x23DF JUMP JUMPDEST PUSH1 0x40 MLOAD PUSH1 0x20 DUP2 DUP4 SUB SUB DUP2 MSTORE SWAP1 PUSH1 0x40 MSTORE SWAP1 PUSH2 0xA59 JUMPI PUSH1 0x40 MLOAD PUSH3 0x461BCD PUSH1 0xE5 SHL DUP2 MSTORE PUSH1 0x4 ADD PUSH2 0x37F SWAP2 SWAP1 PUSH2 0x20D4 JUMP JUMPDEST POP PUSH1 0x0 DUP6 DUP2 MSTORE PUSH1 0x1 PUSH1 0x20 SWAP1 DUP2 MSTORE PUSH1 0x40 DUP1 DUP4 KECCAK256 PUSH1 0x5 ADD DUP1 SLOAD DUP3 MLOAD DUP2 DUP6 MUL DUP2 ADD DUP6 ADD SWAP1 SWAP4 MSTORE DUP1 DUP4 MSTORE SWAP2 SWAP4 SWAP1 SWAP3 DUP5 ADD JUMPDEST DUP3 DUP3 LT ISZERO PUSH2 0xB6D JUMPI DUP4 DUP3 SWAP1 PUSH1 0x0 MSTORE PUSH1 0x20 PUSH1 0x0 KECCAK256 SWAP1 PUSH1 0x3 MUL ADD PUSH1 0x40 MLOAD DUP1 PUSH1 0x60 ADD PUSH1 0x40 MSTORE SWAP1 DUP2 PUSH1 0x0 DUP3 ADD DUP1 SLOAD PUSH2 0xAB9 SWAP1 PUSH2 0x2113 JUMP JUMPDEST DUP1 PUSH1 0x1F ADD PUSH1 0x20 DUP1 SWAP2 DIV MUL PUSH1 0x20 ADD PUSH1 0x40 MLOAD SWAP1 DUP2 ADD PUSH1 0x40 MSTORE DUP1 SWAP3 SWAP2 SWAP1 DUP2 DUP2 MSTORE PUSH1 0x20 ADD DUP3 DUP1 SLOAD PUSH2 0xAE5 SWAP1 PUSH2 0x2113 JUMP JUMPDEST DUP1 ISZERO PUSH2 0xB32 JUMPI DUP1 PUSH1 0x1F LT PUSH2 0xB07 JUMPI PUSH2 0x100 DUP1 DUP4 SLOAD DIV MUL DUP4 MSTORE SWAP2 PUSH1 0x20 ADD SWAP2 PUSH2 0xB32 JUMP JUMPDEST DUP3 ADD SWAP2 SWAP1 PUSH1 0x0 MSTORE PUSH1 0x20 PUSH1 0x0 KECCAK256 SWAP1 JUMPDEST DUP2 SLOAD DUP2 MSTORE SWAP1 PUSH1 0x1 ADD SWAP1 PUSH1 0x20 ADD DUP1 DUP4 GT PUSH2 0xB15 JUMPI DUP3 SWAP1 SUB PUSH1 0x1F AND DUP3 ADD SWAP2 JUMPDEST POP POP POP SWAP2 DUP4 MSTORE POP POP PUSH1 0x1 DUP3 DUP2 ADD SLOAD PUSH1 0x20 DUP1 DUP5 ADD SWAP2 SWAP1 SWAP2 MSTORE PUSH1 0x2 SWAP1 SWAP4 ADD SLOAD PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB AND PUSH1 0x40 SWAP1 SWAP3 ADD SWAP2 SWAP1 SWAP2 MSTORE SWAP2 DUP4 MSTORE SWAP3 ADD SWAP2 ADD PUSH2 0xA86 JUMP JUMPDEST POP POP POP POP SWAP4 POP POP POP POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH2 0xB83 PUSH2 0x197E JUMP JUMPDEST DUP1 PUSH1 0x4 DUP1 PUSH1 0x0 DUP4 DUP2 MSTORE PUSH1 0x1 PUSH1 0x20 MSTORE PUSH1 0x40 SWAP1 KECCAK256 SLOAD PUSH1 0xFF AND PUSH1 0x6 DUP2 GT ISZERO PUSH2 0xBAA JUMPI PUSH2 0xBAA PUSH2 0x1F76 JUMP JUMPDEST EQ PUSH2 0xBC0 DUP3 PUSH1 0x6 DUP2 GT ISZERO PUSH2 0x315 JUMPI PUSH2 0x315 PUSH2 0x1F76 JUMP JUMPDEST PUSH1 0x0 DUP5 DUP2 MSTORE PUSH1 0x1 PUSH1 0x20 MSTORE PUSH1 0x40 SWAP1 KECCAK256 SLOAD PUSH2 0xBE7 SWAP1 PUSH1 0xFF AND PUSH1 0x6 DUP2 GT ISZERO PUSH2 0x315 JUMPI PUSH2 0x315 PUSH2 0x1F76 JUMP JUMPDEST PUSH1 0x40 MLOAD PUSH1 0x20 ADD PUSH2 0xBF8 SWAP3 SWAP2 SWAP1 PUSH2 0x2053 JUMP JUMPDEST PUSH1 0x40 MLOAD PUSH1 0x20 DUP2 DUP4 SUB SUB DUP2 MSTORE SWAP1 PUSH1 0x40 MSTORE SWAP1 PUSH2 0xC25 JUMPI PUSH1 0x40 MLOAD PUSH3 0x461BCD PUSH1 0xE5 SHL DUP2 MSTORE PUSH1 0x4 ADD PUSH2 0x37F SWAP2 SWAP1 PUSH2 0x20D4 JUMP JUMPDEST POP PUSH1 0x0 DUP4 DUP2 MSTORE PUSH1 0x1 PUSH1 0x20 MSTORE PUSH1 0x40 SWAP1 DUP2 SWAP1 KECCAK256 DUP1 SLOAD PUSH1 0xFF NOT AND PUSH1 0x5 SWAP1 DUP2 OR SWAP1 SWAP2 SSTORE SWAP1 MLOAD DUP5 SWAP2 PUSH1 0x0 DUP1 MLOAD PUSH1 0x20 PUSH2 0x2538 DUP4 CODECOPY DUP2 MLOAD SWAP2 MSTORE SWAP2 PUSH2 0xC64 SWAP2 PUSH1 0x4 SWAP2 PUSH2 0x2009 JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 LOG2 POP POP POP JUMP JUMPDEST PUSH2 0xC79 PUSH2 0x197E JUMP JUMPDEST PUSH2 0xC83 PUSH1 0x0 PUSH2 0x1AE1 JUMP JUMPDEST JUMP JUMPDEST PUSH1 0x0 DUP4 DUP2 MSTORE PUSH1 0x1 PUSH1 0x20 DUP2 DUP2 MSTORE PUSH1 0x40 DUP1 DUP5 KECCAK256 CALLER DUP6 MSTORE SWAP1 SWAP3 ADD SWAP1 MSTORE SWAP1 KECCAK256 SLOAD DUP4 SWAP1 PUSH1 0xFF AND PUSH2 0xCF2 JUMPI PUSH1 0x40 MLOAD PUSH3 0x461BCD PUSH1 0xE5 SHL DUP2 MSTORE PUSH1 0x20 PUSH1 0x4 DUP3 ADD MSTORE PUSH1 0x1E PUSH1 0x24 DUP3 ADD MSTORE PUSH32 0x43616C6C6572206973206E6F74207265676973746572656420766F7465720000 PUSH1 0x44 DUP3 ADD MSTORE PUSH1 0x64 ADD PUSH2 0x37F JUMP JUMPDEST DUP4 PUSH1 0x2 DUP1 PUSH1 0x0 DUP4 DUP2 MSTORE PUSH1 0x1 PUSH1 0x20 MSTORE PUSH1 0x40 SWAP1 KECCAK256 SLOAD PUSH1 0xFF AND PUSH1 0x6 DUP2 GT ISZERO PUSH2 0xD19 JUMPI PUSH2 0xD19 PUSH2 0x1F76 JUMP JUMPDEST EQ PUSH2 0xD2F DUP3 PUSH1 0x6 DUP2 GT ISZERO PUSH2 0x315 JUMPI PUSH2 0x315 PUSH2 0x1F76 JUMP JUMPDEST PUSH1 0x0 DUP5 DUP2 MSTORE PUSH1 0x1 PUSH1 0x20 MSTORE PUSH1 0x40 SWAP1 KECCAK256 SLOAD PUSH2 0xD56 SWAP1 PUSH1 0xFF AND PUSH1 0x6 DUP2 GT ISZERO PUSH2 0x315 JUMPI PUSH2 0x315 PUSH2 0x1F76 JUMP JUMPDEST PUSH1 0x40 MLOAD PUSH1 0x20 ADD PUSH2 0xD67 SWAP3 SWAP2 SWAP1 PUSH2 0x2053 JUMP JUMPDEST PUSH1 0x40 MLOAD PUSH1 0x20 DUP2 DUP4 SUB SUB DUP2 MSTORE SWAP1 PUSH1 0x40 MSTORE SWAP1 PUSH2 0xD94 JUMPI PUSH1 0x40 MLOAD PUSH3 0x461BCD PUSH1 0xE5 SHL DUP2 MSTORE PUSH1 0x4 ADD PUSH2 0x37F SWAP2 SWAP1 PUSH2 0x20D4 JUMP JUMPDEST POP PUSH1 0x0 DUP7 DUP2 MSTORE PUSH1 0x1 PUSH1 0x20 DUP2 DUP2 MSTORE PUSH1 0x40 DUP1 DUP5 KECCAK256 CALLER DUP6 MSTORE SWAP1 SWAP3 ADD SWAP1 MSTORE SWAP1 KECCAK256 SLOAD PUSH1 0x3 PUSH4 0x1000000 SWAP1 SWAP2 DIV PUSH1 0xFF AND LT PUSH2 0xE31 JUMPI PUSH1 0x40 MLOAD PUSH3 0x461BCD PUSH1 0xE5 SHL DUP2 MSTORE PUSH1 0x20 PUSH1 0x4 DUP3 ADD MSTORE PUSH1 0x3B PUSH1 0x24 DUP3 ADD MSTORE PUSH32 0x596F7520616C726561647920706F7374656420332070726F706F73616C732077 PUSH1 0x44 DUP3 ADD MSTORE PUSH32 0x6869636820697320746865206D6178696D756D20616C6C6F7765640000000000 PUSH1 0x64 DUP3 ADD MSTORE PUSH1 0x84 ADD PUSH2 0x37F JUMP JUMPDEST PUSH2 0xE71 DUP7 DUP7 DUP7 DUP1 DUP1 PUSH1 0x1F ADD PUSH1 0x20 DUP1 SWAP2 DIV MUL PUSH1 0x20 ADD PUSH1 0x40 MLOAD SWAP1 DUP2 ADD PUSH1 0x40 MSTORE DUP1 SWAP4 SWAP3 SWAP2 SWAP1 DUP2 DUP2 MSTORE PUSH1 0x20 ADD DUP4 DUP4 DUP1 DUP3 DUP5 CALLDATACOPY PUSH1 0x0 SWAP3 ADD SWAP2 SWAP1 SWAP2 MSTORE POP PUSH2 0x1B31 SWAP3 POP POP POP JUMP JUMPDEST POP POP POP POP POP POP JUMP JUMPDEST PUSH2 0xE81 PUSH2 0x197E JUMP JUMPDEST DUP1 PUSH1 0x1 DUP1 PUSH1 0x0 DUP4 DUP2 MSTORE PUSH1 0x1 PUSH1 0x20 MSTORE PUSH1 0x40 SWAP1 KECCAK256 SLOAD PUSH1 0xFF AND PUSH1 0x6 DUP2 GT ISZERO PUSH2 0xEA8 JUMPI PUSH2 0xEA8 PUSH2 0x1F76 JUMP JUMPDEST EQ PUSH2 0xEBE DUP3 PUSH1 0x6 DUP2 GT ISZERO PUSH2 0x315 JUMPI PUSH2 0x315 PUSH2 0x1F76 JUMP JUMPDEST PUSH1 0x0 DUP5 DUP2 MSTORE PUSH1 0x1 PUSH1 0x20 MSTORE PUSH1 0x40 SWAP1 KECCAK256 SLOAD PUSH2 0xEE5 SWAP1 PUSH1 0xFF AND PUSH1 0x6 DUP2 GT ISZERO PUSH2 0x315 JUMPI PUSH2 0x315 PUSH2 0x1F76 JUMP JUMPDEST PUSH1 0x40 MLOAD PUSH1 0x20 ADD PUSH2 0xEF6 SWAP3 SWAP2 SWAP1 PUSH2 0x2053 JUMP JUMPDEST PUSH1 0x40 MLOAD PUSH1 0x20 DUP2 DUP4 SUB SUB DUP2 MSTORE SWAP1 PUSH1 0x40 MSTORE SWAP1 PUSH2 0xF23 JUMPI PUSH1 0x40 MLOAD PUSH3 0x461BCD PUSH1 0xE5 SHL DUP2 MSTORE PUSH1 0x4 ADD PUSH2 0x37F SWAP2 SWAP1 PUSH2 0x20D4 JUMP JUMPDEST POP PUSH2 0xF50 DUP4 PUSH1 0x40 MLOAD DUP1 PUSH1 0x40 ADD PUSH1 0x40 MSTORE DUP1 PUSH1 0xA DUP2 MSTORE PUSH1 0x20 ADD PUSH10 0x20B139BA32B73A34B7B7 PUSH1 0xB1 SHL DUP2 MSTORE POP PUSH2 0x1B31 JUMP JUMPDEST PUSH2 0xF77 DUP4 PUSH1 0x40 MLOAD DUP1 PUSH1 0x40 ADD PUSH1 0x40 MSTORE DUP1 PUSH1 0x5 DUP2 MSTORE PUSH1 0x20 ADD PUSH5 0x426C616E6B PUSH1 0xD8 SHL DUP2 MSTORE POP PUSH2 0x1B31 JUMP JUMPDEST PUSH1 0x0 DUP4 DUP2 MSTORE PUSH1 0x1 PUSH1 0x20 DUP2 SWAP1 MSTORE PUSH1 0x40 SWAP2 DUP3 SWAP1 KECCAK256 DUP1 SLOAD PUSH1 0xFF NOT AND PUSH1 0x2 SWAP1 DUP2 OR SWAP1 SWAP2 SSTORE SWAP2 MLOAD DUP6 SWAP3 PUSH1 0x0 DUP1 MLOAD PUSH1 0x20 PUSH2 0x2538 DUP4 CODECOPY DUP2 MLOAD SWAP2 MSTORE SWAP3 PUSH2 0xC64 SWAP3 SWAP1 SWAP2 SWAP1 PUSH2 0x2009 JUMP JUMPDEST PUSH1 0x0 DUP3 DUP2 MSTORE PUSH1 0x1 PUSH1 0x20 DUP2 DUP2 MSTORE PUSH1 0x40 DUP1 DUP5 KECCAK256 CALLER DUP6 MSTORE SWAP1 SWAP3 ADD SWAP1 MSTORE SWAP1 KECCAK256 SLOAD DUP3 SWAP1 PUSH1 0xFF AND PUSH2 0x1024 JUMPI PUSH1 0x40 MLOAD PUSH3 0x461BCD PUSH1 0xE5 SHL DUP2 MSTORE PUSH1 0x20 PUSH1 0x4 DUP3 ADD MSTORE PUSH1 0x1E PUSH1 0x24 DUP3 ADD MSTORE PUSH32 0x43616C6C6572206973206E6F74207265676973746572656420766F7465720000 PUSH1 0x44 DUP3 ADD MSTORE PUSH1 0x64 ADD PUSH2 0x37F JUMP JUMPDEST DUP3 PUSH1 0x4 DUP1 PUSH1 0x0 DUP4 DUP2 MSTORE PUSH1 0x1 PUSH1 0x20 MSTORE PUSH1 0x40 SWAP1 KECCAK256 SLOAD PUSH1 0xFF AND PUSH1 0x6 DUP2 GT ISZERO PUSH2 0x104B JUMPI PUSH2 0x104B PUSH2 0x1F76 JUMP JUMPDEST EQ PUSH2 0x1061 DUP3 PUSH1 0x6 DUP2 GT ISZERO PUSH2 0x315 JUMPI PUSH2 0x315 PUSH2 0x1F76 JUMP JUMPDEST PUSH1 0x0 DUP5 DUP2 MSTORE PUSH1 0x1 PUSH1 0x20 MSTORE PUSH1 0x40 SWAP1 KECCAK256 SLOAD PUSH2 0x1088 SWAP1 PUSH1 0xFF AND PUSH1 0x6 DUP2 GT ISZERO PUSH2 0x315 JUMPI PUSH2 0x315 PUSH2 0x1F76 JUMP JUMPDEST PUSH1 0x40 MLOAD PUSH1 0x20 ADD PUSH2 0x1099 SWAP3 SWAP2 SWAP1 PUSH2 0x2053 JUMP JUMPDEST PUSH1 0x40 MLOAD PUSH1 0x20 DUP2 DUP4 SUB SUB DUP2 MSTORE SWAP1 PUSH1 0x40 MSTORE SWAP1 PUSH2 0x10C6 JUMPI PUSH1 0x40 MLOAD PUSH3 0x461BCD PUSH1 0xE5 SHL DUP2 MSTORE PUSH1 0x4 ADD PUSH2 0x37F SWAP2 SWAP1 PUSH2 0x20D4 JUMP JUMPDEST POP PUSH1 0x0 DUP6 DUP2 MSTORE PUSH1 0x1 PUSH1 0x20 DUP2 DUP2 MSTORE PUSH1 0x40 DUP1 DUP5 KECCAK256 CALLER DUP6 MSTORE SWAP1 SWAP3 ADD SWAP1 MSTORE SWAP1 KECCAK256 SLOAD PUSH2 0x100 SWAP1 DIV PUSH1 0xFF AND ISZERO PUSH2 0x1138 JUMPI PUSH1 0x40 MLOAD PUSH3 0x461BCD PUSH1 0xE5 SHL DUP2 MSTORE PUSH1 0x20 PUSH1 0x4 DUP3 ADD MSTORE PUSH1 0x17 PUSH1 0x24 DUP3 ADD MSTORE PUSH32 0x566F7465722068617320616C726561647920766F746564000000000000000000 PUSH1 0x44 DUP3 ADD MSTORE PUSH1 0x64 ADD PUSH2 0x37F JUMP JUMPDEST PUSH1 0x0 DUP6 DUP2 MSTORE PUSH1 0x1 PUSH1 0x20 MSTORE PUSH1 0x40 SWAP1 KECCAK256 PUSH1 0x4 ADD SLOAD PUSH1 0xFF DUP6 AND SWAP1 DUP2 LT SWAP1 PUSH2 0x115B SWAP1 PUSH2 0x19D8 JUMP JUMPDEST PUSH1 0x40 MLOAD PUSH1 0x20 ADD PUSH2 0x116B SWAP2 SWAP1 PUSH2 0x2461 JUMP JUMPDEST PUSH1 0x40 MLOAD PUSH1 0x20 DUP2 DUP4 SUB SUB DUP2 MSTORE SWAP1 PUSH1 0x40 MSTORE SWAP1 PUSH2 0x1198 JUMPI PUSH1 0x40 MLOAD PUSH3 0x461BCD PUSH1 0xE5 SHL DUP2 MSTORE PUSH1 0x4 ADD PUSH2 0x37F SWAP2 SWAP1 PUSH2 0x20D4 JUMP JUMPDEST POP PUSH1 0x0 DUP6 DUP2 MSTORE PUSH1 0x1 PUSH1 0x20 MSTORE PUSH1 0x40 SWAP1 KECCAK256 PUSH1 0x4 ADD DUP1 SLOAD CALLER SWAP2 SWAP1 PUSH1 0xFF DUP8 AND SWAP1 DUP2 LT PUSH2 0x11C2 JUMPI PUSH2 0x11C2 PUSH2 0x20FD JUMP JUMPDEST PUSH1 0x0 SWAP2 DUP3 MSTORE PUSH1 0x20 SWAP1 SWAP2 KECCAK256 PUSH1 0x2 PUSH1 0x3 SWAP1 SWAP3 MUL ADD ADD SLOAD PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB AND SUB PUSH2 0x123E JUMPI PUSH1 0x40 MLOAD PUSH3 0x461BCD PUSH1 0xE5 SHL DUP2 MSTORE PUSH1 0x20 PUSH1 0x4 DUP3 ADD MSTORE PUSH1 0x29 PUSH1 0x24 DUP3 ADD MSTORE PUSH32 0x4120766F7465722063616E206E6F7420766F746520666F7220697473206F776E PUSH1 0x44 DUP3 ADD MSTORE PUSH9 0x81C1C9BDC1BDCD85B PUSH1 0xBA SHL PUSH1 0x64 DUP3 ADD MSTORE PUSH1 0x84 ADD PUSH2 0x37F JUMP JUMPDEST PUSH1 0x0 DUP5 PUSH1 0xFF AND GT PUSH2 0x12A3 JUMPI PUSH1 0x40 MLOAD PUSH3 0x461BCD PUSH1 0xE5 SHL DUP2 MSTORE PUSH1 0x20 PUSH1 0x4 DUP3 ADD MSTORE PUSH1 0x29 PUSH1 0x24 DUP3 ADD MSTORE PUSH32 0x46697273742070726F706F73616C20697320726573657276656420666F722061 PUSH1 0x44 DUP3 ADD MSTORE PUSH9 0x3139BA32B73A34B7B7 PUSH1 0xB9 SHL PUSH1 0x64 DUP3 ADD MSTORE PUSH1 0x84 ADD PUSH2 0x37F JUMP JUMPDEST PUSH1 0x0 DUP6 DUP2 MSTORE PUSH1 0x1 PUSH1 0x20 MSTORE PUSH1 0x40 SWAP1 KECCAK256 PUSH1 0x4 ADD DUP1 SLOAD PUSH1 0xFF DUP7 AND SWAP1 DUP2 LT PUSH2 0x12C9 JUMPI PUSH2 0x12C9 PUSH2 0x20FD JUMP JUMPDEST PUSH1 0x0 SWAP2 DUP3 MSTORE PUSH1 0x20 DUP3 KECCAK256 PUSH1 0x1 PUSH1 0x3 SWAP1 SWAP3 MUL ADD ADD DUP1 SLOAD SWAP2 PUSH2 0x12E7 DUP4 PUSH2 0x203A JUMP JUMPDEST SWAP1 SWAP2 SSTORE POP POP PUSH1 0x0 DUP6 DUP2 MSTORE PUSH1 0x1 PUSH1 0x20 DUP2 DUP2 MSTORE PUSH1 0x40 DUP1 DUP5 KECCAK256 CALLER DUP6 MSTORE DUP1 DUP5 ADD DUP4 MSTORE SWAP1 DUP5 KECCAK256 DUP1 SLOAD PUSH1 0xFF DUP11 AND PUSH3 0x10000 MUL PUSH3 0xFFFF00 NOT SWAP1 SWAP2 AND OR PUSH2 0x100 OR SWAP1 SSTORE DUP9 DUP5 MSTORE SWAP2 SWAP1 MSTORE PUSH1 0x3 ADD DUP1 SLOAD SWAP2 PUSH2 0x1337 DUP4 PUSH2 0x203A JUMP JUMPDEST SWAP1 SWAP2 SSTORE POP POP PUSH1 0x40 MLOAD CALLER DUP2 MSTORE DUP6 SWAP1 PUSH32 0x30B0F8DCD86A031EDDB071F91882EDEAC8173663BA775713B677B42B51BE44B SWAP1 PUSH1 0x20 ADD PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 LOG2 POP POP POP POP POP JUMP JUMPDEST PUSH2 0x1380 PUSH2 0x197E JUMP JUMPDEST DUP2 PUSH1 0x1 DUP1 PUSH1 0x0 DUP4 DUP2 MSTORE PUSH1 0x1 PUSH1 0x20 MSTORE PUSH1 0x40 SWAP1 KECCAK256 SLOAD PUSH1 0xFF AND PUSH1 0x6 DUP2 GT ISZERO PUSH2 0x13A7 JUMPI PUSH2 0x13A7 PUSH2 0x1F76 JUMP JUMPDEST EQ PUSH2 0x13BD DUP3 PUSH1 0x6 DUP2 GT ISZERO PUSH2 0x315 JUMPI PUSH2 0x315 PUSH2 0x1F76 JUMP JUMPDEST PUSH1 0x0 DUP5 DUP2 MSTORE PUSH1 0x1 PUSH1 0x20 MSTORE PUSH1 0x40 SWAP1 KECCAK256 SLOAD PUSH2 0x13E4 SWAP1 PUSH1 0xFF AND PUSH1 0x6 DUP2 GT ISZERO PUSH2 0x315 JUMPI PUSH2 0x315 PUSH2 0x1F76 JUMP JUMPDEST PUSH1 0x40 MLOAD PUSH1 0x20 ADD PUSH2 0x13F5 SWAP3 SWAP2 SWAP1 PUSH2 0x2053 JUMP JUMPDEST PUSH1 0x40 MLOAD PUSH1 0x20 DUP2 DUP4 SUB SUB DUP2 MSTORE SWAP1 PUSH1 0x40 MSTORE SWAP1 PUSH2 0x1422 JUMPI PUSH1 0x40 MLOAD PUSH3 0x461BCD PUSH1 0xE5 SHL DUP2 MSTORE PUSH1 0x4 ADD PUSH2 0x37F SWAP2 SWAP1 PUSH2 0x20D4 JUMP JUMPDEST POP PUSH1 0x0 SLOAD PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB AND PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB AND DUP4 PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB AND SUB PUSH2 0x148F JUMPI PUSH1 0x40 MLOAD PUSH3 0x461BCD PUSH1 0xE5 SHL DUP2 MSTORE PUSH1 0x20 PUSH1 0x4 DUP3 ADD MSTORE PUSH1 0x18 PUSH1 0x24 DUP3 ADD MSTORE PUSH32 0x4F776E65722063616E206E6F74206265206120766F7465720000000000000000 PUSH1 0x44 DUP3 ADD MSTORE PUSH1 0x64 ADD PUSH2 0x37F JUMP JUMPDEST PUSH1 0x0 DUP5 DUP2 MSTORE PUSH1 0x1 PUSH1 0x20 DUP2 DUP2 MSTORE PUSH1 0x40 DUP1 DUP5 KECCAK256 PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB DUP9 AND DUP6 MSTORE SWAP1 SWAP3 ADD SWAP1 MSTORE SWAP1 KECCAK256 SLOAD PUSH1 0xFF AND ISZERO PUSH2 0x1504 JUMPI PUSH1 0x40 MLOAD PUSH3 0x461BCD PUSH1 0xE5 SHL DUP2 MSTORE PUSH1 0x20 PUSH1 0x4 DUP3 ADD MSTORE PUSH1 0x1B PUSH1 0x24 DUP3 ADD MSTORE PUSH32 0x566F74657220697320616C726561647920726567697374657265640000000000 PUSH1 0x44 DUP3 ADD MSTORE PUSH1 0x64 ADD PUSH2 0x37F JUMP JUMPDEST PUSH1 0x40 DUP1 MLOAD PUSH1 0x80 DUP2 ADD DUP3 MSTORE PUSH1 0x1 DUP1 DUP3 MSTORE PUSH1 0x0 PUSH1 0x20 DUP1 DUP5 ADD DUP3 DUP2 MSTORE DUP5 DUP7 ADD DUP4 DUP2 MSTORE PUSH1 0x60 DUP7 ADD DUP5 DUP2 MSTORE DUP12 DUP6 MSTORE DUP6 DUP5 MSTORE DUP8 DUP6 KECCAK256 PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB DUP13 AND DUP7 MSTORE DUP1 DUP8 ADD DUP6 MSTORE SWAP8 DUP6 KECCAK256 SWAP7 MLOAD DUP8 SLOAD SWAP4 MLOAD SWAP3 MLOAD SWAP2 MLOAD PUSH2 0xFFFF NOT SWAP1 SWAP5 AND SWAP1 ISZERO ISZERO PUSH2 0xFF00 NOT AND OR PUSH2 0x100 SWAP3 ISZERO ISZERO SWAP3 SWAP1 SWAP3 MUL SWAP2 SWAP1 SWAP2 OR PUSH4 0xFFFF0000 NOT AND PUSH3 0x10000 PUSH1 0xFF SWAP3 DUP4 AND MUL PUSH4 0xFF000000 NOT AND OR PUSH4 0x1000000 SWAP2 SWAP1 SWAP3 AND MUL OR SWAP1 SWAP4 SSTORE DUP8 DUP2 MSTORE SWAP2 MSTORE PUSH1 0x2 SWAP1 SWAP2 ADD DUP1 SLOAD SWAP2 PUSH2 0x15AC DUP4 PUSH2 0x203A JUMP JUMPDEST SWAP1 SWAP2 SSTORE POP POP PUSH1 0x40 MLOAD PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB DUP5 AND DUP2 MSTORE DUP5 SWAP1 PUSH32 0xF45B8429C36D478F9A6D081C4811A819B98AA5B608588BED9D406405CF282473 SWAP1 PUSH1 0x20 ADD PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 LOG2 POP POP POP POP JUMP JUMPDEST PUSH2 0x15FD PUSH2 0x197E JUMP JUMPDEST DUP1 PUSH1 0x3 DUP1 PUSH1 0x0 DUP4 DUP2 MSTORE PUSH1 0x1 PUSH1 0x20 MSTORE PUSH1 0x40 SWAP1 KECCAK256 SLOAD PUSH1 0xFF AND PUSH1 0x6 DUP2 GT ISZERO PUSH2 0x1624 JUMPI PUSH2 0x1624 PUSH2 0x1F76 JUMP JUMPDEST EQ PUSH2 0x163A DUP3 PUSH1 0x6 DUP2 GT ISZERO PUSH2 0x315 JUMPI PUSH2 0x315 PUSH2 0x1F76 JUMP JUMPDEST PUSH1 0x0 DUP5 DUP2 MSTORE PUSH1 0x1 PUSH1 0x20 MSTORE PUSH1 0x40 SWAP1 KECCAK256 SLOAD PUSH2 0x1661 SWAP1 PUSH1 0xFF AND PUSH1 0x6 DUP2 GT ISZERO PUSH2 0x315 JUMPI PUSH2 0x315 PUSH2 0x1F76 JUMP JUMPDEST PUSH1 0x40 MLOAD PUSH1 0x20 ADD PUSH2 0x1672 SWAP3 SWAP2 SWAP1 PUSH2 0x2053 JUMP JUMPDEST PUSH1 0x40 MLOAD PUSH1 0x20 DUP2 DUP4 SUB SUB DUP2 MSTORE SWAP1 PUSH1 0x40 MSTORE SWAP1 PUSH2 0x169F JUMPI PUSH1 0x40 MLOAD PUSH3 0x461BCD PUSH1 0xE5 SHL DUP2 MSTORE PUSH1 0x4 ADD PUSH2 0x37F SWAP2 SWAP1 PUSH2 0x20D4 JUMP JUMPDEST POP PUSH1 0x0 DUP4 DUP2 MSTORE PUSH1 0x1 PUSH1 0x20 MSTORE PUSH1 0x40 SWAP1 DUP2 SWAP1 KECCAK256 DUP1 SLOAD PUSH1 0xFF NOT AND PUSH1 0x4 SWAP1 DUP2 OR SWAP1 SWAP2 SSTORE SWAP1 MLOAD DUP5 SWAP2 PUSH1 0x0 DUP1 MLOAD PUSH1 0x20 PUSH2 0x2538 DUP4 CODECOPY DUP2 MLOAD SWAP2 MSTORE SWAP2 PUSH2 0xC64 SWAP2 PUSH1 0x3 SWAP2 PUSH2 0x2009 JUMP JUMPDEST PUSH1 0x0 DUP3 CALLER PUSH2 0x16F4 PUSH1 0x0 SLOAD PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB AND SWAP1 JUMP JUMPDEST PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB AND EQ DUP1 PUSH2 0x1724 JUMPI POP PUSH1 0x0 DUP2 DUP2 MSTORE PUSH1 0x1 PUSH1 0x20 DUP2 DUP2 MSTORE PUSH1 0x40 DUP1 DUP5 KECCAK256 CALLER DUP6 MSTORE SWAP1 SWAP3 ADD SWAP1 MSTORE SWAP1 KECCAK256 SLOAD PUSH1 0xFF AND JUMPDEST PUSH2 0x1740 JUMPI PUSH1 0x40 MLOAD PUSH3 0x461BCD PUSH1 0xE5 SHL DUP2 MSTORE PUSH1 0x4 ADD PUSH2 0x37F SWAP1 PUSH2 0x2398 JUMP JUMPDEST DUP4 PUSH1 0x5 DUP1 PUSH1 0x0 DUP4 DUP2 MSTORE PUSH1 0x1 PUSH1 0x20 MSTORE PUSH1 0x40 SWAP1 KECCAK256 SLOAD PUSH1 0xFF AND PUSH1 0x6 DUP2 GT ISZERO PUSH2 0x1767 JUMPI PUSH2 0x1767 PUSH2 0x1F76 JUMP JUMPDEST LT ISZERO PUSH2 0x177E DUP3 PUSH1 0x6 DUP2 GT ISZERO PUSH2 0x315 JUMPI PUSH2 0x315 PUSH2 0x1F76 JUMP JUMPDEST PUSH1 0x0 DUP5 DUP2 MSTORE PUSH1 0x1 PUSH1 0x20 MSTORE PUSH1 0x40 SWAP1 KECCAK256 SLOAD PUSH2 0x17A5 SWAP1 PUSH1 0xFF AND PUSH1 0x6 DUP2 GT ISZERO PUSH2 0x315 JUMPI PUSH2 0x315 PUSH2 0x1F76 JUMP JUMPDEST PUSH1 0x40 MLOAD PUSH1 0x20 ADD PUSH2 0x17B6 SWAP3 SWAP2 SWAP1 PUSH2 0x23DF JUMP JUMPDEST PUSH1 0x40 MLOAD PUSH1 0x20 DUP2 DUP4 SUB SUB DUP2 MSTORE SWAP1 PUSH1 0x40 MSTORE SWAP1 PUSH2 0x17E3 JUMPI PUSH1 0x40 MLOAD PUSH3 0x461BCD PUSH1 0xE5 SHL DUP2 MSTORE PUSH1 0x4 ADD PUSH2 0x37F SWAP2 SWAP1 PUSH2 0x20D4 JUMP JUMPDEST POP POP POP PUSH1 0x0 SWAP4 DUP5 MSTORE POP POP PUSH1 0x1 PUSH1 0x20 DUP2 DUP2 MSTORE PUSH1 0x40 DUP1 DUP6 KECCAK256 PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB SWAP5 SWAP1 SWAP5 AND DUP6 MSTORE SWAP3 SWAP1 SWAP2 ADD SWAP1 MSTORE SWAP1 KECCAK256 SLOAD PUSH3 0x10000 SWAP1 DIV PUSH1 0xFF AND SWAP1 JUMP JUMPDEST PUSH2 0x1824 PUSH2 0x197E JUMP JUMPDEST DUP1 PUSH1 0x2 DUP1 PUSH1 0x0 DUP4 DUP2 MSTORE PUSH1 0x1 PUSH1 0x20 MSTORE PUSH1 0x40 SWAP1 KECCAK256 SLOAD PUSH1 0xFF AND PUSH1 0x6 DUP2 GT ISZERO PUSH2 0x184B JUMPI PUSH2 0x184B PUSH2 0x1F76 JUMP JUMPDEST EQ PUSH2 0x1861 DUP3 PUSH1 0x6 DUP2 GT ISZERO PUSH2 0x315 JUMPI PUSH2 0x315 PUSH2 0x1F76 JUMP JUMPDEST PUSH1 0x0 DUP5 DUP2 MSTORE PUSH1 0x1 PUSH1 0x20 MSTORE PUSH1 0x40 SWAP1 KECCAK256 SLOAD PUSH2 0x1888 SWAP1 PUSH1 0xFF AND PUSH1 0x6 DUP2 GT ISZERO PUSH2 0x315 JUMPI PUSH2 0x315 PUSH2 0x1F76 JUMP JUMPDEST PUSH1 0x40 MLOAD PUSH1 0x20 ADD PUSH2 0x1899 SWAP3 SWAP2 SWAP1 PUSH2 0x2053 JUMP JUMPDEST PUSH1 0x40 MLOAD PUSH1 0x20 DUP2 DUP4 SUB SUB DUP2 MSTORE SWAP1 PUSH1 0x40 MSTORE SWAP1 PUSH2 0x18C6 JUMPI PUSH1 0x40 MLOAD PUSH3 0x461BCD PUSH1 0xE5 SHL DUP2 MSTORE PUSH1 0x4 ADD PUSH2 0x37F SWAP2 SWAP1 PUSH2 0x20D4 JUMP JUMPDEST POP PUSH1 0x0 DUP4 DUP2 MSTORE PUSH1 0x1 PUSH1 0x20 MSTORE PUSH1 0x40 SWAP1 DUP2 SWAP1 KECCAK256 DUP1 SLOAD PUSH1 0xFF NOT AND PUSH1 0x3 SWAP1 DUP2 OR SWAP1 SWAP2 SSTORE SWAP1 MLOAD DUP5 SWAP2 PUSH1 0x0 DUP1 MLOAD PUSH1 0x20 PUSH2 0x2538 DUP4 CODECOPY DUP2 MLOAD SWAP2 MSTORE SWAP2 PUSH2 0xC64 SWAP2 PUSH1 0x2 SWAP2 PUSH2 0x2009 JUMP JUMPDEST PUSH2 0x190D PUSH2 0x197E JUMP JUMPDEST PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB DUP2 AND PUSH2 0x1972 JUMPI PUSH1 0x40 MLOAD PUSH3 0x461BCD PUSH1 0xE5 SHL DUP2 MSTORE PUSH1 0x20 PUSH1 0x4 DUP3 ADD MSTORE PUSH1 0x26 PUSH1 0x24 DUP3 ADD MSTORE PUSH32 0x4F776E61626C653A206E6577206F776E657220697320746865207A65726F2061 PUSH1 0x44 DUP3 ADD MSTORE PUSH6 0x646472657373 PUSH1 0xD0 SHL PUSH1 0x64 DUP3 ADD MSTORE PUSH1 0x84 ADD PUSH2 0x37F JUMP JUMPDEST PUSH2 0x197B DUP2 PUSH2 0x1AE1 JUMP JUMPDEST POP JUMP JUMPDEST PUSH1 0x0 SLOAD PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB AND CALLER EQ PUSH2 0xC83 JUMPI PUSH1 0x40 MLOAD PUSH3 0x461BCD PUSH1 0xE5 SHL DUP2 MSTORE PUSH1 0x20 PUSH1 0x4 DUP3 ADD DUP2 SWAP1 MSTORE PUSH1 0x24 DUP3 ADD MSTORE PUSH32 0x4F776E61626C653A2063616C6C6572206973206E6F7420746865206F776E6572 PUSH1 0x44 DUP3 ADD MSTORE PUSH1 0x64 ADD PUSH2 0x37F JUMP JUMPDEST PUSH1 0x60 DUP2 PUSH1 0x0 SUB PUSH2 0x19FF JUMPI POP POP PUSH1 0x40 DUP1 MLOAD DUP1 DUP3 ADD SWAP1 SWAP2 MSTORE PUSH1 0x1 DUP2 MSTORE PUSH1 0x3 PUSH1 0xFC SHL PUSH1 0x20 DUP3 ADD MSTORE SWAP1 JUMP JUMPDEST DUP2 PUSH1 0x0 JUMPDEST DUP2 ISZERO PUSH2 0x1A29 JUMPI DUP1 PUSH2 0x1A13 DUP2 PUSH2 0x203A JUMP JUMPDEST SWAP2 POP PUSH2 0x1A22 SWAP1 POP PUSH1 0xA DUP4 PUSH2 0x24C1 JUMP JUMPDEST SWAP2 POP PUSH2 0x1A03 JUMP JUMPDEST PUSH1 0x0 DUP2 PUSH8 0xFFFFFFFFFFFFFFFF DUP2 GT ISZERO PUSH2 0x1A44 JUMPI PUSH2 0x1A44 PUSH2 0x20E7 JUMP JUMPDEST PUSH1 0x40 MLOAD SWAP1 DUP1 DUP3 MSTORE DUP1 PUSH1 0x1F ADD PUSH1 0x1F NOT AND PUSH1 0x20 ADD DUP3 ADD PUSH1 0x40 MSTORE DUP1 ISZERO PUSH2 0x1A6E JUMPI PUSH1 0x20 DUP3 ADD DUP2 DUP1 CALLDATASIZE DUP4 CALLDATACOPY ADD SWAP1 POP JUMPDEST POP SWAP1 POP JUMPDEST DUP5 ISZERO PUSH2 0x1AD9 JUMPI PUSH2 0x1A83 PUSH1 0x1 DUP4 PUSH2 0x214D JUMP JUMPDEST SWAP2 POP PUSH2 0x1A90 PUSH1 0xA DUP7 PUSH2 0x24D5 JUMP JUMPDEST PUSH2 0x1A9B SWAP1 PUSH1 0x30 PUSH2 0x24E9 JUMP JUMPDEST PUSH1 0xF8 SHL DUP2 DUP4 DUP2 MLOAD DUP2 LT PUSH2 0x1AB0 JUMPI PUSH2 0x1AB0 PUSH2 0x20FD JUMP JUMPDEST PUSH1 0x20 ADD ADD SWAP1 PUSH1 0x1 PUSH1 0x1 PUSH1 0xF8 SHL SUB NOT AND SWAP1 DUP2 PUSH1 0x0 BYTE SWAP1 MSTORE8 POP PUSH2 0x1AD2 PUSH1 0xA DUP7 PUSH2 0x24C1 JUMP JUMPDEST SWAP5 POP PUSH2 0x1A72 JUMP JUMPDEST SWAP5 SWAP4 POP POP POP POP JUMP JUMPDEST PUSH1 0x0 DUP1 SLOAD PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB DUP4 DUP2 AND PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB NOT DUP4 AND DUP2 OR DUP5 SSTORE PUSH1 0x40 MLOAD SWAP2 SWAP1 SWAP3 AND SWAP3 DUP4 SWAP2 PUSH32 0x8BE0079C531659141344CD1FD0A4F28419497F9722A3DAAFE3B4186F6B6457E0 SWAP2 SWAP1 LOG3 POP POP JUMP JUMPDEST PUSH1 0x0 DUP3 DUP2 MSTORE PUSH1 0x1 PUSH1 0x20 MSTORE PUSH1 0x40 SWAP1 KECCAK256 PUSH1 0x4 ADD SLOAD PUSH1 0xFF GT PUSH2 0x1B87 JUMPI PUSH1 0x40 MLOAD PUSH3 0x461BCD PUSH1 0xE5 SHL DUP2 MSTORE PUSH1 0x20 PUSH1 0x4 DUP3 ADD MSTORE PUSH1 0x12 PUSH1 0x24 DUP3 ADD MSTORE PUSH18 0x546F6F206D616E792070726F706F73616C73 PUSH1 0x70 SHL PUSH1 0x44 DUP3 ADD MSTORE PUSH1 0x64 ADD PUSH2 0x37F JUMP JUMPDEST PUSH1 0x0 DUP3 DUP2 MSTORE PUSH1 0x1 PUSH1 0x20 DUP2 DUP2 MSTORE PUSH1 0x40 DUP1 DUP5 KECCAK256 DUP2 MLOAD PUSH1 0x60 DUP2 ADD DUP4 MSTORE DUP7 DUP2 MSTORE DUP1 DUP5 ADD DUP7 SWAP1 MSTORE CALLER SWAP3 DUP2 ADD SWAP3 SWAP1 SWAP3 MSTORE PUSH1 0x4 ADD DUP1 SLOAD SWAP4 DUP5 ADD DUP2 SSTORE DUP5 MSTORE SWAP3 KECCAK256 DUP3 MLOAD PUSH1 0x3 SWAP1 SWAP3 MUL ADD SWAP1 DUP2 SWAP1 PUSH2 0x1BD4 SWAP1 DUP3 PUSH2 0x21B1 JUMP JUMPDEST POP PUSH1 0x20 DUP3 DUP2 ADD MLOAD PUSH1 0x1 DUP4 DUP2 ADD SWAP2 SWAP1 SWAP2 SSTORE PUSH1 0x40 SWAP4 DUP5 ADD MLOAD PUSH1 0x2 SWAP1 SWAP4 ADD DUP1 SLOAD PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB NOT AND PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB SWAP1 SWAP5 AND SWAP4 SWAP1 SWAP4 OR SWAP1 SWAP3 SSTORE PUSH1 0x0 DUP6 DUP2 MSTORE DUP3 DUP3 MSTORE DUP4 DUP2 KECCAK256 CALLER DUP3 MSTORE SWAP1 SWAP3 ADD SWAP1 MSTORE KECCAK256 DUP1 SLOAD PUSH4 0x1000000 SWAP1 DIV PUSH1 0xFF AND SWAP1 PUSH1 0x3 PUSH2 0x1C39 DUP4 PUSH2 0x24FC JUMP JUMPDEST DUP3 SLOAD PUSH1 0xFF SWAP2 DUP3 AND PUSH2 0x100 SWAP4 SWAP1 SWAP4 EXP SWAP3 DUP4 MUL SWAP2 SWAP1 SWAP3 MUL NOT SWAP1 SWAP2 AND OR SWAP1 SSTORE POP PUSH1 0x0 DUP3 DUP2 MSTORE PUSH1 0x1 PUSH1 0x20 DUP2 SWAP1 MSTORE PUSH1 0x40 DUP3 KECCAK256 PUSH1 0x4 ADD SLOAD PUSH2 0x1C74 SWAP2 SWAP1 PUSH2 0x214D JUMP JUMPDEST SWAP1 POP DUP3 PUSH32 0x734FEEC28275467965F53538A3F7BB9E350E316EC6F015C595D6DAE504A5762F DUP3 PUSH1 0x1 PUSH1 0x0 DUP8 DUP2 MSTORE PUSH1 0x20 ADD SWAP1 DUP2 MSTORE PUSH1 0x20 ADD PUSH1 0x0 KECCAK256 PUSH1 0x4 ADD DUP5 PUSH1 0xFF AND DUP2 SLOAD DUP2 LT PUSH2 0x1CC3 JUMPI PUSH2 0x1CC3 PUSH2 0x20FD JUMP JUMPDEST SWAP1 PUSH1 0x0 MSTORE PUSH1 0x20 PUSH1 0x0 KECCAK256 SWAP1 PUSH1 0x3 MUL ADD PUSH1 0x0 ADD PUSH1 0x40 MLOAD PUSH2 0xC64 SWAP3 SWAP2 SWAP1 PUSH2 0x251B JUMP JUMPDEST PUSH1 0x0 DUP1 DUP4 PUSH1 0x1F DUP5 ADD SLT PUSH2 0x1CF4 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST POP DUP2 CALLDATALOAD PUSH8 0xFFFFFFFFFFFFFFFF DUP2 GT ISZERO PUSH2 0x1D0C JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST PUSH1 0x20 DUP4 ADD SWAP2 POP DUP4 PUSH1 0x20 DUP3 DUP6 ADD ADD GT ISZERO PUSH2 0x1D24 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST SWAP3 POP SWAP3 SWAP1 POP JUMP JUMPDEST PUSH1 0x0 DUP1 PUSH1 0x0 DUP1 PUSH1 0x40 DUP6 DUP8 SUB SLT ISZERO PUSH2 0x1D41 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST DUP5 CALLDATALOAD PUSH8 0xFFFFFFFFFFFFFFFF DUP1 DUP3 GT ISZERO PUSH2 0x1D59 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST PUSH2 0x1D65 DUP9 DUP4 DUP10 ADD PUSH2 0x1CE2 JUMP JUMPDEST SWAP1 SWAP7 POP SWAP5 POP PUSH1 0x20 DUP8 ADD CALLDATALOAD SWAP2 POP DUP1 DUP3 GT ISZERO PUSH2 0x1D7E JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST POP PUSH2 0x1D8B DUP8 DUP3 DUP9 ADD PUSH2 0x1CE2 JUMP JUMPDEST SWAP6 SWAP9 SWAP5 SWAP8 POP SWAP6 POP POP POP POP JUMP JUMPDEST PUSH1 0x0 PUSH1 0x20 DUP3 DUP5 SUB SLT ISZERO PUSH2 0x1DA9 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST POP CALLDATALOAD SWAP2 SWAP1 POP JUMP JUMPDEST PUSH1 0x0 JUMPDEST DUP4 DUP2 LT ISZERO PUSH2 0x1DCB JUMPI DUP2 DUP2 ADD MLOAD DUP4 DUP3 ADD MSTORE PUSH1 0x20 ADD PUSH2 0x1DB3 JUMP JUMPDEST POP POP PUSH1 0x0 SWAP2 ADD MSTORE JUMP JUMPDEST PUSH1 0x0 DUP2 MLOAD DUP1 DUP5 MSTORE PUSH2 0x1DEC DUP2 PUSH1 0x20 DUP7 ADD PUSH1 0x20 DUP7 ADD PUSH2 0x1DB0 JUMP JUMPDEST PUSH1 0x1F ADD PUSH1 0x1F NOT AND SWAP3 SWAP1 SWAP3 ADD PUSH1 0x20 ADD SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH1 0x0 PUSH1 0x20 DUP1 DUP4 ADD DUP2 DUP5 MSTORE DUP1 DUP6 MLOAD DUP1 DUP4 MSTORE PUSH1 0x40 SWAP3 POP DUP3 DUP7 ADD SWAP2 POP DUP3 DUP2 PUSH1 0x5 SHL DUP8 ADD ADD DUP5 DUP9 ADD PUSH1 0x0 JUMPDEST DUP4 DUP2 LT ISZERO PUSH2 0x1E7C JUMPI PUSH1 0x3F NOT DUP10 DUP5 SUB ADD DUP6 MSTORE DUP2 MLOAD PUSH1 0x60 DUP2 MLOAD DUP2 DUP7 MSTORE PUSH2 0x1E4D DUP3 DUP8 ADD DUP3 PUSH2 0x1DD4 JUMP JUMPDEST DUP4 DUP12 ADD MLOAD DUP8 DUP13 ADD MSTORE SWAP3 DUP10 ADD MLOAD PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB AND SWAP6 DUP10 ADD SWAP6 SWAP1 SWAP6 MSTORE POP SWAP5 DUP8 ADD SWAP5 SWAP3 POP SWAP1 DUP7 ADD SWAP1 PUSH1 0x1 ADD PUSH2 0x1E27 JUMP JUMPDEST POP SWAP1 SWAP9 SWAP8 POP POP POP POP POP POP POP POP JUMP JUMPDEST PUSH1 0x0 DUP1 PUSH1 0x0 PUSH1 0x40 DUP5 DUP7 SUB SLT ISZERO PUSH2 0x1E9F JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST DUP4 CALLDATALOAD SWAP3 POP PUSH1 0x20 DUP5 ADD CALLDATALOAD PUSH8 0xFFFFFFFFFFFFFFFF DUP2 GT ISZERO PUSH2 0x1EBD JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST PUSH2 0x1EC9 DUP7 DUP3 DUP8 ADD PUSH2 0x1CE2 JUMP JUMPDEST SWAP5 SWAP8 SWAP1 SWAP7 POP SWAP4 SWAP5 POP POP POP POP JUMP JUMPDEST PUSH1 0x0 DUP1 PUSH1 0x40 DUP4 DUP6 SUB SLT ISZERO PUSH2 0x1EE9 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST DUP3 CALLDATALOAD SWAP2 POP PUSH1 0x20 DUP4 ADD CALLDATALOAD PUSH1 0xFF DUP2 AND DUP2 EQ PUSH2 0x1F01 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST DUP1 SWAP2 POP POP SWAP3 POP SWAP3 SWAP1 POP JUMP JUMPDEST DUP1 CALLDATALOAD PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB DUP2 AND DUP2 EQ PUSH2 0x1F23 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST SWAP2 SWAP1 POP JUMP JUMPDEST PUSH1 0x0 DUP1 PUSH1 0x40 DUP4 DUP6 SUB SLT ISZERO PUSH2 0x1F3B JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST DUP3 CALLDATALOAD SWAP2 POP PUSH2 0x1F4B PUSH1 0x20 DUP5 ADD PUSH2 0x1F0C JUMP JUMPDEST SWAP1 POP SWAP3 POP SWAP3 SWAP1 POP JUMP JUMPDEST PUSH1 0x0 PUSH1 0x20 DUP3 DUP5 SUB SLT ISZERO PUSH2 0x1F66 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST PUSH2 0x1F6F DUP3 PUSH2 0x1F0C JUMP JUMPDEST SWAP4 SWAP3 POP POP POP JUMP JUMPDEST PUSH4 0x4E487B71 PUSH1 0xE0 SHL PUSH1 0x0 MSTORE PUSH1 0x21 PUSH1 0x4 MSTORE PUSH1 0x24 PUSH1 0x0 REVERT JUMPDEST DUP2 DUP4 MSTORE DUP2 DUP2 PUSH1 0x20 DUP6 ADD CALLDATACOPY POP PUSH1 0x0 DUP3 DUP3 ADD PUSH1 0x20 SWAP1 DUP2 ADD SWAP2 SWAP1 SWAP2 MSTORE PUSH1 0x1F SWAP1 SWAP2 ADD PUSH1 0x1F NOT AND SWAP1 SWAP2 ADD ADD SWAP1 JUMP JUMPDEST PUSH1 0x40 DUP2 MSTORE PUSH1 0x0 PUSH2 0x1FC9 PUSH1 0x40 DUP4 ADD DUP7 DUP9 PUSH2 0x1F8C JUMP JUMPDEST DUP3 DUP2 SUB PUSH1 0x20 DUP5 ADD MSTORE PUSH2 0x1FDC DUP2 DUP6 DUP8 PUSH2 0x1F8C JUMP JUMPDEST SWAP8 SWAP7 POP POP POP POP POP POP POP JUMP JUMPDEST PUSH1 0x7 DUP2 LT PUSH2 0x2005 JUMPI PUSH4 0x4E487B71 PUSH1 0xE0 SHL PUSH1 0x0 MSTORE PUSH1 0x21 PUSH1 0x4 MSTORE PUSH1 0x24 PUSH1 0x0 REVERT JUMPDEST SWAP1 MSTORE JUMP JUMPDEST PUSH1 0x40 DUP2 ADD PUSH2 0x2017 DUP3 DUP6 PUSH2 0x1FE7 JUMP JUMPDEST PUSH2 0x1F6F PUSH1 0x20 DUP4 ADD DUP5 PUSH2 0x1FE7 JUMP JUMPDEST PUSH4 0x4E487B71 PUSH1 0xE0 SHL PUSH1 0x0 MSTORE PUSH1 0x11 PUSH1 0x4 MSTORE PUSH1 0x24 PUSH1 0x0 REVERT JUMPDEST PUSH1 0x0 PUSH1 0x1 DUP3 ADD PUSH2 0x204C JUMPI PUSH2 0x204C PUSH2 0x2024 JUMP JUMPDEST POP PUSH1 0x1 ADD SWAP1 JUMP JUMPDEST PUSH32 0x556E657870656374656420766F74696E672073657373696F6E20737461747573 DUP2 MSTORE PUSH11 0x3A2065787065637465643D PUSH1 0xA8 SHL PUSH1 0x20 DUP3 ADD MSTORE PUSH1 0x0 DUP4 MLOAD PUSH2 0x209F DUP2 PUSH1 0x2B DUP6 ADD PUSH1 0x20 DUP9 ADD PUSH2 0x1DB0 JUMP JUMPDEST PUSH9 0x2063757272656E743D PUSH1 0xB8 SHL PUSH1 0x2B SWAP2 DUP5 ADD SWAP2 DUP3 ADD MSTORE DUP4 MLOAD PUSH2 0x20C8 DUP2 PUSH1 0x34 DUP5 ADD PUSH1 0x20 DUP9 ADD PUSH2 0x1DB0 JUMP JUMPDEST ADD PUSH1 0x34 ADD SWAP5 SWAP4 POP POP POP POP JUMP JUMPDEST PUSH1 0x20 DUP2 MSTORE PUSH1 0x0 PUSH2 0x1F6F PUSH1 0x20 DUP4 ADD DUP5 PUSH2 0x1DD4 JUMP JUMPDEST PUSH4 0x4E487B71 PUSH1 0xE0 SHL PUSH1 0x0 MSTORE PUSH1 0x41 PUSH1 0x4 MSTORE PUSH1 0x24 PUSH1 0x0 REVERT JUMPDEST PUSH4 0x4E487B71 PUSH1 0xE0 SHL PUSH1 0x0 MSTORE PUSH1 0x32 PUSH1 0x4 MSTORE PUSH1 0x24 PUSH1 0x0 REVERT JUMPDEST PUSH1 0x1 DUP2 DUP2 SHR SWAP1 DUP3 AND DUP1 PUSH2 0x2127 JUMPI PUSH1 0x7F DUP3 AND SWAP2 POP JUMPDEST PUSH1 0x20 DUP3 LT DUP2 SUB PUSH2 0x2147 JUMPI PUSH4 0x4E487B71 PUSH1 0xE0 SHL PUSH1 0x0 MSTORE PUSH1 0x22 PUSH1 0x4 MSTORE PUSH1 0x24 PUSH1 0x0 REVERT JUMPDEST POP SWAP2 SWAP1 POP JUMP JUMPDEST DUP2 DUP2 SUB DUP2 DUP2 GT ISZERO PUSH2 0x2160 JUMPI PUSH2 0x2160 PUSH2 0x2024 JUMP JUMPDEST SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH1 0x1F DUP3 GT ISZERO PUSH2 0x21AC JUMPI PUSH1 0x0 DUP2 DUP2 MSTORE PUSH1 0x20 DUP2 KECCAK256 PUSH1 0x1F DUP6 ADD PUSH1 0x5 SHR DUP2 ADD PUSH1 0x20 DUP7 LT ISZERO PUSH2 0x218D JUMPI POP DUP1 JUMPDEST PUSH1 0x1F DUP6 ADD PUSH1 0x5 SHR DUP3 ADD SWAP2 POP JUMPDEST DUP2 DUP2 LT ISZERO PUSH2 0xE71 JUMPI DUP3 DUP2 SSTORE PUSH1 0x1 ADD PUSH2 0x2199 JUMP JUMPDEST POP POP POP JUMP JUMPDEST DUP2 MLOAD PUSH8 0xFFFFFFFFFFFFFFFF DUP2 GT ISZERO PUSH2 0x21CB JUMPI PUSH2 0x21CB PUSH2 0x20E7 JUMP JUMPDEST PUSH2 0x21DF DUP2 PUSH2 0x21D9 DUP5 SLOAD PUSH2 0x2113 JUMP JUMPDEST DUP5 PUSH2 0x2166 JUMP JUMPDEST PUSH1 0x20 DUP1 PUSH1 0x1F DUP4 GT PUSH1 0x1 DUP2 EQ PUSH2 0x2214 JUMPI PUSH1 0x0 DUP5 ISZERO PUSH2 0x21FC JUMPI POP DUP6 DUP4 ADD MLOAD JUMPDEST PUSH1 0x0 NOT PUSH1 0x3 DUP7 SWAP1 SHL SHR NOT AND PUSH1 0x1 DUP6 SWAP1 SHL OR DUP6 SSTORE PUSH2 0xE71 JUMP JUMPDEST PUSH1 0x0 DUP6 DUP2 MSTORE PUSH1 0x20 DUP2 KECCAK256 PUSH1 0x1F NOT DUP7 AND SWAP2 JUMPDEST DUP3 DUP2 LT ISZERO PUSH2 0x2243 JUMPI DUP9 DUP7 ADD MLOAD DUP3 SSTORE SWAP5 DUP5 ADD SWAP5 PUSH1 0x1 SWAP1 SWAP2 ADD SWAP1 DUP5 ADD PUSH2 0x2224 JUMP JUMPDEST POP DUP6 DUP3 LT ISZERO PUSH2 0x2261 JUMPI DUP8 DUP6 ADD MLOAD PUSH1 0x0 NOT PUSH1 0x3 DUP9 SWAP1 SHL PUSH1 0xF8 AND SHR NOT AND DUP2 SSTORE JUMPDEST POP POP POP POP POP PUSH1 0x1 SWAP1 DUP2 SHL ADD SWAP1 SSTORE POP JUMP JUMPDEST PUSH1 0x0 DUP2 SLOAD PUSH2 0x227E DUP2 PUSH2 0x2113 JUMP JUMPDEST DUP1 DUP6 MSTORE PUSH1 0x20 PUSH1 0x1 DUP4 DUP2 AND DUP1 ISZERO PUSH2 0x229B JUMPI PUSH1 0x1 DUP2 EQ PUSH2 0x22B5 JUMPI PUSH2 0x22E3 JUMP JUMPDEST PUSH1 0xFF NOT DUP6 AND DUP9 DUP5 ADD MSTORE DUP4 ISZERO ISZERO PUSH1 0x5 SHL DUP9 ADD DUP4 ADD SWAP6 POP PUSH2 0x22E3 JUMP JUMPDEST DUP7 PUSH1 0x0 MSTORE DUP3 PUSH1 0x0 KECCAK256 PUSH1 0x0 JUMPDEST DUP6 DUP2 LT ISZERO PUSH2 0x22DB JUMPI DUP2 SLOAD DUP11 DUP3 ADD DUP7 ADD MSTORE SWAP1 DUP4 ADD SWAP1 DUP5 ADD PUSH2 0x22C0 JUMP JUMPDEST DUP10 ADD DUP5 ADD SWAP7 POP POP JUMPDEST POP POP POP POP POP SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH1 0x0 PUSH1 0xA0 DUP3 ADD DUP8 DUP4 MSTORE PUSH1 0x20 DUP8 DUP2 DUP6 ADD MSTORE PUSH1 0x40 DUP8 DUP2 DUP7 ADD MSTORE PUSH1 0x60 DUP8 DUP2 DUP8 ADD MSTORE PUSH1 0xA0 PUSH1 0x80 DUP8 ADD MSTORE DUP4 DUP8 SLOAD DUP1 DUP7 MSTORE PUSH1 0xC0 DUP9 ADD SWAP2 POP PUSH1 0xC0 DUP2 PUSH1 0x5 SHL DUP10 ADD ADD SWAP6 POP DUP9 PUSH1 0x0 MSTORE DUP5 PUSH1 0x0 KECCAK256 PUSH1 0x0 JUMPDEST DUP3 DUP2 LT ISZERO PUSH2 0x2385 JUMPI DUP10 DUP9 SUB PUSH1 0xBF NOT ADD DUP5 MSTORE DUP5 DUP9 MSTORE PUSH2 0x2355 DUP6 DUP10 ADD DUP4 PUSH2 0x2271 JUMP JUMPDEST PUSH1 0x1 DUP4 DUP2 ADD SLOAD DUP11 DUP11 ADD MSTORE PUSH1 0x2 DUP5 ADD SLOAD PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB AND SWAP10 DUP9 ADD SWAP10 SWAP1 SWAP10 MSTORE SWAP8 SWAP4 DUP8 ADD SWAP4 PUSH1 0x3 SWAP1 SWAP3 ADD SWAP2 ADD PUSH2 0x2335 JUMP JUMPDEST POP SWAP6 SWAP14 SWAP13 POP POP POP POP POP POP POP POP POP POP POP POP POP JUMP JUMPDEST PUSH1 0x20 DUP1 DUP3 MSTORE PUSH1 0x27 SWAP1 DUP3 ADD MSTORE PUSH32 0x43616C6C6572206973206E6F74206F776E6572206F7220726567697374657265 PUSH1 0x40 DUP3 ADD MSTORE PUSH7 0x32103B37BA32B9 PUSH1 0xC9 SHL PUSH1 0x60 DUP3 ADD MSTORE PUSH1 0x80 ADD SWAP1 JUMP JUMPDEST PUSH32 0x556E657870656374656420766F74696E672073657373696F6E20737461747573 DUP2 MSTORE PUSH12 0x3A2065787065637465643E3D PUSH1 0xA0 SHL PUSH1 0x20 DUP3 ADD MSTORE PUSH1 0x0 DUP4 MLOAD PUSH2 0x242C DUP2 PUSH1 0x2C DUP6 ADD PUSH1 0x20 DUP9 ADD PUSH2 0x1DB0 JUMP JUMPDEST PUSH9 0x2063757272656E743D PUSH1 0xB8 SHL PUSH1 0x2C SWAP2 DUP5 ADD SWAP2 DUP3 ADD MSTORE DUP4 MLOAD PUSH2 0x2455 DUP2 PUSH1 0x35 DUP5 ADD PUSH1 0x20 DUP9 ADD PUSH2 0x1DB0 JUMP JUMPDEST ADD PUSH1 0x35 ADD SWAP5 SWAP4 POP POP POP POP JUMP JUMPDEST PUSH9 0x283937B837B9B0B61 PUSH1 0xBD SHL DUP2 MSTORE PUSH1 0x0 DUP3 MLOAD PUSH2 0x2485 DUP2 PUSH1 0x9 DUP6 ADD PUSH1 0x20 DUP8 ADD PUSH2 0x1DB0 JUMP JUMPDEST PUSH15 0x8191BD95CC81B9BDD08195E1A5CDD PUSH1 0x8A SHL PUSH1 0x9 SWAP4 SWAP1 SWAP2 ADD SWAP3 DUP4 ADD MSTORE POP PUSH1 0x18 ADD SWAP2 SWAP1 POP JUMP JUMPDEST PUSH4 0x4E487B71 PUSH1 0xE0 SHL PUSH1 0x0 MSTORE PUSH1 0x12 PUSH1 0x4 MSTORE PUSH1 0x24 PUSH1 0x0 REVERT JUMPDEST PUSH1 0x0 DUP3 PUSH2 0x24D0 JUMPI PUSH2 0x24D0 PUSH2 0x24AB JUMP JUMPDEST POP DIV SWAP1 JUMP JUMPDEST PUSH1 0x0 DUP3 PUSH2 0x24E4 JUMPI PUSH2 0x24E4 PUSH2 0x24AB JUMP JUMPDEST POP MOD SWAP1 JUMP JUMPDEST DUP1 DUP3 ADD DUP1 DUP3 GT ISZERO PUSH2 0x2160 JUMPI PUSH2 0x2160 PUSH2 0x2024 JUMP JUMPDEST PUSH1 0x0 PUSH1 0xFF DUP3 AND PUSH1 0xFF DUP2 SUB PUSH2 0x2512 JUMPI PUSH2 0x2512 PUSH2 0x2024 JUMP JUMPDEST PUSH1 0x1 ADD SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH1 0xFF DUP4 AND DUP2 MSTORE PUSH1 0x40 PUSH1 0x20 DUP3 ADD MSTORE PUSH1 0x0 PUSH2 0x1AD9 PUSH1 0x40 DUP4 ADD DUP5 PUSH2 0x2271 JUMP INVALID 0xB0 PUSH8 0x99E10826978A386 PUSH22 0x10AD1E0DCF4CA5CEF8E422FD8DF2FC3D679167FE8DA2 PUSH5 0x6970667358 0x22 SLT KECCAK256 POP 0xE7 DUP5 0xFC 0x5C 0xEC CALLDATASIZE MSTORE8 0xB8 BLOCKHASH 0xC1 0xBD EXTCODESIZE 0xF9 PUSH6 0xDF0C90B02147 0xAB PUSH2 0x2AC2 0xEB MOD 0xD8 0x1E SWAP10 0xF6 0x21 PUSH5 0x736F6C6343 STOP ADDMOD GT STOP CALLER ",
              "sourceMap": "1520:15723:3:-:0;;;;;;;;;;;;-1:-1:-1;936:32:0;719:10:1;936:18:0;:32::i;:::-;1520:15723:3;;2433:187:0;2506:16;2525:6;;-1:-1:-1;;;;;2541:17:0;;;-1:-1:-1;;;;;;2541:17:0;;;;;;2573:40;;2525:6;;;;;;;2573:40;;2506:16;2573:40;2496:124;2433:187;:::o;1520:15723:3:-;;;;;;;"
            },
            "deployedBytecode": {
              "functionDebugData": {
                "@_checkOwner_54": {
                  "entryPoint": 6526,
                  "id": 54,
                  "parameterSlots": 0,
                  "returnSlots": 0
                },
                "@_msgSender_124": {
                  "entryPoint": null,
                  "id": 124,
                  "parameterSlots": 0,
                  "returnSlots": 1
                },
                "@_registerProposal_1320": {
                  "entryPoint": 6961,
                  "id": 1320,
                  "parameterSlots": 2,
                  "returnSlots": 0
                },
                "@_transferOwnership_111": {
                  "entryPoint": 6881,
                  "id": 111,
                  "parameterSlots": 1,
                  "returnSlots": 0
                },
                "@createVotingSession_646": {
                  "entryPoint": 544,
                  "id": 646,
                  "parameterSlots": 4,
                  "returnSlots": 0
                },
                "@getVote_1225": {
                  "entryPoint": 5854,
                  "id": 1225,
                  "parameterSlots": 2,
                  "returnSlots": 1
                },
                "@getWinners_1249": {
                  "entryPoint": 2388,
                  "id": 1249,
                  "parameterSlots": 1,
                  "returnSlots": 1
                },
                "@owner_40": {
                  "entryPoint": null,
                  "id": 40,
                  "parameterSlots": 0,
                  "returnSlots": 1
                },
                "@registerProposal_1084": {
                  "entryPoint": 3205,
                  "id": 1084,
                  "parameterSlots": 3,
                  "returnSlots": 0
                },
                "@registerVoter_707": {
                  "entryPoint": 4984,
                  "id": 707,
                  "parameterSlots": 2,
                  "returnSlots": 0
                },
                "@renounceOwnership_68": {
                  "entryPoint": 3185,
                  "id": 68,
                  "parameterSlots": 0,
                  "returnSlots": 0
                },
                "@startProposalsRegistration_747": {
                  "entryPoint": 3705,
                  "id": 747,
                  "parameterSlots": 1,
                  "returnSlots": 0
                },
                "@startVotingSession_807": {
                  "entryPoint": 5621,
                  "id": 807,
                  "parameterSlots": 1,
                  "returnSlots": 0
                },
                "@stopProposalsRegistration_777": {
                  "entryPoint": 6172,
                  "id": 777,
                  "parameterSlots": 1,
                  "returnSlots": 0
                },
                "@stopVotingSession_837": {
                  "entryPoint": 2939,
                  "id": 837,
                  "parameterSlots": 1,
                  "returnSlots": 0
                },
                "@tallyVotes_1048": {
                  "entryPoint": 720,
                  "id": 1048,
                  "parameterSlots": 1,
                  "returnSlots": 0
                },
                "@toString_222": {
                  "entryPoint": 6616,
                  "id": 222,
                  "parameterSlots": 1,
                  "returnSlots": 1
                },
                "@transferOwnership_91": {
                  "entryPoint": 6405,
                  "id": 91,
                  "parameterSlots": 1,
                  "returnSlots": 0
                },
                "@vote_1198": {
                  "entryPoint": 4023,
                  "id": 1198,
                  "parameterSlots": 2,
                  "returnSlots": 0
                },
                "abi_decode_address": {
                  "entryPoint": 7948,
                  "id": null,
                  "parameterSlots": 1,
                  "returnSlots": 1
                },
                "abi_decode_string_calldata": {
                  "entryPoint": 7394,
                  "id": null,
                  "parameterSlots": 2,
                  "returnSlots": 2
                },
                "abi_decode_tuple_t_address": {
                  "entryPoint": 8020,
                  "id": null,
                  "parameterSlots": 2,
                  "returnSlots": 1
                },
                "abi_decode_tuple_t_string_calldata_ptrt_string_calldata_ptr": {
                  "entryPoint": 7467,
                  "id": null,
                  "parameterSlots": 2,
                  "returnSlots": 4
                },
                "abi_decode_tuple_t_uint256": {
                  "entryPoint": 7575,
                  "id": null,
                  "parameterSlots": 2,
                  "returnSlots": 1
                },
                "abi_decode_tuple_t_uint256t_address": {
                  "entryPoint": 7976,
                  "id": null,
                  "parameterSlots": 2,
                  "returnSlots": 2
                },
                "abi_decode_tuple_t_uint256t_string_calldata_ptr": {
                  "entryPoint": 7818,
                  "id": null,
                  "parameterSlots": 2,
                  "returnSlots": 3
                },
                "abi_decode_tuple_t_uint256t_uint8": {
                  "entryPoint": 7894,
                  "id": null,
                  "parameterSlots": 2,
                  "returnSlots": 2
                },
                "abi_encode_enum_WorkflowStatus": {
                  "entryPoint": 8167,
                  "id": null,
                  "parameterSlots": 2,
                  "returnSlots": 0
                },
                "abi_encode_string": {
                  "entryPoint": 7636,
                  "id": null,
                  "parameterSlots": 2,
                  "returnSlots": 1
                },
                "abi_encode_string_calldata": {
                  "entryPoint": 8076,
                  "id": null,
                  "parameterSlots": 3,
                  "returnSlots": 1
                },
                "abi_encode_string_storage": {
                  "entryPoint": 8817,
                  "id": null,
                  "parameterSlots": 2,
                  "returnSlots": 1
                },
                "abi_encode_tuple_packed_t_stringliteral_3d620b44d0ea3d0fd41b8141758febf894dd941858e027857ca07a3929ff2892_t_string_memory_ptr_t_stringliteral_3fd9b0dcd722604cd4fd85d779090fb081569f1da68546e1c1a84a77cdcb3486_t_string_memory_ptr__to_t_string_memory_ptr_t_string_memory_ptr_t_bytes9_t_string_memory_ptr__nonPadded_inplace_fromStack_reversed": {
                  "entryPoint": 8275,
                  "id": null,
                  "parameterSlots": 3,
                  "returnSlots": 1
                },
                "abi_encode_tuple_packed_t_stringliteral_8f119cfc6e611f08fd8a52f700c95b25100149c739be9a9b6e45b3e14ffb0039_t_string_memory_ptr_t_stringliteral_3fd9b0dcd722604cd4fd85d779090fb081569f1da68546e1c1a84a77cdcb3486_t_string_memory_ptr__to_t_string_memory_ptr_t_string_memory_ptr_t_bytes9_t_string_memory_ptr__nonPadded_inplace_fromStack_reversed": {
                  "entryPoint": 9183,
                  "id": null,
                  "parameterSlots": 3,
                  "returnSlots": 1
                },
                "abi_encode_tuple_packed_t_stringliteral_95941de2cf661822a59b247d118deba693dab348b1a72d43aed94ab15dfa3818_t_string_memory_ptr_t_stringliteral_881a7c6e0d9cc1bef9dcc51a5535d0791dc9ce94b16aca73a1ce8b4583026adb__to_t_bytes9_t_string_memory_ptr_t_bytes15__nonPadded_inplace_fromStack_reversed": {
                  "entryPoint": 9313,
                  "id": null,
                  "parameterSlots": 2,
                  "returnSlots": 1
                },
                "abi_encode_tuple_t_address__to_t_address__fromStack_reversed": {
                  "entryPoint": null,
                  "id": null,
                  "parameterSlots": 2,
                  "returnSlots": 1
                },
                "abi_encode_tuple_t_array$_t_struct$_Proposal_$391_memory_ptr_$dyn_memory_ptr__to_t_array$_t_struct$_Proposal_$391_memory_ptr_$dyn_memory_ptr__fromStack_reversed": {
                  "entryPoint": 7680,
                  "id": null,
                  "parameterSlots": 2,
                  "returnSlots": 1
                },
                "abi_encode_tuple_t_enum$_WorkflowStatus_$375_t_enum$_WorkflowStatus_$375__to_t_uint8_t_uint8__fromStack_reversed": {
                  "entryPoint": 8201,
                  "id": null,
                  "parameterSlots": 3,
                  "returnSlots": 1
                },
                "abi_encode_tuple_t_string_calldata_ptr_t_string_calldata_ptr__to_t_string_memory_ptr_t_string_memory_ptr__fromStack_reversed": {
                  "entryPoint": 8117,
                  "id": null,
                  "parameterSlots": 5,
                  "returnSlots": 1
                },
                "abi_encode_tuple_t_string_memory_ptr__to_t_string_memory_ptr__fromStack_reversed": {
                  "entryPoint": 8404,
                  "id": null,
                  "parameterSlots": 2,
                  "returnSlots": 1
                },
                "abi_encode_tuple_t_stringliteral_245f15ff17f551913a7a18385165551503906a406f905ac1c2437281a7cd0cfe__to_t_string_memory_ptr__fromStack_reversed": {
                  "entryPoint": null,
                  "id": null,
                  "parameterSlots": 1,
                  "returnSlots": 1
                },
                "abi_encode_tuple_t_stringliteral_2db7cd1b4eea613955c7b12727741acc45d26baff48337119768869e1737afa9__to_t_string_memory_ptr__fromStack_reversed": {
                  "entryPoint": null,
                  "id": null,
                  "parameterSlots": 1,
                  "returnSlots": 1
                },
                "abi_encode_tuple_t_stringliteral_89875bf1134a296a98c92d31fb973ed2f2db2e6066c7892071b73ccbbecdb855__to_t_string_memory_ptr__fromStack_reversed": {
                  "entryPoint": null,
                  "id": null,
                  "parameterSlots": 1,
                  "returnSlots": 1
                },
                "abi_encode_tuple_t_stringliteral_901549ad31b8a07c18007564a6bf9799e1366f1381f124f7443a4d46aa1f7276__to_t_string_memory_ptr__fromStack_reversed": {
                  "entryPoint": null,
                  "id": null,
                  "parameterSlots": 1,
                  "returnSlots": 1
                },
                "abi_encode_tuple_t_stringliteral_9924ebdf1add33d25d4ef888e16131f0a5687b0580a36c21b5c301a6c462effe__to_t_string_memory_ptr__fromStack_reversed": {
                  "entryPoint": null,
                  "id": null,
                  "parameterSlots": 1,
                  "returnSlots": 1
                },
                "abi_encode_tuple_t_stringliteral_a82e95e5ee84cc506f04f82fd65efe3a0cb2fd2e22975dc3a1b4006058d94650__to_t_string_memory_ptr__fromStack_reversed": {
                  "entryPoint": null,
                  "id": null,
                  "parameterSlots": 1,
                  "returnSlots": 1
                },
                "abi_encode_tuple_t_stringliteral_af5af23e3c6fc76fa379e0ec8f7f048042477a9c0a3e8410137eac64bbeeebe7__to_t_string_memory_ptr__fromStack_reversed": {
                  "entryPoint": null,
                  "id": null,
                  "parameterSlots": 1,
                  "returnSlots": 1
                },
                "abi_encode_tuple_t_stringliteral_b5b832c47e2f8575ded4ab7736997e2d3cd77de518ea3cc88b64a21464bbf6a2__to_t_string_memory_ptr__fromStack_reversed": {
                  "entryPoint": null,
                  "id": null,
                  "parameterSlots": 1,
                  "returnSlots": 1
                },
                "abi_encode_tuple_t_stringliteral_c2b306736cf2f0443edc2a88db6aa1550013162c69422af0169a5e9d5a7a35c7__to_t_string_memory_ptr__fromStack_reversed": {
                  "entryPoint": null,
                  "id": null,
                  "parameterSlots": 1,
                  "returnSlots": 1
                },
                "abi_encode_tuple_t_stringliteral_d24d376fc3ad7408358c4aa13f0947d07c04aac09c9f911a7015829a44041ee6__to_t_string_memory_ptr__fromStack_reversed": {
                  "entryPoint": null,
                  "id": null,
                  "parameterSlots": 1,
                  "returnSlots": 1
                },
                "abi_encode_tuple_t_stringliteral_e2d7f4077014c8d9c3924edb65e2097550f445392084f495b9e627f6cbbf2ee1__to_t_string_memory_ptr__fromStack_reversed": {
                  "entryPoint": 9112,
                  "id": null,
                  "parameterSlots": 1,
                  "returnSlots": 1
                },
                "abi_encode_tuple_t_uint256_t_uint256_t_uint256_t_uint256_t_array$_t_struct$_Proposal_$391_storage_$dyn_storage__to_t_uint256_t_uint256_t_uint256_t_uint256_t_array$_t_struct$_Proposal_$391_memory_ptr_$dyn_memory_ptr__fromStack_reversed": {
                  "entryPoint": 8942,
                  "id": null,
                  "parameterSlots": 6,
                  "returnSlots": 1
                },
                "abi_encode_tuple_t_uint8__to_t_uint8__fromStack_reversed": {
                  "entryPoint": null,
                  "id": null,
                  "parameterSlots": 2,
                  "returnSlots": 1
                },
                "abi_encode_tuple_t_uint8_t_string_storage__to_t_uint8_t_string_memory_ptr__fromStack_reversed": {
                  "entryPoint": 9499,
                  "id": null,
                  "parameterSlots": 3,
                  "returnSlots": 1
                },
                "array_dataslot_string_storage": {
                  "entryPoint": null,
                  "id": null,
                  "parameterSlots": 1,
                  "returnSlots": 1
                },
                "checked_add_t_uint256": {
                  "entryPoint": 9449,
                  "id": null,
                  "parameterSlots": 2,
                  "returnSlots": 1
                },
                "checked_div_t_uint256": {
                  "entryPoint": 9409,
                  "id": null,
                  "parameterSlots": 2,
                  "returnSlots": 1
                },
                "checked_sub_t_uint256": {
                  "entryPoint": 8525,
                  "id": null,
                  "parameterSlots": 2,
                  "returnSlots": 1
                },
                "clean_up_bytearray_end_slots_string_storage": {
                  "entryPoint": 8550,
                  "id": null,
                  "parameterSlots": 3,
                  "returnSlots": 0
                },
                "copy_byte_array_to_storage_from_t_string_memory_ptr_to_t_string_storage": {
                  "entryPoint": 8625,
                  "id": null,
                  "parameterSlots": 2,
                  "returnSlots": 0
                },
                "copy_memory_to_memory_with_cleanup": {
                  "entryPoint": 7600,
                  "id": null,
                  "parameterSlots": 3,
                  "returnSlots": 0
                },
                "extract_byte_array_length": {
                  "entryPoint": 8467,
                  "id": null,
                  "parameterSlots": 1,
                  "returnSlots": 1
                },
                "extract_used_part_and_set_length_of_short_byte_array": {
                  "entryPoint": null,
                  "id": null,
                  "parameterSlots": 2,
                  "returnSlots": 1
                },
                "increment_t_uint256": {
                  "entryPoint": 8250,
                  "id": null,
                  "parameterSlots": 1,
                  "returnSlots": 1
                },
                "increment_t_uint8": {
                  "entryPoint": 9468,
                  "id": null,
                  "parameterSlots": 1,
                  "returnSlots": 1
                },
                "mod_t_uint256": {
                  "entryPoint": 9429,
                  "id": null,
                  "parameterSlots": 2,
                  "returnSlots": 1
                },
                "panic_error_0x11": {
                  "entryPoint": 8228,
                  "id": null,
                  "parameterSlots": 0,
                  "returnSlots": 0
                },
                "panic_error_0x12": {
                  "entryPoint": 9387,
                  "id": null,
                  "parameterSlots": 0,
                  "returnSlots": 0
                },
                "panic_error_0x21": {
                  "entryPoint": 8054,
                  "id": null,
                  "parameterSlots": 0,
                  "returnSlots": 0
                },
                "panic_error_0x32": {
                  "entryPoint": 8445,
                  "id": null,
                  "parameterSlots": 0,
                  "returnSlots": 0
                },
                "panic_error_0x41": {
                  "entryPoint": 8423,
                  "id": null,
                  "parameterSlots": 0,
                  "returnSlots": 0
                }
              },
              "generatedSources": [
                {
                  "ast": {
                    "nodeType": "YulBlock",
                    "src": "0:19401:5",
                    "statements": [
                      {
                        "nodeType": "YulBlock",
                        "src": "6:3:5",
                        "statements": []
                      },
                      {
                        "body": {
                          "nodeType": "YulBlock",
                          "src": "87:275:5",
                          "statements": [
                            {
                              "body": {
                                "nodeType": "YulBlock",
                                "src": "136:16:5",
                                "statements": [
                                  {
                                    "expression": {
                                      "arguments": [
                                        {
                                          "kind": "number",
                                          "nodeType": "YulLiteral",
                                          "src": "145:1:5",
                                          "type": "",
                                          "value": "0"
                                        },
                                        {
                                          "kind": "number",
                                          "nodeType": "YulLiteral",
                                          "src": "148:1:5",
                                          "type": "",
                                          "value": "0"
                                        }
                                      ],
                                      "functionName": {
                                        "name": "revert",
                                        "nodeType": "YulIdentifier",
                                        "src": "138:6:5"
                                      },
                                      "nodeType": "YulFunctionCall",
                                      "src": "138:12:5"
                                    },
                                    "nodeType": "YulExpressionStatement",
                                    "src": "138:12:5"
                                  }
                                ]
                              },
                              "condition": {
                                "arguments": [
                                  {
                                    "arguments": [
                                      {
                                        "arguments": [
                                          {
                                            "name": "offset",
                                            "nodeType": "YulIdentifier",
                                            "src": "115:6:5"
                                          },
                                          {
                                            "kind": "number",
                                            "nodeType": "YulLiteral",
                                            "src": "123:4:5",
                                            "type": "",
                                            "value": "0x1f"
                                          }
                                        ],
                                        "functionName": {
                                          "name": "add",
                                          "nodeType": "YulIdentifier",
                                          "src": "111:3:5"
                                        },
                                        "nodeType": "YulFunctionCall",
                                        "src": "111:17:5"
                                      },
                                      {
                                        "name": "end",
                                        "nodeType": "YulIdentifier",
                                        "src": "130:3:5"
                                      }
                                    ],
                                    "functionName": {
                                      "name": "slt",
                                      "nodeType": "YulIdentifier",
                                      "src": "107:3:5"
                                    },
                                    "nodeType": "YulFunctionCall",
                                    "src": "107:27:5"
                                  }
                                ],
                                "functionName": {
                                  "name": "iszero",
                                  "nodeType": "YulIdentifier",
                                  "src": "100:6:5"
                                },
                                "nodeType": "YulFunctionCall",
                                "src": "100:35:5"
                              },
                              "nodeType": "YulIf",
                              "src": "97:55:5"
                            },
                            {
                              "nodeType": "YulAssignment",
                              "src": "161:30:5",
                              "value": {
                                "arguments": [
                                  {
                                    "name": "offset",
                                    "nodeType": "YulIdentifier",
                                    "src": "184:6:5"
                                  }
                                ],
                                "functionName": {
                                  "name": "calldataload",
                                  "nodeType": "YulIdentifier",
                                  "src": "171:12:5"
                                },
                                "nodeType": "YulFunctionCall",
                                "src": "171:20:5"
                              },
                              "variableNames": [
                                {
                                  "name": "length",
                                  "nodeType": "YulIdentifier",
                                  "src": "161:6:5"
                                }
                              ]
                            },
                            {
                              "body": {
                                "nodeType": "YulBlock",
                                "src": "234:16:5",
                                "statements": [
                                  {
                                    "expression": {
                                      "arguments": [
                                        {
                                          "kind": "number",
                                          "nodeType": "YulLiteral",
                                          "src": "243:1:5",
                                          "type": "",
                                          "value": "0"
                                        },
                                        {
                                          "kind": "number",
                                          "nodeType": "YulLiteral",
                                          "src": "246:1:5",
                                          "type": "",
                                          "value": "0"
                                        }
                                      ],
                                      "functionName": {
                                        "name": "revert",
                                        "nodeType": "YulIdentifier",
                                        "src": "236:6:5"
                                      },
                                      "nodeType": "YulFunctionCall",
                                      "src": "236:12:5"
                                    },
                                    "nodeType": "YulExpressionStatement",
                                    "src": "236:12:5"
                                  }
                                ]
                              },
                              "condition": {
                                "arguments": [
                                  {
                                    "name": "length",
                                    "nodeType": "YulIdentifier",
                                    "src": "206:6:5"
                                  },
                                  {
                                    "kind": "number",
                                    "nodeType": "YulLiteral",
                                    "src": "214:18:5",
                                    "type": "",
                                    "value": "0xffffffffffffffff"
                                  }
                                ],
                                "functionName": {
                                  "name": "gt",
                                  "nodeType": "YulIdentifier",
                                  "src": "203:2:5"
                                },
                                "nodeType": "YulFunctionCall",
                                "src": "203:30:5"
                              },
                              "nodeType": "YulIf",
                              "src": "200:50:5"
                            },
                            {
                              "nodeType": "YulAssignment",
                              "src": "259:29:5",
                              "value": {
                                "arguments": [
                                  {
                                    "name": "offset",
                                    "nodeType": "YulIdentifier",
                                    "src": "275:6:5"
                                  },
                                  {
                                    "kind": "number",
                                    "nodeType": "YulLiteral",
                                    "src": "283:4:5",
                                    "type": "",
                                    "value": "0x20"
                                  }
                                ],
                                "functionName": {
                                  "name": "add",
                                  "nodeType": "YulIdentifier",
                                  "src": "271:3:5"
                                },
                                "nodeType": "YulFunctionCall",
                                "src": "271:17:5"
                              },
                              "variableNames": [
                                {
                                  "name": "arrayPos",
                                  "nodeType": "YulIdentifier",
                                  "src": "259:8:5"
                                }
                              ]
                            },
                            {
                              "body": {
                                "nodeType": "YulBlock",
                                "src": "340:16:5",
                                "statements": [
                                  {
                                    "expression": {
                                      "arguments": [
                                        {
                                          "kind": "number",
                                          "nodeType": "YulLiteral",
                                          "src": "349:1:5",
                                          "type": "",
                                          "value": "0"
                                        },
                                        {
                                          "kind": "number",
                                          "nodeType": "YulLiteral",
                                          "src": "352:1:5",
                                          "type": "",
                                          "value": "0"
                                        }
                                      ],
                                      "functionName": {
                                        "name": "revert",
                                        "nodeType": "YulIdentifier",
                                        "src": "342:6:5"
                                      },
                                      "nodeType": "YulFunctionCall",
                                      "src": "342:12:5"
                                    },
                                    "nodeType": "YulExpressionStatement",
                                    "src": "342:12:5"
                                  }
                                ]
                              },
                              "condition": {
                                "arguments": [
                                  {
                                    "arguments": [
                                      {
                                        "arguments": [
                                          {
                                            "name": "offset",
                                            "nodeType": "YulIdentifier",
                                            "src": "311:6:5"
                                          },
                                          {
                                            "name": "length",
                                            "nodeType": "YulIdentifier",
                                            "src": "319:6:5"
                                          }
                                        ],
                                        "functionName": {
                                          "name": "add",
                                          "nodeType": "YulIdentifier",
                                          "src": "307:3:5"
                                        },
                                        "nodeType": "YulFunctionCall",
                                        "src": "307:19:5"
                                      },
                                      {
                                        "kind": "number",
                                        "nodeType": "YulLiteral",
                                        "src": "328:4:5",
                                        "type": "",
                                        "value": "0x20"
                                      }
                                    ],
                                    "functionName": {
                                      "name": "add",
                                      "nodeType": "YulIdentifier",
                                      "src": "303:3:5"
                                    },
                                    "nodeType": "YulFunctionCall",
                                    "src": "303:30:5"
                                  },
                                  {
                                    "name": "end",
                                    "nodeType": "YulIdentifier",
                                    "src": "335:3:5"
                                  }
                                ],
                                "functionName": {
                                  "name": "gt",
                                  "nodeType": "YulIdentifier",
                                  "src": "300:2:5"
                                },
                                "nodeType": "YulFunctionCall",
                                "src": "300:39:5"
                              },
                              "nodeType": "YulIf",
                              "src": "297:59:5"
                            }
                          ]
                        },
                        "name": "abi_decode_string_calldata",
                        "nodeType": "YulFunctionDefinition",
                        "parameters": [
                          {
                            "name": "offset",
                            "nodeType": "YulTypedName",
                            "src": "50:6:5",
                            "type": ""
                          },
                          {
                            "name": "end",
                            "nodeType": "YulTypedName",
                            "src": "58:3:5",
                            "type": ""
                          }
                        ],
                        "returnVariables": [
                          {
                            "name": "arrayPos",
                            "nodeType": "YulTypedName",
                            "src": "66:8:5",
                            "type": ""
                          },
                          {
                            "name": "length",
                            "nodeType": "YulTypedName",
                            "src": "76:6:5",
                            "type": ""
                          }
                        ],
                        "src": "14:348:5"
                      },
                      {
                        "body": {
                          "nodeType": "YulBlock",
                          "src": "494:594:5",
                          "statements": [
                            {
                              "body": {
                                "nodeType": "YulBlock",
                                "src": "540:16:5",
                                "statements": [
                                  {
                                    "expression": {
                                      "arguments": [
                                        {
                                          "kind": "number",
                                          "nodeType": "YulLiteral",
                                          "src": "549:1:5",
                                          "type": "",
                                          "value": "0"
                                        },
                                        {
                                          "kind": "number",
                                          "nodeType": "YulLiteral",
                                          "src": "552:1:5",
                                          "type": "",
                                          "value": "0"
                                        }
                                      ],
                                      "functionName": {
                                        "name": "revert",
                                        "nodeType": "YulIdentifier",
                                        "src": "542:6:5"
                                      },
                                      "nodeType": "YulFunctionCall",
                                      "src": "542:12:5"
                                    },
                                    "nodeType": "YulExpressionStatement",
                                    "src": "542:12:5"
                                  }
                                ]
                              },
                              "condition": {
                                "arguments": [
                                  {
                                    "arguments": [
                                      {
                                        "name": "dataEnd",
                                        "nodeType": "YulIdentifier",
                                        "src": "515:7:5"
                                      },
                                      {
                                        "name": "headStart",
                                        "nodeType": "YulIdentifier",
                                        "src": "524:9:5"
                                      }
                                    ],
                                    "functionName": {
                                      "name": "sub",
                                      "nodeType": "YulIdentifier",
                                      "src": "511:3:5"
                                    },
                                    "nodeType": "YulFunctionCall",
                                    "src": "511:23:5"
                                  },
                                  {
                                    "kind": "number",
                                    "nodeType": "YulLiteral",
                                    "src": "536:2:5",
                                    "type": "",
                                    "value": "64"
                                  }
                                ],
                                "functionName": {
                                  "name": "slt",
                                  "nodeType": "YulIdentifier",
                                  "src": "507:3:5"
                                },
                                "nodeType": "YulFunctionCall",
                                "src": "507:32:5"
                              },
                              "nodeType": "YulIf",
                              "src": "504:52:5"
                            },
                            {
                              "nodeType": "YulVariableDeclaration",
                              "src": "565:37:5",
                              "value": {
                                "arguments": [
                                  {
                                    "name": "headStart",
                                    "nodeType": "YulIdentifier",
                                    "src": "592:9:5"
                                  }
                                ],
                                "functionName": {
                                  "name": "calldataload",
                                  "nodeType": "YulIdentifier",
                                  "src": "579:12:5"
                                },
                                "nodeType": "YulFunctionCall",
                                "src": "579:23:5"
                              },
                              "variables": [
                                {
                                  "name": "offset",
                                  "nodeType": "YulTypedName",
                                  "src": "569:6:5",
                                  "type": ""
                                }
                              ]
                            },
                            {
                              "nodeType": "YulVariableDeclaration",
                              "src": "611:28:5",
                              "value": {
                                "kind": "number",
                                "nodeType": "YulLiteral",
                                "src": "621:18:5",
                                "type": "",
                                "value": "0xffffffffffffffff"
                              },
                              "variables": [
                                {
                                  "name": "_1",
                                  "nodeType": "YulTypedName",
                                  "src": "615:2:5",
                                  "type": ""
                                }
                              ]
                            },
                            {
                              "body": {
                                "nodeType": "YulBlock",
                                "src": "666:16:5",
                                "statements": [
                                  {
                                    "expression": {
                                      "arguments": [
                                        {
                                          "kind": "number",
                                          "nodeType": "YulLiteral",
                                          "src": "675:1:5",
                                          "type": "",
                                          "value": "0"
                                        },
                                        {
                                          "kind": "number",
                                          "nodeType": "YulLiteral",
                                          "src": "678:1:5",
                                          "type": "",
                                          "value": "0"
                                        }
                                      ],
                                      "functionName": {
                                        "name": "revert",
                                        "nodeType": "YulIdentifier",
                                        "src": "668:6:5"
                                      },
                                      "nodeType": "YulFunctionCall",
                                      "src": "668:12:5"
                                    },
                                    "nodeType": "YulExpressionStatement",
                                    "src": "668:12:5"
                                  }
                                ]
                              },
                              "condition": {
                                "arguments": [
                                  {
                                    "name": "offset",
                                    "nodeType": "YulIdentifier",
                                    "src": "654:6:5"
                                  },
                                  {
                                    "name": "_1",
                                    "nodeType": "YulIdentifier",
                                    "src": "662:2:5"
                                  }
                                ],
                                "functionName": {
                                  "name": "gt",
                                  "nodeType": "YulIdentifier",
                                  "src": "651:2:5"
                                },
                                "nodeType": "YulFunctionCall",
                                "src": "651:14:5"
                              },
                              "nodeType": "YulIf",
                              "src": "648:34:5"
                            },
                            {
                              "nodeType": "YulVariableDeclaration",
                              "src": "691:85:5",
                              "value": {
                                "arguments": [
                                  {
                                    "arguments": [
                                      {
                                        "name": "headStart",
                                        "nodeType": "YulIdentifier",
                                        "src": "748:9:5"
                                      },
                                      {
                                        "name": "offset",
                                        "nodeType": "YulIdentifier",
                                        "src": "759:6:5"
                                      }
                                    ],
                                    "functionName": {
                                      "name": "add",
                                      "nodeType": "YulIdentifier",
                                      "src": "744:3:5"
                                    },
                                    "nodeType": "YulFunctionCall",
                                    "src": "744:22:5"
                                  },
                                  {
                                    "name": "dataEnd",
                                    "nodeType": "YulIdentifier",
                                    "src": "768:7:5"
                                  }
                                ],
                                "functionName": {
                                  "name": "abi_decode_string_calldata",
                                  "nodeType": "YulIdentifier",
                                  "src": "717:26:5"
                                },
                                "nodeType": "YulFunctionCall",
                                "src": "717:59:5"
                              },
                              "variables": [
                                {
                                  "name": "value0_1",
                                  "nodeType": "YulTypedName",
                                  "src": "695:8:5",
                                  "type": ""
                                },
                                {
                                  "name": "value1_1",
                                  "nodeType": "YulTypedName",
                                  "src": "705:8:5",
                                  "type": ""
                                }
                              ]
                            },
                            {
                              "nodeType": "YulAssignment",
                              "src": "785:18:5",
                              "value": {
                                "name": "value0_1",
                                "nodeType": "YulIdentifier",
                                "src": "795:8:5"
                              },
                              "variableNames": [
                                {
                                  "name": "value0",
                                  "nodeType": "YulIdentifier",
                                  "src": "785:6:5"
                                }
                              ]
                            },
                            {
                              "nodeType": "YulAssignment",
                              "src": "812:18:5",
                              "value": {
                                "name": "value1_1",
                                "nodeType": "YulIdentifier",
                                "src": "822:8:5"
                              },
                              "variableNames": [
                                {
                                  "name": "value1",
                                  "nodeType": "YulIdentifier",
                                  "src": "812:6:5"
                                }
                              ]
                            },
                            {
                              "nodeType": "YulVariableDeclaration",
                              "src": "839:48:5",
                              "value": {
                                "arguments": [
                                  {
                                    "arguments": [
                                      {
                                        "name": "headStart",
                                        "nodeType": "YulIdentifier",
                                        "src": "872:9:5"
                                      },
                                      {
                                        "kind": "number",
                                        "nodeType": "YulLiteral",
                                        "src": "883:2:5",
                                        "type": "",
                                        "value": "32"
                                      }
                                    ],
                                    "functionName": {
                                      "name": "add",
                                      "nodeType": "YulIdentifier",
                                      "src": "868:3:5"
                                    },
                                    "nodeType": "YulFunctionCall",
                                    "src": "868:18:5"
                                  }
                                ],
                                "functionName": {
                                  "name": "calldataload",
                                  "nodeType": "YulIdentifier",
                                  "src": "855:12:5"
                                },
                                "nodeType": "YulFunctionCall",
                                "src": "855:32:5"
                              },
                              "variables": [
                                {
                                  "name": "offset_1",
                                  "nodeType": "YulTypedName",
                                  "src": "843:8:5",
                                  "type": ""
                                }
                              ]
                            },
                            {
                              "body": {
                                "nodeType": "YulBlock",
                                "src": "916:16:5",
                                "statements": [
                                  {
                                    "expression": {
                                      "arguments": [
                                        {
                                          "kind": "number",
                                          "nodeType": "YulLiteral",
                                          "src": "925:1:5",
                                          "type": "",
                                          "value": "0"
                                        },
                                        {
                                          "kind": "number",
                                          "nodeType": "YulLiteral",
                                          "src": "928:1:5",
                                          "type": "",
                                          "value": "0"
                                        }
                                      ],
                                      "functionName": {
                                        "name": "revert",
                                        "nodeType": "YulIdentifier",
                                        "src": "918:6:5"
                                      },
                                      "nodeType": "YulFunctionCall",
                                      "src": "918:12:5"
                                    },
                                    "nodeType": "YulExpressionStatement",
                                    "src": "918:12:5"
                                  }
                                ]
                              },
                              "condition": {
                                "arguments": [
                                  {
                                    "name": "offset_1",
                                    "nodeType": "YulIdentifier",
                                    "src": "902:8:5"
                                  },
                                  {
                                    "name": "_1",
                                    "nodeType": "YulIdentifier",
                                    "src": "912:2:5"
                                  }
                                ],
                                "functionName": {
                                  "name": "gt",
                                  "nodeType": "YulIdentifier",
                                  "src": "899:2:5"
                                },
                                "nodeType": "YulFunctionCall",
                                "src": "899:16:5"
                              },
                              "nodeType": "YulIf",
                              "src": "896:36:5"
                            },
                            {
                              "nodeType": "YulVariableDeclaration",
                              "src": "941:87:5",
                              "value": {
                                "arguments": [
                                  {
                                    "arguments": [
                                      {
                                        "name": "headStart",
                                        "nodeType": "YulIdentifier",
                                        "src": "998:9:5"
                                      },
                                      {
                                        "name": "offset_1",
                                        "nodeType": "YulIdentifier",
                                        "src": "1009:8:5"
                                      }
                                    ],
                                    "functionName": {
                                      "name": "add",
                                      "nodeType": "YulIdentifier",
                                      "src": "994:3:5"
                                    },
                                    "nodeType": "YulFunctionCall",
                                    "src": "994:24:5"
                                  },
                                  {
                                    "name": "dataEnd",
                                    "nodeType": "YulIdentifier",
                                    "src": "1020:7:5"
                                  }
                                ],
                                "functionName": {
                                  "name": "abi_decode_string_calldata",
                                  "nodeType": "YulIdentifier",
                                  "src": "967:26:5"
                                },
                                "nodeType": "YulFunctionCall",
                                "src": "967:61:5"
                              },
                              "variables": [
                                {
                                  "name": "value2_1",
                                  "nodeType": "YulTypedName",
                                  "src": "945:8:5",
                                  "type": ""
                                },
                                {
                                  "name": "value3_1",
                                  "nodeType": "YulTypedName",
                                  "src": "955:8:5",
                                  "type": ""
                                }
                              ]
                            },
                            {
                              "nodeType": "YulAssignment",
                              "src": "1037:18:5",
                              "value": {
                                "name": "value2_1",
                                "nodeType": "YulIdentifier",
                                "src": "1047:8:5"
                              },
                              "variableNames": [
                                {
                                  "name": "value2",
                                  "nodeType": "YulIdentifier",
                                  "src": "1037:6:5"
                                }
                              ]
                            },
                            {
                              "nodeType": "YulAssignment",
                              "src": "1064:18:5",
                              "value": {
                                "name": "value3_1",
                                "nodeType": "YulIdentifier",
                                "src": "1074:8:5"
                              },
                              "variableNames": [
                                {
                                  "name": "value3",
                                  "nodeType": "YulIdentifier",
                                  "src": "1064:6:5"
                                }
                              ]
                            }
                          ]
                        },
                        "name": "abi_decode_tuple_t_string_calldata_ptrt_string_calldata_ptr",
                        "nodeType": "YulFunctionDefinition",
                        "parameters": [
                          {
                            "name": "headStart",
                            "nodeType": "YulTypedName",
                            "src": "436:9:5",
                            "type": ""
                          },
                          {
                            "name": "dataEnd",
                            "nodeType": "YulTypedName",
                            "src": "447:7:5",
                            "type": ""
                          }
                        ],
                        "returnVariables": [
                          {
                            "name": "value0",
                            "nodeType": "YulTypedName",
                            "src": "459:6:5",
                            "type": ""
                          },
                          {
                            "name": "value1",
                            "nodeType": "YulTypedName",
                            "src": "467:6:5",
                            "type": ""
                          },
                          {
                            "name": "value2",
                            "nodeType": "YulTypedName",
                            "src": "475:6:5",
                            "type": ""
                          },
                          {
                            "name": "value3",
                            "nodeType": "YulTypedName",
                            "src": "483:6:5",
                            "type": ""
                          }
                        ],
                        "src": "367:721:5"
                      },
                      {
                        "body": {
                          "nodeType": "YulBlock",
                          "src": "1163:110:5",
                          "statements": [
                            {
                              "body": {
                                "nodeType": "YulBlock",
                                "src": "1209:16:5",
                                "statements": [
                                  {
                                    "expression": {
                                      "arguments": [
                                        {
                                          "kind": "number",
                                          "nodeType": "YulLiteral",
                                          "src": "1218:1:5",
                                          "type": "",
                                          "value": "0"
                                        },
                                        {
                                          "kind": "number",
                                          "nodeType": "YulLiteral",
                                          "src": "1221:1:5",
                                          "type": "",
                                          "value": "0"
                                        }
                                      ],
                                      "functionName": {
                                        "name": "revert",
                                        "nodeType": "YulIdentifier",
                                        "src": "1211:6:5"
                                      },
                                      "nodeType": "YulFunctionCall",
                                      "src": "1211:12:5"
                                    },
                                    "nodeType": "YulExpressionStatement",
                                    "src": "1211:12:5"
                                  }
                                ]
                              },
                              "condition": {
                                "arguments": [
                                  {
                                    "arguments": [
                                      {
                                        "name": "dataEnd",
                                        "nodeType": "YulIdentifier",
                                        "src": "1184:7:5"
                                      },
                                      {
                                        "name": "headStart",
                                        "nodeType": "YulIdentifier",
                                        "src": "1193:9:5"
                                      }
                                    ],
                                    "functionName": {
                                      "name": "sub",
                                      "nodeType": "YulIdentifier",
                                      "src": "1180:3:5"
                                    },
                                    "nodeType": "YulFunctionCall",
                                    "src": "1180:23:5"
                                  },
                                  {
                                    "kind": "number",
                                    "nodeType": "YulLiteral",
                                    "src": "1205:2:5",
                                    "type": "",
                                    "value": "32"
                                  }
                                ],
                                "functionName": {
                                  "name": "slt",
                                  "nodeType": "YulIdentifier",
                                  "src": "1176:3:5"
                                },
                                "nodeType": "YulFunctionCall",
                                "src": "1176:32:5"
                              },
                              "nodeType": "YulIf",
                              "src": "1173:52:5"
                            },
                            {
                              "nodeType": "YulAssignment",
                              "src": "1234:33:5",
                              "value": {
                                "arguments": [
                                  {
                                    "name": "headStart",
                                    "nodeType": "YulIdentifier",
                                    "src": "1257:9:5"
                                  }
                                ],
                                "functionName": {
                                  "name": "calldataload",
                                  "nodeType": "YulIdentifier",
                                  "src": "1244:12:5"
                                },
                                "nodeType": "YulFunctionCall",
                                "src": "1244:23:5"
                              },
                              "variableNames": [
                                {
                                  "name": "value0",
                                  "nodeType": "YulIdentifier",
                                  "src": "1234:6:5"
                                }
                              ]
                            }
                          ]
                        },
                        "name": "abi_decode_tuple_t_uint256",
                        "nodeType": "YulFunctionDefinition",
                        "parameters": [
                          {
                            "name": "headStart",
                            "nodeType": "YulTypedName",
                            "src": "1129:9:5",
                            "type": ""
                          },
                          {
                            "name": "dataEnd",
                            "nodeType": "YulTypedName",
                            "src": "1140:7:5",
                            "type": ""
                          }
                        ],
                        "returnVariables": [
                          {
                            "name": "value0",
                            "nodeType": "YulTypedName",
                            "src": "1152:6:5",
                            "type": ""
                          }
                        ],
                        "src": "1093:180:5"
                      },
                      {
                        "body": {
                          "nodeType": "YulBlock",
                          "src": "1344:184:5",
                          "statements": [
                            {
                              "nodeType": "YulVariableDeclaration",
                              "src": "1354:10:5",
                              "value": {
                                "kind": "number",
                                "nodeType": "YulLiteral",
                                "src": "1363:1:5",
                                "type": "",
                                "value": "0"
                              },
                              "variables": [
                                {
                                  "name": "i",
                                  "nodeType": "YulTypedName",
                                  "src": "1358:1:5",
                                  "type": ""
                                }
                              ]
                            },
                            {
                              "body": {
                                "nodeType": "YulBlock",
                                "src": "1423:63:5",
                                "statements": [
                                  {
                                    "expression": {
                                      "arguments": [
                                        {
                                          "arguments": [
                                            {
                                              "name": "dst",
                                              "nodeType": "YulIdentifier",
                                              "src": "1448:3:5"
                                            },
                                            {
                                              "name": "i",
                                              "nodeType": "YulIdentifier",
                                              "src": "1453:1:5"
                                            }
                                          ],
                                          "functionName": {
                                            "name": "add",
                                            "nodeType": "YulIdentifier",
                                            "src": "1444:3:5"
                                          },
                                          "nodeType": "YulFunctionCall",
                                          "src": "1444:11:5"
                                        },
                                        {
                                          "arguments": [
                                            {
                                              "arguments": [
                                                {
                                                  "name": "src",
                                                  "nodeType": "YulIdentifier",
                                                  "src": "1467:3:5"
                                                },
                                                {
                                                  "name": "i",
                                                  "nodeType": "YulIdentifier",
                                                  "src": "1472:1:5"
                                                }
                                              ],
                                              "functionName": {
                                                "name": "add",
                                                "nodeType": "YulIdentifier",
                                                "src": "1463:3:5"
                                              },
                                              "nodeType": "YulFunctionCall",
                                              "src": "1463:11:5"
                                            }
                                          ],
                                          "functionName": {
                                            "name": "mload",
                                            "nodeType": "YulIdentifier",
                                            "src": "1457:5:5"
                                          },
                                          "nodeType": "YulFunctionCall",
                                          "src": "1457:18:5"
                                        }
                                      ],
                                      "functionName": {
                                        "name": "mstore",
                                        "nodeType": "YulIdentifier",
                                        "src": "1437:6:5"
                                      },
                                      "nodeType": "YulFunctionCall",
                                      "src": "1437:39:5"
                                    },
                                    "nodeType": "YulExpressionStatement",
                                    "src": "1437:39:5"
                                  }
                                ]
                              },
                              "condition": {
                                "arguments": [
                                  {
                                    "name": "i",
                                    "nodeType": "YulIdentifier",
                                    "src": "1384:1:5"
                                  },
                                  {
                                    "name": "length",
                                    "nodeType": "YulIdentifier",
                                    "src": "1387:6:5"
                                  }
                                ],
                                "functionName": {
                                  "name": "lt",
                                  "nodeType": "YulIdentifier",
                                  "src": "1381:2:5"
                                },
                                "nodeType": "YulFunctionCall",
                                "src": "1381:13:5"
                              },
                              "nodeType": "YulForLoop",
                              "post": {
                                "nodeType": "YulBlock",
                                "src": "1395:19:5",
                                "statements": [
                                  {
                                    "nodeType": "YulAssignment",
                                    "src": "1397:15:5",
                                    "value": {
                                      "arguments": [
                                        {
                                          "name": "i",
                                          "nodeType": "YulIdentifier",
                                          "src": "1406:1:5"
                                        },
                                        {
                                          "kind": "number",
                                          "nodeType": "YulLiteral",
                                          "src": "1409:2:5",
                                          "type": "",
                                          "value": "32"
                                        }
                                      ],
                                      "functionName": {
                                        "name": "add",
                                        "nodeType": "YulIdentifier",
                                        "src": "1402:3:5"
                                      },
                                      "nodeType": "YulFunctionCall",
                                      "src": "1402:10:5"
                                    },
                                    "variableNames": [
                                      {
                                        "name": "i",
                                        "nodeType": "YulIdentifier",
                                        "src": "1397:1:5"
                                      }
                                    ]
                                  }
                                ]
                              },
                              "pre": {
                                "nodeType": "YulBlock",
                                "src": "1377:3:5",
                                "statements": []
                              },
                              "src": "1373:113:5"
                            },
                            {
                              "expression": {
                                "arguments": [
                                  {
                                    "arguments": [
                                      {
                                        "name": "dst",
                                        "nodeType": "YulIdentifier",
                                        "src": "1506:3:5"
                                      },
                                      {
                                        "name": "length",
                                        "nodeType": "YulIdentifier",
                                        "src": "1511:6:5"
                                      }
                                    ],
                                    "functionName": {
                                      "name": "add",
                                      "nodeType": "YulIdentifier",
                                      "src": "1502:3:5"
                                    },
                                    "nodeType": "YulFunctionCall",
                                    "src": "1502:16:5"
                                  },
                                  {
                                    "kind": "number",
                                    "nodeType": "YulLiteral",
                                    "src": "1520:1:5",
                                    "type": "",
                                    "value": "0"
                                  }
                                ],
                                "functionName": {
                                  "name": "mstore",
                                  "nodeType": "YulIdentifier",
                                  "src": "1495:6:5"
                                },
                                "nodeType": "YulFunctionCall",
                                "src": "1495:27:5"
                              },
                              "nodeType": "YulExpressionStatement",
                              "src": "1495:27:5"
                            }
                          ]
                        },
                        "name": "copy_memory_to_memory_with_cleanup",
                        "nodeType": "YulFunctionDefinition",
                        "parameters": [
                          {
                            "name": "src",
                            "nodeType": "YulTypedName",
                            "src": "1322:3:5",
                            "type": ""
                          },
                          {
                            "name": "dst",
                            "nodeType": "YulTypedName",
                            "src": "1327:3:5",
                            "type": ""
                          },
                          {
                            "name": "length",
                            "nodeType": "YulTypedName",
                            "src": "1332:6:5",
                            "type": ""
                          }
                        ],
                        "src": "1278:250:5"
                      },
                      {
                        "body": {
                          "nodeType": "YulBlock",
                          "src": "1583:221:5",
                          "statements": [
                            {
                              "nodeType": "YulVariableDeclaration",
                              "src": "1593:26:5",
                              "value": {
                                "arguments": [
                                  {
                                    "name": "value",
                                    "nodeType": "YulIdentifier",
                                    "src": "1613:5:5"
                                  }
                                ],
                                "functionName": {
                                  "name": "mload",
                                  "nodeType": "YulIdentifier",
                                  "src": "1607:5:5"
                                },
                                "nodeType": "YulFunctionCall",
                                "src": "1607:12:5"
                              },
                              "variables": [
                                {
                                  "name": "length",
                                  "nodeType": "YulTypedName",
                                  "src": "1597:6:5",
                                  "type": ""
                                }
                              ]
                            },
                            {
                              "expression": {
                                "arguments": [
                                  {
                                    "name": "pos",
                                    "nodeType": "YulIdentifier",
                                    "src": "1635:3:5"
                                  },
                                  {
                                    "name": "length",
                                    "nodeType": "YulIdentifier",
                                    "src": "1640:6:5"
                                  }
                                ],
                                "functionName": {
                                  "name": "mstore",
                                  "nodeType": "YulIdentifier",
                                  "src": "1628:6:5"
                                },
                                "nodeType": "YulFunctionCall",
                                "src": "1628:19:5"
                              },
                              "nodeType": "YulExpressionStatement",
                              "src": "1628:19:5"
                            },
                            {
                              "expression": {
                                "arguments": [
                                  {
                                    "arguments": [
                                      {
                                        "name": "value",
                                        "nodeType": "YulIdentifier",
                                        "src": "1695:5:5"
                                      },
                                      {
                                        "kind": "number",
                                        "nodeType": "YulLiteral",
                                        "src": "1702:4:5",
                                        "type": "",
                                        "value": "0x20"
                                      }
                                    ],
                                    "functionName": {
                                      "name": "add",
                                      "nodeType": "YulIdentifier",
                                      "src": "1691:3:5"
                                    },
                                    "nodeType": "YulFunctionCall",
                                    "src": "1691:16:5"
                                  },
                                  {
                                    "arguments": [
                                      {
                                        "name": "pos",
                                        "nodeType": "YulIdentifier",
                                        "src": "1713:3:5"
                                      },
                                      {
                                        "kind": "number",
                                        "nodeType": "YulLiteral",
                                        "src": "1718:4:5",
                                        "type": "",
                                        "value": "0x20"
                                      }
                                    ],
                                    "functionName": {
                                      "name": "add",
                                      "nodeType": "YulIdentifier",
                                      "src": "1709:3:5"
                                    },
                                    "nodeType": "YulFunctionCall",
                                    "src": "1709:14:5"
                                  },
                                  {
                                    "name": "length",
                                    "nodeType": "YulIdentifier",
                                    "src": "1725:6:5"
                                  }
                                ],
                                "functionName": {
                                  "name": "copy_memory_to_memory_with_cleanup",
                                  "nodeType": "YulIdentifier",
                                  "src": "1656:34:5"
                                },
                                "nodeType": "YulFunctionCall",
                                "src": "1656:76:5"
                              },
                              "nodeType": "YulExpressionStatement",
                              "src": "1656:76:5"
                            },
                            {
                              "nodeType": "YulAssignment",
                              "src": "1741:57:5",
                              "value": {
                                "arguments": [
                                  {
                                    "arguments": [
                                      {
                                        "name": "pos",
                                        "nodeType": "YulIdentifier",
                                        "src": "1756:3:5"
                                      },
                                      {
                                        "arguments": [
                                          {
                                            "arguments": [
                                              {
                                                "name": "length",
                                                "nodeType": "YulIdentifier",
                                                "src": "1769:6:5"
                                              },
                                              {
                                                "kind": "number",
                                                "nodeType": "YulLiteral",
                                                "src": "1777:2:5",
                                                "type": "",
                                                "value": "31"
                                              }
                                            ],
                                            "functionName": {
                                              "name": "add",
                                              "nodeType": "YulIdentifier",
                                              "src": "1765:3:5"
                                            },
                                            "nodeType": "YulFunctionCall",
                                            "src": "1765:15:5"
                                          },
                                          {
                                            "arguments": [
                                              {
                                                "kind": "number",
                                                "nodeType": "YulLiteral",
                                                "src": "1786:2:5",
                                                "type": "",
                                                "value": "31"
                                              }
                                            ],
                                            "functionName": {
                                              "name": "not",
                                              "nodeType": "YulIdentifier",
                                              "src": "1782:3:5"
                                            },
                                            "nodeType": "YulFunctionCall",
                                            "src": "1782:7:5"
                                          }
                                        ],
                                        "functionName": {
                                          "name": "and",
                                          "nodeType": "YulIdentifier",
                                          "src": "1761:3:5"
                                        },
                                        "nodeType": "YulFunctionCall",
                                        "src": "1761:29:5"
                                      }
                                    ],
                                    "functionName": {
                                      "name": "add",
                                      "nodeType": "YulIdentifier",
                                      "src": "1752:3:5"
                                    },
                                    "nodeType": "YulFunctionCall",
                                    "src": "1752:39:5"
                                  },
                                  {
                                    "kind": "number",
                                    "nodeType": "YulLiteral",
                                    "src": "1793:4:5",
                                    "type": "",
                                    "value": "0x20"
                                  }
                                ],
                                "functionName": {
                                  "name": "add",
                                  "nodeType": "YulIdentifier",
                                  "src": "1748:3:5"
                                },
                                "nodeType": "YulFunctionCall",
                                "src": "1748:50:5"
                              },
                              "variableNames": [
                                {
                                  "name": "end",
                                  "nodeType": "YulIdentifier",
                                  "src": "1741:3:5"
                                }
                              ]
                            }
                          ]
                        },
                        "name": "abi_encode_string",
                        "nodeType": "YulFunctionDefinition",
                        "parameters": [
                          {
                            "name": "value",
                            "nodeType": "YulTypedName",
                            "src": "1560:5:5",
                            "type": ""
                          },
                          {
                            "name": "pos",
                            "nodeType": "YulTypedName",
                            "src": "1567:3:5",
                            "type": ""
                          }
                        ],
                        "returnVariables": [
                          {
                            "name": "end",
                            "nodeType": "YulTypedName",
                            "src": "1575:3:5",
                            "type": ""
                          }
                        ],
                        "src": "1533:271:5"
                      },
                      {
                        "body": {
                          "nodeType": "YulBlock",
                          "src": "2010:968:5",
                          "statements": [
                            {
                              "nodeType": "YulVariableDeclaration",
                              "src": "2020:12:5",
                              "value": {
                                "kind": "number",
                                "nodeType": "YulLiteral",
                                "src": "2030:2:5",
                                "type": "",
                                "value": "32"
                              },
                              "variables": [
                                {
                                  "name": "_1",
                                  "nodeType": "YulTypedName",
                                  "src": "2024:2:5",
                                  "type": ""
                                }
                              ]
                            },
                            {
                              "nodeType": "YulVariableDeclaration",
                              "src": "2041:32:5",
                              "value": {
                                "arguments": [
                                  {
                                    "name": "headStart",
                                    "nodeType": "YulIdentifier",
                                    "src": "2059:9:5"
                                  },
                                  {
                                    "name": "_1",
                                    "nodeType": "YulIdentifier",
                                    "src": "2070:2:5"
                                  }
                                ],
                                "functionName": {
                                  "name": "add",
                                  "nodeType": "YulIdentifier",
                                  "src": "2055:3:5"
                                },
                                "nodeType": "YulFunctionCall",
                                "src": "2055:18:5"
                              },
                              "variables": [
                                {
                                  "name": "tail_1",
                                  "nodeType": "YulTypedName",
                                  "src": "2045:6:5",
                                  "type": ""
                                }
                              ]
                            },
                            {
                              "expression": {
                                "arguments": [
                                  {
                                    "name": "headStart",
                                    "nodeType": "YulIdentifier",
                                    "src": "2089:9:5"
                                  },
                                  {
                                    "name": "_1",
                                    "nodeType": "YulIdentifier",
                                    "src": "2100:2:5"
                                  }
                                ],
                                "functionName": {
                                  "name": "mstore",
                                  "nodeType": "YulIdentifier",
                                  "src": "2082:6:5"
                                },
                                "nodeType": "YulFunctionCall",
                                "src": "2082:21:5"
                              },
                              "nodeType": "YulExpressionStatement",
                              "src": "2082:21:5"
                            },
                            {
                              "nodeType": "YulVariableDeclaration",
                              "src": "2112:17:5",
                              "value": {
                                "name": "tail_1",
                                "nodeType": "YulIdentifier",
                                "src": "2123:6:5"
                              },
                              "variables": [
                                {
                                  "name": "pos",
                                  "nodeType": "YulTypedName",
                                  "src": "2116:3:5",
                                  "type": ""
                                }
                              ]
                            },
                            {
                              "nodeType": "YulVariableDeclaration",
                              "src": "2138:27:5",
                              "value": {
                                "arguments": [
                                  {
                                    "name": "value0",
                                    "nodeType": "YulIdentifier",
                                    "src": "2158:6:5"
                                  }
                                ],
                                "functionName": {
                                  "name": "mload",
                                  "nodeType": "YulIdentifier",
                                  "src": "2152:5:5"
                                },
                                "nodeType": "YulFunctionCall",
                                "src": "2152:13:5"
                              },
                              "variables": [
                                {
                                  "name": "length",
                                  "nodeType": "YulTypedName",
                                  "src": "2142:6:5",
                                  "type": ""
                                }
                              ]
                            },
                            {
                              "expression": {
                                "arguments": [
                                  {
                                    "name": "tail_1",
                                    "nodeType": "YulIdentifier",
                                    "src": "2181:6:5"
                                  },
                                  {
                                    "name": "length",
                                    "nodeType": "YulIdentifier",
                                    "src": "2189:6:5"
                                  }
                                ],
                                "functionName": {
                                  "name": "mstore",
                                  "nodeType": "YulIdentifier",
                                  "src": "2174:6:5"
                                },
                                "nodeType": "YulFunctionCall",
                                "src": "2174:22:5"
                              },
                              "nodeType": "YulExpressionStatement",
                              "src": "2174:22:5"
                            },
                            {
                              "nodeType": "YulVariableDeclaration",
                              "src": "2205:12:5",
                              "value": {
                                "kind": "number",
                                "nodeType": "YulLiteral",
                                "src": "2215:2:5",
                                "type": "",
                                "value": "64"
                              },
                              "variables": [
                                {
                                  "name": "_2",
                                  "nodeType": "YulTypedName",
                                  "src": "2209:2:5",
                                  "type": ""
                                }
                              ]
                            },
                            {
                              "nodeType": "YulAssignment",
                              "src": "2226:25:5",
                              "value": {
                                "arguments": [
                                  {
                                    "name": "headStart",
                                    "nodeType": "YulIdentifier",
                                    "src": "2237:9:5"
                                  },
                                  {
                                    "name": "_2",
                                    "nodeType": "YulIdentifier",
                                    "src": "2248:2:5"
                                  }
                                ],
                                "functionName": {
                                  "name": "add",
                                  "nodeType": "YulIdentifier",
                                  "src": "2233:3:5"
                                },
                                "nodeType": "YulFunctionCall",
                                "src": "2233:18:5"
                              },
                              "variableNames": [
                                {
                                  "name": "pos",
                                  "nodeType": "YulIdentifier",
                                  "src": "2226:3:5"
                                }
                              ]
                            },
                            {
                              "nodeType": "YulVariableDeclaration",
                              "src": "2260:53:5",
                              "value": {
                                "arguments": [
                                  {
                                    "arguments": [
                                      {
                                        "name": "headStart",
                                        "nodeType": "YulIdentifier",
                                        "src": "2282:9:5"
                                      },
                                      {
                                        "arguments": [
                                          {
                                            "kind": "number",
                                            "nodeType": "YulLiteral",
                                            "src": "2297:1:5",
                                            "type": "",
                                            "value": "5"
                                          },
                                          {
                                            "name": "length",
                                            "nodeType": "YulIdentifier",
                                            "src": "2300:6:5"
                                          }
                                        ],
                                        "functionName": {
                                          "name": "shl",
                                          "nodeType": "YulIdentifier",
                                          "src": "2293:3:5"
                                        },
                                        "nodeType": "YulFunctionCall",
                                        "src": "2293:14:5"
                                      }
                                    ],
                                    "functionName": {
                                      "name": "add",
                                      "nodeType": "YulIdentifier",
                                      "src": "2278:3:5"
                                    },
                                    "nodeType": "YulFunctionCall",
                                    "src": "2278:30:5"
                                  },
                                  {
                                    "name": "_2",
                                    "nodeType": "YulIdentifier",
                                    "src": "2310:2:5"
                                  }
                                ],
                                "functionName": {
                                  "name": "add",
                                  "nodeType": "YulIdentifier",
                                  "src": "2274:3:5"
                                },
                                "nodeType": "YulFunctionCall",
                                "src": "2274:39:5"
                              },
                              "variables": [
                                {
                                  "name": "tail_2",
                                  "nodeType": "YulTypedName",
                                  "src": "2264:6:5",
                                  "type": ""
                                }
                              ]
                            },
                            {
                              "nodeType": "YulVariableDeclaration",
                              "src": "2322:29:5",
                              "value": {
                                "arguments": [
                                  {
                                    "name": "value0",
                                    "nodeType": "YulIdentifier",
                                    "src": "2340:6:5"
                                  },
                                  {
                                    "name": "_1",
                                    "nodeType": "YulIdentifier",
                                    "src": "2348:2:5"
                                  }
                                ],
                                "functionName": {
                                  "name": "add",
                                  "nodeType": "YulIdentifier",
                                  "src": "2336:3:5"
                                },
                                "nodeType": "YulFunctionCall",
                                "src": "2336:15:5"
                              },
                              "variables": [
                                {
                                  "name": "srcPtr",
                                  "nodeType": "YulTypedName",
                                  "src": "2326:6:5",
                                  "type": ""
                                }
                              ]
                            },
                            {
                              "nodeType": "YulVariableDeclaration",
                              "src": "2360:10:5",
                              "value": {
                                "kind": "number",
                                "nodeType": "YulLiteral",
                                "src": "2369:1:5",
                                "type": "",
                                "value": "0"
                              },
                              "variables": [
                                {
                                  "name": "i",
                                  "nodeType": "YulTypedName",
                                  "src": "2364:1:5",
                                  "type": ""
                                }
                              ]
                            },
                            {
                              "body": {
                                "nodeType": "YulBlock",
                                "src": "2428:521:5",
                                "statements": [
                                  {
                                    "expression": {
                                      "arguments": [
                                        {
                                          "name": "pos",
                                          "nodeType": "YulIdentifier",
                                          "src": "2449:3:5"
                                        },
                                        {
                                          "arguments": [
                                            {
                                              "arguments": [
                                                {
                                                  "name": "tail_2",
                                                  "nodeType": "YulIdentifier",
                                                  "src": "2462:6:5"
                                                },
                                                {
                                                  "name": "headStart",
                                                  "nodeType": "YulIdentifier",
                                                  "src": "2470:9:5"
                                                }
                                              ],
                                              "functionName": {
                                                "name": "sub",
                                                "nodeType": "YulIdentifier",
                                                "src": "2458:3:5"
                                              },
                                              "nodeType": "YulFunctionCall",
                                              "src": "2458:22:5"
                                            },
                                            {
                                              "arguments": [
                                                {
                                                  "kind": "number",
                                                  "nodeType": "YulLiteral",
                                                  "src": "2486:2:5",
                                                  "type": "",
                                                  "value": "63"
                                                }
                                              ],
                                              "functionName": {
                                                "name": "not",
                                                "nodeType": "YulIdentifier",
                                                "src": "2482:3:5"
                                              },
                                              "nodeType": "YulFunctionCall",
                                              "src": "2482:7:5"
                                            }
                                          ],
                                          "functionName": {
                                            "name": "add",
                                            "nodeType": "YulIdentifier",
                                            "src": "2454:3:5"
                                          },
                                          "nodeType": "YulFunctionCall",
                                          "src": "2454:36:5"
                                        }
                                      ],
                                      "functionName": {
                                        "name": "mstore",
                                        "nodeType": "YulIdentifier",
                                        "src": "2442:6:5"
                                      },
                                      "nodeType": "YulFunctionCall",
                                      "src": "2442:49:5"
                                    },
                                    "nodeType": "YulExpressionStatement",
                                    "src": "2442:49:5"
                                  },
                                  {
                                    "nodeType": "YulVariableDeclaration",
                                    "src": "2504:23:5",
                                    "value": {
                                      "arguments": [
                                        {
                                          "name": "srcPtr",
                                          "nodeType": "YulIdentifier",
                                          "src": "2520:6:5"
                                        }
                                      ],
                                      "functionName": {
                                        "name": "mload",
                                        "nodeType": "YulIdentifier",
                                        "src": "2514:5:5"
                                      },
                                      "nodeType": "YulFunctionCall",
                                      "src": "2514:13:5"
                                    },
                                    "variables": [
                                      {
                                        "name": "_3",
                                        "nodeType": "YulTypedName",
                                        "src": "2508:2:5",
                                        "type": ""
                                      }
                                    ]
                                  },
                                  {
                                    "nodeType": "YulVariableDeclaration",
                                    "src": "2540:14:5",
                                    "value": {
                                      "kind": "number",
                                      "nodeType": "YulLiteral",
                                      "src": "2550:4:5",
                                      "type": "",
                                      "value": "0x60"
                                    },
                                    "variables": [
                                      {
                                        "name": "_4",
                                        "nodeType": "YulTypedName",
                                        "src": "2544:2:5",
                                        "type": ""
                                      }
                                    ]
                                  },
                                  {
                                    "nodeType": "YulVariableDeclaration",
                                    "src": "2567:29:5",
                                    "value": {
                                      "arguments": [
                                        {
                                          "name": "_3",
                                          "nodeType": "YulIdentifier",
                                          "src": "2593:2:5"
                                        }
                                      ],
                                      "functionName": {
                                        "name": "mload",
                                        "nodeType": "YulIdentifier",
                                        "src": "2587:5:5"
                                      },
                                      "nodeType": "YulFunctionCall",
                                      "src": "2587:9:5"
                                    },
                                    "variables": [
                                      {
                                        "name": "memberValue0",
                                        "nodeType": "YulTypedName",
                                        "src": "2571:12:5",
                                        "type": ""
                                      }
                                    ]
                                  },
                                  {
                                    "expression": {
                                      "arguments": [
                                        {
                                          "name": "tail_2",
                                          "nodeType": "YulIdentifier",
                                          "src": "2616:6:5"
                                        },
                                        {
                                          "name": "_4",
                                          "nodeType": "YulIdentifier",
                                          "src": "2624:2:5"
                                        }
                                      ],
                                      "functionName": {
                                        "name": "mstore",
                                        "nodeType": "YulIdentifier",
                                        "src": "2609:6:5"
                                      },
                                      "nodeType": "YulFunctionCall",
                                      "src": "2609:18:5"
                                    },
                                    "nodeType": "YulExpressionStatement",
                                    "src": "2609:18:5"
                                  },
                                  {
                                    "nodeType": "YulVariableDeclaration",
                                    "src": "2640:62:5",
                                    "value": {
                                      "arguments": [
                                        {
                                          "name": "memberValue0",
                                          "nodeType": "YulIdentifier",
                                          "src": "2672:12:5"
                                        },
                                        {
                                          "arguments": [
                                            {
                                              "name": "tail_2",
                                              "nodeType": "YulIdentifier",
                                              "src": "2690:6:5"
                                            },
                                            {
                                              "name": "_4",
                                              "nodeType": "YulIdentifier",
                                              "src": "2698:2:5"
                                            }
                                          ],
                                          "functionName": {
                                            "name": "add",
                                            "nodeType": "YulIdentifier",
                                            "src": "2686:3:5"
                                          },
                                          "nodeType": "YulFunctionCall",
                                          "src": "2686:15:5"
                                        }
                                      ],
                                      "functionName": {
                                        "name": "abi_encode_string",
                                        "nodeType": "YulIdentifier",
                                        "src": "2654:17:5"
                                      },
                                      "nodeType": "YulFunctionCall",
                                      "src": "2654:48:5"
                                    },
                                    "variables": [
                                      {
                                        "name": "tail_3",
                                        "nodeType": "YulTypedName",
                                        "src": "2644:6:5",
                                        "type": ""
                                      }
                                    ]
                                  },
                                  {
                                    "expression": {
                                      "arguments": [
                                        {
                                          "arguments": [
                                            {
                                              "name": "tail_2",
                                              "nodeType": "YulIdentifier",
                                              "src": "2726:6:5"
                                            },
                                            {
                                              "name": "_1",
                                              "nodeType": "YulIdentifier",
                                              "src": "2734:2:5"
                                            }
                                          ],
                                          "functionName": {
                                            "name": "add",
                                            "nodeType": "YulIdentifier",
                                            "src": "2722:3:5"
                                          },
                                          "nodeType": "YulFunctionCall",
                                          "src": "2722:15:5"
                                        },
                                        {
                                          "arguments": [
                                            {
                                              "arguments": [
                                                {
                                                  "name": "_3",
                                                  "nodeType": "YulIdentifier",
                                                  "src": "2749:2:5"
                                                },
                                                {
                                                  "name": "_1",
                                                  "nodeType": "YulIdentifier",
                                                  "src": "2753:2:5"
                                                }
                                              ],
                                              "functionName": {
                                                "name": "add",
                                                "nodeType": "YulIdentifier",
                                                "src": "2745:3:5"
                                              },
                                              "nodeType": "YulFunctionCall",
                                              "src": "2745:11:5"
                                            }
                                          ],
                                          "functionName": {
                                            "name": "mload",
                                            "nodeType": "YulIdentifier",
                                            "src": "2739:5:5"
                                          },
                                          "nodeType": "YulFunctionCall",
                                          "src": "2739:18:5"
                                        }
                                      ],
                                      "functionName": {
                                        "name": "mstore",
                                        "nodeType": "YulIdentifier",
                                        "src": "2715:6:5"
                                      },
                                      "nodeType": "YulFunctionCall",
                                      "src": "2715:43:5"
                                    },
                                    "nodeType": "YulExpressionStatement",
                                    "src": "2715:43:5"
                                  },
                                  {
                                    "expression": {
                                      "arguments": [
                                        {
                                          "arguments": [
                                            {
                                              "name": "tail_2",
                                              "nodeType": "YulIdentifier",
                                              "src": "2782:6:5"
                                            },
                                            {
                                              "name": "_2",
                                              "nodeType": "YulIdentifier",
                                              "src": "2790:2:5"
                                            }
                                          ],
                                          "functionName": {
                                            "name": "add",
                                            "nodeType": "YulIdentifier",
                                            "src": "2778:3:5"
                                          },
                                          "nodeType": "YulFunctionCall",
                                          "src": "2778:15:5"
                                        },
                                        {
                                          "arguments": [
                                            {
                                              "arguments": [
                                                {
                                                  "arguments": [
                                                    {
                                                      "name": "_3",
                                                      "nodeType": "YulIdentifier",
                                                      "src": "2809:2:5"
                                                    },
                                                    {
                                                      "name": "_2",
                                                      "nodeType": "YulIdentifier",
                                                      "src": "2813:2:5"
                                                    }
                                                  ],
                                                  "functionName": {
                                                    "name": "add",
                                                    "nodeType": "YulIdentifier",
                                                    "src": "2805:3:5"
                                                  },
                                                  "nodeType": "YulFunctionCall",
                                                  "src": "2805:11:5"
                                                }
                                              ],
                                              "functionName": {
                                                "name": "mload",
                                                "nodeType": "YulIdentifier",
                                                "src": "2799:5:5"
                                              },
                                              "nodeType": "YulFunctionCall",
                                              "src": "2799:18:5"
                                            },
                                            {
                                              "arguments": [
                                                {
                                                  "arguments": [
                                                    {
                                                      "kind": "number",
                                                      "nodeType": "YulLiteral",
                                                      "src": "2827:3:5",
                                                      "type": "",
                                                      "value": "160"
                                                    },
                                                    {
                                                      "kind": "number",
                                                      "nodeType": "YulLiteral",
                                                      "src": "2832:1:5",
                                                      "type": "",
                                                      "value": "1"
                                                    }
                                                  ],
                                                  "functionName": {
                                                    "name": "shl",
                                                    "nodeType": "YulIdentifier",
                                                    "src": "2823:3:5"
                                                  },
                                                  "nodeType": "YulFunctionCall",
                                                  "src": "2823:11:5"
                                                },
                                                {
                                                  "kind": "number",
                                                  "nodeType": "YulLiteral",
                                                  "src": "2836:1:5",
                                                  "type": "",
                                                  "value": "1"
                                                }
                                              ],
                                              "functionName": {
                                                "name": "sub",
                                                "nodeType": "YulIdentifier",
                                                "src": "2819:3:5"
                                              },
                                              "nodeType": "YulFunctionCall",
                                              "src": "2819:19:5"
                                            }
                                          ],
                                          "functionName": {
                                            "name": "and",
                                            "nodeType": "YulIdentifier",
                                            "src": "2795:3:5"
                                          },
                                          "nodeType": "YulFunctionCall",
                                          "src": "2795:44:5"
                                        }
                                      ],
                                      "functionName": {
                                        "name": "mstore",
                                        "nodeType": "YulIdentifier",
                                        "src": "2771:6:5"
                                      },
                                      "nodeType": "YulFunctionCall",
                                      "src": "2771:69:5"
                                    },
                                    "nodeType": "YulExpressionStatement",
                                    "src": "2771:69:5"
                                  },
                                  {
                                    "nodeType": "YulAssignment",
                                    "src": "2853:16:5",
                                    "value": {
                                      "name": "tail_3",
                                      "nodeType": "YulIdentifier",
                                      "src": "2863:6:5"
                                    },
                                    "variableNames": [
                                      {
                                        "name": "tail_2",
                                        "nodeType": "YulIdentifier",
                                        "src": "2853:6:5"
                                      }
                                    ]
                                  },
                                  {
                                    "nodeType": "YulAssignment",
                                    "src": "2882:25:5",
                                    "value": {
                                      "arguments": [
                                        {
                                          "name": "srcPtr",
                                          "nodeType": "YulIdentifier",
                                          "src": "2896:6:5"
                                        },
                                        {
                                          "name": "_1",
                                          "nodeType": "YulIdentifier",
                                          "src": "2904:2:5"
                                        }
                                      ],
                                      "functionName": {
                                        "name": "add",
                                        "nodeType": "YulIdentifier",
                                        "src": "2892:3:5"
                                      },
                                      "nodeType": "YulFunctionCall",
                                      "src": "2892:15:5"
                                    },
                                    "variableNames": [
                                      {
                                        "name": "srcPtr",
                                        "nodeType": "YulIdentifier",
                                        "src": "2882:6:5"
                                      }
                                    ]
                                  },
                                  {
                                    "nodeType": "YulAssignment",
                                    "src": "2920:19:5",
                                    "value": {
                                      "arguments": [
                                        {
                                          "name": "pos",
                                          "nodeType": "YulIdentifier",
                                          "src": "2931:3:5"
                                        },
                                        {
                                          "name": "_1",
                                          "nodeType": "YulIdentifier",
                                          "src": "2936:2:5"
                                        }
                                      ],
                                      "functionName": {
                                        "name": "add",
                                        "nodeType": "YulIdentifier",
                                        "src": "2927:3:5"
                                      },
                                      "nodeType": "YulFunctionCall",
                                      "src": "2927:12:5"
                                    },
                                    "variableNames": [
                                      {
                                        "name": "pos",
                                        "nodeType": "YulIdentifier",
                                        "src": "2920:3:5"
                                      }
                                    ]
                                  }
                                ]
                              },
                              "condition": {
                                "arguments": [
                                  {
                                    "name": "i",
                                    "nodeType": "YulIdentifier",
                                    "src": "2390:1:5"
                                  },
                                  {
                                    "name": "length",
                                    "nodeType": "YulIdentifier",
                                    "src": "2393:6:5"
                                  }
                                ],
                                "functionName": {
                                  "name": "lt",
                                  "nodeType": "YulIdentifier",
                                  "src": "2387:2:5"
                                },
                                "nodeType": "YulFunctionCall",
                                "src": "2387:13:5"
                              },
                              "nodeType": "YulForLoop",
                              "post": {
                                "nodeType": "YulBlock",
                                "src": "2401:18:5",
                                "statements": [
                                  {
                                    "nodeType": "YulAssignment",
                                    "src": "2403:14:5",
                                    "value": {
                                      "arguments": [
                                        {
                                          "name": "i",
                                          "nodeType": "YulIdentifier",
                                          "src": "2412:1:5"
                                        },
                                        {
                                          "kind": "number",
                                          "nodeType": "YulLiteral",
                                          "src": "2415:1:5",
                                          "type": "",
                                          "value": "1"
                                        }
                                      ],
                                      "functionName": {
                                        "name": "add",
                                        "nodeType": "YulIdentifier",
                                        "src": "2408:3:5"
                                      },
                                      "nodeType": "YulFunctionCall",
                                      "src": "2408:9:5"
                                    },
                                    "variableNames": [
                                      {
                                        "name": "i",
                                        "nodeType": "YulIdentifier",
                                        "src": "2403:1:5"
                                      }
                                    ]
                                  }
                                ]
                              },
                              "pre": {
                                "nodeType": "YulBlock",
                                "src": "2383:3:5",
                                "statements": []
                              },
                              "src": "2379:570:5"
                            },
                            {
                              "nodeType": "YulAssignment",
                              "src": "2958:14:5",
                              "value": {
                                "name": "tail_2",
                                "nodeType": "YulIdentifier",
                                "src": "2966:6:5"
                              },
                              "variableNames": [
                                {
                                  "name": "tail",
                                  "nodeType": "YulIdentifier",
                                  "src": "2958:4:5"
                                }
                              ]
                            }
                          ]
                        },
                        "name": "abi_encode_tuple_t_array$_t_struct$_Proposal_$391_memory_ptr_$dyn_memory_ptr__to_t_array$_t_struct$_Proposal_$391_memory_ptr_$dyn_memory_ptr__fromStack_reversed",
                        "nodeType": "YulFunctionDefinition",
                        "parameters": [
                          {
                            "name": "headStart",
                            "nodeType": "YulTypedName",
                            "src": "1979:9:5",
                            "type": ""
                          },
                          {
                            "name": "value0",
                            "nodeType": "YulTypedName",
                            "src": "1990:6:5",
                            "type": ""
                          }
                        ],
                        "returnVariables": [
                          {
                            "name": "tail",
                            "nodeType": "YulTypedName",
                            "src": "2001:4:5",
                            "type": ""
                          }
                        ],
                        "src": "1809:1169:5"
                      },
                      {
                        "body": {
                          "nodeType": "YulBlock",
                          "src": "3090:372:5",
                          "statements": [
                            {
                              "body": {
                                "nodeType": "YulBlock",
                                "src": "3136:16:5",
                                "statements": [
                                  {
                                    "expression": {
                                      "arguments": [
                                        {
                                          "kind": "number",
                                          "nodeType": "YulLiteral",
                                          "src": "3145:1:5",
                                          "type": "",
                                          "value": "0"
                                        },
                                        {
                                          "kind": "number",
                                          "nodeType": "YulLiteral",
                                          "src": "3148:1:5",
                                          "type": "",
                                          "value": "0"
                                        }
                                      ],
                                      "functionName": {
                                        "name": "revert",
                                        "nodeType": "YulIdentifier",
                                        "src": "3138:6:5"
                                      },
                                      "nodeType": "YulFunctionCall",
                                      "src": "3138:12:5"
                                    },
                                    "nodeType": "YulExpressionStatement",
                                    "src": "3138:12:5"
                                  }
                                ]
                              },
                              "condition": {
                                "arguments": [
                                  {
                                    "arguments": [
                                      {
                                        "name": "dataEnd",
                                        "nodeType": "YulIdentifier",
                                        "src": "3111:7:5"
                                      },
                                      {
                                        "name": "headStart",
                                        "nodeType": "YulIdentifier",
                                        "src": "3120:9:5"
                                      }
                                    ],
                                    "functionName": {
                                      "name": "sub",
                                      "nodeType": "YulIdentifier",
                                      "src": "3107:3:5"
                                    },
                                    "nodeType": "YulFunctionCall",
                                    "src": "3107:23:5"
                                  },
                                  {
                                    "kind": "number",
                                    "nodeType": "YulLiteral",
                                    "src": "3132:2:5",
                                    "type": "",
                                    "value": "64"
                                  }
                                ],
                                "functionName": {
                                  "name": "slt",
                                  "nodeType": "YulIdentifier",
                                  "src": "3103:3:5"
                                },
                                "nodeType": "YulFunctionCall",
                                "src": "3103:32:5"
                              },
                              "nodeType": "YulIf",
                              "src": "3100:52:5"
                            },
                            {
                              "nodeType": "YulAssignment",
                              "src": "3161:33:5",
                              "value": {
                                "arguments": [
                                  {
                                    "name": "headStart",
                                    "nodeType": "YulIdentifier",
                                    "src": "3184:9:5"
                                  }
                                ],
                                "functionName": {
                                  "name": "calldataload",
                                  "nodeType": "YulIdentifier",
                                  "src": "3171:12:5"
                                },
                                "nodeType": "YulFunctionCall",
                                "src": "3171:23:5"
                              },
                              "variableNames": [
                                {
                                  "name": "value0",
                                  "nodeType": "YulIdentifier",
                                  "src": "3161:6:5"
                                }
                              ]
                            },
                            {
                              "nodeType": "YulVariableDeclaration",
                              "src": "3203:46:5",
                              "value": {
                                "arguments": [
                                  {
                                    "arguments": [
                                      {
                                        "name": "headStart",
                                        "nodeType": "YulIdentifier",
                                        "src": "3234:9:5"
                                      },
                                      {
                                        "kind": "number",
                                        "nodeType": "YulLiteral",
                                        "src": "3245:2:5",
                                        "type": "",
                                        "value": "32"
                                      }
                                    ],
                                    "functionName": {
                                      "name": "add",
                                      "nodeType": "YulIdentifier",
                                      "src": "3230:3:5"
                                    },
                                    "nodeType": "YulFunctionCall",
                                    "src": "3230:18:5"
                                  }
                                ],
                                "functionName": {
                                  "name": "calldataload",
                                  "nodeType": "YulIdentifier",
                                  "src": "3217:12:5"
                                },
                                "nodeType": "YulFunctionCall",
                                "src": "3217:32:5"
                              },
                              "variables": [
                                {
                                  "name": "offset",
                                  "nodeType": "YulTypedName",
                                  "src": "3207:6:5",
                                  "type": ""
                                }
                              ]
                            },
                            {
                              "body": {
                                "nodeType": "YulBlock",
                                "src": "3292:16:5",
                                "statements": [
                                  {
                                    "expression": {
                                      "arguments": [
                                        {
                                          "kind": "number",
                                          "nodeType": "YulLiteral",
                                          "src": "3301:1:5",
                                          "type": "",
                                          "value": "0"
                                        },
                                        {
                                          "kind": "number",
                                          "nodeType": "YulLiteral",
                                          "src": "3304:1:5",
                                          "type": "",
                                          "value": "0"
                                        }
                                      ],
                                      "functionName": {
                                        "name": "revert",
                                        "nodeType": "YulIdentifier",
                                        "src": "3294:6:5"
                                      },
                                      "nodeType": "YulFunctionCall",
                                      "src": "3294:12:5"
                                    },
                                    "nodeType": "YulExpressionStatement",
                                    "src": "3294:12:5"
                                  }
                                ]
                              },
                              "condition": {
                                "arguments": [
                                  {
                                    "name": "offset",
                                    "nodeType": "YulIdentifier",
                                    "src": "3264:6:5"
                                  },
                                  {
                                    "kind": "number",
                                    "nodeType": "YulLiteral",
                                    "src": "3272:18:5",
                                    "type": "",
                                    "value": "0xffffffffffffffff"
                                  }
                                ],
                                "functionName": {
                                  "name": "gt",
                                  "nodeType": "YulIdentifier",
                                  "src": "3261:2:5"
                                },
                                "nodeType": "YulFunctionCall",
                                "src": "3261:30:5"
                              },
                              "nodeType": "YulIf",
                              "src": "3258:50:5"
                            },
                            {
                              "nodeType": "YulVariableDeclaration",
                              "src": "3317:85:5",
                              "value": {
                                "arguments": [
                                  {
                                    "arguments": [
                                      {
                                        "name": "headStart",
                                        "nodeType": "YulIdentifier",
                                        "src": "3374:9:5"
                                      },
                                      {
                                        "name": "offset",
                                        "nodeType": "YulIdentifier",
                                        "src": "3385:6:5"
                                      }
                                    ],
                                    "functionName": {
                                      "name": "add",
                                      "nodeType": "YulIdentifier",
                                      "src": "3370:3:5"
                                    },
                                    "nodeType": "YulFunctionCall",
                                    "src": "3370:22:5"
                                  },
                                  {
                                    "name": "dataEnd",
                                    "nodeType": "YulIdentifier",
                                    "src": "3394:7:5"
                                  }
                                ],
                                "functionName": {
                                  "name": "abi_decode_string_calldata",
                                  "nodeType": "YulIdentifier",
                                  "src": "3343:26:5"
                                },
                                "nodeType": "YulFunctionCall",
                                "src": "3343:59:5"
                              },
                              "variables": [
                                {
                                  "name": "value1_1",
                                  "nodeType": "YulTypedName",
                                  "src": "3321:8:5",
                                  "type": ""
                                },
                                {
                                  "name": "value2_1",
                                  "nodeType": "YulTypedName",
                                  "src": "3331:8:5",
                                  "type": ""
                                }
                              ]
                            },
                            {
                              "nodeType": "YulAssignment",
                              "src": "3411:18:5",
                              "value": {
                                "name": "value1_1",
                                "nodeType": "YulIdentifier",
                                "src": "3421:8:5"
                              },
                              "variableNames": [
                                {
                                  "name": "value1",
                                  "nodeType": "YulIdentifier",
                                  "src": "3411:6:5"
                                }
                              ]
                            },
                            {
                              "nodeType": "YulAssignment",
                              "src": "3438:18:5",
                              "value": {
                                "name": "value2_1",
                                "nodeType": "YulIdentifier",
                                "src": "3448:8:5"
                              },
                              "variableNames": [
                                {
                                  "name": "value2",
                                  "nodeType": "YulIdentifier",
                                  "src": "3438:6:5"
                                }
                              ]
                            }
                          ]
                        },
                        "name": "abi_decode_tuple_t_uint256t_string_calldata_ptr",
                        "nodeType": "YulFunctionDefinition",
                        "parameters": [
                          {
                            "name": "headStart",
                            "nodeType": "YulTypedName",
                            "src": "3040:9:5",
                            "type": ""
                          },
                          {
                            "name": "dataEnd",
                            "nodeType": "YulTypedName",
                            "src": "3051:7:5",
                            "type": ""
                          }
                        ],
                        "returnVariables": [
                          {
                            "name": "value0",
                            "nodeType": "YulTypedName",
                            "src": "3063:6:5",
                            "type": ""
                          },
                          {
                            "name": "value1",
                            "nodeType": "YulTypedName",
                            "src": "3071:6:5",
                            "type": ""
                          },
                          {
                            "name": "value2",
                            "nodeType": "YulTypedName",
                            "src": "3079:6:5",
                            "type": ""
                          }
                        ],
                        "src": "2983:479:5"
                      },
                      {
                        "body": {
                          "nodeType": "YulBlock",
                          "src": "3568:102:5",
                          "statements": [
                            {
                              "nodeType": "YulAssignment",
                              "src": "3578:26:5",
                              "value": {
                                "arguments": [
                                  {
                                    "name": "headStart",
                                    "nodeType": "YulIdentifier",
                                    "src": "3590:9:5"
                                  },
                                  {
                                    "kind": "number",
                                    "nodeType": "YulLiteral",
                                    "src": "3601:2:5",
                                    "type": "",
                                    "value": "32"
                                  }
                                ],
                                "functionName": {
                                  "name": "add",
                                  "nodeType": "YulIdentifier",
                                  "src": "3586:3:5"
                                },
                                "nodeType": "YulFunctionCall",
                                "src": "3586:18:5"
                              },
                              "variableNames": [
                                {
                                  "name": "tail",
                                  "nodeType": "YulIdentifier",
                                  "src": "3578:4:5"
                                }
                              ]
                            },
                            {
                              "expression": {
                                "arguments": [
                                  {
                                    "name": "headStart",
                                    "nodeType": "YulIdentifier",
                                    "src": "3620:9:5"
                                  },
                                  {
                                    "arguments": [
                                      {
                                        "name": "value0",
                                        "nodeType": "YulIdentifier",
                                        "src": "3635:6:5"
                                      },
                                      {
                                        "arguments": [
                                          {
                                            "arguments": [
                                              {
                                                "kind": "number",
                                                "nodeType": "YulLiteral",
                                                "src": "3651:3:5",
                                                "type": "",
                                                "value": "160"
                                              },
                                              {
                                                "kind": "number",
                                                "nodeType": "YulLiteral",
                                                "src": "3656:1:5",
                                                "type": "",
                                                "value": "1"
                                              }
                                            ],
                                            "functionName": {
                                              "name": "shl",
                                              "nodeType": "YulIdentifier",
                                              "src": "3647:3:5"
                                            },
                                            "nodeType": "YulFunctionCall",
                                            "src": "3647:11:5"
                                          },
                                          {
                                            "kind": "number",
                                            "nodeType": "YulLiteral",
                                            "src": "3660:1:5",
                                            "type": "",
                                            "value": "1"
                                          }
                                        ],
                                        "functionName": {
                                          "name": "sub",
                                          "nodeType": "YulIdentifier",
                                          "src": "3643:3:5"
                                        },
                                        "nodeType": "YulFunctionCall",
                                        "src": "3643:19:5"
                                      }
                                    ],
                                    "functionName": {
                                      "name": "and",
                                      "nodeType": "YulIdentifier",
                                      "src": "3631:3:5"
                                    },
                                    "nodeType": "YulFunctionCall",
                                    "src": "3631:32:5"
                                  }
                                ],
                                "functionName": {
                                  "name": "mstore",
                                  "nodeType": "YulIdentifier",
                                  "src": "3613:6:5"
                                },
                                "nodeType": "YulFunctionCall",
                                "src": "3613:51:5"
                              },
                              "nodeType": "YulExpressionStatement",
                              "src": "3613:51:5"
                            }
                          ]
                        },
                        "name": "abi_encode_tuple_t_address__to_t_address__fromStack_reversed",
                        "nodeType": "YulFunctionDefinition",
                        "parameters": [
                          {
                            "name": "headStart",
                            "nodeType": "YulTypedName",
                            "src": "3537:9:5",
                            "type": ""
                          },
                          {
                            "name": "value0",
                            "nodeType": "YulTypedName",
                            "src": "3548:6:5",
                            "type": ""
                          }
                        ],
                        "returnVariables": [
                          {
                            "name": "tail",
                            "nodeType": "YulTypedName",
                            "src": "3559:4:5",
                            "type": ""
                          }
                        ],
                        "src": "3467:203:5"
                      },
                      {
                        "body": {
                          "nodeType": "YulBlock",
                          "src": "3760:252:5",
                          "statements": [
                            {
                              "body": {
                                "nodeType": "YulBlock",
                                "src": "3806:16:5",
                                "statements": [
                                  {
                                    "expression": {
                                      "arguments": [
                                        {
                                          "kind": "number",
                                          "nodeType": "YulLiteral",
                                          "src": "3815:1:5",
                                          "type": "",
                                          "value": "0"
                                        },
                                        {
                                          "kind": "number",
                                          "nodeType": "YulLiteral",
                                          "src": "3818:1:5",
                                          "type": "",
                                          "value": "0"
                                        }
                                      ],
                                      "functionName": {
                                        "name": "revert",
                                        "nodeType": "YulIdentifier",
                                        "src": "3808:6:5"
                                      },
                                      "nodeType": "YulFunctionCall",
                                      "src": "3808:12:5"
                                    },
                                    "nodeType": "YulExpressionStatement",
                                    "src": "3808:12:5"
                                  }
                                ]
                              },
                              "condition": {
                                "arguments": [
                                  {
                                    "arguments": [
                                      {
                                        "name": "dataEnd",
                                        "nodeType": "YulIdentifier",
                                        "src": "3781:7:5"
                                      },
                                      {
                                        "name": "headStart",
                                        "nodeType": "YulIdentifier",
                                        "src": "3790:9:5"
                                      }
                                    ],
                                    "functionName": {
                                      "name": "sub",
                                      "nodeType": "YulIdentifier",
                                      "src": "3777:3:5"
                                    },
                                    "nodeType": "YulFunctionCall",
                                    "src": "3777:23:5"
                                  },
                                  {
                                    "kind": "number",
                                    "nodeType": "YulLiteral",
                                    "src": "3802:2:5",
                                    "type": "",
                                    "value": "64"
                                  }
                                ],
                                "functionName": {
                                  "name": "slt",
                                  "nodeType": "YulIdentifier",
                                  "src": "3773:3:5"
                                },
                                "nodeType": "YulFunctionCall",
                                "src": "3773:32:5"
                              },
                              "nodeType": "YulIf",
                              "src": "3770:52:5"
                            },
                            {
                              "nodeType": "YulAssignment",
                              "src": "3831:33:5",
                              "value": {
                                "arguments": [
                                  {
                                    "name": "headStart",
                                    "nodeType": "YulIdentifier",
                                    "src": "3854:9:5"
                                  }
                                ],
                                "functionName": {
                                  "name": "calldataload",
                                  "nodeType": "YulIdentifier",
                                  "src": "3841:12:5"
                                },
                                "nodeType": "YulFunctionCall",
                                "src": "3841:23:5"
                              },
                              "variableNames": [
                                {
                                  "name": "value0",
                                  "nodeType": "YulIdentifier",
                                  "src": "3831:6:5"
                                }
                              ]
                            },
                            {
                              "nodeType": "YulVariableDeclaration",
                              "src": "3873:45:5",
                              "value": {
                                "arguments": [
                                  {
                                    "arguments": [
                                      {
                                        "name": "headStart",
                                        "nodeType": "YulIdentifier",
                                        "src": "3903:9:5"
                                      },
                                      {
                                        "kind": "number",
                                        "nodeType": "YulLiteral",
                                        "src": "3914:2:5",
                                        "type": "",
                                        "value": "32"
                                      }
                                    ],
                                    "functionName": {
                                      "name": "add",
                                      "nodeType": "YulIdentifier",
                                      "src": "3899:3:5"
                                    },
                                    "nodeType": "YulFunctionCall",
                                    "src": "3899:18:5"
                                  }
                                ],
                                "functionName": {
                                  "name": "calldataload",
                                  "nodeType": "YulIdentifier",
                                  "src": "3886:12:5"
                                },
                                "nodeType": "YulFunctionCall",
                                "src": "3886:32:5"
                              },
                              "variables": [
                                {
                                  "name": "value",
                                  "nodeType": "YulTypedName",
                                  "src": "3877:5:5",
                                  "type": ""
                                }
                              ]
                            },
                            {
                              "body": {
                                "nodeType": "YulBlock",
                                "src": "3966:16:5",
                                "statements": [
                                  {
                                    "expression": {
                                      "arguments": [
                                        {
                                          "kind": "number",
                                          "nodeType": "YulLiteral",
                                          "src": "3975:1:5",
                                          "type": "",
                                          "value": "0"
                                        },
                                        {
                                          "kind": "number",
                                          "nodeType": "YulLiteral",
                                          "src": "3978:1:5",
                                          "type": "",
                                          "value": "0"
                                        }
                                      ],
                                      "functionName": {
                                        "name": "revert",
                                        "nodeType": "YulIdentifier",
                                        "src": "3968:6:5"
                                      },
                                      "nodeType": "YulFunctionCall",
                                      "src": "3968:12:5"
                                    },
                                    "nodeType": "YulExpressionStatement",
                                    "src": "3968:12:5"
                                  }
                                ]
                              },
                              "condition": {
                                "arguments": [
                                  {
                                    "arguments": [
                                      {
                                        "name": "value",
                                        "nodeType": "YulIdentifier",
                                        "src": "3940:5:5"
                                      },
                                      {
                                        "arguments": [
                                          {
                                            "name": "value",
                                            "nodeType": "YulIdentifier",
                                            "src": "3951:5:5"
                                          },
                                          {
                                            "kind": "number",
                                            "nodeType": "YulLiteral",
                                            "src": "3958:4:5",
                                            "type": "",
                                            "value": "0xff"
                                          }
                                        ],
                                        "functionName": {
                                          "name": "and",
                                          "nodeType": "YulIdentifier",
                                          "src": "3947:3:5"
                                        },
                                        "nodeType": "YulFunctionCall",
                                        "src": "3947:16:5"
                                      }
                                    ],
                                    "functionName": {
                                      "name": "eq",
                                      "nodeType": "YulIdentifier",
                                      "src": "3937:2:5"
                                    },
                                    "nodeType": "YulFunctionCall",
                                    "src": "3937:27:5"
                                  }
                                ],
                                "functionName": {
                                  "name": "iszero",
                                  "nodeType": "YulIdentifier",
                                  "src": "3930:6:5"
                                },
                                "nodeType": "YulFunctionCall",
                                "src": "3930:35:5"
                              },
                              "nodeType": "YulIf",
                              "src": "3927:55:5"
                            },
                            {
                              "nodeType": "YulAssignment",
                              "src": "3991:15:5",
                              "value": {
                                "name": "value",
                                "nodeType": "YulIdentifier",
                                "src": "4001:5:5"
                              },
                              "variableNames": [
                                {
                                  "name": "value1",
                                  "nodeType": "YulIdentifier",
                                  "src": "3991:6:5"
                                }
                              ]
                            }
                          ]
                        },
                        "name": "abi_decode_tuple_t_uint256t_uint8",
                        "nodeType": "YulFunctionDefinition",
                        "parameters": [
                          {
                            "name": "headStart",
                            "nodeType": "YulTypedName",
                            "src": "3718:9:5",
                            "type": ""
                          },
                          {
                            "name": "dataEnd",
                            "nodeType": "YulTypedName",
                            "src": "3729:7:5",
                            "type": ""
                          }
                        ],
                        "returnVariables": [
                          {
                            "name": "value0",
                            "nodeType": "YulTypedName",
                            "src": "3741:6:5",
                            "type": ""
                          },
                          {
                            "name": "value1",
                            "nodeType": "YulTypedName",
                            "src": "3749:6:5",
                            "type": ""
                          }
                        ],
                        "src": "3675:337:5"
                      },
                      {
                        "body": {
                          "nodeType": "YulBlock",
                          "src": "4066:124:5",
                          "statements": [
                            {
                              "nodeType": "YulAssignment",
                              "src": "4076:29:5",
                              "value": {
                                "arguments": [
                                  {
                                    "name": "offset",
                                    "nodeType": "YulIdentifier",
                                    "src": "4098:6:5"
                                  }
                                ],
                                "functionName": {
                                  "name": "calldataload",
                                  "nodeType": "YulIdentifier",
                                  "src": "4085:12:5"
                                },
                                "nodeType": "YulFunctionCall",
                                "src": "4085:20:5"
                              },
                              "variableNames": [
                                {
                                  "name": "value",
                                  "nodeType": "YulIdentifier",
                                  "src": "4076:5:5"
                                }
                              ]
                            },
                            {
                              "body": {
                                "nodeType": "YulBlock",
                                "src": "4168:16:5",
                                "statements": [
                                  {
                                    "expression": {
                                      "arguments": [
                                        {
                                          "kind": "number",
                                          "nodeType": "YulLiteral",
                                          "src": "4177:1:5",
                                          "type": "",
                                          "value": "0"
                                        },
                                        {
                                          "kind": "number",
                                          "nodeType": "YulLiteral",
                                          "src": "4180:1:5",
                                          "type": "",
                                          "value": "0"
                                        }
                                      ],
                                      "functionName": {
                                        "name": "revert",
                                        "nodeType": "YulIdentifier",
                                        "src": "4170:6:5"
                                      },
                                      "nodeType": "YulFunctionCall",
                                      "src": "4170:12:5"
                                    },
                                    "nodeType": "YulExpressionStatement",
                                    "src": "4170:12:5"
                                  }
                                ]
                              },
                              "condition": {
                                "arguments": [
                                  {
                                    "arguments": [
                                      {
                                        "name": "value",
                                        "nodeType": "YulIdentifier",
                                        "src": "4127:5:5"
                                      },
                                      {
                                        "arguments": [
                                          {
                                            "name": "value",
                                            "nodeType": "YulIdentifier",
                                            "src": "4138:5:5"
                                          },
                                          {
                                            "arguments": [
                                              {
                                                "arguments": [
                                                  {
                                                    "kind": "number",
                                                    "nodeType": "YulLiteral",
                                                    "src": "4153:3:5",
                                                    "type": "",
                                                    "value": "160"
                                                  },
                                                  {
                                                    "kind": "number",
                                                    "nodeType": "YulLiteral",
                                                    "src": "4158:1:5",
                                                    "type": "",
                                                    "value": "1"
                                                  }
                                                ],
                                                "functionName": {
                                                  "name": "shl",
                                                  "nodeType": "YulIdentifier",
                                                  "src": "4149:3:5"
                                                },
                                                "nodeType": "YulFunctionCall",
                                                "src": "4149:11:5"
                                              },
                                              {
                                                "kind": "number",
                                                "nodeType": "YulLiteral",
                                                "src": "4162:1:5",
                                                "type": "",
                                                "value": "1"
                                              }
                                            ],
                                            "functionName": {
                                              "name": "sub",
                                              "nodeType": "YulIdentifier",
                                              "src": "4145:3:5"
                                            },
                                            "nodeType": "YulFunctionCall",
                                            "src": "4145:19:5"
                                          }
                                        ],
                                        "functionName": {
                                          "name": "and",
                                          "nodeType": "YulIdentifier",
                                          "src": "4134:3:5"
                                        },
                                        "nodeType": "YulFunctionCall",
                                        "src": "4134:31:5"
                                      }
                                    ],
                                    "functionName": {
                                      "name": "eq",
                                      "nodeType": "YulIdentifier",
                                      "src": "4124:2:5"
                                    },
                                    "nodeType": "YulFunctionCall",
                                    "src": "4124:42:5"
                                  }
                                ],
                                "functionName": {
                                  "name": "iszero",
                                  "nodeType": "YulIdentifier",
                                  "src": "4117:6:5"
                                },
                                "nodeType": "YulFunctionCall",
                                "src": "4117:50:5"
                              },
                              "nodeType": "YulIf",
                              "src": "4114:70:5"
                            }
                          ]
                        },
                        "name": "abi_decode_address",
                        "nodeType": "YulFunctionDefinition",
                        "parameters": [
                          {
                            "name": "offset",
                            "nodeType": "YulTypedName",
                            "src": "4045:6:5",
                            "type": ""
                          }
                        ],
                        "returnVariables": [
                          {
                            "name": "value",
                            "nodeType": "YulTypedName",
                            "src": "4056:5:5",
                            "type": ""
                          }
                        ],
                        "src": "4017:173:5"
                      },
                      {
                        "body": {
                          "nodeType": "YulBlock",
                          "src": "4282:167:5",
                          "statements": [
                            {
                              "body": {
                                "nodeType": "YulBlock",
                                "src": "4328:16:5",
                                "statements": [
                                  {
                                    "expression": {
                                      "arguments": [
                                        {
                                          "kind": "number",
                                          "nodeType": "YulLiteral",
                                          "src": "4337:1:5",
                                          "type": "",
                                          "value": "0"
                                        },
                                        {
                                          "kind": "number",
                                          "nodeType": "YulLiteral",
                                          "src": "4340:1:5",
                                          "type": "",
                                          "value": "0"
                                        }
                                      ],
                                      "functionName": {
                                        "name": "revert",
                                        "nodeType": "YulIdentifier",
                                        "src": "4330:6:5"
                                      },
                                      "nodeType": "YulFunctionCall",
                                      "src": "4330:12:5"
                                    },
                                    "nodeType": "YulExpressionStatement",
                                    "src": "4330:12:5"
                                  }
                                ]
                              },
                              "condition": {
                                "arguments": [
                                  {
                                    "arguments": [
                                      {
                                        "name": "dataEnd",
                                        "nodeType": "YulIdentifier",
                                        "src": "4303:7:5"
                                      },
                                      {
                                        "name": "headStart",
                                        "nodeType": "YulIdentifier",
                                        "src": "4312:9:5"
                                      }
                                    ],
                                    "functionName": {
                                      "name": "sub",
                                      "nodeType": "YulIdentifier",
                                      "src": "4299:3:5"
                                    },
                                    "nodeType": "YulFunctionCall",
                                    "src": "4299:23:5"
                                  },
                                  {
                                    "kind": "number",
                                    "nodeType": "YulLiteral",
                                    "src": "4324:2:5",
                                    "type": "",
                                    "value": "64"
                                  }
                                ],
                                "functionName": {
                                  "name": "slt",
                                  "nodeType": "YulIdentifier",
                                  "src": "4295:3:5"
                                },
                                "nodeType": "YulFunctionCall",
                                "src": "4295:32:5"
                              },
                              "nodeType": "YulIf",
                              "src": "4292:52:5"
                            },
                            {
                              "nodeType": "YulAssignment",
                              "src": "4353:33:5",
                              "value": {
                                "arguments": [
                                  {
                                    "name": "headStart",
                                    "nodeType": "YulIdentifier",
                                    "src": "4376:9:5"
                                  }
                                ],
                                "functionName": {
                                  "name": "calldataload",
                                  "nodeType": "YulIdentifier",
                                  "src": "4363:12:5"
                                },
                                "nodeType": "YulFunctionCall",
                                "src": "4363:23:5"
                              },
                              "variableNames": [
                                {
                                  "name": "value0",
                                  "nodeType": "YulIdentifier",
                                  "src": "4353:6:5"
                                }
                              ]
                            },
                            {
                              "nodeType": "YulAssignment",
                              "src": "4395:48:5",
                              "value": {
                                "arguments": [
                                  {
                                    "arguments": [
                                      {
                                        "name": "headStart",
                                        "nodeType": "YulIdentifier",
                                        "src": "4428:9:5"
                                      },
                                      {
                                        "kind": "number",
                                        "nodeType": "YulLiteral",
                                        "src": "4439:2:5",
                                        "type": "",
                                        "value": "32"
                                      }
                                    ],
                                    "functionName": {
                                      "name": "add",
                                      "nodeType": "YulIdentifier",
                                      "src": "4424:3:5"
                                    },
                                    "nodeType": "YulFunctionCall",
                                    "src": "4424:18:5"
                                  }
                                ],
                                "functionName": {
                                  "name": "abi_decode_address",
                                  "nodeType": "YulIdentifier",
                                  "src": "4405:18:5"
                                },
                                "nodeType": "YulFunctionCall",
                                "src": "4405:38:5"
                              },
                              "variableNames": [
                                {
                                  "name": "value1",
                                  "nodeType": "YulIdentifier",
                                  "src": "4395:6:5"
                                }
                              ]
                            }
                          ]
                        },
                        "name": "abi_decode_tuple_t_uint256t_address",
                        "nodeType": "YulFunctionDefinition",
                        "parameters": [
                          {
                            "name": "headStart",
                            "nodeType": "YulTypedName",
                            "src": "4240:9:5",
                            "type": ""
                          },
                          {
                            "name": "dataEnd",
                            "nodeType": "YulTypedName",
                            "src": "4251:7:5",
                            "type": ""
                          }
                        ],
                        "returnVariables": [
                          {
                            "name": "value0",
                            "nodeType": "YulTypedName",
                            "src": "4263:6:5",
                            "type": ""
                          },
                          {
                            "name": "value1",
                            "nodeType": "YulTypedName",
                            "src": "4271:6:5",
                            "type": ""
                          }
                        ],
                        "src": "4195:254:5"
                      },
                      {
                        "body": {
                          "nodeType": "YulBlock",
                          "src": "4551:87:5",
                          "statements": [
                            {
                              "nodeType": "YulAssignment",
                              "src": "4561:26:5",
                              "value": {
                                "arguments": [
                                  {
                                    "name": "headStart",
                                    "nodeType": "YulIdentifier",
                                    "src": "4573:9:5"
                                  },
                                  {
                                    "kind": "number",
                                    "nodeType": "YulLiteral",
                                    "src": "4584:2:5",
                                    "type": "",
                                    "value": "32"
                                  }
                                ],
                                "functionName": {
                                  "name": "add",
                                  "nodeType": "YulIdentifier",
                                  "src": "4569:3:5"
                                },
                                "nodeType": "YulFunctionCall",
                                "src": "4569:18:5"
                              },
                              "variableNames": [
                                {
                                  "name": "tail",
                                  "nodeType": "YulIdentifier",
                                  "src": "4561:4:5"
                                }
                              ]
                            },
                            {
                              "expression": {
                                "arguments": [
                                  {
                                    "name": "headStart",
                                    "nodeType": "YulIdentifier",
                                    "src": "4603:9:5"
                                  },
                                  {
                                    "arguments": [
                                      {
                                        "name": "value0",
                                        "nodeType": "YulIdentifier",
                                        "src": "4618:6:5"
                                      },
                                      {
                                        "kind": "number",
                                        "nodeType": "YulLiteral",
                                        "src": "4626:4:5",
                                        "type": "",
                                        "value": "0xff"
                                      }
                                    ],
                                    "functionName": {
                                      "name": "and",
                                      "nodeType": "YulIdentifier",
                                      "src": "4614:3:5"
                                    },
                                    "nodeType": "YulFunctionCall",
                                    "src": "4614:17:5"
                                  }
                                ],
                                "functionName": {
                                  "name": "mstore",
                                  "nodeType": "YulIdentifier",
                                  "src": "4596:6:5"
                                },
                                "nodeType": "YulFunctionCall",
                                "src": "4596:36:5"
                              },
                              "nodeType": "YulExpressionStatement",
                              "src": "4596:36:5"
                            }
                          ]
                        },
                        "name": "abi_encode_tuple_t_uint8__to_t_uint8__fromStack_reversed",
                        "nodeType": "YulFunctionDefinition",
                        "parameters": [
                          {
                            "name": "headStart",
                            "nodeType": "YulTypedName",
                            "src": "4520:9:5",
                            "type": ""
                          },
                          {
                            "name": "value0",
                            "nodeType": "YulTypedName",
                            "src": "4531:6:5",
                            "type": ""
                          }
                        ],
                        "returnVariables": [
                          {
                            "name": "tail",
                            "nodeType": "YulTypedName",
                            "src": "4542:4:5",
                            "type": ""
                          }
                        ],
                        "src": "4454:184:5"
                      },
                      {
                        "body": {
                          "nodeType": "YulBlock",
                          "src": "4713:116:5",
                          "statements": [
                            {
                              "body": {
                                "nodeType": "YulBlock",
                                "src": "4759:16:5",
                                "statements": [
                                  {
                                    "expression": {
                                      "arguments": [
                                        {
                                          "kind": "number",
                                          "nodeType": "YulLiteral",
                                          "src": "4768:1:5",
                                          "type": "",
                                          "value": "0"
                                        },
                                        {
                                          "kind": "number",
                                          "nodeType": "YulLiteral",
                                          "src": "4771:1:5",
                                          "type": "",
                                          "value": "0"
                                        }
                                      ],
                                      "functionName": {
                                        "name": "revert",
                                        "nodeType": "YulIdentifier",
                                        "src": "4761:6:5"
                                      },
                                      "nodeType": "YulFunctionCall",
                                      "src": "4761:12:5"
                                    },
                                    "nodeType": "YulExpressionStatement",
                                    "src": "4761:12:5"
                                  }
                                ]
                              },
                              "condition": {
                                "arguments": [
                                  {
                                    "arguments": [
                                      {
                                        "name": "dataEnd",
                                        "nodeType": "YulIdentifier",
                                        "src": "4734:7:5"
                                      },
                                      {
                                        "name": "headStart",
                                        "nodeType": "YulIdentifier",
                                        "src": "4743:9:5"
                                      }
                                    ],
                                    "functionName": {
                                      "name": "sub",
                                      "nodeType": "YulIdentifier",
                                      "src": "4730:3:5"
                                    },
                                    "nodeType": "YulFunctionCall",
                                    "src": "4730:23:5"
                                  },
                                  {
                                    "kind": "number",
                                    "nodeType": "YulLiteral",
                                    "src": "4755:2:5",
                                    "type": "",
                                    "value": "32"
                                  }
                                ],
                                "functionName": {
                                  "name": "slt",
                                  "nodeType": "YulIdentifier",
                                  "src": "4726:3:5"
                                },
                                "nodeType": "YulFunctionCall",
                                "src": "4726:32:5"
                              },
                              "nodeType": "YulIf",
                              "src": "4723:52:5"
                            },
                            {
                              "nodeType": "YulAssignment",
                              "src": "4784:39:5",
                              "value": {
                                "arguments": [
                                  {
                                    "name": "headStart",
                                    "nodeType": "YulIdentifier",
                                    "src": "4813:9:5"
                                  }
                                ],
                                "functionName": {
                                  "name": "abi_decode_address",
                                  "nodeType": "YulIdentifier",
                                  "src": "4794:18:5"
                                },
                                "nodeType": "YulFunctionCall",
                                "src": "4794:29:5"
                              },
                              "variableNames": [
                                {
                                  "name": "value0",
                                  "nodeType": "YulIdentifier",
                                  "src": "4784:6:5"
                                }
                              ]
                            }
                          ]
                        },
                        "name": "abi_decode_tuple_t_address",
                        "nodeType": "YulFunctionDefinition",
                        "parameters": [
                          {
                            "name": "headStart",
                            "nodeType": "YulTypedName",
                            "src": "4679:9:5",
                            "type": ""
                          },
                          {
                            "name": "dataEnd",
                            "nodeType": "YulTypedName",
                            "src": "4690:7:5",
                            "type": ""
                          }
                        ],
                        "returnVariables": [
                          {
                            "name": "value0",
                            "nodeType": "YulTypedName",
                            "src": "4702:6:5",
                            "type": ""
                          }
                        ],
                        "src": "4643:186:5"
                      },
                      {
                        "body": {
                          "nodeType": "YulBlock",
                          "src": "4866:95:5",
                          "statements": [
                            {
                              "expression": {
                                "arguments": [
                                  {
                                    "kind": "number",
                                    "nodeType": "YulLiteral",
                                    "src": "4883:1:5",
                                    "type": "",
                                    "value": "0"
                                  },
                                  {
                                    "arguments": [
                                      {
                                        "kind": "number",
                                        "nodeType": "YulLiteral",
                                        "src": "4890:3:5",
                                        "type": "",
                                        "value": "224"
                                      },
                                      {
                                        "kind": "number",
                                        "nodeType": "YulLiteral",
                                        "src": "4895:10:5",
                                        "type": "",
                                        "value": "0x4e487b71"
                                      }
                                    ],
                                    "functionName": {
                                      "name": "shl",
                                      "nodeType": "YulIdentifier",
                                      "src": "4886:3:5"
                                    },
                                    "nodeType": "YulFunctionCall",
                                    "src": "4886:20:5"
                                  }
                                ],
                                "functionName": {
                                  "name": "mstore",
                                  "nodeType": "YulIdentifier",
                                  "src": "4876:6:5"
                                },
                                "nodeType": "YulFunctionCall",
                                "src": "4876:31:5"
                              },
                              "nodeType": "YulExpressionStatement",
                              "src": "4876:31:5"
                            },
                            {
                              "expression": {
                                "arguments": [
                                  {
                                    "kind": "number",
                                    "nodeType": "YulLiteral",
                                    "src": "4923:1:5",
                                    "type": "",
                                    "value": "4"
                                  },
                                  {
                                    "kind": "number",
                                    "nodeType": "YulLiteral",
                                    "src": "4926:4:5",
                                    "type": "",
                                    "value": "0x21"
                                  }
                                ],
                                "functionName": {
                                  "name": "mstore",
                                  "nodeType": "YulIdentifier",
                                  "src": "4916:6:5"
                                },
                                "nodeType": "YulFunctionCall",
                                "src": "4916:15:5"
                              },
                              "nodeType": "YulExpressionStatement",
                              "src": "4916:15:5"
                            },
                            {
                              "expression": {
                                "arguments": [
                                  {
                                    "kind": "number",
                                    "nodeType": "YulLiteral",
                                    "src": "4947:1:5",
                                    "type": "",
                                    "value": "0"
                                  },
                                  {
                                    "kind": "number",
                                    "nodeType": "YulLiteral",
                                    "src": "4950:4:5",
                                    "type": "",
                                    "value": "0x24"
                                  }
                                ],
                                "functionName": {
                                  "name": "revert",
                                  "nodeType": "YulIdentifier",
                                  "src": "4940:6:5"
                                },
                                "nodeType": "YulFunctionCall",
                                "src": "4940:15:5"
                              },
                              "nodeType": "YulExpressionStatement",
                              "src": "4940:15:5"
                            }
                          ]
                        },
                        "name": "panic_error_0x21",
                        "nodeType": "YulFunctionDefinition",
                        "src": "4834:127:5"
                      },
                      {
                        "body": {
                          "nodeType": "YulBlock",
                          "src": "5033:200:5",
                          "statements": [
                            {
                              "expression": {
                                "arguments": [
                                  {
                                    "name": "pos",
                                    "nodeType": "YulIdentifier",
                                    "src": "5050:3:5"
                                  },
                                  {
                                    "name": "length",
                                    "nodeType": "YulIdentifier",
                                    "src": "5055:6:5"
                                  }
                                ],
                                "functionName": {
                                  "name": "mstore",
                                  "nodeType": "YulIdentifier",
                                  "src": "5043:6:5"
                                },
                                "nodeType": "YulFunctionCall",
                                "src": "5043:19:5"
                              },
                              "nodeType": "YulExpressionStatement",
                              "src": "5043:19:5"
                            },
                            {
                              "expression": {
                                "arguments": [
                                  {
                                    "arguments": [
                                      {
                                        "name": "pos",
                                        "nodeType": "YulIdentifier",
                                        "src": "5088:3:5"
                                      },
                                      {
                                        "kind": "number",
                                        "nodeType": "YulLiteral",
                                        "src": "5093:4:5",
                                        "type": "",
                                        "value": "0x20"
                                      }
                                    ],
                                    "functionName": {
                                      "name": "add",
                                      "nodeType": "YulIdentifier",
                                      "src": "5084:3:5"
                                    },
                                    "nodeType": "YulFunctionCall",
                                    "src": "5084:14:5"
                                  },
                                  {
                                    "name": "start",
                                    "nodeType": "YulIdentifier",
                                    "src": "5100:5:5"
                                  },
                                  {
                                    "name": "length",
                                    "nodeType": "YulIdentifier",
                                    "src": "5107:6:5"
                                  }
                                ],
                                "functionName": {
                                  "name": "calldatacopy",
                                  "nodeType": "YulIdentifier",
                                  "src": "5071:12:5"
                                },
                                "nodeType": "YulFunctionCall",
                                "src": "5071:43:5"
                              },
                              "nodeType": "YulExpressionStatement",
                              "src": "5071:43:5"
                            },
                            {
                              "expression": {
                                "arguments": [
                                  {
                                    "arguments": [
                                      {
                                        "arguments": [
                                          {
                                            "name": "pos",
                                            "nodeType": "YulIdentifier",
                                            "src": "5138:3:5"
                                          },
                                          {
                                            "name": "length",
                                            "nodeType": "YulIdentifier",
                                            "src": "5143:6:5"
                                          }
                                        ],
                                        "functionName": {
                                          "name": "add",
                                          "nodeType": "YulIdentifier",
                                          "src": "5134:3:5"
                                        },
                                        "nodeType": "YulFunctionCall",
                                        "src": "5134:16:5"
                                      },
                                      {
                                        "kind": "number",
                                        "nodeType": "YulLiteral",
                                        "src": "5152:4:5",
                                        "type": "",
                                        "value": "0x20"
                                      }
                                    ],
                                    "functionName": {
                                      "name": "add",
                                      "nodeType": "YulIdentifier",
                                      "src": "5130:3:5"
                                    },
                                    "nodeType": "YulFunctionCall",
                                    "src": "5130:27:5"
                                  },
                                  {
                                    "kind": "number",
                                    "nodeType": "YulLiteral",
                                    "src": "5159:1:5",
                                    "type": "",
                                    "value": "0"
                                  }
                                ],
                                "functionName": {
                                  "name": "mstore",
                                  "nodeType": "YulIdentifier",
                                  "src": "5123:6:5"
                                },
                                "nodeType": "YulFunctionCall",
                                "src": "5123:38:5"
                              },
                              "nodeType": "YulExpressionStatement",
                              "src": "5123:38:5"
                            },
                            {
                              "nodeType": "YulAssignment",
                              "src": "5170:57:5",
                              "value": {
                                "arguments": [
                                  {
                                    "arguments": [
                                      {
                                        "name": "pos",
                                        "nodeType": "YulIdentifier",
                                        "src": "5185:3:5"
                                      },
                                      {
                                        "arguments": [
                                          {
                                            "arguments": [
                                              {
                                                "name": "length",
                                                "nodeType": "YulIdentifier",
                                                "src": "5198:6:5"
                                              },
                                              {
                                                "kind": "number",
                                                "nodeType": "YulLiteral",
                                                "src": "5206:2:5",
                                                "type": "",
                                                "value": "31"
                                              }
                                            ],
                                            "functionName": {
                                              "name": "add",
                                              "nodeType": "YulIdentifier",
                                              "src": "5194:3:5"
                                            },
                                            "nodeType": "YulFunctionCall",
                                            "src": "5194:15:5"
                                          },
                                          {
                                            "arguments": [
                                              {
                                                "kind": "number",
                                                "nodeType": "YulLiteral",
                                                "src": "5215:2:5",
                                                "type": "",
                                                "value": "31"
                                              }
                                            ],
                                            "functionName": {
                                              "name": "not",
                                              "nodeType": "YulIdentifier",
                                              "src": "5211:3:5"
                                            },
                                            "nodeType": "YulFunctionCall",
                                            "src": "5211:7:5"
                                          }
                                        ],
                                        "functionName": {
                                          "name": "and",
                                          "nodeType": "YulIdentifier",
                                          "src": "5190:3:5"
                                        },
                                        "nodeType": "YulFunctionCall",
                                        "src": "5190:29:5"
                                      }
                                    ],
                                    "functionName": {
                                      "name": "add",
                                      "nodeType": "YulIdentifier",
                                      "src": "5181:3:5"
                                    },
                                    "nodeType": "YulFunctionCall",
                                    "src": "5181:39:5"
                                  },
                                  {
                                    "kind": "number",
                                    "nodeType": "YulLiteral",
                                    "src": "5222:4:5",
                                    "type": "",
                                    "value": "0x20"
                                  }
                                ],
                                "functionName": {
                                  "name": "add",
                                  "nodeType": "YulIdentifier",
                                  "src": "5177:3:5"
                                },
                                "nodeType": "YulFunctionCall",
                                "src": "5177:50:5"
                              },
                              "variableNames": [
                                {
                                  "name": "end",
                                  "nodeType": "YulIdentifier",
                                  "src": "5170:3:5"
                                }
                              ]
                            }
                          ]
                        },
                        "name": "abi_encode_string_calldata",
                        "nodeType": "YulFunctionDefinition",
                        "parameters": [
                          {
                            "name": "start",
                            "nodeType": "YulTypedName",
                            "src": "5002:5:5",
                            "type": ""
                          },
                          {
                            "name": "length",
                            "nodeType": "YulTypedName",
                            "src": "5009:6:5",
                            "type": ""
                          },
                          {
                            "name": "pos",
                            "nodeType": "YulTypedName",
                            "src": "5017:3:5",
                            "type": ""
                          }
                        ],
                        "returnVariables": [
                          {
                            "name": "end",
                            "nodeType": "YulTypedName",
                            "src": "5025:3:5",
                            "type": ""
                          }
                        ],
                        "src": "4966:267:5"
                      },
                      {
                        "body": {
                          "nodeType": "YulBlock",
                          "src": "5427:248:5",
                          "statements": [
                            {
                              "expression": {
                                "arguments": [
                                  {
                                    "name": "headStart",
                                    "nodeType": "YulIdentifier",
                                    "src": "5444:9:5"
                                  },
                                  {
                                    "kind": "number",
                                    "nodeType": "YulLiteral",
                                    "src": "5455:2:5",
                                    "type": "",
                                    "value": "64"
                                  }
                                ],
                                "functionName": {
                                  "name": "mstore",
                                  "nodeType": "YulIdentifier",
                                  "src": "5437:6:5"
                                },
                                "nodeType": "YulFunctionCall",
                                "src": "5437:21:5"
                              },
                              "nodeType": "YulExpressionStatement",
                              "src": "5437:21:5"
                            },
                            {
                              "nodeType": "YulVariableDeclaration",
                              "src": "5467:76:5",
                              "value": {
                                "arguments": [
                                  {
                                    "name": "value0",
                                    "nodeType": "YulIdentifier",
                                    "src": "5508:6:5"
                                  },
                                  {
                                    "name": "value1",
                                    "nodeType": "YulIdentifier",
                                    "src": "5516:6:5"
                                  },
                                  {
                                    "arguments": [
                                      {
                                        "name": "headStart",
                                        "nodeType": "YulIdentifier",
                                        "src": "5528:9:5"
                                      },
                                      {
                                        "kind": "number",
                                        "nodeType": "YulLiteral",
                                        "src": "5539:2:5",
                                        "type": "",
                                        "value": "64"
                                      }
                                    ],
                                    "functionName": {
                                      "name": "add",
                                      "nodeType": "YulIdentifier",
                                      "src": "5524:3:5"
                                    },
                                    "nodeType": "YulFunctionCall",
                                    "src": "5524:18:5"
                                  }
                                ],
                                "functionName": {
                                  "name": "abi_encode_string_calldata",
                                  "nodeType": "YulIdentifier",
                                  "src": "5481:26:5"
                                },
                                "nodeType": "YulFunctionCall",
                                "src": "5481:62:5"
                              },
                              "variables": [
                                {
                                  "name": "tail_1",
                                  "nodeType": "YulTypedName",
                                  "src": "5471:6:5",
                                  "type": ""
                                }
                              ]
                            },
                            {
                              "expression": {
                                "arguments": [
                                  {
                                    "arguments": [
                                      {
                                        "name": "headStart",
                                        "nodeType": "YulIdentifier",
                                        "src": "5563:9:5"
                                      },
                                      {
                                        "kind": "number",
                                        "nodeType": "YulLiteral",
                                        "src": "5574:2:5",
                                        "type": "",
                                        "value": "32"
                                      }
                                    ],
                                    "functionName": {
                                      "name": "add",
                                      "nodeType": "YulIdentifier",
                                      "src": "5559:3:5"
                                    },
                                    "nodeType": "YulFunctionCall",
                                    "src": "5559:18:5"
                                  },
                                  {
                                    "arguments": [
                                      {
                                        "name": "tail_1",
                                        "nodeType": "YulIdentifier",
                                        "src": "5583:6:5"
                                      },
                                      {
                                        "name": "headStart",
                                        "nodeType": "YulIdentifier",
                                        "src": "5591:9:5"
                                      }
                                    ],
                                    "functionName": {
                                      "name": "sub",
                                      "nodeType": "YulIdentifier",
                                      "src": "5579:3:5"
                                    },
                                    "nodeType": "YulFunctionCall",
                                    "src": "5579:22:5"
                                  }
                                ],
                                "functionName": {
                                  "name": "mstore",
                                  "nodeType": "YulIdentifier",
                                  "src": "5552:6:5"
                                },
                                "nodeType": "YulFunctionCall",
                                "src": "5552:50:5"
                              },
                              "nodeType": "YulExpressionStatement",
                              "src": "5552:50:5"
                            },
                            {
                              "nodeType": "YulAssignment",
                              "src": "5611:58:5",
                              "value": {
                                "arguments": [
                                  {
                                    "name": "value2",
                                    "nodeType": "YulIdentifier",
                                    "src": "5646:6:5"
                                  },
                                  {
                                    "name": "value3",
                                    "nodeType": "YulIdentifier",
                                    "src": "5654:6:5"
                                  },
                                  {
                                    "name": "tail_1",
                                    "nodeType": "YulIdentifier",
                                    "src": "5662:6:5"
                                  }
                                ],
                                "functionName": {
                                  "name": "abi_encode_string_calldata",
                                  "nodeType": "YulIdentifier",
                                  "src": "5619:26:5"
                                },
                                "nodeType": "YulFunctionCall",
                                "src": "5619:50:5"
                              },
                              "variableNames": [
                                {
                                  "name": "tail",
                                  "nodeType": "YulIdentifier",
                                  "src": "5611:4:5"
                                }
                              ]
                            }
                          ]
                        },
                        "name": "abi_encode_tuple_t_string_calldata_ptr_t_string_calldata_ptr__to_t_string_memory_ptr_t_string_memory_ptr__fromStack_reversed",
                        "nodeType": "YulFunctionDefinition",
                        "parameters": [
                          {
                            "name": "headStart",
                            "nodeType": "YulTypedName",
                            "src": "5372:9:5",
                            "type": ""
                          },
                          {
                            "name": "value3",
                            "nodeType": "YulTypedName",
                            "src": "5383:6:5",
                            "type": ""
                          },
                          {
                            "name": "value2",
                            "nodeType": "YulTypedName",
                            "src": "5391:6:5",
                            "type": ""
                          },
                          {
                            "name": "value1",
                            "nodeType": "YulTypedName",
                            "src": "5399:6:5",
                            "type": ""
                          },
                          {
                            "name": "value0",
                            "nodeType": "YulTypedName",
                            "src": "5407:6:5",
                            "type": ""
                          }
                        ],
                        "returnVariables": [
                          {
                            "name": "tail",
                            "nodeType": "YulTypedName",
                            "src": "5418:4:5",
                            "type": ""
                          }
                        ],
                        "src": "5238:437:5"
                      },
                      {
                        "body": {
                          "nodeType": "YulBlock",
                          "src": "5736:186:5",
                          "statements": [
                            {
                              "body": {
                                "nodeType": "YulBlock",
                                "src": "5778:111:5",
                                "statements": [
                                  {
                                    "expression": {
                                      "arguments": [
                                        {
                                          "kind": "number",
                                          "nodeType": "YulLiteral",
                                          "src": "5799:1:5",
                                          "type": "",
                                          "value": "0"
                                        },
                                        {
                                          "arguments": [
                                            {
                                              "kind": "number",
                                              "nodeType": "YulLiteral",
                                              "src": "5806:3:5",
                                              "type": "",
                                              "value": "224"
                                            },
                                            {
                                              "kind": "number",
                                              "nodeType": "YulLiteral",
                                              "src": "5811:10:5",
                                              "type": "",
                                              "value": "0x4e487b71"
                                            }
                                          ],
                                          "functionName": {
                                            "name": "shl",
                                            "nodeType": "YulIdentifier",
                                            "src": "5802:3:5"
                                          },
                                          "nodeType": "YulFunctionCall",
                                          "src": "5802:20:5"
                                        }
                                      ],
                                      "functionName": {
                                        "name": "mstore",
                                        "nodeType": "YulIdentifier",
                                        "src": "5792:6:5"
                                      },
                                      "nodeType": "YulFunctionCall",
                                      "src": "5792:31:5"
                                    },
                                    "nodeType": "YulExpressionStatement",
                                    "src": "5792:31:5"
                                  },
                                  {
                                    "expression": {
                                      "arguments": [
                                        {
                                          "kind": "number",
                                          "nodeType": "YulLiteral",
                                          "src": "5843:1:5",
                                          "type": "",
                                          "value": "4"
                                        },
                                        {
                                          "kind": "number",
                                          "nodeType": "YulLiteral",
                                          "src": "5846:4:5",
                                          "type": "",
                                          "value": "0x21"
                                        }
                                      ],
                                      "functionName": {
                                        "name": "mstore",
                                        "nodeType": "YulIdentifier",
                                        "src": "5836:6:5"
                                      },
                                      "nodeType": "YulFunctionCall",
                                      "src": "5836:15:5"
                                    },
                                    "nodeType": "YulExpressionStatement",
                                    "src": "5836:15:5"
                                  },
                                  {
                                    "expression": {
                                      "arguments": [
                                        {
                                          "kind": "number",
                                          "nodeType": "YulLiteral",
                                          "src": "5871:1:5",
                                          "type": "",
                                          "value": "0"
                                        },
                                        {
                                          "kind": "number",
                                          "nodeType": "YulLiteral",
                                          "src": "5874:4:5",
                                          "type": "",
                                          "value": "0x24"
                                        }
                                      ],
                                      "functionName": {
                                        "name": "revert",
                                        "nodeType": "YulIdentifier",
                                        "src": "5864:6:5"
                                      },
                                      "nodeType": "YulFunctionCall",
                                      "src": "5864:15:5"
                                    },
                                    "nodeType": "YulExpressionStatement",
                                    "src": "5864:15:5"
                                  }
                                ]
                              },
                              "condition": {
                                "arguments": [
                                  {
                                    "arguments": [
                                      {
                                        "name": "value",
                                        "nodeType": "YulIdentifier",
                                        "src": "5759:5:5"
                                      },
                                      {
                                        "kind": "number",
                                        "nodeType": "YulLiteral",
                                        "src": "5766:1:5",
                                        "type": "",
                                        "value": "7"
                                      }
                                    ],
                                    "functionName": {
                                      "name": "lt",
                                      "nodeType": "YulIdentifier",
                                      "src": "5756:2:5"
                                    },
                                    "nodeType": "YulFunctionCall",
                                    "src": "5756:12:5"
                                  }
                                ],
                                "functionName": {
                                  "name": "iszero",
                                  "nodeType": "YulIdentifier",
                                  "src": "5749:6:5"
                                },
                                "nodeType": "YulFunctionCall",
                                "src": "5749:20:5"
                              },
                              "nodeType": "YulIf",
                              "src": "5746:143:5"
                            },
                            {
                              "expression": {
                                "arguments": [
                                  {
                                    "name": "pos",
                                    "nodeType": "YulIdentifier",
                                    "src": "5905:3:5"
                                  },
                                  {
                                    "name": "value",
                                    "nodeType": "YulIdentifier",
                                    "src": "5910:5:5"
                                  }
                                ],
                                "functionName": {
                                  "name": "mstore",
                                  "nodeType": "YulIdentifier",
                                  "src": "5898:6:5"
                                },
                                "nodeType": "YulFunctionCall",
                                "src": "5898:18:5"
                              },
                              "nodeType": "YulExpressionStatement",
                              "src": "5898:18:5"
                            }
                          ]
                        },
                        "name": "abi_encode_enum_WorkflowStatus",
                        "nodeType": "YulFunctionDefinition",
                        "parameters": [
                          {
                            "name": "value",
                            "nodeType": "YulTypedName",
                            "src": "5720:5:5",
                            "type": ""
                          },
                          {
                            "name": "pos",
                            "nodeType": "YulTypedName",
                            "src": "5727:3:5",
                            "type": ""
                          }
                        ],
                        "src": "5680:242:5"
                      },
                      {
                        "body": {
                          "nodeType": "YulBlock",
                          "src": "6088:167:5",
                          "statements": [
                            {
                              "nodeType": "YulAssignment",
                              "src": "6098:26:5",
                              "value": {
                                "arguments": [
                                  {
                                    "name": "headStart",
                                    "nodeType": "YulIdentifier",
                                    "src": "6110:9:5"
                                  },
                                  {
                                    "kind": "number",
                                    "nodeType": "YulLiteral",
                                    "src": "6121:2:5",
                                    "type": "",
                                    "value": "64"
                                  }
                                ],
                                "functionName": {
                                  "name": "add",
                                  "nodeType": "YulIdentifier",
                                  "src": "6106:3:5"
                                },
                                "nodeType": "YulFunctionCall",
                                "src": "6106:18:5"
                              },
                              "variableNames": [
                                {
                                  "name": "tail",
                                  "nodeType": "YulIdentifier",
                                  "src": "6098:4:5"
                                }
                              ]
                            },
                            {
                              "expression": {
                                "arguments": [
                                  {
                                    "name": "value0",
                                    "nodeType": "YulIdentifier",
                                    "src": "6164:6:5"
                                  },
                                  {
                                    "name": "headStart",
                                    "nodeType": "YulIdentifier",
                                    "src": "6172:9:5"
                                  }
                                ],
                                "functionName": {
                                  "name": "abi_encode_enum_WorkflowStatus",
                                  "nodeType": "YulIdentifier",
                                  "src": "6133:30:5"
                                },
                                "nodeType": "YulFunctionCall",
                                "src": "6133:49:5"
                              },
                              "nodeType": "YulExpressionStatement",
                              "src": "6133:49:5"
                            },
                            {
                              "expression": {
                                "arguments": [
                                  {
                                    "name": "value1",
                                    "nodeType": "YulIdentifier",
                                    "src": "6222:6:5"
                                  },
                                  {
                                    "arguments": [
                                      {
                                        "name": "headStart",
                                        "nodeType": "YulIdentifier",
                                        "src": "6234:9:5"
                                      },
                                      {
                                        "kind": "number",
                                        "nodeType": "YulLiteral",
                                        "src": "6245:2:5",
                                        "type": "",
                                        "value": "32"
                                      }
                                    ],
                                    "functionName": {
                                      "name": "add",
                                      "nodeType": "YulIdentifier",
                                      "src": "6230:3:5"
                                    },
                                    "nodeType": "YulFunctionCall",
                                    "src": "6230:18:5"
                                  }
                                ],
                                "functionName": {
                                  "name": "abi_encode_enum_WorkflowStatus",
                                  "nodeType": "YulIdentifier",
                                  "src": "6191:30:5"
                                },
                                "nodeType": "YulFunctionCall",
                                "src": "6191:58:5"
                              },
                              "nodeType": "YulExpressionStatement",
                              "src": "6191:58:5"
                            }
                          ]
                        },
                        "name": "abi_encode_tuple_t_enum$_WorkflowStatus_$375_t_enum$_WorkflowStatus_$375__to_t_uint8_t_uint8__fromStack_reversed",
                        "nodeType": "YulFunctionDefinition",
                        "parameters": [
                          {
                            "name": "headStart",
                            "nodeType": "YulTypedName",
                            "src": "6049:9:5",
                            "type": ""
                          },
                          {
                            "name": "value1",
                            "nodeType": "YulTypedName",
                            "src": "6060:6:5",
                            "type": ""
                          },
                          {
                            "name": "value0",
                            "nodeType": "YulTypedName",
                            "src": "6068:6:5",
                            "type": ""
                          }
                        ],
                        "returnVariables": [
                          {
                            "name": "tail",
                            "nodeType": "YulTypedName",
                            "src": "6079:4:5",
                            "type": ""
                          }
                        ],
                        "src": "5927:328:5"
                      },
                      {
                        "body": {
                          "nodeType": "YulBlock",
                          "src": "6292:95:5",
                          "statements": [
                            {
                              "expression": {
                                "arguments": [
                                  {
                                    "kind": "number",
                                    "nodeType": "YulLiteral",
                                    "src": "6309:1:5",
                                    "type": "",
                                    "value": "0"
                                  },
                                  {
                                    "arguments": [
                                      {
                                        "kind": "number",
                                        "nodeType": "YulLiteral",
                                        "src": "6316:3:5",
                                        "type": "",
                                        "value": "224"
                                      },
                                      {
                                        "kind": "number",
                                        "nodeType": "YulLiteral",
                                        "src": "6321:10:5",
                                        "type": "",
                                        "value": "0x4e487b71"
                                      }
                                    ],
                                    "functionName": {
                                      "name": "shl",
                                      "nodeType": "YulIdentifier",
                                      "src": "6312:3:5"
                                    },
                                    "nodeType": "YulFunctionCall",
                                    "src": "6312:20:5"
                                  }
                                ],
                                "functionName": {
                                  "name": "mstore",
                                  "nodeType": "YulIdentifier",
                                  "src": "6302:6:5"
                                },
                                "nodeType": "YulFunctionCall",
                                "src": "6302:31:5"
                              },
                              "nodeType": "YulExpressionStatement",
                              "src": "6302:31:5"
                            },
                            {
                              "expression": {
                                "arguments": [
                                  {
                                    "kind": "number",
                                    "nodeType": "YulLiteral",
                                    "src": "6349:1:5",
                                    "type": "",
                                    "value": "4"
                                  },
                                  {
                                    "kind": "number",
                                    "nodeType": "YulLiteral",
                                    "src": "6352:4:5",
                                    "type": "",
                                    "value": "0x11"
                                  }
                                ],
                                "functionName": {
                                  "name": "mstore",
                                  "nodeType": "YulIdentifier",
                                  "src": "6342:6:5"
                                },
                                "nodeType": "YulFunctionCall",
                                "src": "6342:15:5"
                              },
                              "nodeType": "YulExpressionStatement",
                              "src": "6342:15:5"
                            },
                            {
                              "expression": {
                                "arguments": [
                                  {
                                    "kind": "number",
                                    "nodeType": "YulLiteral",
                                    "src": "6373:1:5",
                                    "type": "",
                                    "value": "0"
                                  },
                                  {
                                    "kind": "number",
                                    "nodeType": "YulLiteral",
                                    "src": "6376:4:5",
                                    "type": "",
                                    "value": "0x24"
                                  }
                                ],
                                "functionName": {
                                  "name": "revert",
                                  "nodeType": "YulIdentifier",
                                  "src": "6366:6:5"
                                },
                                "nodeType": "YulFunctionCall",
                                "src": "6366:15:5"
                              },
                              "nodeType": "YulExpressionStatement",
                              "src": "6366:15:5"
                            }
                          ]
                        },
                        "name": "panic_error_0x11",
                        "nodeType": "YulFunctionDefinition",
                        "src": "6260:127:5"
                      },
                      {
                        "body": {
                          "nodeType": "YulBlock",
                          "src": "6439:88:5",
                          "statements": [
                            {
                              "body": {
                                "nodeType": "YulBlock",
                                "src": "6470:22:5",
                                "statements": [
                                  {
                                    "expression": {
                                      "arguments": [],
                                      "functionName": {
                                        "name": "panic_error_0x11",
                                        "nodeType": "YulIdentifier",
                                        "src": "6472:16:5"
                                      },
                                      "nodeType": "YulFunctionCall",
                                      "src": "6472:18:5"
                                    },
                                    "nodeType": "YulExpressionStatement",
                                    "src": "6472:18:5"
                                  }
                                ]
                              },
                              "condition": {
                                "arguments": [
                                  {
                                    "name": "value",
                                    "nodeType": "YulIdentifier",
                                    "src": "6455:5:5"
                                  },
                                  {
                                    "arguments": [
                                      {
                                        "kind": "number",
                                        "nodeType": "YulLiteral",
                                        "src": "6466:1:5",
                                        "type": "",
                                        "value": "0"
                                      }
                                    ],
                                    "functionName": {
                                      "name": "not",
                                      "nodeType": "YulIdentifier",
                                      "src": "6462:3:5"
                                    },
                                    "nodeType": "YulFunctionCall",
                                    "src": "6462:6:5"
                                  }
                                ],
                                "functionName": {
                                  "name": "eq",
                                  "nodeType": "YulIdentifier",
                                  "src": "6452:2:5"
                                },
                                "nodeType": "YulFunctionCall",
                                "src": "6452:17:5"
                              },
                              "nodeType": "YulIf",
                              "src": "6449:43:5"
                            },
                            {
                              "nodeType": "YulAssignment",
                              "src": "6501:20:5",
                              "value": {
                                "arguments": [
                                  {
                                    "name": "value",
                                    "nodeType": "YulIdentifier",
                                    "src": "6512:5:5"
                                  },
                                  {
                                    "kind": "number",
                                    "nodeType": "YulLiteral",
                                    "src": "6519:1:5",
                                    "type": "",
                                    "value": "1"
                                  }
                                ],
                                "functionName": {
                                  "name": "add",
                                  "nodeType": "YulIdentifier",
                                  "src": "6508:3:5"
                                },
                                "nodeType": "YulFunctionCall",
                                "src": "6508:13:5"
                              },
                              "variableNames": [
                                {
                                  "name": "ret",
                                  "nodeType": "YulIdentifier",
                                  "src": "6501:3:5"
                                }
                              ]
                            }
                          ]
                        },
                        "name": "increment_t_uint256",
                        "nodeType": "YulFunctionDefinition",
                        "parameters": [
                          {
                            "name": "value",
                            "nodeType": "YulTypedName",
                            "src": "6421:5:5",
                            "type": ""
                          }
                        ],
                        "returnVariables": [
                          {
                            "name": "ret",
                            "nodeType": "YulTypedName",
                            "src": "6431:3:5",
                            "type": ""
                          }
                        ],
                        "src": "6392:135:5"
                      },
                      {
                        "body": {
                          "nodeType": "YulBlock",
                          "src": "6910:464:5",
                          "statements": [
                            {
                              "expression": {
                                "arguments": [
                                  {
                                    "name": "pos",
                                    "nodeType": "YulIdentifier",
                                    "src": "6927:3:5"
                                  },
                                  {
                                    "hexValue": "556e657870656374656420766f74696e672073657373696f6e20737461747573",
                                    "kind": "string",
                                    "nodeType": "YulLiteral",
                                    "src": "6932:34:5",
                                    "type": "",
                                    "value": "Unexpected voting session status"
                                  }
                                ],
                                "functionName": {
                                  "name": "mstore",
                                  "nodeType": "YulIdentifier",
                                  "src": "6920:6:5"
                                },
                                "nodeType": "YulFunctionCall",
                                "src": "6920:47:5"
                              },
                              "nodeType": "YulExpressionStatement",
                              "src": "6920:47:5"
                            },
                            {
                              "expression": {
                                "arguments": [
                                  {
                                    "arguments": [
                                      {
                                        "name": "pos",
                                        "nodeType": "YulIdentifier",
                                        "src": "6987:3:5"
                                      },
                                      {
                                        "kind": "number",
                                        "nodeType": "YulLiteral",
                                        "src": "6992:2:5",
                                        "type": "",
                                        "value": "32"
                                      }
                                    ],
                                    "functionName": {
                                      "name": "add",
                                      "nodeType": "YulIdentifier",
                                      "src": "6983:3:5"
                                    },
                                    "nodeType": "YulFunctionCall",
                                    "src": "6983:12:5"
                                  },
                                  {
                                    "hexValue": "3a2065787065637465643d",
                                    "kind": "string",
                                    "nodeType": "YulLiteral",
                                    "src": "6997:13:5",
                                    "type": "",
                                    "value": ": expected="
                                  }
                                ],
                                "functionName": {
                                  "name": "mstore",
                                  "nodeType": "YulIdentifier",
                                  "src": "6976:6:5"
                                },
                                "nodeType": "YulFunctionCall",
                                "src": "6976:35:5"
                              },
                              "nodeType": "YulExpressionStatement",
                              "src": "6976:35:5"
                            },
                            {
                              "nodeType": "YulVariableDeclaration",
                              "src": "7020:27:5",
                              "value": {
                                "arguments": [
                                  {
                                    "name": "value0",
                                    "nodeType": "YulIdentifier",
                                    "src": "7040:6:5"
                                  }
                                ],
                                "functionName": {
                                  "name": "mload",
                                  "nodeType": "YulIdentifier",
                                  "src": "7034:5:5"
                                },
                                "nodeType": "YulFunctionCall",
                                "src": "7034:13:5"
                              },
                              "variables": [
                                {
                                  "name": "length",
                                  "nodeType": "YulTypedName",
                                  "src": "7024:6:5",
                                  "type": ""
                                }
                              ]
                            },
                            {
                              "expression": {
                                "arguments": [
                                  {
                                    "arguments": [
                                      {
                                        "name": "value0",
                                        "nodeType": "YulIdentifier",
                                        "src": "7095:6:5"
                                      },
                                      {
                                        "kind": "number",
                                        "nodeType": "YulLiteral",
                                        "src": "7103:2:5",
                                        "type": "",
                                        "value": "32"
                                      }
                                    ],
                                    "functionName": {
                                      "name": "add",
                                      "nodeType": "YulIdentifier",
                                      "src": "7091:3:5"
                                    },
                                    "nodeType": "YulFunctionCall",
                                    "src": "7091:15:5"
                                  },
                                  {
                                    "arguments": [
                                      {
                                        "name": "pos",
                                        "nodeType": "YulIdentifier",
                                        "src": "7112:3:5"
                                      },
                                      {
                                        "kind": "number",
                                        "nodeType": "YulLiteral",
                                        "src": "7117:2:5",
                                        "type": "",
                                        "value": "43"
                                      }
                                    ],
                                    "functionName": {
                                      "name": "add",
                                      "nodeType": "YulIdentifier",
                                      "src": "7108:3:5"
                                    },
                                    "nodeType": "YulFunctionCall",
                                    "src": "7108:12:5"
                                  },
                                  {
                                    "name": "length",
                                    "nodeType": "YulIdentifier",
                                    "src": "7122:6:5"
                                  }
                                ],
                                "functionName": {
                                  "name": "copy_memory_to_memory_with_cleanup",
                                  "nodeType": "YulIdentifier",
                                  "src": "7056:34:5"
                                },
                                "nodeType": "YulFunctionCall",
                                "src": "7056:73:5"
                              },
                              "nodeType": "YulExpressionStatement",
                              "src": "7056:73:5"
                            },
                            {
                              "nodeType": "YulVariableDeclaration",
                              "src": "7138:26:5",
                              "value": {
                                "arguments": [
                                  {
                                    "name": "pos",
                                    "nodeType": "YulIdentifier",
                                    "src": "7152:3:5"
                                  },
                                  {
                                    "name": "length",
                                    "nodeType": "YulIdentifier",
                                    "src": "7157:6:5"
                                  }
                                ],
                                "functionName": {
                                  "name": "add",
                                  "nodeType": "YulIdentifier",
                                  "src": "7148:3:5"
                                },
                                "nodeType": "YulFunctionCall",
                                "src": "7148:16:5"
                              },
                              "variables": [
                                {
                                  "name": "_1",
                                  "nodeType": "YulTypedName",
                                  "src": "7142:2:5",
                                  "type": ""
                                }
                              ]
                            },
                            {
                              "expression": {
                                "arguments": [
                                  {
                                    "arguments": [
                                      {
                                        "name": "_1",
                                        "nodeType": "YulIdentifier",
                                        "src": "7184:2:5"
                                      },
                                      {
                                        "kind": "number",
                                        "nodeType": "YulLiteral",
                                        "src": "7188:2:5",
                                        "type": "",
                                        "value": "43"
                                      }
                                    ],
                                    "functionName": {
                                      "name": "add",
                                      "nodeType": "YulIdentifier",
                                      "src": "7180:3:5"
                                    },
                                    "nodeType": "YulFunctionCall",
                                    "src": "7180:11:5"
                                  },
                                  {
                                    "hexValue": "2063757272656e743d",
                                    "kind": "string",
                                    "nodeType": "YulLiteral",
                                    "src": "7193:11:5",
                                    "type": "",
                                    "value": " current="
                                  }
                                ],
                                "functionName": {
                                  "name": "mstore",
                                  "nodeType": "YulIdentifier",
                                  "src": "7173:6:5"
                                },
                                "nodeType": "YulFunctionCall",
                                "src": "7173:32:5"
                              },
                              "nodeType": "YulExpressionStatement",
                              "src": "7173:32:5"
                            },
                            {
                              "nodeType": "YulVariableDeclaration",
                              "src": "7214:29:5",
                              "value": {
                                "arguments": [
                                  {
                                    "name": "value1",
                                    "nodeType": "YulIdentifier",
                                    "src": "7236:6:5"
                                  }
                                ],
                                "functionName": {
                                  "name": "mload",
                                  "nodeType": "YulIdentifier",
                                  "src": "7230:5:5"
                                },
                                "nodeType": "YulFunctionCall",
                                "src": "7230:13:5"
                              },
                              "variables": [
                                {
                                  "name": "length_1",
                                  "nodeType": "YulTypedName",
                                  "src": "7218:8:5",
                                  "type": ""
                                }
                              ]
                            },
                            {
                              "expression": {
                                "arguments": [
                                  {
                                    "arguments": [
                                      {
                                        "name": "value1",
                                        "nodeType": "YulIdentifier",
                                        "src": "7291:6:5"
                                      },
                                      {
                                        "kind": "number",
                                        "nodeType": "YulLiteral",
                                        "src": "7299:2:5",
                                        "type": "",
                                        "value": "32"
                                      }
                                    ],
                                    "functionName": {
                                      "name": "add",
                                      "nodeType": "YulIdentifier",
                                      "src": "7287:3:5"
                                    },
                                    "nodeType": "YulFunctionCall",
                                    "src": "7287:15:5"
                                  },
                                  {
                                    "arguments": [
                                      {
                                        "name": "_1",
                                        "nodeType": "YulIdentifier",
                                        "src": "7308:2:5"
                                      },
                                      {
                                        "kind": "number",
                                        "nodeType": "YulLiteral",
                                        "src": "7312:2:5",
                                        "type": "",
                                        "value": "52"
                                      }
                                    ],
                                    "functionName": {
                                      "name": "add",
                                      "nodeType": "YulIdentifier",
                                      "src": "7304:3:5"
                                    },
                                    "nodeType": "YulFunctionCall",
                                    "src": "7304:11:5"
                                  },
                                  {
                                    "name": "length_1",
                                    "nodeType": "YulIdentifier",
                                    "src": "7317:8:5"
                                  }
                                ],
                                "functionName": {
                                  "name": "copy_memory_to_memory_with_cleanup",
                                  "nodeType": "YulIdentifier",
                                  "src": "7252:34:5"
                                },
                                "nodeType": "YulFunctionCall",
                                "src": "7252:74:5"
                              },
                              "nodeType": "YulExpressionStatement",
                              "src": "7252:74:5"
                            },
                            {
                              "nodeType": "YulAssignment",
                              "src": "7335:33:5",
                              "value": {
                                "arguments": [
                                  {
                                    "arguments": [
                                      {
                                        "name": "_1",
                                        "nodeType": "YulIdentifier",
                                        "src": "7350:2:5"
                                      },
                                      {
                                        "name": "length_1",
                                        "nodeType": "YulIdentifier",
                                        "src": "7354:8:5"
                                      }
                                    ],
                                    "functionName": {
                                      "name": "add",
                                      "nodeType": "YulIdentifier",
                                      "src": "7346:3:5"
                                    },
                                    "nodeType": "YulFunctionCall",
                                    "src": "7346:17:5"
                                  },
                                  {
                                    "kind": "number",
                                    "nodeType": "YulLiteral",
                                    "src": "7365:2:5",
                                    "type": "",
                                    "value": "52"
                                  }
                                ],
                                "functionName": {
                                  "name": "add",
                                  "nodeType": "YulIdentifier",
                                  "src": "7342:3:5"
                                },
                                "nodeType": "YulFunctionCall",
                                "src": "7342:26:5"
                              },
                              "variableNames": [
                                {
                                  "name": "end",
                                  "nodeType": "YulIdentifier",
                                  "src": "7335:3:5"
                                }
                              ]
                            }
                          ]
                        },
                        "name": "abi_encode_tuple_packed_t_stringliteral_3d620b44d0ea3d0fd41b8141758febf894dd941858e027857ca07a3929ff2892_t_string_memory_ptr_t_stringliteral_3fd9b0dcd722604cd4fd85d779090fb081569f1da68546e1c1a84a77cdcb3486_t_string_memory_ptr__to_t_string_memory_ptr_t_string_memory_ptr_t_bytes9_t_string_memory_ptr__nonPadded_inplace_fromStack_reversed",
                        "nodeType": "YulFunctionDefinition",
                        "parameters": [
                          {
                            "name": "pos",
                            "nodeType": "YulTypedName",
                            "src": "6878:3:5",
                            "type": ""
                          },
                          {
                            "name": "value1",
                            "nodeType": "YulTypedName",
                            "src": "6883:6:5",
                            "type": ""
                          },
                          {
                            "name": "value0",
                            "nodeType": "YulTypedName",
                            "src": "6891:6:5",
                            "type": ""
                          }
                        ],
                        "returnVariables": [
                          {
                            "name": "end",
                            "nodeType": "YulTypedName",
                            "src": "6902:3:5",
                            "type": ""
                          }
                        ],
                        "src": "6532:842:5"
                      },
                      {
                        "body": {
                          "nodeType": "YulBlock",
                          "src": "7500:99:5",
                          "statements": [
                            {
                              "expression": {
                                "arguments": [
                                  {
                                    "name": "headStart",
                                    "nodeType": "YulIdentifier",
                                    "src": "7517:9:5"
                                  },
                                  {
                                    "kind": "number",
                                    "nodeType": "YulLiteral",
                                    "src": "7528:2:5",
                                    "type": "",
                                    "value": "32"
                                  }
                                ],
                                "functionName": {
                                  "name": "mstore",
                                  "nodeType": "YulIdentifier",
                                  "src": "7510:6:5"
                                },
                                "nodeType": "YulFunctionCall",
                                "src": "7510:21:5"
                              },
                              "nodeType": "YulExpressionStatement",
                              "src": "7510:21:5"
                            },
                            {
                              "nodeType": "YulAssignment",
                              "src": "7540:53:5",
                              "value": {
                                "arguments": [
                                  {
                                    "name": "value0",
                                    "nodeType": "YulIdentifier",
                                    "src": "7566:6:5"
                                  },
                                  {
                                    "arguments": [
                                      {
                                        "name": "headStart",
                                        "nodeType": "YulIdentifier",
                                        "src": "7578:9:5"
                                      },
                                      {
                                        "kind": "number",
                                        "nodeType": "YulLiteral",
                                        "src": "7589:2:5",
                                        "type": "",
                                        "value": "32"
                                      }
                                    ],
                                    "functionName": {
                                      "name": "add",
                                      "nodeType": "YulIdentifier",
                                      "src": "7574:3:5"
                                    },
                                    "nodeType": "YulFunctionCall",
                                    "src": "7574:18:5"
                                  }
                                ],
                                "functionName": {
                                  "name": "abi_encode_string",
                                  "nodeType": "YulIdentifier",
                                  "src": "7548:17:5"
                                },
                                "nodeType": "YulFunctionCall",
                                "src": "7548:45:5"
                              },
                              "variableNames": [
                                {
                                  "name": "tail",
                                  "nodeType": "YulIdentifier",
                                  "src": "7540:4:5"
                                }
                              ]
                            }
                          ]
                        },
                        "name": "abi_encode_tuple_t_string_memory_ptr__to_t_string_memory_ptr__fromStack_reversed",
                        "nodeType": "YulFunctionDefinition",
                        "parameters": [
                          {
                            "name": "headStart",
                            "nodeType": "YulTypedName",
                            "src": "7469:9:5",
                            "type": ""
                          },
                          {
                            "name": "value0",
                            "nodeType": "YulTypedName",
                            "src": "7480:6:5",
                            "type": ""
                          }
                        ],
                        "returnVariables": [
                          {
                            "name": "tail",
                            "nodeType": "YulTypedName",
                            "src": "7491:4:5",
                            "type": ""
                          }
                        ],
                        "src": "7379:220:5"
                      },
                      {
                        "body": {
                          "nodeType": "YulBlock",
                          "src": "7636:95:5",
                          "statements": [
                            {
                              "expression": {
                                "arguments": [
                                  {
                                    "kind": "number",
                                    "nodeType": "YulLiteral",
                                    "src": "7653:1:5",
                                    "type": "",
                                    "value": "0"
                                  },
                                  {
                                    "arguments": [
                                      {
                                        "kind": "number",
                                        "nodeType": "YulLiteral",
                                        "src": "7660:3:5",
                                        "type": "",
                                        "value": "224"
                                      },
                                      {
                                        "kind": "number",
                                        "nodeType": "YulLiteral",
                                        "src": "7665:10:5",
                                        "type": "",
                                        "value": "0x4e487b71"
                                      }
                                    ],
                                    "functionName": {
                                      "name": "shl",
                                      "nodeType": "YulIdentifier",
                                      "src": "7656:3:5"
                                    },
                                    "nodeType": "YulFunctionCall",
                                    "src": "7656:20:5"
                                  }
                                ],
                                "functionName": {
                                  "name": "mstore",
                                  "nodeType": "YulIdentifier",
                                  "src": "7646:6:5"
                                },
                                "nodeType": "YulFunctionCall",
                                "src": "7646:31:5"
                              },
                              "nodeType": "YulExpressionStatement",
                              "src": "7646:31:5"
                            },
                            {
                              "expression": {
                                "arguments": [
                                  {
                                    "kind": "number",
                                    "nodeType": "YulLiteral",
                                    "src": "7693:1:5",
                                    "type": "",
                                    "value": "4"
                                  },
                                  {
                                    "kind": "number",
                                    "nodeType": "YulLiteral",
                                    "src": "7696:4:5",
                                    "type": "",
                                    "value": "0x41"
                                  }
                                ],
                                "functionName": {
                                  "name": "mstore",
                                  "nodeType": "YulIdentifier",
                                  "src": "7686:6:5"
                                },
                                "nodeType": "YulFunctionCall",
                                "src": "7686:15:5"
                              },
                              "nodeType": "YulExpressionStatement",
                              "src": "7686:15:5"
                            },
                            {
                              "expression": {
                                "arguments": [
                                  {
                                    "kind": "number",
                                    "nodeType": "YulLiteral",
                                    "src": "7717:1:5",
                                    "type": "",
                                    "value": "0"
                                  },
                                  {
                                    "kind": "number",
                                    "nodeType": "YulLiteral",
                                    "src": "7720:4:5",
                                    "type": "",
                                    "value": "0x24"
                                  }
                                ],
                                "functionName": {
                                  "name": "revert",
                                  "nodeType": "YulIdentifier",
                                  "src": "7710:6:5"
                                },
                                "nodeType": "YulFunctionCall",
                                "src": "7710:15:5"
                              },
                              "nodeType": "YulExpressionStatement",
                              "src": "7710:15:5"
                            }
                          ]
                        },
                        "name": "panic_error_0x41",
                        "nodeType": "YulFunctionDefinition",
                        "src": "7604:127:5"
                      },
                      {
                        "body": {
                          "nodeType": "YulBlock",
                          "src": "7768:95:5",
                          "statements": [
                            {
                              "expression": {
                                "arguments": [
                                  {
                                    "kind": "number",
                                    "nodeType": "YulLiteral",
                                    "src": "7785:1:5",
                                    "type": "",
                                    "value": "0"
                                  },
                                  {
                                    "arguments": [
                                      {
                                        "kind": "number",
                                        "nodeType": "YulLiteral",
                                        "src": "7792:3:5",
                                        "type": "",
                                        "value": "224"
                                      },
                                      {
                                        "kind": "number",
                                        "nodeType": "YulLiteral",
                                        "src": "7797:10:5",
                                        "type": "",
                                        "value": "0x4e487b71"
                                      }
                                    ],
                                    "functionName": {
                                      "name": "shl",
                                      "nodeType": "YulIdentifier",
                                      "src": "7788:3:5"
                                    },
                                    "nodeType": "YulFunctionCall",
                                    "src": "7788:20:5"
                                  }
                                ],
                                "functionName": {
                                  "name": "mstore",
                                  "nodeType": "YulIdentifier",
                                  "src": "7778:6:5"
                                },
                                "nodeType": "YulFunctionCall",
                                "src": "7778:31:5"
                              },
                              "nodeType": "YulExpressionStatement",
                              "src": "7778:31:5"
                            },
                            {
                              "expression": {
                                "arguments": [
                                  {
                                    "kind": "number",
                                    "nodeType": "YulLiteral",
                                    "src": "7825:1:5",
                                    "type": "",
                                    "value": "4"
                                  },
                                  {
                                    "kind": "number",
                                    "nodeType": "YulLiteral",
                                    "src": "7828:4:5",
                                    "type": "",
                                    "value": "0x32"
                                  }
                                ],
                                "functionName": {
                                  "name": "mstore",
                                  "nodeType": "YulIdentifier",
                                  "src": "7818:6:5"
                                },
                                "nodeType": "YulFunctionCall",
                                "src": "7818:15:5"
                              },
                              "nodeType": "YulExpressionStatement",
                              "src": "7818:15:5"
                            },
                            {
                              "expression": {
                                "arguments": [
                                  {
                                    "kind": "number",
                                    "nodeType": "YulLiteral",
                                    "src": "7849:1:5",
                                    "type": "",
                                    "value": "0"
                                  },
                                  {
                                    "kind": "number",
                                    "nodeType": "YulLiteral",
                                    "src": "7852:4:5",
                                    "type": "",
                                    "value": "0x24"
                                  }
                                ],
                                "functionName": {
                                  "name": "revert",
                                  "nodeType": "YulIdentifier",
                                  "src": "7842:6:5"
                                },
                                "nodeType": "YulFunctionCall",
                                "src": "7842:15:5"
                              },
                              "nodeType": "YulExpressionStatement",
                              "src": "7842:15:5"
                            }
                          ]
                        },
                        "name": "panic_error_0x32",
                        "nodeType": "YulFunctionDefinition",
                        "src": "7736:127:5"
                      },
                      {
                        "body": {
                          "nodeType": "YulBlock",
                          "src": "7923:325:5",
                          "statements": [
                            {
                              "nodeType": "YulAssignment",
                              "src": "7933:22:5",
                              "value": {
                                "arguments": [
                                  {
                                    "kind": "number",
                                    "nodeType": "YulLiteral",
                                    "src": "7947:1:5",
                                    "type": "",
                                    "value": "1"
                                  },
                                  {
                                    "name": "data",
                                    "nodeType": "YulIdentifier",
                                    "src": "7950:4:5"
                                  }
                                ],
                                "functionName": {
                                  "name": "shr",
                                  "nodeType": "YulIdentifier",
                                  "src": "7943:3:5"
                                },
                                "nodeType": "YulFunctionCall",
                                "src": "7943:12:5"
                              },
                              "variableNames": [
                                {
                                  "name": "length",
                                  "nodeType": "YulIdentifier",
                                  "src": "7933:6:5"
                                }
                              ]
                            },
                            {
                              "nodeType": "YulVariableDeclaration",
                              "src": "7964:38:5",
                              "value": {
                                "arguments": [
                                  {
                                    "name": "data",
                                    "nodeType": "YulIdentifier",
                                    "src": "7994:4:5"
                                  },
                                  {
                                    "kind": "number",
                                    "nodeType": "YulLiteral",
                                    "src": "8000:1:5",
                                    "type": "",
                                    "value": "1"
                                  }
                                ],
                                "functionName": {
                                  "name": "and",
                                  "nodeType": "YulIdentifier",
                                  "src": "7990:3:5"
                                },
                                "nodeType": "YulFunctionCall",
                                "src": "7990:12:5"
                              },
                              "variables": [
                                {
                                  "name": "outOfPlaceEncoding",
                                  "nodeType": "YulTypedName",
                                  "src": "7968:18:5",
                                  "type": ""
                                }
                              ]
                            },
                            {
                              "body": {
                                "nodeType": "YulBlock",
                                "src": "8041:31:5",
                                "statements": [
                                  {
                                    "nodeType": "YulAssignment",
                                    "src": "8043:27:5",
                                    "value": {
                                      "arguments": [
                                        {
                                          "name": "length",
                                          "nodeType": "YulIdentifier",
                                          "src": "8057:6:5"
                                        },
                                        {
                                          "kind": "number",
                                          "nodeType": "YulLiteral",
                                          "src": "8065:4:5",
                                          "type": "",
                                          "value": "0x7f"
                                        }
                                      ],
                                      "functionName": {
                                        "name": "and",
                                        "nodeType": "YulIdentifier",
                                        "src": "8053:3:5"
                                      },
                                      "nodeType": "YulFunctionCall",
                                      "src": "8053:17:5"
                                    },
                                    "variableNames": [
                                      {
                                        "name": "length",
                                        "nodeType": "YulIdentifier",
                                        "src": "8043:6:5"
                                      }
                                    ]
                                  }
                                ]
                              },
                              "condition": {
                                "arguments": [
                                  {
                                    "name": "outOfPlaceEncoding",
                                    "nodeType": "YulIdentifier",
                                    "src": "8021:18:5"
                                  }
                                ],
                                "functionName": {
                                  "name": "iszero",
                                  "nodeType": "YulIdentifier",
                                  "src": "8014:6:5"
                                },
                                "nodeType": "YulFunctionCall",
                                "src": "8014:26:5"
                              },
                              "nodeType": "YulIf",
                              "src": "8011:61:5"
                            },
                            {
                              "body": {
                                "nodeType": "YulBlock",
                                "src": "8131:111:5",
                                "statements": [
                                  {
                                    "expression": {
                                      "arguments": [
                                        {
                                          "kind": "number",
                                          "nodeType": "YulLiteral",
                                          "src": "8152:1:5",
                                          "type": "",
                                          "value": "0"
                                        },
                                        {
                                          "arguments": [
                                            {
                                              "kind": "number",
                                              "nodeType": "YulLiteral",
                                              "src": "8159:3:5",
                                              "type": "",
                                              "value": "224"
                                            },
                                            {
                                              "kind": "number",
                                              "nodeType": "YulLiteral",
                                              "src": "8164:10:5",
                                              "type": "",
                                              "value": "0x4e487b71"
                                            }
                                          ],
                                          "functionName": {
                                            "name": "shl",
                                            "nodeType": "YulIdentifier",
                                            "src": "8155:3:5"
                                          },
                                          "nodeType": "YulFunctionCall",
                                          "src": "8155:20:5"
                                        }
                                      ],
                                      "functionName": {
                                        "name": "mstore",
                                        "nodeType": "YulIdentifier",
                                        "src": "8145:6:5"
                                      },
                                      "nodeType": "YulFunctionCall",
                                      "src": "8145:31:5"
                                    },
                                    "nodeType": "YulExpressionStatement",
                                    "src": "8145:31:5"
                                  },
                                  {
                                    "expression": {
                                      "arguments": [
                                        {
                                          "kind": "number",
                                          "nodeType": "YulLiteral",
                                          "src": "8196:1:5",
                                          "type": "",
                                          "value": "4"
                                        },
                                        {
                                          "kind": "number",
                                          "nodeType": "YulLiteral",
                                          "src": "8199:4:5",
                                          "type": "",
                                          "value": "0x22"
                                        }
                                      ],
                                      "functionName": {
                                        "name": "mstore",
                                        "nodeType": "YulIdentifier",
                                        "src": "8189:6:5"
                                      },
                                      "nodeType": "YulFunctionCall",
                                      "src": "8189:15:5"
                                    },
                                    "nodeType": "YulExpressionStatement",
                                    "src": "8189:15:5"
                                  },
                                  {
                                    "expression": {
                                      "arguments": [
                                        {
                                          "kind": "number",
                                          "nodeType": "YulLiteral",
                                          "src": "8224:1:5",
                                          "type": "",
                                          "value": "0"
                                        },
                                        {
                                          "kind": "number",
                                          "nodeType": "YulLiteral",
                                          "src": "8227:4:5",
                                          "type": "",
                                          "value": "0x24"
                                        }
                                      ],
                                      "functionName": {
                                        "name": "revert",
                                        "nodeType": "YulIdentifier",
                                        "src": "8217:6:5"
                                      },
                                      "nodeType": "YulFunctionCall",
                                      "src": "8217:15:5"
                                    },
                                    "nodeType": "YulExpressionStatement",
                                    "src": "8217:15:5"
                                  }
                                ]
                              },
                              "condition": {
                                "arguments": [
                                  {
                                    "name": "outOfPlaceEncoding",
                                    "nodeType": "YulIdentifier",
                                    "src": "8087:18:5"
                                  },
                                  {
                                    "arguments": [
                                      {
                                        "name": "length",
                                        "nodeType": "YulIdentifier",
                                        "src": "8110:6:5"
                                      },
                                      {
                                        "kind": "number",
                                        "nodeType": "YulLiteral",
                                        "src": "8118:2:5",
                                        "type": "",
                                        "value": "32"
                                      }
                                    ],
                                    "functionName": {
                                      "name": "lt",
                                      "nodeType": "YulIdentifier",
                                      "src": "8107:2:5"
                                    },
                                    "nodeType": "YulFunctionCall",
                                    "src": "8107:14:5"
                                  }
                                ],
                                "functionName": {
                                  "name": "eq",
                                  "nodeType": "YulIdentifier",
                                  "src": "8084:2:5"
                                },
                                "nodeType": "YulFunctionCall",
                                "src": "8084:38:5"
                              },
                              "nodeType": "YulIf",
                              "src": "8081:161:5"
                            }
                          ]
                        },
                        "name": "extract_byte_array_length",
                        "nodeType": "YulFunctionDefinition",
                        "parameters": [
                          {
                            "name": "data",
                            "nodeType": "YulTypedName",
                            "src": "7903:4:5",
                            "type": ""
                          }
                        ],
                        "returnVariables": [
                          {
                            "name": "length",
                            "nodeType": "YulTypedName",
                            "src": "7912:6:5",
                            "type": ""
                          }
                        ],
                        "src": "7868:380:5"
                      },
                      {
                        "body": {
                          "nodeType": "YulBlock",
                          "src": "8302:79:5",
                          "statements": [
                            {
                              "nodeType": "YulAssignment",
                              "src": "8312:17:5",
                              "value": {
                                "arguments": [
                                  {
                                    "name": "x",
                                    "nodeType": "YulIdentifier",
                                    "src": "8324:1:5"
                                  },
                                  {
                                    "name": "y",
                                    "nodeType": "YulIdentifier",
                                    "src": "8327:1:5"
                                  }
                                ],
                                "functionName": {
                                  "name": "sub",
                                  "nodeType": "YulIdentifier",
                                  "src": "8320:3:5"
                                },
                                "nodeType": "YulFunctionCall",
                                "src": "8320:9:5"
                              },
                              "variableNames": [
                                {
                                  "name": "diff",
                                  "nodeType": "YulIdentifier",
                                  "src": "8312:4:5"
                                }
                              ]
                            },
                            {
                              "body": {
                                "nodeType": "YulBlock",
                                "src": "8353:22:5",
                                "statements": [
                                  {
                                    "expression": {
                                      "arguments": [],
                                      "functionName": {
                                        "name": "panic_error_0x11",
                                        "nodeType": "YulIdentifier",
                                        "src": "8355:16:5"
                                      },
                                      "nodeType": "YulFunctionCall",
                                      "src": "8355:18:5"
                                    },
                                    "nodeType": "YulExpressionStatement",
                                    "src": "8355:18:5"
                                  }
                                ]
                              },
                              "condition": {
                                "arguments": [
                                  {
                                    "name": "diff",
                                    "nodeType": "YulIdentifier",
                                    "src": "8344:4:5"
                                  },
                                  {
                                    "name": "x",
                                    "nodeType": "YulIdentifier",
                                    "src": "8350:1:5"
                                  }
                                ],
                                "functionName": {
                                  "name": "gt",
                                  "nodeType": "YulIdentifier",
                                  "src": "8341:2:5"
                                },
                                "nodeType": "YulFunctionCall",
                                "src": "8341:11:5"
                              },
                              "nodeType": "YulIf",
                              "src": "8338:37:5"
                            }
                          ]
                        },
                        "name": "checked_sub_t_uint256",
                        "nodeType": "YulFunctionDefinition",
                        "parameters": [
                          {
                            "name": "x",
                            "nodeType": "YulTypedName",
                            "src": "8284:1:5",
                            "type": ""
                          },
                          {
                            "name": "y",
                            "nodeType": "YulTypedName",
                            "src": "8287:1:5",
                            "type": ""
                          }
                        ],
                        "returnVariables": [
                          {
                            "name": "diff",
                            "nodeType": "YulTypedName",
                            "src": "8293:4:5",
                            "type": ""
                          }
                        ],
                        "src": "8253:128:5"
                      },
                      {
                        "body": {
                          "nodeType": "YulBlock",
                          "src": "8442:65:5",
                          "statements": [
                            {
                              "expression": {
                                "arguments": [
                                  {
                                    "kind": "number",
                                    "nodeType": "YulLiteral",
                                    "src": "8459:1:5",
                                    "type": "",
                                    "value": "0"
                                  },
                                  {
                                    "name": "ptr",
                                    "nodeType": "YulIdentifier",
                                    "src": "8462:3:5"
                                  }
                                ],
                                "functionName": {
                                  "name": "mstore",
                                  "nodeType": "YulIdentifier",
                                  "src": "8452:6:5"
                                },
                                "nodeType": "YulFunctionCall",
                                "src": "8452:14:5"
                              },
                              "nodeType": "YulExpressionStatement",
                              "src": "8452:14:5"
                            },
                            {
                              "nodeType": "YulAssignment",
                              "src": "8475:26:5",
                              "value": {
                                "arguments": [
                                  {
                                    "kind": "number",
                                    "nodeType": "YulLiteral",
                                    "src": "8493:1:5",
                                    "type": "",
                                    "value": "0"
                                  },
                                  {
                                    "kind": "number",
                                    "nodeType": "YulLiteral",
                                    "src": "8496:4:5",
                                    "type": "",
                                    "value": "0x20"
                                  }
                                ],
                                "functionName": {
                                  "name": "keccak256",
                                  "nodeType": "YulIdentifier",
                                  "src": "8483:9:5"
                                },
                                "nodeType": "YulFunctionCall",
                                "src": "8483:18:5"
                              },
                              "variableNames": [
                                {
                                  "name": "data",
                                  "nodeType": "YulIdentifier",
                                  "src": "8475:4:5"
                                }
                              ]
                            }
                          ]
                        },
                        "name": "array_dataslot_string_storage",
                        "nodeType": "YulFunctionDefinition",
                        "parameters": [
                          {
                            "name": "ptr",
                            "nodeType": "YulTypedName",
                            "src": "8425:3:5",
                            "type": ""
                          }
                        ],
                        "returnVariables": [
                          {
                            "name": "data",
                            "nodeType": "YulTypedName",
                            "src": "8433:4:5",
                            "type": ""
                          }
                        ],
                        "src": "8386:121:5"
                      },
                      {
                        "body": {
                          "nodeType": "YulBlock",
                          "src": "8593:464:5",
                          "statements": [
                            {
                              "body": {
                                "nodeType": "YulBlock",
                                "src": "8626:425:5",
                                "statements": [
                                  {
                                    "nodeType": "YulVariableDeclaration",
                                    "src": "8640:11:5",
                                    "value": {
                                      "kind": "number",
                                      "nodeType": "YulLiteral",
                                      "src": "8650:1:5",
                                      "type": "",
                                      "value": "0"
                                    },
                                    "variables": [
                                      {
                                        "name": "_1",
                                        "nodeType": "YulTypedName",
                                        "src": "8644:2:5",
                                        "type": ""
                                      }
                                    ]
                                  },
                                  {
                                    "expression": {
                                      "arguments": [
                                        {
                                          "name": "_1",
                                          "nodeType": "YulIdentifier",
                                          "src": "8671:2:5"
                                        },
                                        {
                                          "name": "array",
                                          "nodeType": "YulIdentifier",
                                          "src": "8675:5:5"
                                        }
                                      ],
                                      "functionName": {
                                        "name": "mstore",
                                        "nodeType": "YulIdentifier",
                                        "src": "8664:6:5"
                                      },
                                      "nodeType": "YulFunctionCall",
                                      "src": "8664:17:5"
                                    },
                                    "nodeType": "YulExpressionStatement",
                                    "src": "8664:17:5"
                                  },
                                  {
                                    "nodeType": "YulVariableDeclaration",
                                    "src": "8694:31:5",
                                    "value": {
                                      "arguments": [
                                        {
                                          "name": "_1",
                                          "nodeType": "YulIdentifier",
                                          "src": "8716:2:5"
                                        },
                                        {
                                          "kind": "number",
                                          "nodeType": "YulLiteral",
                                          "src": "8720:4:5",
                                          "type": "",
                                          "value": "0x20"
                                        }
                                      ],
                                      "functionName": {
                                        "name": "keccak256",
                                        "nodeType": "YulIdentifier",
                                        "src": "8706:9:5"
                                      },
                                      "nodeType": "YulFunctionCall",
                                      "src": "8706:19:5"
                                    },
                                    "variables": [
                                      {
                                        "name": "data",
                                        "nodeType": "YulTypedName",
                                        "src": "8698:4:5",
                                        "type": ""
                                      }
                                    ]
                                  },
                                  {
                                    "nodeType": "YulVariableDeclaration",
                                    "src": "8738:57:5",
                                    "value": {
                                      "arguments": [
                                        {
                                          "name": "data",
                                          "nodeType": "YulIdentifier",
                                          "src": "8761:4:5"
                                        },
                                        {
                                          "arguments": [
                                            {
                                              "kind": "number",
                                              "nodeType": "YulLiteral",
                                              "src": "8771:1:5",
                                              "type": "",
                                              "value": "5"
                                            },
                                            {
                                              "arguments": [
                                                {
                                                  "name": "startIndex",
                                                  "nodeType": "YulIdentifier",
                                                  "src": "8778:10:5"
                                                },
                                                {
                                                  "kind": "number",
                                                  "nodeType": "YulLiteral",
                                                  "src": "8790:2:5",
                                                  "type": "",
                                                  "value": "31"
                                                }
                                              ],
                                              "functionName": {
                                                "name": "add",
                                                "nodeType": "YulIdentifier",
                                                "src": "8774:3:5"
                                              },
                                              "nodeType": "YulFunctionCall",
                                              "src": "8774:19:5"
                                            }
                                          ],
                                          "functionName": {
                                            "name": "shr",
                                            "nodeType": "YulIdentifier",
                                            "src": "8767:3:5"
                                          },
                                          "nodeType": "YulFunctionCall",
                                          "src": "8767:27:5"
                                        }
                                      ],
                                      "functionName": {
                                        "name": "add",
                                        "nodeType": "YulIdentifier",
                                        "src": "8757:3:5"
                                      },
                                      "nodeType": "YulFunctionCall",
                                      "src": "8757:38:5"
                                    },
                                    "variables": [
                                      {
                                        "name": "deleteStart",
                                        "nodeType": "YulTypedName",
                                        "src": "8742:11:5",
                                        "type": ""
                                      }
                                    ]
                                  },
                                  {
                                    "body": {
                                      "nodeType": "YulBlock",
                                      "src": "8832:23:5",
                                      "statements": [
                                        {
                                          "nodeType": "YulAssignment",
                                          "src": "8834:19:5",
                                          "value": {
                                            "name": "data",
                                            "nodeType": "YulIdentifier",
                                            "src": "8849:4:5"
                                          },
                                          "variableNames": [
                                            {
                                              "name": "deleteStart",
                                              "nodeType": "YulIdentifier",
                                              "src": "8834:11:5"
                                            }
                                          ]
                                        }
                                      ]
                                    },
                                    "condition": {
                                      "arguments": [
                                        {
                                          "name": "startIndex",
                                          "nodeType": "YulIdentifier",
                                          "src": "8814:10:5"
                                        },
                                        {
                                          "kind": "number",
                                          "nodeType": "YulLiteral",
                                          "src": "8826:4:5",
                                          "type": "",
                                          "value": "0x20"
                                        }
                                      ],
                                      "functionName": {
                                        "name": "lt",
                                        "nodeType": "YulIdentifier",
                                        "src": "8811:2:5"
                                      },
                                      "nodeType": "YulFunctionCall",
                                      "src": "8811:20:5"
                                    },
                                    "nodeType": "YulIf",
                                    "src": "8808:47:5"
                                  },
                                  {
                                    "nodeType": "YulVariableDeclaration",
                                    "src": "8868:41:5",
                                    "value": {
                                      "arguments": [
                                        {
                                          "name": "data",
                                          "nodeType": "YulIdentifier",
                                          "src": "8882:4:5"
                                        },
                                        {
                                          "arguments": [
                                            {
                                              "kind": "number",
                                              "nodeType": "YulLiteral",
                                              "src": "8892:1:5",
                                              "type": "",
                                              "value": "5"
                                            },
                                            {
                                              "arguments": [
                                                {
                                                  "name": "len",
                                                  "nodeType": "YulIdentifier",
                                                  "src": "8899:3:5"
                                                },
                                                {
                                                  "kind": "number",
                                                  "nodeType": "YulLiteral",
                                                  "src": "8904:2:5",
                                                  "type": "",
                                                  "value": "31"
                                                }
                                              ],
                                              "functionName": {
                                                "name": "add",
                                                "nodeType": "YulIdentifier",
                                                "src": "8895:3:5"
                                              },
                                              "nodeType": "YulFunctionCall",
                                              "src": "8895:12:5"
                                            }
                                          ],
                                          "functionName": {
                                            "name": "shr",
                                            "nodeType": "YulIdentifier",
                                            "src": "8888:3:5"
                                          },
                                          "nodeType": "YulFunctionCall",
                                          "src": "8888:20:5"
                                        }
                                      ],
                                      "functionName": {
                                        "name": "add",
                                        "nodeType": "YulIdentifier",
                                        "src": "8878:3:5"
                                      },
                                      "nodeType": "YulFunctionCall",
                                      "src": "8878:31:5"
                                    },
                                    "variables": [
                                      {
                                        "name": "_2",
                                        "nodeType": "YulTypedName",
                                        "src": "8872:2:5",
                                        "type": ""
                                      }
                                    ]
                                  },
                                  {
                                    "nodeType": "YulVariableDeclaration",
                                    "src": "8922:24:5",
                                    "value": {
                                      "name": "deleteStart",
                                      "nodeType": "YulIdentifier",
                                      "src": "8935:11:5"
                                    },
                                    "variables": [
                                      {
                                        "name": "start",
                                        "nodeType": "YulTypedName",
                                        "src": "8926:5:5",
                                        "type": ""
                                      }
                                    ]
                                  },
                                  {
                                    "body": {
                                      "nodeType": "YulBlock",
                                      "src": "9020:21:5",
                                      "statements": [
                                        {
                                          "expression": {
                                            "arguments": [
                                              {
                                                "name": "start",
                                                "nodeType": "YulIdentifier",
                                                "src": "9029:5:5"
                                              },
                                              {
                                                "name": "_1",
                                                "nodeType": "YulIdentifier",
                                                "src": "9036:2:5"
                                              }
                                            ],
                                            "functionName": {
                                              "name": "sstore",
                                              "nodeType": "YulIdentifier",
                                              "src": "9022:6:5"
                                            },
                                            "nodeType": "YulFunctionCall",
                                            "src": "9022:17:5"
                                          },
                                          "nodeType": "YulExpressionStatement",
                                          "src": "9022:17:5"
                                        }
                                      ]
                                    },
                                    "condition": {
                                      "arguments": [
                                        {
                                          "name": "start",
                                          "nodeType": "YulIdentifier",
                                          "src": "8970:5:5"
                                        },
                                        {
                                          "name": "_2",
                                          "nodeType": "YulIdentifier",
                                          "src": "8977:2:5"
                                        }
                                      ],
                                      "functionName": {
                                        "name": "lt",
                                        "nodeType": "YulIdentifier",
                                        "src": "8967:2:5"
                                      },
                                      "nodeType": "YulFunctionCall",
                                      "src": "8967:13:5"
                                    },
                                    "nodeType": "YulForLoop",
                                    "post": {
                                      "nodeType": "YulBlock",
                                      "src": "8981:26:5",
                                      "statements": [
                                        {
                                          "nodeType": "YulAssignment",
                                          "src": "8983:22:5",
                                          "value": {
                                            "arguments": [
                                              {
                                                "name": "start",
                                                "nodeType": "YulIdentifier",
                                                "src": "8996:5:5"
                                              },
                                              {
                                                "kind": "number",
                                                "nodeType": "YulLiteral",
                                                "src": "9003:1:5",
                                                "type": "",
                                                "value": "1"
                                              }
                                            ],
                                            "functionName": {
                                              "name": "add",
                                              "nodeType": "YulIdentifier",
                                              "src": "8992:3:5"
                                            },
                                            "nodeType": "YulFunctionCall",
                                            "src": "8992:13:5"
                                          },
                                          "variableNames": [
                                            {
                                              "name": "start",
                                              "nodeType": "YulIdentifier",
                                              "src": "8983:5:5"
                                            }
                                          ]
                                        }
                                      ]
                                    },
                                    "pre": {
                                      "nodeType": "YulBlock",
                                      "src": "8963:3:5",
                                      "statements": []
                                    },
                                    "src": "8959:82:5"
                                  }
                                ]
                              },
                              "condition": {
                                "arguments": [
                                  {
                                    "name": "len",
                                    "nodeType": "YulIdentifier",
                                    "src": "8609:3:5"
                                  },
                                  {
                                    "kind": "number",
                                    "nodeType": "YulLiteral",
                                    "src": "8614:2:5",
                                    "type": "",
                                    "value": "31"
                                  }
                                ],
                                "functionName": {
                                  "name": "gt",
                                  "nodeType": "YulIdentifier",
                                  "src": "8606:2:5"
                                },
                                "nodeType": "YulFunctionCall",
                                "src": "8606:11:5"
                              },
                              "nodeType": "YulIf",
                              "src": "8603:448:5"
                            }
                          ]
                        },
                        "name": "clean_up_bytearray_end_slots_string_storage",
                        "nodeType": "YulFunctionDefinition",
                        "parameters": [
                          {
                            "name": "array",
                            "nodeType": "YulTypedName",
                            "src": "8565:5:5",
                            "type": ""
                          },
                          {
                            "name": "len",
                            "nodeType": "YulTypedName",
                            "src": "8572:3:5",
                            "type": ""
                          },
                          {
                            "name": "startIndex",
                            "nodeType": "YulTypedName",
                            "src": "8577:10:5",
                            "type": ""
                          }
                        ],
                        "src": "8512:545:5"
                      },
                      {
                        "body": {
                          "nodeType": "YulBlock",
                          "src": "9147:81:5",
                          "statements": [
                            {
                              "nodeType": "YulAssignment",
                              "src": "9157:65:5",
                              "value": {
                                "arguments": [
                                  {
                                    "arguments": [
                                      {
                                        "name": "data",
                                        "nodeType": "YulIdentifier",
                                        "src": "9172:4:5"
                                      },
                                      {
                                        "arguments": [
                                          {
                                            "arguments": [
                                              {
                                                "arguments": [
                                                  {
                                                    "kind": "number",
                                                    "nodeType": "YulLiteral",
                                                    "src": "9190:1:5",
                                                    "type": "",
                                                    "value": "3"
                                                  },
                                                  {
                                                    "name": "len",
                                                    "nodeType": "YulIdentifier",
                                                    "src": "9193:3:5"
                                                  }
                                                ],
                                                "functionName": {
                                                  "name": "shl",
                                                  "nodeType": "YulIdentifier",
                                                  "src": "9186:3:5"
                                                },
                                                "nodeType": "YulFunctionCall",
                                                "src": "9186:11:5"
                                              },
                                              {
                                                "arguments": [
                                                  {
                                                    "kind": "number",
                                                    "nodeType": "YulLiteral",
                                                    "src": "9203:1:5",
                                                    "type": "",
                                                    "value": "0"
                                                  }
                                                ],
                                                "functionName": {
                                                  "name": "not",
                                                  "nodeType": "YulIdentifier",
                                                  "src": "9199:3:5"
                                                },
                                                "nodeType": "YulFunctionCall",
                                                "src": "9199:6:5"
                                              }
                                            ],
                                            "functionName": {
                                              "name": "shr",
                                              "nodeType": "YulIdentifier",
                                              "src": "9182:3:5"
                                            },
                                            "nodeType": "YulFunctionCall",
                                            "src": "9182:24:5"
                                          }
                                        ],
                                        "functionName": {
                                          "name": "not",
                                          "nodeType": "YulIdentifier",
                                          "src": "9178:3:5"
                                        },
                                        "nodeType": "YulFunctionCall",
                                        "src": "9178:29:5"
                                      }
                                    ],
                                    "functionName": {
                                      "name": "and",
                                      "nodeType": "YulIdentifier",
                                      "src": "9168:3:5"
                                    },
                                    "nodeType": "YulFunctionCall",
                                    "src": "9168:40:5"
                                  },
                                  {
                                    "arguments": [
                                      {
                                        "kind": "number",
                                        "nodeType": "YulLiteral",
                                        "src": "9214:1:5",
                                        "type": "",
                                        "value": "1"
                                      },
                                      {
                                        "name": "len",
                                        "nodeType": "YulIdentifier",
                                        "src": "9217:3:5"
                                      }
                                    ],
                                    "functionName": {
                                      "name": "shl",
                                      "nodeType": "YulIdentifier",
                                      "src": "9210:3:5"
                                    },
                                    "nodeType": "YulFunctionCall",
                                    "src": "9210:11:5"
                                  }
                                ],
                                "functionName": {
                                  "name": "or",
                                  "nodeType": "YulIdentifier",
                                  "src": "9165:2:5"
                                },
                                "nodeType": "YulFunctionCall",
                                "src": "9165:57:5"
                              },
                              "variableNames": [
                                {
                                  "name": "used",
                                  "nodeType": "YulIdentifier",
                                  "src": "9157:4:5"
                                }
                              ]
                            }
                          ]
                        },
                        "name": "extract_used_part_and_set_length_of_short_byte_array",
                        "nodeType": "YulFunctionDefinition",
                        "parameters": [
                          {
                            "name": "data",
                            "nodeType": "YulTypedName",
                            "src": "9124:4:5",
                            "type": ""
                          },
                          {
                            "name": "len",
                            "nodeType": "YulTypedName",
                            "src": "9130:3:5",
                            "type": ""
                          }
                        ],
                        "returnVariables": [
                          {
                            "name": "used",
                            "nodeType": "YulTypedName",
                            "src": "9138:4:5",
                            "type": ""
                          }
                        ],
                        "src": "9062:166:5"
                      },
                      {
                        "body": {
                          "nodeType": "YulBlock",
                          "src": "9329:1256:5",
                          "statements": [
                            {
                              "nodeType": "YulVariableDeclaration",
                              "src": "9339:24:5",
                              "value": {
                                "arguments": [
                                  {
                                    "name": "src",
                                    "nodeType": "YulIdentifier",
                                    "src": "9359:3:5"
                                  }
                                ],
                                "functionName": {
                                  "name": "mload",
                                  "nodeType": "YulIdentifier",
                                  "src": "9353:5:5"
                                },
                                "nodeType": "YulFunctionCall",
                                "src": "9353:10:5"
                              },
                              "variables": [
                                {
                                  "name": "newLen",
                                  "nodeType": "YulTypedName",
                                  "src": "9343:6:5",
                                  "type": ""
                                }
                              ]
                            },
                            {
                              "body": {
                                "nodeType": "YulBlock",
                                "src": "9406:22:5",
                                "statements": [
                                  {
                                    "expression": {
                                      "arguments": [],
                                      "functionName": {
                                        "name": "panic_error_0x41",
                                        "nodeType": "YulIdentifier",
                                        "src": "9408:16:5"
                                      },
                                      "nodeType": "YulFunctionCall",
                                      "src": "9408:18:5"
                                    },
                                    "nodeType": "YulExpressionStatement",
                                    "src": "9408:18:5"
                                  }
                                ]
                              },
                              "condition": {
                                "arguments": [
                                  {
                                    "name": "newLen",
                                    "nodeType": "YulIdentifier",
                                    "src": "9378:6:5"
                                  },
                                  {
                                    "kind": "number",
                                    "nodeType": "YulLiteral",
                                    "src": "9386:18:5",
                                    "type": "",
                                    "value": "0xffffffffffffffff"
                                  }
                                ],
                                "functionName": {
                                  "name": "gt",
                                  "nodeType": "YulIdentifier",
                                  "src": "9375:2:5"
                                },
                                "nodeType": "YulFunctionCall",
                                "src": "9375:30:5"
                              },
                              "nodeType": "YulIf",
                              "src": "9372:56:5"
                            },
                            {
                              "expression": {
                                "arguments": [
                                  {
                                    "name": "slot",
                                    "nodeType": "YulIdentifier",
                                    "src": "9481:4:5"
                                  },
                                  {
                                    "arguments": [
                                      {
                                        "arguments": [
                                          {
                                            "name": "slot",
                                            "nodeType": "YulIdentifier",
                                            "src": "9519:4:5"
                                          }
                                        ],
                                        "functionName": {
                                          "name": "sload",
                                          "nodeType": "YulIdentifier",
                                          "src": "9513:5:5"
                                        },
                                        "nodeType": "YulFunctionCall",
                                        "src": "9513:11:5"
                                      }
                                    ],
                                    "functionName": {
                                      "name": "extract_byte_array_length",
                                      "nodeType": "YulIdentifier",
                                      "src": "9487:25:5"
                                    },
                                    "nodeType": "YulFunctionCall",
                                    "src": "9487:38:5"
                                  },
                                  {
                                    "name": "newLen",
                                    "nodeType": "YulIdentifier",
                                    "src": "9527:6:5"
                                  }
                                ],
                                "functionName": {
                                  "name": "clean_up_bytearray_end_slots_string_storage",
                                  "nodeType": "YulIdentifier",
                                  "src": "9437:43:5"
                                },
                                "nodeType": "YulFunctionCall",
                                "src": "9437:97:5"
                              },
                              "nodeType": "YulExpressionStatement",
                              "src": "9437:97:5"
                            },
                            {
                              "nodeType": "YulVariableDeclaration",
                              "src": "9543:18:5",
                              "value": {
                                "kind": "number",
                                "nodeType": "YulLiteral",
                                "src": "9560:1:5",
                                "type": "",
                                "value": "0"
                              },
                              "variables": [
                                {
                                  "name": "srcOffset",
                                  "nodeType": "YulTypedName",
                                  "src": "9547:9:5",
                                  "type": ""
                                }
                              ]
                            },
                            {
                              "nodeType": "YulVariableDeclaration",
                              "src": "9570:23:5",
                              "value": {
                                "kind": "number",
                                "nodeType": "YulLiteral",
                                "src": "9589:4:5",
                                "type": "",
                                "value": "0x20"
                              },
                              "variables": [
                                {
                                  "name": "srcOffset_1",
                                  "nodeType": "YulTypedName",
                                  "src": "9574:11:5",
                                  "type": ""
                                }
                              ]
                            },
                            {
                              "nodeType": "YulAssignment",
                              "src": "9602:24:5",
                              "value": {
                                "name": "srcOffset_1",
                                "nodeType": "YulIdentifier",
                                "src": "9615:11:5"
                              },
                              "variableNames": [
                                {
                                  "name": "srcOffset",
                                  "nodeType": "YulIdentifier",
                                  "src": "9602:9:5"
                                }
                              ]
                            },
                            {
                              "cases": [
                                {
                                  "body": {
                                    "nodeType": "YulBlock",
                                    "src": "9672:656:5",
                                    "statements": [
                                      {
                                        "nodeType": "YulVariableDeclaration",
                                        "src": "9686:35:5",
                                        "value": {
                                          "arguments": [
                                            {
                                              "name": "newLen",
                                              "nodeType": "YulIdentifier",
                                              "src": "9705:6:5"
                                            },
                                            {
                                              "arguments": [
                                                {
                                                  "kind": "number",
                                                  "nodeType": "YulLiteral",
                                                  "src": "9717:2:5",
                                                  "type": "",
                                                  "value": "31"
                                                }
                                              ],
                                              "functionName": {
                                                "name": "not",
                                                "nodeType": "YulIdentifier",
                                                "src": "9713:3:5"
                                              },
                                              "nodeType": "YulFunctionCall",
                                              "src": "9713:7:5"
                                            }
                                          ],
                                          "functionName": {
                                            "name": "and",
                                            "nodeType": "YulIdentifier",
                                            "src": "9701:3:5"
                                          },
                                          "nodeType": "YulFunctionCall",
                                          "src": "9701:20:5"
                                        },
                                        "variables": [
                                          {
                                            "name": "loopEnd",
                                            "nodeType": "YulTypedName",
                                            "src": "9690:7:5",
                                            "type": ""
                                          }
                                        ]
                                      },
                                      {
                                        "nodeType": "YulVariableDeclaration",
                                        "src": "9734:49:5",
                                        "value": {
                                          "arguments": [
                                            {
                                              "name": "slot",
                                              "nodeType": "YulIdentifier",
                                              "src": "9778:4:5"
                                            }
                                          ],
                                          "functionName": {
                                            "name": "array_dataslot_string_storage",
                                            "nodeType": "YulIdentifier",
                                            "src": "9748:29:5"
                                          },
                                          "nodeType": "YulFunctionCall",
                                          "src": "9748:35:5"
                                        },
                                        "variables": [
                                          {
                                            "name": "dstPtr",
                                            "nodeType": "YulTypedName",
                                            "src": "9738:6:5",
                                            "type": ""
                                          }
                                        ]
                                      },
                                      {
                                        "nodeType": "YulVariableDeclaration",
                                        "src": "9796:10:5",
                                        "value": {
                                          "kind": "number",
                                          "nodeType": "YulLiteral",
                                          "src": "9805:1:5",
                                          "type": "",
                                          "value": "0"
                                        },
                                        "variables": [
                                          {
                                            "name": "i",
                                            "nodeType": "YulTypedName",
                                            "src": "9800:1:5",
                                            "type": ""
                                          }
                                        ]
                                      },
                                      {
                                        "body": {
                                          "nodeType": "YulBlock",
                                          "src": "9883:172:5",
                                          "statements": [
                                            {
                                              "expression": {
                                                "arguments": [
                                                  {
                                                    "name": "dstPtr",
                                                    "nodeType": "YulIdentifier",
                                                    "src": "9908:6:5"
                                                  },
                                                  {
                                                    "arguments": [
                                                      {
                                                        "arguments": [
                                                          {
                                                            "name": "src",
                                                            "nodeType": "YulIdentifier",
                                                            "src": "9926:3:5"
                                                          },
                                                          {
                                                            "name": "srcOffset",
                                                            "nodeType": "YulIdentifier",
                                                            "src": "9931:9:5"
                                                          }
                                                        ],
                                                        "functionName": {
                                                          "name": "add",
                                                          "nodeType": "YulIdentifier",
                                                          "src": "9922:3:5"
                                                        },
                                                        "nodeType": "YulFunctionCall",
                                                        "src": "9922:19:5"
                                                      }
                                                    ],
                                                    "functionName": {
                                                      "name": "mload",
                                                      "nodeType": "YulIdentifier",
                                                      "src": "9916:5:5"
                                                    },
                                                    "nodeType": "YulFunctionCall",
                                                    "src": "9916:26:5"
                                                  }
                                                ],
                                                "functionName": {
                                                  "name": "sstore",
                                                  "nodeType": "YulIdentifier",
                                                  "src": "9901:6:5"
                                                },
                                                "nodeType": "YulFunctionCall",
                                                "src": "9901:42:5"
                                              },
                                              "nodeType": "YulExpressionStatement",
                                              "src": "9901:42:5"
                                            },
                                            {
                                              "nodeType": "YulAssignment",
                                              "src": "9960:24:5",
                                              "value": {
                                                "arguments": [
                                                  {
                                                    "name": "dstPtr",
                                                    "nodeType": "YulIdentifier",
                                                    "src": "9974:6:5"
                                                  },
                                                  {
                                                    "kind": "number",
                                                    "nodeType": "YulLiteral",
                                                    "src": "9982:1:5",
                                                    "type": "",
                                                    "value": "1"
                                                  }
                                                ],
                                                "functionName": {
                                                  "name": "add",
                                                  "nodeType": "YulIdentifier",
                                                  "src": "9970:3:5"
                                                },
                                                "nodeType": "YulFunctionCall",
                                                "src": "9970:14:5"
                                              },
                                              "variableNames": [
                                                {
                                                  "name": "dstPtr",
                                                  "nodeType": "YulIdentifier",
                                                  "src": "9960:6:5"
                                                }
                                              ]
                                            },
                                            {
                                              "nodeType": "YulAssignment",
                                              "src": "10001:40:5",
                                              "value": {
                                                "arguments": [
                                                  {
                                                    "name": "srcOffset",
                                                    "nodeType": "YulIdentifier",
                                                    "src": "10018:9:5"
                                                  },
                                                  {
                                                    "name": "srcOffset_1",
                                                    "nodeType": "YulIdentifier",
                                                    "src": "10029:11:5"
                                                  }
                                                ],
                                                "functionName": {
                                                  "name": "add",
                                                  "nodeType": "YulIdentifier",
                                                  "src": "10014:3:5"
                                                },
                                                "nodeType": "YulFunctionCall",
                                                "src": "10014:27:5"
                                              },
                                              "variableNames": [
                                                {
                                                  "name": "srcOffset",
                                                  "nodeType": "YulIdentifier",
                                                  "src": "10001:9:5"
                                                }
                                              ]
                                            }
                                          ]
                                        },
                                        "condition": {
                                          "arguments": [
                                            {
                                              "name": "i",
                                              "nodeType": "YulIdentifier",
                                              "src": "9830:1:5"
                                            },
                                            {
                                              "name": "loopEnd",
                                              "nodeType": "YulIdentifier",
                                              "src": "9833:7:5"
                                            }
                                          ],
                                          "functionName": {
                                            "name": "lt",
                                            "nodeType": "YulIdentifier",
                                            "src": "9827:2:5"
                                          },
                                          "nodeType": "YulFunctionCall",
                                          "src": "9827:14:5"
                                        },
                                        "nodeType": "YulForLoop",
                                        "post": {
                                          "nodeType": "YulBlock",
                                          "src": "9842:28:5",
                                          "statements": [
                                            {
                                              "nodeType": "YulAssignment",
                                              "src": "9844:24:5",
                                              "value": {
                                                "arguments": [
                                                  {
                                                    "name": "i",
                                                    "nodeType": "YulIdentifier",
                                                    "src": "9853:1:5"
                                                  },
                                                  {
                                                    "name": "srcOffset_1",
                                                    "nodeType": "YulIdentifier",
                                                    "src": "9856:11:5"
                                                  }
                                                ],
                                                "functionName": {
                                                  "name": "add",
                                                  "nodeType": "YulIdentifier",
                                                  "src": "9849:3:5"
                                                },
                                                "nodeType": "YulFunctionCall",
                                                "src": "9849:19:5"
                                              },
                                              "variableNames": [
                                                {
                                                  "name": "i",
                                                  "nodeType": "YulIdentifier",
                                                  "src": "9844:1:5"
                                                }
                                              ]
                                            }
                                          ]
                                        },
                                        "pre": {
                                          "nodeType": "YulBlock",
                                          "src": "9823:3:5",
                                          "statements": []
                                        },
                                        "src": "9819:236:5"
                                      },
                                      {
                                        "body": {
                                          "nodeType": "YulBlock",
                                          "src": "10103:166:5",
                                          "statements": [
                                            {
                                              "nodeType": "YulVariableDeclaration",
                                              "src": "10121:43:5",
                                              "value": {
                                                "arguments": [
                                                  {
                                                    "arguments": [
                                                      {
                                                        "name": "src",
                                                        "nodeType": "YulIdentifier",
                                                        "src": "10148:3:5"
                                                      },
                                                      {
                                                        "name": "srcOffset",
                                                        "nodeType": "YulIdentifier",
                                                        "src": "10153:9:5"
                                                      }
                                                    ],
                                                    "functionName": {
                                                      "name": "add",
                                                      "nodeType": "YulIdentifier",
                                                      "src": "10144:3:5"
                                                    },
                                                    "nodeType": "YulFunctionCall",
                                                    "src": "10144:19:5"
                                                  }
                                                ],
                                                "functionName": {
                                                  "name": "mload",
                                                  "nodeType": "YulIdentifier",
                                                  "src": "10138:5:5"
                                                },
                                                "nodeType": "YulFunctionCall",
                                                "src": "10138:26:5"
                                              },
                                              "variables": [
                                                {
                                                  "name": "lastValue",
                                                  "nodeType": "YulTypedName",
                                                  "src": "10125:9:5",
                                                  "type": ""
                                                }
                                              ]
                                            },
                                            {
                                              "expression": {
                                                "arguments": [
                                                  {
                                                    "name": "dstPtr",
                                                    "nodeType": "YulIdentifier",
                                                    "src": "10188:6:5"
                                                  },
                                                  {
                                                    "arguments": [
                                                      {
                                                        "name": "lastValue",
                                                        "nodeType": "YulIdentifier",
                                                        "src": "10200:9:5"
                                                      },
                                                      {
                                                        "arguments": [
                                                          {
                                                            "arguments": [
                                                              {
                                                                "arguments": [
                                                                  {
                                                                    "arguments": [
                                                                      {
                                                                        "kind": "number",
                                                                        "nodeType": "YulLiteral",
                                                                        "src": "10227:1:5",
                                                                        "type": "",
                                                                        "value": "3"
                                                                      },
                                                                      {
                                                                        "name": "newLen",
                                                                        "nodeType": "YulIdentifier",
                                                                        "src": "10230:6:5"
                                                                      }
                                                                    ],
                                                                    "functionName": {
                                                                      "name": "shl",
                                                                      "nodeType": "YulIdentifier",
                                                                      "src": "10223:3:5"
                                                                    },
                                                                    "nodeType": "YulFunctionCall",
                                                                    "src": "10223:14:5"
                                                                  },
                                                                  {
                                                                    "kind": "number",
                                                                    "nodeType": "YulLiteral",
                                                                    "src": "10239:3:5",
                                                                    "type": "",
                                                                    "value": "248"
                                                                  }
                                                                ],
                                                                "functionName": {
                                                                  "name": "and",
                                                                  "nodeType": "YulIdentifier",
                                                                  "src": "10219:3:5"
                                                                },
                                                                "nodeType": "YulFunctionCall",
                                                                "src": "10219:24:5"
                                                              },
                                                              {
                                                                "arguments": [
                                                                  {
                                                                    "kind": "number",
                                                                    "nodeType": "YulLiteral",
                                                                    "src": "10249:1:5",
                                                                    "type": "",
                                                                    "value": "0"
                                                                  }
                                                                ],
                                                                "functionName": {
                                                                  "name": "not",
                                                                  "nodeType": "YulIdentifier",
                                                                  "src": "10245:3:5"
                                                                },
                                                                "nodeType": "YulFunctionCall",
                                                                "src": "10245:6:5"
                                                              }
                                                            ],
                                                            "functionName": {
                                                              "name": "shr",
                                                              "nodeType": "YulIdentifier",
                                                              "src": "10215:3:5"
                                                            },
                                                            "nodeType": "YulFunctionCall",
                                                            "src": "10215:37:5"
                                                          }
                                                        ],
                                                        "functionName": {
                                                          "name": "not",
                                                          "nodeType": "YulIdentifier",
                                                          "src": "10211:3:5"
                                                        },
                                                        "nodeType": "YulFunctionCall",
                                                        "src": "10211:42:5"
                                                      }
                                                    ],
                                                    "functionName": {
                                                      "name": "and",
                                                      "nodeType": "YulIdentifier",
                                                      "src": "10196:3:5"
                                                    },
                                                    "nodeType": "YulFunctionCall",
                                                    "src": "10196:58:5"
                                                  }
                                                ],
                                                "functionName": {
                                                  "name": "sstore",
                                                  "nodeType": "YulIdentifier",
                                                  "src": "10181:6:5"
                                                },
                                                "nodeType": "YulFunctionCall",
                                                "src": "10181:74:5"
                                              },
                                              "nodeType": "YulExpressionStatement",
                                              "src": "10181:74:5"
                                            }
                                          ]
                                        },
                                        "condition": {
                                          "arguments": [
                                            {
                                              "name": "loopEnd",
                                              "nodeType": "YulIdentifier",
                                              "src": "10074:7:5"
                                            },
                                            {
                                              "name": "newLen",
                                              "nodeType": "YulIdentifier",
                                              "src": "10083:6:5"
                                            }
                                          ],
                                          "functionName": {
                                            "name": "lt",
                                            "nodeType": "YulIdentifier",
                                            "src": "10071:2:5"
                                          },
                                          "nodeType": "YulFunctionCall",
                                          "src": "10071:19:5"
                                        },
                                        "nodeType": "YulIf",
                                        "src": "10068:201:5"
                                      },
                                      {
                                        "expression": {
                                          "arguments": [
                                            {
                                              "name": "slot",
                                              "nodeType": "YulIdentifier",
                                              "src": "10289:4:5"
                                            },
                                            {
                                              "arguments": [
                                                {
                                                  "arguments": [
                                                    {
                                                      "kind": "number",
                                                      "nodeType": "YulLiteral",
                                                      "src": "10303:1:5",
                                                      "type": "",
                                                      "value": "1"
                                                    },
                                                    {
                                                      "name": "newLen",
                                                      "nodeType": "YulIdentifier",
                                                      "src": "10306:6:5"
                                                    }
                                                  ],
                                                  "functionName": {
                                                    "name": "shl",
                                                    "nodeType": "YulIdentifier",
                                                    "src": "10299:3:5"
                                                  },
                                                  "nodeType": "YulFunctionCall",
                                                  "src": "10299:14:5"
                                                },
                                                {
                                                  "kind": "number",
                                                  "nodeType": "YulLiteral",
                                                  "src": "10315:1:5",
                                                  "type": "",
                                                  "value": "1"
                                                }
                                              ],
                                              "functionName": {
                                                "name": "add",
                                                "nodeType": "YulIdentifier",
                                                "src": "10295:3:5"
                                              },
                                              "nodeType": "YulFunctionCall",
                                              "src": "10295:22:5"
                                            }
                                          ],
                                          "functionName": {
                                            "name": "sstore",
                                            "nodeType": "YulIdentifier",
                                            "src": "10282:6:5"
                                          },
                                          "nodeType": "YulFunctionCall",
                                          "src": "10282:36:5"
                                        },
                                        "nodeType": "YulExpressionStatement",
                                        "src": "10282:36:5"
                                      }
                                    ]
                                  },
                                  "nodeType": "YulCase",
                                  "src": "9665:663:5",
                                  "value": {
                                    "kind": "number",
                                    "nodeType": "YulLiteral",
                                    "src": "9670:1:5",
                                    "type": "",
                                    "value": "1"
                                  }
                                },
                                {
                                  "body": {
                                    "nodeType": "YulBlock",
                                    "src": "10345:234:5",
                                    "statements": [
                                      {
                                        "nodeType": "YulVariableDeclaration",
                                        "src": "10359:14:5",
                                        "value": {
                                          "kind": "number",
                                          "nodeType": "YulLiteral",
                                          "src": "10372:1:5",
                                          "type": "",
                                          "value": "0"
                                        },
                                        "variables": [
                                          {
                                            "name": "value",
                                            "nodeType": "YulTypedName",
                                            "src": "10363:5:5",
                                            "type": ""
                                          }
                                        ]
                                      },
                                      {
                                        "body": {
                                          "nodeType": "YulBlock",
                                          "src": "10408:67:5",
                                          "statements": [
                                            {
                                              "nodeType": "YulAssignment",
                                              "src": "10426:35:5",
                                              "value": {
                                                "arguments": [
                                                  {
                                                    "arguments": [
                                                      {
                                                        "name": "src",
                                                        "nodeType": "YulIdentifier",
                                                        "src": "10445:3:5"
                                                      },
                                                      {
                                                        "name": "srcOffset",
                                                        "nodeType": "YulIdentifier",
                                                        "src": "10450:9:5"
                                                      }
                                                    ],
                                                    "functionName": {
                                                      "name": "add",
                                                      "nodeType": "YulIdentifier",
                                                      "src": "10441:3:5"
                                                    },
                                                    "nodeType": "YulFunctionCall",
                                                    "src": "10441:19:5"
                                                  }
                                                ],
                                                "functionName": {
                                                  "name": "mload",
                                                  "nodeType": "YulIdentifier",
                                                  "src": "10435:5:5"
                                                },
                                                "nodeType": "YulFunctionCall",
                                                "src": "10435:26:5"
                                              },
                                              "variableNames": [
                                                {
                                                  "name": "value",
                                                  "nodeType": "YulIdentifier",
                                                  "src": "10426:5:5"
                                                }
                                              ]
                                            }
                                          ]
                                        },
                                        "condition": {
                                          "name": "newLen",
                                          "nodeType": "YulIdentifier",
                                          "src": "10389:6:5"
                                        },
                                        "nodeType": "YulIf",
                                        "src": "10386:89:5"
                                      },
                                      {
                                        "expression": {
                                          "arguments": [
                                            {
                                              "name": "slot",
                                              "nodeType": "YulIdentifier",
                                              "src": "10495:4:5"
                                            },
                                            {
                                              "arguments": [
                                                {
                                                  "name": "value",
                                                  "nodeType": "YulIdentifier",
                                                  "src": "10554:5:5"
                                                },
                                                {
                                                  "name": "newLen",
                                                  "nodeType": "YulIdentifier",
                                                  "src": "10561:6:5"
                                                }
                                              ],
                                              "functionName": {
                                                "name": "extract_used_part_and_set_length_of_short_byte_array",
                                                "nodeType": "YulIdentifier",
                                                "src": "10501:52:5"
                                              },
                                              "nodeType": "YulFunctionCall",
                                              "src": "10501:67:5"
                                            }
                                          ],
                                          "functionName": {
                                            "name": "sstore",
                                            "nodeType": "YulIdentifier",
                                            "src": "10488:6:5"
                                          },
                                          "nodeType": "YulFunctionCall",
                                          "src": "10488:81:5"
                                        },
                                        "nodeType": "YulExpressionStatement",
                                        "src": "10488:81:5"
                                      }
                                    ]
                                  },
                                  "nodeType": "YulCase",
                                  "src": "10337:242:5",
                                  "value": "default"
                                }
                              ],
                              "expression": {
                                "arguments": [
                                  {
                                    "name": "newLen",
                                    "nodeType": "YulIdentifier",
                                    "src": "9645:6:5"
                                  },
                                  {
                                    "kind": "number",
                                    "nodeType": "YulLiteral",
                                    "src": "9653:2:5",
                                    "type": "",
                                    "value": "31"
                                  }
                                ],
                                "functionName": {
                                  "name": "gt",
                                  "nodeType": "YulIdentifier",
                                  "src": "9642:2:5"
                                },
                                "nodeType": "YulFunctionCall",
                                "src": "9642:14:5"
                              },
                              "nodeType": "YulSwitch",
                              "src": "9635:944:5"
                            }
                          ]
                        },
                        "name": "copy_byte_array_to_storage_from_t_string_memory_ptr_to_t_string_storage",
                        "nodeType": "YulFunctionDefinition",
                        "parameters": [
                          {
                            "name": "slot",
                            "nodeType": "YulTypedName",
                            "src": "9314:4:5",
                            "type": ""
                          },
                          {
                            "name": "src",
                            "nodeType": "YulTypedName",
                            "src": "9320:3:5",
                            "type": ""
                          }
                        ],
                        "src": "9233:1352:5"
                      },
                      {
                        "body": {
                          "nodeType": "YulBlock",
                          "src": "10648:714:5",
                          "statements": [
                            {
                              "nodeType": "YulVariableDeclaration",
                              "src": "10658:29:5",
                              "value": {
                                "arguments": [
                                  {
                                    "name": "value",
                                    "nodeType": "YulIdentifier",
                                    "src": "10681:5:5"
                                  }
                                ],
                                "functionName": {
                                  "name": "sload",
                                  "nodeType": "YulIdentifier",
                                  "src": "10675:5:5"
                                },
                                "nodeType": "YulFunctionCall",
                                "src": "10675:12:5"
                              },
                              "variables": [
                                {
                                  "name": "slotValue",
                                  "nodeType": "YulTypedName",
                                  "src": "10662:9:5",
                                  "type": ""
                                }
                              ]
                            },
                            {
                              "nodeType": "YulVariableDeclaration",
                              "src": "10696:50:5",
                              "value": {
                                "arguments": [
                                  {
                                    "name": "slotValue",
                                    "nodeType": "YulIdentifier",
                                    "src": "10736:9:5"
                                  }
                                ],
                                "functionName": {
                                  "name": "extract_byte_array_length",
                                  "nodeType": "YulIdentifier",
                                  "src": "10710:25:5"
                                },
                                "nodeType": "YulFunctionCall",
                                "src": "10710:36:5"
                              },
                              "variables": [
                                {
                                  "name": "length",
                                  "nodeType": "YulTypedName",
                                  "src": "10700:6:5",
                                  "type": ""
                                }
                              ]
                            },
                            {
                              "expression": {
                                "arguments": [
                                  {
                                    "name": "pos",
                                    "nodeType": "YulIdentifier",
                                    "src": "10762:3:5"
                                  },
                                  {
                                    "name": "length",
                                    "nodeType": "YulIdentifier",
                                    "src": "10767:6:5"
                                  }
                                ],
                                "functionName": {
                                  "name": "mstore",
                                  "nodeType": "YulIdentifier",
                                  "src": "10755:6:5"
                                },
                                "nodeType": "YulFunctionCall",
                                "src": "10755:19:5"
                              },
                              "nodeType": "YulExpressionStatement",
                              "src": "10755:19:5"
                            },
                            {
                              "nodeType": "YulVariableDeclaration",
                              "src": "10783:14:5",
                              "value": {
                                "kind": "number",
                                "nodeType": "YulLiteral",
                                "src": "10793:4:5",
                                "type": "",
                                "value": "0x20"
                              },
                              "variables": [
                                {
                                  "name": "_1",
                                  "nodeType": "YulTypedName",
                                  "src": "10787:2:5",
                                  "type": ""
                                }
                              ]
                            },
                            {
                              "nodeType": "YulVariableDeclaration",
                              "src": "10806:11:5",
                              "value": {
                                "kind": "number",
                                "nodeType": "YulLiteral",
                                "src": "10816:1:5",
                                "type": "",
                                "value": "1"
                              },
                              "variables": [
                                {
                                  "name": "_2",
                                  "nodeType": "YulTypedName",
                                  "src": "10810:2:5",
                                  "type": ""
                                }
                              ]
                            },
                            {
                              "cases": [
                                {
                                  "body": {
                                    "nodeType": "YulBlock",
                                    "src": "10867:139:5",
                                    "statements": [
                                      {
                                        "expression": {
                                          "arguments": [
                                            {
                                              "arguments": [
                                                {
                                                  "name": "pos",
                                                  "nodeType": "YulIdentifier",
                                                  "src": "10892:3:5"
                                                },
                                                {
                                                  "name": "_1",
                                                  "nodeType": "YulIdentifier",
                                                  "src": "10897:2:5"
                                                }
                                              ],
                                              "functionName": {
                                                "name": "add",
                                                "nodeType": "YulIdentifier",
                                                "src": "10888:3:5"
                                              },
                                              "nodeType": "YulFunctionCall",
                                              "src": "10888:12:5"
                                            },
                                            {
                                              "arguments": [
                                                {
                                                  "name": "slotValue",
                                                  "nodeType": "YulIdentifier",
                                                  "src": "10906:9:5"
                                                },
                                                {
                                                  "arguments": [
                                                    {
                                                      "kind": "number",
                                                      "nodeType": "YulLiteral",
                                                      "src": "10921:3:5",
                                                      "type": "",
                                                      "value": "255"
                                                    }
                                                  ],
                                                  "functionName": {
                                                    "name": "not",
                                                    "nodeType": "YulIdentifier",
                                                    "src": "10917:3:5"
                                                  },
                                                  "nodeType": "YulFunctionCall",
                                                  "src": "10917:8:5"
                                                }
                                              ],
                                              "functionName": {
                                                "name": "and",
                                                "nodeType": "YulIdentifier",
                                                "src": "10902:3:5"
                                              },
                                              "nodeType": "YulFunctionCall",
                                              "src": "10902:24:5"
                                            }
                                          ],
                                          "functionName": {
                                            "name": "mstore",
                                            "nodeType": "YulIdentifier",
                                            "src": "10881:6:5"
                                          },
                                          "nodeType": "YulFunctionCall",
                                          "src": "10881:46:5"
                                        },
                                        "nodeType": "YulExpressionStatement",
                                        "src": "10881:46:5"
                                      },
                                      {
                                        "nodeType": "YulAssignment",
                                        "src": "10940:56:5",
                                        "value": {
                                          "arguments": [
                                            {
                                              "arguments": [
                                                {
                                                  "name": "pos",
                                                  "nodeType": "YulIdentifier",
                                                  "src": "10955:3:5"
                                                },
                                                {
                                                  "arguments": [
                                                    {
                                                      "kind": "number",
                                                      "nodeType": "YulLiteral",
                                                      "src": "10964:1:5",
                                                      "type": "",
                                                      "value": "5"
                                                    },
                                                    {
                                                      "arguments": [
                                                        {
                                                          "arguments": [
                                                            {
                                                              "name": "length",
                                                              "nodeType": "YulIdentifier",
                                                              "src": "10981:6:5"
                                                            }
                                                          ],
                                                          "functionName": {
                                                            "name": "iszero",
                                                            "nodeType": "YulIdentifier",
                                                            "src": "10974:6:5"
                                                          },
                                                          "nodeType": "YulFunctionCall",
                                                          "src": "10974:14:5"
                                                        }
                                                      ],
                                                      "functionName": {
                                                        "name": "iszero",
                                                        "nodeType": "YulIdentifier",
                                                        "src": "10967:6:5"
                                                      },
                                                      "nodeType": "YulFunctionCall",
                                                      "src": "10967:22:5"
                                                    }
                                                  ],
                                                  "functionName": {
                                                    "name": "shl",
                                                    "nodeType": "YulIdentifier",
                                                    "src": "10960:3:5"
                                                  },
                                                  "nodeType": "YulFunctionCall",
                                                  "src": "10960:30:5"
                                                }
                                              ],
                                              "functionName": {
                                                "name": "add",
                                                "nodeType": "YulIdentifier",
                                                "src": "10951:3:5"
                                              },
                                              "nodeType": "YulFunctionCall",
                                              "src": "10951:40:5"
                                            },
                                            {
                                              "name": "_1",
                                              "nodeType": "YulIdentifier",
                                              "src": "10993:2:5"
                                            }
                                          ],
                                          "functionName": {
                                            "name": "add",
                                            "nodeType": "YulIdentifier",
                                            "src": "10947:3:5"
                                          },
                                          "nodeType": "YulFunctionCall",
                                          "src": "10947:49:5"
                                        },
                                        "variableNames": [
                                          {
                                            "name": "ret",
                                            "nodeType": "YulIdentifier",
                                            "src": "10940:3:5"
                                          }
                                        ]
                                      }
                                    ]
                                  },
                                  "nodeType": "YulCase",
                                  "src": "10860:146:5",
                                  "value": {
                                    "kind": "number",
                                    "nodeType": "YulLiteral",
                                    "src": "10865:1:5",
                                    "type": "",
                                    "value": "0"
                                  }
                                },
                                {
                                  "body": {
                                    "nodeType": "YulBlock",
                                    "src": "11022:334:5",
                                    "statements": [
                                      {
                                        "expression": {
                                          "arguments": [
                                            {
                                              "kind": "number",
                                              "nodeType": "YulLiteral",
                                              "src": "11043:1:5",
                                              "type": "",
                                              "value": "0"
                                            },
                                            {
                                              "name": "value",
                                              "nodeType": "YulIdentifier",
                                              "src": "11046:5:5"
                                            }
                                          ],
                                          "functionName": {
                                            "name": "mstore",
                                            "nodeType": "YulIdentifier",
                                            "src": "11036:6:5"
                                          },
                                          "nodeType": "YulFunctionCall",
                                          "src": "11036:16:5"
                                        },
                                        "nodeType": "YulExpressionStatement",
                                        "src": "11036:16:5"
                                      },
                                      {
                                        "nodeType": "YulVariableDeclaration",
                                        "src": "11065:31:5",
                                        "value": {
                                          "arguments": [
                                            {
                                              "kind": "number",
                                              "nodeType": "YulLiteral",
                                              "src": "11090:1:5",
                                              "type": "",
                                              "value": "0"
                                            },
                                            {
                                              "name": "_1",
                                              "nodeType": "YulIdentifier",
                                              "src": "11093:2:5"
                                            }
                                          ],
                                          "functionName": {
                                            "name": "keccak256",
                                            "nodeType": "YulIdentifier",
                                            "src": "11080:9:5"
                                          },
                                          "nodeType": "YulFunctionCall",
                                          "src": "11080:16:5"
                                        },
                                        "variables": [
                                          {
                                            "name": "dataPos",
                                            "nodeType": "YulTypedName",
                                            "src": "11069:7:5",
                                            "type": ""
                                          }
                                        ]
                                      },
                                      {
                                        "nodeType": "YulVariableDeclaration",
                                        "src": "11109:10:5",
                                        "value": {
                                          "kind": "number",
                                          "nodeType": "YulLiteral",
                                          "src": "11118:1:5",
                                          "type": "",
                                          "value": "0"
                                        },
                                        "variables": [
                                          {
                                            "name": "i",
                                            "nodeType": "YulTypedName",
                                            "src": "11113:1:5",
                                            "type": ""
                                          }
                                        ]
                                      },
                                      {
                                        "body": {
                                          "nodeType": "YulBlock",
                                          "src": "11186:120:5",
                                          "statements": [
                                            {
                                              "expression": {
                                                "arguments": [
                                                  {
                                                    "arguments": [
                                                      {
                                                        "arguments": [
                                                          {
                                                            "name": "pos",
                                                            "nodeType": "YulIdentifier",
                                                            "src": "11219:3:5"
                                                          },
                                                          {
                                                            "name": "i",
                                                            "nodeType": "YulIdentifier",
                                                            "src": "11224:1:5"
                                                          }
                                                        ],
                                                        "functionName": {
                                                          "name": "add",
                                                          "nodeType": "YulIdentifier",
                                                          "src": "11215:3:5"
                                                        },
                                                        "nodeType": "YulFunctionCall",
                                                        "src": "11215:11:5"
                                                      },
                                                      {
                                                        "name": "_1",
                                                        "nodeType": "YulIdentifier",
                                                        "src": "11228:2:5"
                                                      }
                                                    ],
                                                    "functionName": {
                                                      "name": "add",
                                                      "nodeType": "YulIdentifier",
                                                      "src": "11211:3:5"
                                                    },
                                                    "nodeType": "YulFunctionCall",
                                                    "src": "11211:20:5"
                                                  },
                                                  {
                                                    "arguments": [
                                                      {
                                                        "name": "dataPos",
                                                        "nodeType": "YulIdentifier",
                                                        "src": "11239:7:5"
                                                      }
                                                    ],
                                                    "functionName": {
                                                      "name": "sload",
                                                      "nodeType": "YulIdentifier",
                                                      "src": "11233:5:5"
                                                    },
                                                    "nodeType": "YulFunctionCall",
                                                    "src": "11233:14:5"
                                                  }
                                                ],
                                                "functionName": {
                                                  "name": "mstore",
                                                  "nodeType": "YulIdentifier",
                                                  "src": "11204:6:5"
                                                },
                                                "nodeType": "YulFunctionCall",
                                                "src": "11204:44:5"
                                              },
                                              "nodeType": "YulExpressionStatement",
                                              "src": "11204:44:5"
                                            },
                                            {
                                              "nodeType": "YulAssignment",
                                              "src": "11265:27:5",
                                              "value": {
                                                "arguments": [
                                                  {
                                                    "name": "dataPos",
                                                    "nodeType": "YulIdentifier",
                                                    "src": "11280:7:5"
                                                  },
                                                  {
                                                    "name": "_2",
                                                    "nodeType": "YulIdentifier",
                                                    "src": "11289:2:5"
                                                  }
                                                ],
                                                "functionName": {
                                                  "name": "add",
                                                  "nodeType": "YulIdentifier",
                                                  "src": "11276:3:5"
                                                },
                                                "nodeType": "YulFunctionCall",
                                                "src": "11276:16:5"
                                              },
                                              "variableNames": [
                                                {
                                                  "name": "dataPos",
                                                  "nodeType": "YulIdentifier",
                                                  "src": "11265:7:5"
                                                }
                                              ]
                                            }
                                          ]
                                        },
                                        "condition": {
                                          "arguments": [
                                            {
                                              "name": "i",
                                              "nodeType": "YulIdentifier",
                                              "src": "11143:1:5"
                                            },
                                            {
                                              "name": "length",
                                              "nodeType": "YulIdentifier",
                                              "src": "11146:6:5"
                                            }
                                          ],
                                          "functionName": {
                                            "name": "lt",
                                            "nodeType": "YulIdentifier",
                                            "src": "11140:2:5"
                                          },
                                          "nodeType": "YulFunctionCall",
                                          "src": "11140:13:5"
                                        },
                                        "nodeType": "YulForLoop",
                                        "post": {
                                          "nodeType": "YulBlock",
                                          "src": "11154:19:5",
                                          "statements": [
                                            {
                                              "nodeType": "YulAssignment",
                                              "src": "11156:15:5",
                                              "value": {
                                                "arguments": [
                                                  {
                                                    "name": "i",
                                                    "nodeType": "YulIdentifier",
                                                    "src": "11165:1:5"
                                                  },
                                                  {
                                                    "name": "_1",
                                                    "nodeType": "YulIdentifier",
                                                    "src": "11168:2:5"
                                                  }
                                                ],
                                                "functionName": {
                                                  "name": "add",
                                                  "nodeType": "YulIdentifier",
                                                  "src": "11161:3:5"
                                                },
                                                "nodeType": "YulFunctionCall",
                                                "src": "11161:10:5"
                                              },
                                              "variableNames": [
                                                {
                                                  "name": "i",
                                                  "nodeType": "YulIdentifier",
                                                  "src": "11156:1:5"
                                                }
                                              ]
                                            }
                                          ]
                                        },
                                        "pre": {
                                          "nodeType": "YulBlock",
                                          "src": "11136:3:5",
                                          "statements": []
                                        },
                                        "src": "11132:174:5"
                                      },
                                      {
                                        "nodeType": "YulAssignment",
                                        "src": "11319:27:5",
                                        "value": {
                                          "arguments": [
                                            {
                                              "arguments": [
                                                {
                                                  "name": "pos",
                                                  "nodeType": "YulIdentifier",
                                                  "src": "11334:3:5"
                                                },
                                                {
                                                  "name": "i",
                                                  "nodeType": "YulIdentifier",
                                                  "src": "11339:1:5"
                                                }
                                              ],
                                              "functionName": {
                                                "name": "add",
                                                "nodeType": "YulIdentifier",
                                                "src": "11330:3:5"
                                              },
                                              "nodeType": "YulFunctionCall",
                                              "src": "11330:11:5"
                                            },
                                            {
                                              "name": "_1",
                                              "nodeType": "YulIdentifier",
                                              "src": "11343:2:5"
                                            }
                                          ],
                                          "functionName": {
                                            "name": "add",
                                            "nodeType": "YulIdentifier",
                                            "src": "11326:3:5"
                                          },
                                          "nodeType": "YulFunctionCall",
                                          "src": "11326:20:5"
                                        },
                                        "variableNames": [
                                          {
                                            "name": "ret",
                                            "nodeType": "YulIdentifier",
                                            "src": "11319:3:5"
                                          }
                                        ]
                                      }
                                    ]
                                  },
                                  "nodeType": "YulCase",
                                  "src": "11015:341:5",
                                  "value": {
                                    "kind": "number",
                                    "nodeType": "YulLiteral",
                                    "src": "11020:1:5",
                                    "type": "",
                                    "value": "1"
                                  }
                                }
                              ],
                              "expression": {
                                "arguments": [
                                  {
                                    "name": "slotValue",
                                    "nodeType": "YulIdentifier",
                                    "src": "10837:9:5"
                                  },
                                  {
                                    "name": "_2",
                                    "nodeType": "YulIdentifier",
                                    "src": "10848:2:5"
                                  }
                                ],
                                "functionName": {
                                  "name": "and",
                                  "nodeType": "YulIdentifier",
                                  "src": "10833:3:5"
                                },
                                "nodeType": "YulFunctionCall",
                                "src": "10833:18:5"
                              },
                              "nodeType": "YulSwitch",
                              "src": "10826:530:5"
                            }
                          ]
                        },
                        "name": "abi_encode_string_storage",
                        "nodeType": "YulFunctionDefinition",
                        "parameters": [
                          {
                            "name": "value",
                            "nodeType": "YulTypedName",
                            "src": "10625:5:5",
                            "type": ""
                          },
                          {
                            "name": "pos",
                            "nodeType": "YulTypedName",
                            "src": "10632:3:5",
                            "type": ""
                          }
                        ],
                        "returnVariables": [
                          {
                            "name": "ret",
                            "nodeType": "YulTypedName",
                            "src": "10640:3:5",
                            "type": ""
                          }
                        ],
                        "src": "10590:772:5"
                      },
                      {
                        "body": {
                          "nodeType": "YulBlock",
                          "src": "11674:1102:5",
                          "statements": [
                            {
                              "nodeType": "YulVariableDeclaration",
                              "src": "11684:33:5",
                              "value": {
                                "arguments": [
                                  {
                                    "name": "headStart",
                                    "nodeType": "YulIdentifier",
                                    "src": "11702:9:5"
                                  },
                                  {
                                    "kind": "number",
                                    "nodeType": "YulLiteral",
                                    "src": "11713:3:5",
                                    "type": "",
                                    "value": "160"
                                  }
                                ],
                                "functionName": {
                                  "name": "add",
                                  "nodeType": "YulIdentifier",
                                  "src": "11698:3:5"
                                },
                                "nodeType": "YulFunctionCall",
                                "src": "11698:19:5"
                              },
                              "variables": [
                                {
                                  "name": "tail_1",
                                  "nodeType": "YulTypedName",
                                  "src": "11688:6:5",
                                  "type": ""
                                }
                              ]
                            },
                            {
                              "expression": {
                                "arguments": [
                                  {
                                    "name": "headStart",
                                    "nodeType": "YulIdentifier",
                                    "src": "11733:9:5"
                                  },
                                  {
                                    "name": "value0",
                                    "nodeType": "YulIdentifier",
                                    "src": "11744:6:5"
                                  }
                                ],
                                "functionName": {
                                  "name": "mstore",
                                  "nodeType": "YulIdentifier",
                                  "src": "11726:6:5"
                                },
                                "nodeType": "YulFunctionCall",
                                "src": "11726:25:5"
                              },
                              "nodeType": "YulExpressionStatement",
                              "src": "11726:25:5"
                            },
                            {
                              "nodeType": "YulVariableDeclaration",
                              "src": "11760:12:5",
                              "value": {
                                "kind": "number",
                                "nodeType": "YulLiteral",
                                "src": "11770:2:5",
                                "type": "",
                                "value": "32"
                              },
                              "variables": [
                                {
                                  "name": "_1",
                                  "nodeType": "YulTypedName",
                                  "src": "11764:2:5",
                                  "type": ""
                                }
                              ]
                            },
                            {
                              "expression": {
                                "arguments": [
                                  {
                                    "arguments": [
                                      {
                                        "name": "headStart",
                                        "nodeType": "YulIdentifier",
                                        "src": "11792:9:5"
                                      },
                                      {
                                        "name": "_1",
                                        "nodeType": "YulIdentifier",
                                        "src": "11803:2:5"
                                      }
                                    ],
                                    "functionName": {
                                      "name": "add",
                                      "nodeType": "YulIdentifier",
                                      "src": "11788:3:5"
                                    },
                                    "nodeType": "YulFunctionCall",
                                    "src": "11788:18:5"
                                  },
                                  {
                                    "name": "value1",
                                    "nodeType": "YulIdentifier",
                                    "src": "11808:6:5"
                                  }
                                ],
                                "functionName": {
                                  "name": "mstore",
                                  "nodeType": "YulIdentifier",
                                  "src": "11781:6:5"
                                },
                                "nodeType": "YulFunctionCall",
                                "src": "11781:34:5"
                              },
                              "nodeType": "YulExpressionStatement",
                              "src": "11781:34:5"
                            },
                            {
                              "nodeType": "YulVariableDeclaration",
                              "src": "11824:12:5",
                              "value": {
                                "kind": "number",
                                "nodeType": "YulLiteral",
                                "src": "11834:2:5",
                                "type": "",
                                "value": "64"
                              },
                              "variables": [
                                {
                                  "name": "_2",
                                  "nodeType": "YulTypedName",
                                  "src": "11828:2:5",
                                  "type": ""
                                }
                              ]
                            },
                            {
                              "expression": {
                                "arguments": [
                                  {
                                    "arguments": [
                                      {
                                        "name": "headStart",
                                        "nodeType": "YulIdentifier",
                                        "src": "11856:9:5"
                                      },
                                      {
                                        "name": "_2",
                                        "nodeType": "YulIdentifier",
                                        "src": "11867:2:5"
                                      }
                                    ],
                                    "functionName": {
                                      "name": "add",
                                      "nodeType": "YulIdentifier",
                                      "src": "11852:3:5"
                                    },
                                    "nodeType": "YulFunctionCall",
                                    "src": "11852:18:5"
                                  },
                                  {
                                    "name": "value2",
                                    "nodeType": "YulIdentifier",
                                    "src": "11872:6:5"
                                  }
                                ],
                                "functionName": {
                                  "name": "mstore",
                                  "nodeType": "YulIdentifier",
                                  "src": "11845:6:5"
                                },
                                "nodeType": "YulFunctionCall",
                                "src": "11845:34:5"
                              },
                              "nodeType": "YulExpressionStatement",
                              "src": "11845:34:5"
                            },
                            {
                              "nodeType": "YulVariableDeclaration",
                              "src": "11888:12:5",
                              "value": {
                                "kind": "number",
                                "nodeType": "YulLiteral",
                                "src": "11898:2:5",
                                "type": "",
                                "value": "96"
                              },
                              "variables": [
                                {
                                  "name": "_3",
                                  "nodeType": "YulTypedName",
                                  "src": "11892:2:5",
                                  "type": ""
                                }
                              ]
                            },
                            {
                              "expression": {
                                "arguments": [
                                  {
                                    "arguments": [
                                      {
                                        "name": "headStart",
                                        "nodeType": "YulIdentifier",
                                        "src": "11920:9:5"
                                      },
                                      {
                                        "name": "_3",
                                        "nodeType": "YulIdentifier",
                                        "src": "11931:2:5"
                                      }
                                    ],
                                    "functionName": {
                                      "name": "add",
                                      "nodeType": "YulIdentifier",
                                      "src": "11916:3:5"
                                    },
                                    "nodeType": "YulFunctionCall",
                                    "src": "11916:18:5"
                                  },
                                  {
                                    "name": "value3",
                                    "nodeType": "YulIdentifier",
                                    "src": "11936:6:5"
                                  }
                                ],
                                "functionName": {
                                  "name": "mstore",
                                  "nodeType": "YulIdentifier",
                                  "src": "11909:6:5"
                                },
                                "nodeType": "YulFunctionCall",
                                "src": "11909:34:5"
                              },
                              "nodeType": "YulExpressionStatement",
                              "src": "11909:34:5"
                            },
                            {
                              "expression": {
                                "arguments": [
                                  {
                                    "arguments": [
                                      {
                                        "name": "headStart",
                                        "nodeType": "YulIdentifier",
                                        "src": "11963:9:5"
                                      },
                                      {
                                        "kind": "number",
                                        "nodeType": "YulLiteral",
                                        "src": "11974:3:5",
                                        "type": "",
                                        "value": "128"
                                      }
                                    ],
                                    "functionName": {
                                      "name": "add",
                                      "nodeType": "YulIdentifier",
                                      "src": "11959:3:5"
                                    },
                                    "nodeType": "YulFunctionCall",
                                    "src": "11959:19:5"
                                  },
                                  {
                                    "kind": "number",
                                    "nodeType": "YulLiteral",
                                    "src": "11980:3:5",
                                    "type": "",
                                    "value": "160"
                                  }
                                ],
                                "functionName": {
                                  "name": "mstore",
                                  "nodeType": "YulIdentifier",
                                  "src": "11952:6:5"
                                },
                                "nodeType": "YulFunctionCall",
                                "src": "11952:32:5"
                              },
                              "nodeType": "YulExpressionStatement",
                              "src": "11952:32:5"
                            },
                            {
                              "nodeType": "YulVariableDeclaration",
                              "src": "11993:17:5",
                              "value": {
                                "name": "tail_1",
                                "nodeType": "YulIdentifier",
                                "src": "12004:6:5"
                              },
                              "variables": [
                                {
                                  "name": "pos",
                                  "nodeType": "YulTypedName",
                                  "src": "11997:3:5",
                                  "type": ""
                                }
                              ]
                            },
                            {
                              "nodeType": "YulVariableDeclaration",
                              "src": "12019:27:5",
                              "value": {
                                "arguments": [
                                  {
                                    "name": "value4",
                                    "nodeType": "YulIdentifier",
                                    "src": "12039:6:5"
                                  }
                                ],
                                "functionName": {
                                  "name": "sload",
                                  "nodeType": "YulIdentifier",
                                  "src": "12033:5:5"
                                },
                                "nodeType": "YulFunctionCall",
                                "src": "12033:13:5"
                              },
                              "variables": [
                                {
                                  "name": "length",
                                  "nodeType": "YulTypedName",
                                  "src": "12023:6:5",
                                  "type": ""
                                }
                              ]
                            },
                            {
                              "expression": {
                                "arguments": [
                                  {
                                    "name": "tail_1",
                                    "nodeType": "YulIdentifier",
                                    "src": "12062:6:5"
                                  },
                                  {
                                    "name": "length",
                                    "nodeType": "YulIdentifier",
                                    "src": "12070:6:5"
                                  }
                                ],
                                "functionName": {
                                  "name": "mstore",
                                  "nodeType": "YulIdentifier",
                                  "src": "12055:6:5"
                                },
                                "nodeType": "YulFunctionCall",
                                "src": "12055:22:5"
                              },
                              "nodeType": "YulExpressionStatement",
                              "src": "12055:22:5"
                            },
                            {
                              "nodeType": "YulAssignment",
                              "src": "12086:26:5",
                              "value": {
                                "arguments": [
                                  {
                                    "name": "headStart",
                                    "nodeType": "YulIdentifier",
                                    "src": "12097:9:5"
                                  },
                                  {
                                    "kind": "number",
                                    "nodeType": "YulLiteral",
                                    "src": "12108:3:5",
                                    "type": "",
                                    "value": "192"
                                  }
                                ],
                                "functionName": {
                                  "name": "add",
                                  "nodeType": "YulIdentifier",
                                  "src": "12093:3:5"
                                },
                                "nodeType": "YulFunctionCall",
                                "src": "12093:19:5"
                              },
                              "variableNames": [
                                {
                                  "name": "pos",
                                  "nodeType": "YulIdentifier",
                                  "src": "12086:3:5"
                                }
                              ]
                            },
                            {
                              "nodeType": "YulVariableDeclaration",
                              "src": "12121:54:5",
                              "value": {
                                "arguments": [
                                  {
                                    "arguments": [
                                      {
                                        "name": "headStart",
                                        "nodeType": "YulIdentifier",
                                        "src": "12143:9:5"
                                      },
                                      {
                                        "arguments": [
                                          {
                                            "kind": "number",
                                            "nodeType": "YulLiteral",
                                            "src": "12158:1:5",
                                            "type": "",
                                            "value": "5"
                                          },
                                          {
                                            "name": "length",
                                            "nodeType": "YulIdentifier",
                                            "src": "12161:6:5"
                                          }
                                        ],
                                        "functionName": {
                                          "name": "shl",
                                          "nodeType": "YulIdentifier",
                                          "src": "12154:3:5"
                                        },
                                        "nodeType": "YulFunctionCall",
                                        "src": "12154:14:5"
                                      }
                                    ],
                                    "functionName": {
                                      "name": "add",
                                      "nodeType": "YulIdentifier",
                                      "src": "12139:3:5"
                                    },
                                    "nodeType": "YulFunctionCall",
                                    "src": "12139:30:5"
                                  },
                                  {
                                    "kind": "number",
                                    "nodeType": "YulLiteral",
                                    "src": "12171:3:5",
                                    "type": "",
                                    "value": "192"
                                  }
                                ],
                                "functionName": {
                                  "name": "add",
                                  "nodeType": "YulIdentifier",
                                  "src": "12135:3:5"
                                },
                                "nodeType": "YulFunctionCall",
                                "src": "12135:40:5"
                              },
                              "variables": [
                                {
                                  "name": "tail_2",
                                  "nodeType": "YulTypedName",
                                  "src": "12125:6:5",
                                  "type": ""
                                }
                              ]
                            },
                            {
                              "expression": {
                                "arguments": [
                                  {
                                    "kind": "number",
                                    "nodeType": "YulLiteral",
                                    "src": "12191:1:5",
                                    "type": "",
                                    "value": "0"
                                  },
                                  {
                                    "name": "value4",
                                    "nodeType": "YulIdentifier",
                                    "src": "12194:6:5"
                                  }
                                ],
                                "functionName": {
                                  "name": "mstore",
                                  "nodeType": "YulIdentifier",
                                  "src": "12184:6:5"
                                },
                                "nodeType": "YulFunctionCall",
                                "src": "12184:17:5"
                              },
                              "nodeType": "YulExpressionStatement",
                              "src": "12184:17:5"
                            },
                            {
                              "nodeType": "YulVariableDeclaration",
                              "src": "12210:30:5",
                              "value": {
                                "arguments": [
                                  {
                                    "kind": "number",
                                    "nodeType": "YulLiteral",
                                    "src": "12234:1:5",
                                    "type": "",
                                    "value": "0"
                                  },
                                  {
                                    "name": "_1",
                                    "nodeType": "YulIdentifier",
                                    "src": "12237:2:5"
                                  }
                                ],
                                "functionName": {
                                  "name": "keccak256",
                                  "nodeType": "YulIdentifier",
                                  "src": "12224:9:5"
                                },
                                "nodeType": "YulFunctionCall",
                                "src": "12224:16:5"
                              },
                              "variables": [
                                {
                                  "name": "srcPtr",
                                  "nodeType": "YulTypedName",
                                  "src": "12214:6:5",
                                  "type": ""
                                }
                              ]
                            },
                            {
                              "nodeType": "YulVariableDeclaration",
                              "src": "12249:10:5",
                              "value": {
                                "kind": "number",
                                "nodeType": "YulLiteral",
                                "src": "12258:1:5",
                                "type": "",
                                "value": "0"
                              },
                              "variables": [
                                {
                                  "name": "i",
                                  "nodeType": "YulTypedName",
                                  "src": "12253:1:5",
                                  "type": ""
                                }
                              ]
                            },
                            {
                              "body": {
                                "nodeType": "YulBlock",
                                "src": "12317:430:5",
                                "statements": [
                                  {
                                    "expression": {
                                      "arguments": [
                                        {
                                          "name": "pos",
                                          "nodeType": "YulIdentifier",
                                          "src": "12338:3:5"
                                        },
                                        {
                                          "arguments": [
                                            {
                                              "arguments": [
                                                {
                                                  "name": "tail_2",
                                                  "nodeType": "YulIdentifier",
                                                  "src": "12351:6:5"
                                                },
                                                {
                                                  "name": "headStart",
                                                  "nodeType": "YulIdentifier",
                                                  "src": "12359:9:5"
                                                }
                                              ],
                                              "functionName": {
                                                "name": "sub",
                                                "nodeType": "YulIdentifier",
                                                "src": "12347:3:5"
                                              },
                                              "nodeType": "YulFunctionCall",
                                              "src": "12347:22:5"
                                            },
                                            {
                                              "arguments": [
                                                {
                                                  "kind": "number",
                                                  "nodeType": "YulLiteral",
                                                  "src": "12375:3:5",
                                                  "type": "",
                                                  "value": "191"
                                                }
                                              ],
                                              "functionName": {
                                                "name": "not",
                                                "nodeType": "YulIdentifier",
                                                "src": "12371:3:5"
                                              },
                                              "nodeType": "YulFunctionCall",
                                              "src": "12371:8:5"
                                            }
                                          ],
                                          "functionName": {
                                            "name": "add",
                                            "nodeType": "YulIdentifier",
                                            "src": "12343:3:5"
                                          },
                                          "nodeType": "YulFunctionCall",
                                          "src": "12343:37:5"
                                        }
                                      ],
                                      "functionName": {
                                        "name": "mstore",
                                        "nodeType": "YulIdentifier",
                                        "src": "12331:6:5"
                                      },
                                      "nodeType": "YulFunctionCall",
                                      "src": "12331:50:5"
                                    },
                                    "nodeType": "YulExpressionStatement",
                                    "src": "12331:50:5"
                                  },
                                  {
                                    "expression": {
                                      "arguments": [
                                        {
                                          "name": "tail_2",
                                          "nodeType": "YulIdentifier",
                                          "src": "12401:6:5"
                                        },
                                        {
                                          "name": "_3",
                                          "nodeType": "YulIdentifier",
                                          "src": "12409:2:5"
                                        }
                                      ],
                                      "functionName": {
                                        "name": "mstore",
                                        "nodeType": "YulIdentifier",
                                        "src": "12394:6:5"
                                      },
                                      "nodeType": "YulFunctionCall",
                                      "src": "12394:18:5"
                                    },
                                    "nodeType": "YulExpressionStatement",
                                    "src": "12394:18:5"
                                  },
                                  {
                                    "nodeType": "YulVariableDeclaration",
                                    "src": "12425:64:5",
                                    "value": {
                                      "arguments": [
                                        {
                                          "name": "srcPtr",
                                          "nodeType": "YulIdentifier",
                                          "src": "12465:6:5"
                                        },
                                        {
                                          "arguments": [
                                            {
                                              "name": "tail_2",
                                              "nodeType": "YulIdentifier",
                                              "src": "12477:6:5"
                                            },
                                            {
                                              "name": "_3",
                                              "nodeType": "YulIdentifier",
                                              "src": "12485:2:5"
                                            }
                                          ],
                                          "functionName": {
                                            "name": "add",
                                            "nodeType": "YulIdentifier",
                                            "src": "12473:3:5"
                                          },
                                          "nodeType": "YulFunctionCall",
                                          "src": "12473:15:5"
                                        }
                                      ],
                                      "functionName": {
                                        "name": "abi_encode_string_storage",
                                        "nodeType": "YulIdentifier",
                                        "src": "12439:25:5"
                                      },
                                      "nodeType": "YulFunctionCall",
                                      "src": "12439:50:5"
                                    },
                                    "variables": [
                                      {
                                        "name": "tail_3",
                                        "nodeType": "YulTypedName",
                                        "src": "12429:6:5",
                                        "type": ""
                                      }
                                    ]
                                  },
                                  {
                                    "expression": {
                                      "arguments": [
                                        {
                                          "arguments": [
                                            {
                                              "name": "tail_2",
                                              "nodeType": "YulIdentifier",
                                              "src": "12513:6:5"
                                            },
                                            {
                                              "name": "_1",
                                              "nodeType": "YulIdentifier",
                                              "src": "12521:2:5"
                                            }
                                          ],
                                          "functionName": {
                                            "name": "add",
                                            "nodeType": "YulIdentifier",
                                            "src": "12509:3:5"
                                          },
                                          "nodeType": "YulFunctionCall",
                                          "src": "12509:15:5"
                                        },
                                        {
                                          "arguments": [
                                            {
                                              "arguments": [
                                                {
                                                  "name": "srcPtr",
                                                  "nodeType": "YulIdentifier",
                                                  "src": "12536:6:5"
                                                },
                                                {
                                                  "kind": "number",
                                                  "nodeType": "YulLiteral",
                                                  "src": "12544:1:5",
                                                  "type": "",
                                                  "value": "1"
                                                }
                                              ],
                                              "functionName": {
                                                "name": "add",
                                                "nodeType": "YulIdentifier",
                                                "src": "12532:3:5"
                                              },
                                              "nodeType": "YulFunctionCall",
                                              "src": "12532:14:5"
                                            }
                                          ],
                                          "functionName": {
                                            "name": "sload",
                                            "nodeType": "YulIdentifier",
                                            "src": "12526:5:5"
                                          },
                                          "nodeType": "YulFunctionCall",
                                          "src": "12526:21:5"
                                        }
                                      ],
                                      "functionName": {
                                        "name": "mstore",
                                        "nodeType": "YulIdentifier",
                                        "src": "12502:6:5"
                                      },
                                      "nodeType": "YulFunctionCall",
                                      "src": "12502:46:5"
                                    },
                                    "nodeType": "YulExpressionStatement",
                                    "src": "12502:46:5"
                                  },
                                  {
                                    "expression": {
                                      "arguments": [
                                        {
                                          "arguments": [
                                            {
                                              "name": "tail_2",
                                              "nodeType": "YulIdentifier",
                                              "src": "12572:6:5"
                                            },
                                            {
                                              "name": "_2",
                                              "nodeType": "YulIdentifier",
                                              "src": "12580:2:5"
                                            }
                                          ],
                                          "functionName": {
                                            "name": "add",
                                            "nodeType": "YulIdentifier",
                                            "src": "12568:3:5"
                                          },
                                          "nodeType": "YulFunctionCall",
                                          "src": "12568:15:5"
                                        },
                                        {
                                          "arguments": [
                                            {
                                              "arguments": [
                                                {
                                                  "arguments": [
                                                    {
                                                      "name": "srcPtr",
                                                      "nodeType": "YulIdentifier",
                                                      "src": "12599:6:5"
                                                    },
                                                    {
                                                      "kind": "number",
                                                      "nodeType": "YulLiteral",
                                                      "src": "12607:4:5",
                                                      "type": "",
                                                      "value": "0x02"
                                                    }
                                                  ],
                                                  "functionName": {
                                                    "name": "add",
                                                    "nodeType": "YulIdentifier",
                                                    "src": "12595:3:5"
                                                  },
                                                  "nodeType": "YulFunctionCall",
                                                  "src": "12595:17:5"
                                                }
                                              ],
                                              "functionName": {
                                                "name": "sload",
                                                "nodeType": "YulIdentifier",
                                                "src": "12589:5:5"
                                              },
                                              "nodeType": "YulFunctionCall",
                                              "src": "12589:24:5"
                                            },
                                            {
                                              "arguments": [
                                                {
                                                  "arguments": [
                                                    {
                                                      "kind": "number",
                                                      "nodeType": "YulLiteral",
                                                      "src": "12623:3:5",
                                                      "type": "",
                                                      "value": "160"
                                                    },
                                                    {
                                                      "kind": "number",
                                                      "nodeType": "YulLiteral",
                                                      "src": "12628:1:5",
                                                      "type": "",
                                                      "value": "1"
                                                    }
                                                  ],
                                                  "functionName": {
                                                    "name": "shl",
                                                    "nodeType": "YulIdentifier",
                                                    "src": "12619:3:5"
                                                  },
                                                  "nodeType": "YulFunctionCall",
                                                  "src": "12619:11:5"
                                                },
                                                {
                                                  "kind": "number",
                                                  "nodeType": "YulLiteral",
                                                  "src": "12632:1:5",
                                                  "type": "",
                                                  "value": "1"
                                                }
                                              ],
                                              "functionName": {
                                                "name": "sub",
                                                "nodeType": "YulIdentifier",
                                                "src": "12615:3:5"
                                              },
                                              "nodeType": "YulFunctionCall",
                                              "src": "12615:19:5"
                                            }
                                          ],
                                          "functionName": {
                                            "name": "and",
                                            "nodeType": "YulIdentifier",
                                            "src": "12585:3:5"
                                          },
                                          "nodeType": "YulFunctionCall",
                                          "src": "12585:50:5"
                                        }
                                      ],
                                      "functionName": {
                                        "name": "mstore",
                                        "nodeType": "YulIdentifier",
                                        "src": "12561:6:5"
                                      },
                                      "nodeType": "YulFunctionCall",
                                      "src": "12561:75:5"
                                    },
                                    "nodeType": "YulExpressionStatement",
                                    "src": "12561:75:5"
                                  },
                                  {
                                    "nodeType": "YulAssignment",
                                    "src": "12649:16:5",
                                    "value": {
                                      "name": "tail_3",
                                      "nodeType": "YulIdentifier",
                                      "src": "12659:6:5"
                                    },
                                    "variableNames": [
                                      {
                                        "name": "tail_2",
                                        "nodeType": "YulIdentifier",
                                        "src": "12649:6:5"
                                      }
                                    ]
                                  },
                                  {
                                    "nodeType": "YulAssignment",
                                    "src": "12678:27:5",
                                    "value": {
                                      "arguments": [
                                        {
                                          "name": "srcPtr",
                                          "nodeType": "YulIdentifier",
                                          "src": "12692:6:5"
                                        },
                                        {
                                          "kind": "number",
                                          "nodeType": "YulLiteral",
                                          "src": "12700:4:5",
                                          "type": "",
                                          "value": "0x03"
                                        }
                                      ],
                                      "functionName": {
                                        "name": "add",
                                        "nodeType": "YulIdentifier",
                                        "src": "12688:3:5"
                                      },
                                      "nodeType": "YulFunctionCall",
                                      "src": "12688:17:5"
                                    },
                                    "variableNames": [
                                      {
                                        "name": "srcPtr",
                                        "nodeType": "YulIdentifier",
                                        "src": "12678:6:5"
                                      }
                                    ]
                                  },
                                  {
                                    "nodeType": "YulAssignment",
                                    "src": "12718:19:5",
                                    "value": {
                                      "arguments": [
                                        {
                                          "name": "pos",
                                          "nodeType": "YulIdentifier",
                                          "src": "12729:3:5"
                                        },
                                        {
                                          "name": "_1",
                                          "nodeType": "YulIdentifier",
                                          "src": "12734:2:5"
                                        }
                                      ],
                                      "functionName": {
                                        "name": "add",
                                        "nodeType": "YulIdentifier",
                                        "src": "12725:3:5"
                                      },
                                      "nodeType": "YulFunctionCall",
                                      "src": "12725:12:5"
                                    },
                                    "variableNames": [
                                      {
                                        "name": "pos",
                                        "nodeType": "YulIdentifier",
                                        "src": "12718:3:5"
                                      }
                                    ]
                                  }
                                ]
                              },
                              "condition": {
                                "arguments": [
                                  {
                                    "name": "i",
                                    "nodeType": "YulIdentifier",
                                    "src": "12279:1:5"
                                  },
                                  {
                                    "name": "length",
                                    "nodeType": "YulIdentifier",
                                    "src": "12282:6:5"
                                  }
                                ],
                                "functionName": {
                                  "name": "lt",
                                  "nodeType": "YulIdentifier",
                                  "src": "12276:2:5"
                                },
                                "nodeType": "YulFunctionCall",
                                "src": "12276:13:5"
                              },
                              "nodeType": "YulForLoop",
                              "post": {
                                "nodeType": "YulBlock",
                                "src": "12290:18:5",
                                "statements": [
                                  {
                                    "nodeType": "YulAssignment",
                                    "src": "12292:14:5",
                                    "value": {
                                      "arguments": [
                                        {
                                          "name": "i",
                                          "nodeType": "YulIdentifier",
                                          "src": "12301:1:5"
                                        },
                                        {
                                          "kind": "number",
                                          "nodeType": "YulLiteral",
                                          "src": "12304:1:5",
                                          "type": "",
                                          "value": "1"
                                        }
                                      ],
                                      "functionName": {
                                        "name": "add",
                                        "nodeType": "YulIdentifier",
                                        "src": "12297:3:5"
                                      },
                                      "nodeType": "YulFunctionCall",
                                      "src": "12297:9:5"
                                    },
                                    "variableNames": [
                                      {
                                        "name": "i",
                                        "nodeType": "YulIdentifier",
                                        "src": "12292:1:5"
                                      }
                                    ]
                                  }
                                ]
                              },
                              "pre": {
                                "nodeType": "YulBlock",
                                "src": "12272:3:5",
                                "statements": []
                              },
                              "src": "12268:479:5"
                            },
                            {
                              "nodeType": "YulAssignment",
                              "src": "12756:14:5",
                              "value": {
                                "name": "tail_2",
                                "nodeType": "YulIdentifier",
                                "src": "12764:6:5"
                              },
                              "variableNames": [
                                {
                                  "name": "tail",
                                  "nodeType": "YulIdentifier",
                                  "src": "12756:4:5"
                                }
                              ]
                            }
                          ]
                        },
                        "name": "abi_encode_tuple_t_uint256_t_uint256_t_uint256_t_uint256_t_array$_t_struct$_Proposal_$391_storage_$dyn_storage__to_t_uint256_t_uint256_t_uint256_t_uint256_t_array$_t_struct$_Proposal_$391_memory_ptr_$dyn_memory_ptr__fromStack_reversed",
                        "nodeType": "YulFunctionDefinition",
                        "parameters": [
                          {
                            "name": "headStart",
                            "nodeType": "YulTypedName",
                            "src": "11611:9:5",
                            "type": ""
                          },
                          {
                            "name": "value4",
                            "nodeType": "YulTypedName",
                            "src": "11622:6:5",
                            "type": ""
                          },
                          {
                            "name": "value3",
                            "nodeType": "YulTypedName",
                            "src": "11630:6:5",
                            "type": ""
                          },
                          {
                            "name": "value2",
                            "nodeType": "YulTypedName",
                            "src": "11638:6:5",
                            "type": ""
                          },
                          {
                            "name": "value1",
                            "nodeType": "YulTypedName",
                            "src": "11646:6:5",
                            "type": ""
                          },
                          {
                            "name": "value0",
                            "nodeType": "YulTypedName",
                            "src": "11654:6:5",
                            "type": ""
                          }
                        ],
                        "returnVariables": [
                          {
                            "name": "tail",
                            "nodeType": "YulTypedName",
                            "src": "11665:4:5",
                            "type": ""
                          }
                        ],
                        "src": "11367:1409:5"
                      },
                      {
                        "body": {
                          "nodeType": "YulBlock",
                          "src": "12955:229:5",
                          "statements": [
                            {
                              "expression": {
                                "arguments": [
                                  {
                                    "name": "headStart",
                                    "nodeType": "YulIdentifier",
                                    "src": "12972:9:5"
                                  },
                                  {
                                    "kind": "number",
                                    "nodeType": "YulLiteral",
                                    "src": "12983:2:5",
                                    "type": "",
                                    "value": "32"
                                  }
                                ],
                                "functionName": {
                                  "name": "mstore",
                                  "nodeType": "YulIdentifier",
                                  "src": "12965:6:5"
                                },
                                "nodeType": "YulFunctionCall",
                                "src": "12965:21:5"
                              },
                              "nodeType": "YulExpressionStatement",
                              "src": "12965:21:5"
                            },
                            {
                              "expression": {
                                "arguments": [
                                  {
                                    "arguments": [
                                      {
                                        "name": "headStart",
                                        "nodeType": "YulIdentifier",
                                        "src": "13006:9:5"
                                      },
                                      {
                                        "kind": "number",
                                        "nodeType": "YulLiteral",
                                        "src": "13017:2:5",
                                        "type": "",
                                        "value": "32"
                                      }
                                    ],
                                    "functionName": {
                                      "name": "add",
                                      "nodeType": "YulIdentifier",
                                      "src": "13002:3:5"
                                    },
                                    "nodeType": "YulFunctionCall",
                                    "src": "13002:18:5"
                                  },
                                  {
                                    "kind": "number",
                                    "nodeType": "YulLiteral",
                                    "src": "13022:2:5",
                                    "type": "",
                                    "value": "39"
                                  }
                                ],
                                "functionName": {
                                  "name": "mstore",
                                  "nodeType": "YulIdentifier",
                                  "src": "12995:6:5"
                                },
                                "nodeType": "YulFunctionCall",
                                "src": "12995:30:5"
                              },
                              "nodeType": "YulExpressionStatement",
                              "src": "12995:30:5"
                            },
                            {
                              "expression": {
                                "arguments": [
                                  {
                                    "arguments": [
                                      {
                                        "name": "headStart",
                                        "nodeType": "YulIdentifier",
                                        "src": "13045:9:5"
                                      },
                                      {
                                        "kind": "number",
                                        "nodeType": "YulLiteral",
                                        "src": "13056:2:5",
                                        "type": "",
                                        "value": "64"
                                      }
                                    ],
                                    "functionName": {
                                      "name": "add",
                                      "nodeType": "YulIdentifier",
                                      "src": "13041:3:5"
                                    },
                                    "nodeType": "YulFunctionCall",
                                    "src": "13041:18:5"
                                  },
                                  {
                                    "hexValue": "43616c6c6572206973206e6f74206f776e6572206f7220726567697374657265",
                                    "kind": "string",
                                    "nodeType": "YulLiteral",
                                    "src": "13061:34:5",
                                    "type": "",
                                    "value": "Caller is not owner or registere"
                                  }
                                ],
                                "functionName": {
                                  "name": "mstore",
                                  "nodeType": "YulIdentifier",
                                  "src": "13034:6:5"
                                },
                                "nodeType": "YulFunctionCall",
                                "src": "13034:62:5"
                              },
                              "nodeType": "YulExpressionStatement",
                              "src": "13034:62:5"
                            },
                            {
                              "expression": {
                                "arguments": [
                                  {
                                    "arguments": [
                                      {
                                        "name": "headStart",
                                        "nodeType": "YulIdentifier",
                                        "src": "13116:9:5"
                                      },
                                      {
                                        "kind": "number",
                                        "nodeType": "YulLiteral",
                                        "src": "13127:2:5",
                                        "type": "",
                                        "value": "96"
                                      }
                                    ],
                                    "functionName": {
                                      "name": "add",
                                      "nodeType": "YulIdentifier",
                                      "src": "13112:3:5"
                                    },
                                    "nodeType": "YulFunctionCall",
                                    "src": "13112:18:5"
                                  },
                                  {
                                    "hexValue": "6420766f746572",
                                    "kind": "string",
                                    "nodeType": "YulLiteral",
                                    "src": "13132:9:5",
                                    "type": "",
                                    "value": "d voter"
                                  }
                                ],
                                "functionName": {
                                  "name": "mstore",
                                  "nodeType": "YulIdentifier",
                                  "src": "13105:6:5"
                                },
                                "nodeType": "YulFunctionCall",
                                "src": "13105:37:5"
                              },
                              "nodeType": "YulExpressionStatement",
                              "src": "13105:37:5"
                            },
                            {
                              "nodeType": "YulAssignment",
                              "src": "13151:27:5",
                              "value": {
                                "arguments": [
                                  {
                                    "name": "headStart",
                                    "nodeType": "YulIdentifier",
                                    "src": "13163:9:5"
                                  },
                                  {
                                    "kind": "number",
                                    "nodeType": "YulLiteral",
                                    "src": "13174:3:5",
                                    "type": "",
                                    "value": "128"
                                  }
                                ],
                                "functionName": {
                                  "name": "add",
                                  "nodeType": "YulIdentifier",
                                  "src": "13159:3:5"
                                },
                                "nodeType": "YulFunctionCall",
                                "src": "13159:19:5"
                              },
                              "variableNames": [
                                {
                                  "name": "tail",
                                  "nodeType": "YulIdentifier",
                                  "src": "13151:4:5"
                                }
                              ]
                            }
                          ]
                        },
                        "name": "abi_encode_tuple_t_stringliteral_e2d7f4077014c8d9c3924edb65e2097550f445392084f495b9e627f6cbbf2ee1__to_t_string_memory_ptr__fromStack_reversed",
                        "nodeType": "YulFunctionDefinition",
                        "parameters": [
                          {
                            "name": "headStart",
                            "nodeType": "YulTypedName",
                            "src": "12932:9:5",
                            "type": ""
                          }
                        ],
                        "returnVariables": [
                          {
                            "name": "tail",
                            "nodeType": "YulTypedName",
                            "src": "12946:4:5",
                            "type": ""
                          }
                        ],
                        "src": "12781:403:5"
                      },
                      {
                        "body": {
                          "nodeType": "YulBlock",
                          "src": "13567:465:5",
                          "statements": [
                            {
                              "expression": {
                                "arguments": [
                                  {
                                    "name": "pos",
                                    "nodeType": "YulIdentifier",
                                    "src": "13584:3:5"
                                  },
                                  {
                                    "hexValue": "556e657870656374656420766f74696e672073657373696f6e20737461747573",
                                    "kind": "string",
                                    "nodeType": "YulLiteral",
                                    "src": "13589:34:5",
                                    "type": "",
                                    "value": "Unexpected voting session status"
                                  }
                                ],
                                "functionName": {
                                  "name": "mstore",
                                  "nodeType": "YulIdentifier",
                                  "src": "13577:6:5"
                                },
                                "nodeType": "YulFunctionCall",
                                "src": "13577:47:5"
                              },
                              "nodeType": "YulExpressionStatement",
                              "src": "13577:47:5"
                            },
                            {
                              "expression": {
                                "arguments": [
                                  {
                                    "arguments": [
                                      {
                                        "name": "pos",
                                        "nodeType": "YulIdentifier",
                                        "src": "13644:3:5"
                                      },
                                      {
                                        "kind": "number",
                                        "nodeType": "YulLiteral",
                                        "src": "13649:2:5",
                                        "type": "",
                                        "value": "32"
                                      }
                                    ],
                                    "functionName": {
                                      "name": "add",
                                      "nodeType": "YulIdentifier",
                                      "src": "13640:3:5"
                                    },
                                    "nodeType": "YulFunctionCall",
                                    "src": "13640:12:5"
                                  },
                                  {
                                    "hexValue": "3a2065787065637465643e3d",
                                    "kind": "string",
                                    "nodeType": "YulLiteral",
                                    "src": "13654:14:5",
                                    "type": "",
                                    "value": ": expected>="
                                  }
                                ],
                                "functionName": {
                                  "name": "mstore",
                                  "nodeType": "YulIdentifier",
                                  "src": "13633:6:5"
                                },
                                "nodeType": "YulFunctionCall",
                                "src": "13633:36:5"
                              },
                              "nodeType": "YulExpressionStatement",
                              "src": "13633:36:5"
                            },
                            {
                              "nodeType": "YulVariableDeclaration",
                              "src": "13678:27:5",
                              "value": {
                                "arguments": [
                                  {
                                    "name": "value0",
                                    "nodeType": "YulIdentifier",
                                    "src": "13698:6:5"
                                  }
                                ],
                                "functionName": {
                                  "name": "mload",
                                  "nodeType": "YulIdentifier",
                                  "src": "13692:5:5"
                                },
                                "nodeType": "YulFunctionCall",
                                "src": "13692:13:5"
                              },
                              "variables": [
                                {
                                  "name": "length",
                                  "nodeType": "YulTypedName",
                                  "src": "13682:6:5",
                                  "type": ""
                                }
                              ]
                            },
                            {
                              "expression": {
                                "arguments": [
                                  {
                                    "arguments": [
                                      {
                                        "name": "value0",
                                        "nodeType": "YulIdentifier",
                                        "src": "13753:6:5"
                                      },
                                      {
                                        "kind": "number",
                                        "nodeType": "YulLiteral",
                                        "src": "13761:2:5",
                                        "type": "",
                                        "value": "32"
                                      }
                                    ],
                                    "functionName": {
                                      "name": "add",
                                      "nodeType": "YulIdentifier",
                                      "src": "13749:3:5"
                                    },
                                    "nodeType": "YulFunctionCall",
                                    "src": "13749:15:5"
                                  },
                                  {
                                    "arguments": [
                                      {
                                        "name": "pos",
                                        "nodeType": "YulIdentifier",
                                        "src": "13770:3:5"
                                      },
                                      {
                                        "kind": "number",
                                        "nodeType": "YulLiteral",
                                        "src": "13775:2:5",
                                        "type": "",
                                        "value": "44"
                                      }
                                    ],
                                    "functionName": {
                                      "name": "add",
                                      "nodeType": "YulIdentifier",
                                      "src": "13766:3:5"
                                    },
                                    "nodeType": "YulFunctionCall",
                                    "src": "13766:12:5"
                                  },
                                  {
                                    "name": "length",
                                    "nodeType": "YulIdentifier",
                                    "src": "13780:6:5"
                                  }
                                ],
                                "functionName": {
                                  "name": "copy_memory_to_memory_with_cleanup",
                                  "nodeType": "YulIdentifier",
                                  "src": "13714:34:5"
                                },
                                "nodeType": "YulFunctionCall",
                                "src": "13714:73:5"
                              },
                              "nodeType": "YulExpressionStatement",
                              "src": "13714:73:5"
                            },
                            {
                              "nodeType": "YulVariableDeclaration",
                              "src": "13796:26:5",
                              "value": {
                                "arguments": [
                                  {
                                    "name": "pos",
                                    "nodeType": "YulIdentifier",
                                    "src": "13810:3:5"
                                  },
                                  {
                                    "name": "length",
                                    "nodeType": "YulIdentifier",
                                    "src": "13815:6:5"
                                  }
                                ],
                                "functionName": {
                                  "name": "add",
                                  "nodeType": "YulIdentifier",
                                  "src": "13806:3:5"
                                },
                                "nodeType": "YulFunctionCall",
                                "src": "13806:16:5"
                              },
                              "variables": [
                                {
                                  "name": "_1",
                                  "nodeType": "YulTypedName",
                                  "src": "13800:2:5",
                                  "type": ""
                                }
                              ]
                            },
                            {
                              "expression": {
                                "arguments": [
                                  {
                                    "arguments": [
                                      {
                                        "name": "_1",
                                        "nodeType": "YulIdentifier",
                                        "src": "13842:2:5"
                                      },
                                      {
                                        "kind": "number",
                                        "nodeType": "YulLiteral",
                                        "src": "13846:2:5",
                                        "type": "",
                                        "value": "44"
                                      }
                                    ],
                                    "functionName": {
                                      "name": "add",
                                      "nodeType": "YulIdentifier",
                                      "src": "13838:3:5"
                                    },
                                    "nodeType": "YulFunctionCall",
                                    "src": "13838:11:5"
                                  },
                                  {
                                    "hexValue": "2063757272656e743d",
                                    "kind": "string",
                                    "nodeType": "YulLiteral",
                                    "src": "13851:11:5",
                                    "type": "",
                                    "value": " current="
                                  }
                                ],
                                "functionName": {
                                  "name": "mstore",
                                  "nodeType": "YulIdentifier",
                                  "src": "13831:6:5"
                                },
                                "nodeType": "YulFunctionCall",
                                "src": "13831:32:5"
                              },
                              "nodeType": "YulExpressionStatement",
                              "src": "13831:32:5"
                            },
                            {
                              "nodeType": "YulVariableDeclaration",
                              "src": "13872:29:5",
                              "value": {
                                "arguments": [
                                  {
                                    "name": "value1",
                                    "nodeType": "YulIdentifier",
                                    "src": "13894:6:5"
                                  }
                                ],
                                "functionName": {
                                  "name": "mload",
                                  "nodeType": "YulIdentifier",
                                  "src": "13888:5:5"
                                },
                                "nodeType": "YulFunctionCall",
                                "src": "13888:13:5"
                              },
                              "variables": [
                                {
                                  "name": "length_1",
                                  "nodeType": "YulTypedName",
                                  "src": "13876:8:5",
                                  "type": ""
                                }
                              ]
                            },
                            {
                              "expression": {
                                "arguments": [
                                  {
                                    "arguments": [
                                      {
                                        "name": "value1",
                                        "nodeType": "YulIdentifier",
                                        "src": "13949:6:5"
                                      },
                                      {
                                        "kind": "number",
                                        "nodeType": "YulLiteral",
                                        "src": "13957:2:5",
                                        "type": "",
                                        "value": "32"
                                      }
                                    ],
                                    "functionName": {
                                      "name": "add",
                                      "nodeType": "YulIdentifier",
                                      "src": "13945:3:5"
                                    },
                                    "nodeType": "YulFunctionCall",
                                    "src": "13945:15:5"
                                  },
                                  {
                                    "arguments": [
                                      {
                                        "name": "_1",
                                        "nodeType": "YulIdentifier",
                                        "src": "13966:2:5"
                                      },
                                      {
                                        "kind": "number",
                                        "nodeType": "YulLiteral",
                                        "src": "13970:2:5",
                                        "type": "",
                                        "value": "53"
                                      }
                                    ],
                                    "functionName": {
                                      "name": "add",
                                      "nodeType": "YulIdentifier",
                                      "src": "13962:3:5"
                                    },
                                    "nodeType": "YulFunctionCall",
                                    "src": "13962:11:5"
                                  },
                                  {
                                    "name": "length_1",
                                    "nodeType": "YulIdentifier",
                                    "src": "13975:8:5"
                                  }
                                ],
                                "functionName": {
                                  "name": "copy_memory_to_memory_with_cleanup",
                                  "nodeType": "YulIdentifier",
                                  "src": "13910:34:5"
                                },
                                "nodeType": "YulFunctionCall",
                                "src": "13910:74:5"
                              },
                              "nodeType": "YulExpressionStatement",
                              "src": "13910:74:5"
                            },
                            {
                              "nodeType": "YulAssignment",
                              "src": "13993:33:5",
                              "value": {
                                "arguments": [
                                  {
                                    "arguments": [
                                      {
                                        "name": "_1",
                                        "nodeType": "YulIdentifier",
                                        "src": "14008:2:5"
                                      },
                                      {
                                        "name": "length_1",
                                        "nodeType": "YulIdentifier",
                                        "src": "14012:8:5"
                                      }
                                    ],
                                    "functionName": {
                                      "name": "add",
                                      "nodeType": "YulIdentifier",
                                      "src": "14004:3:5"
                                    },
                                    "nodeType": "YulFunctionCall",
                                    "src": "14004:17:5"
                                  },
                                  {
                                    "kind": "number",
                                    "nodeType": "YulLiteral",
                                    "src": "14023:2:5",
                                    "type": "",
                                    "value": "53"
                                  }
                                ],
                                "functionName": {
                                  "name": "add",
                                  "nodeType": "YulIdentifier",
                                  "src": "14000:3:5"
                                },
                                "nodeType": "YulFunctionCall",
                                "src": "14000:26:5"
                              },
                              "variableNames": [
                                {
                                  "name": "end",
                                  "nodeType": "YulIdentifier",
                                  "src": "13993:3:5"
                                }
                              ]
                            }
                          ]
                        },
                        "name": "abi_encode_tuple_packed_t_stringliteral_8f119cfc6e611f08fd8a52f700c95b25100149c739be9a9b6e45b3e14ffb0039_t_string_memory_ptr_t_stringliteral_3fd9b0dcd722604cd4fd85d779090fb081569f1da68546e1c1a84a77cdcb3486_t_string_memory_ptr__to_t_string_memory_ptr_t_string_memory_ptr_t_bytes9_t_string_memory_ptr__nonPadded_inplace_fromStack_reversed",
                        "nodeType": "YulFunctionDefinition",
                        "parameters": [
                          {
                            "name": "pos",
                            "nodeType": "YulTypedName",
                            "src": "13535:3:5",
                            "type": ""
                          },
                          {
                            "name": "value1",
                            "nodeType": "YulTypedName",
                            "src": "13540:6:5",
                            "type": ""
                          },
                          {
                            "name": "value0",
                            "nodeType": "YulTypedName",
                            "src": "13548:6:5",
                            "type": ""
                          }
                        ],
                        "returnVariables": [
                          {
                            "name": "end",
                            "nodeType": "YulTypedName",
                            "src": "13559:3:5",
                            "type": ""
                          }
                        ],
                        "src": "13189:843:5"
                      },
                      {
                        "body": {
                          "nodeType": "YulBlock",
                          "src": "14211:180:5",
                          "statements": [
                            {
                              "expression": {
                                "arguments": [
                                  {
                                    "name": "headStart",
                                    "nodeType": "YulIdentifier",
                                    "src": "14228:9:5"
                                  },
                                  {
                                    "kind": "number",
                                    "nodeType": "YulLiteral",
                                    "src": "14239:2:5",
                                    "type": "",
                                    "value": "32"
                                  }
                                ],
                                "functionName": {
                                  "name": "mstore",
                                  "nodeType": "YulIdentifier",
                                  "src": "14221:6:5"
                                },
                                "nodeType": "YulFunctionCall",
                                "src": "14221:21:5"
                              },
                              "nodeType": "YulExpressionStatement",
                              "src": "14221:21:5"
                            },
                            {
                              "expression": {
                                "arguments": [
                                  {
                                    "arguments": [
                                      {
                                        "name": "headStart",
                                        "nodeType": "YulIdentifier",
                                        "src": "14262:9:5"
                                      },
                                      {
                                        "kind": "number",
                                        "nodeType": "YulLiteral",
                                        "src": "14273:2:5",
                                        "type": "",
                                        "value": "32"
                                      }
                                    ],
                                    "functionName": {
                                      "name": "add",
                                      "nodeType": "YulIdentifier",
                                      "src": "14258:3:5"
                                    },
                                    "nodeType": "YulFunctionCall",
                                    "src": "14258:18:5"
                                  },
                                  {
                                    "kind": "number",
                                    "nodeType": "YulLiteral",
                                    "src": "14278:2:5",
                                    "type": "",
                                    "value": "30"
                                  }
                                ],
                                "functionName": {
                                  "name": "mstore",
                                  "nodeType": "YulIdentifier",
                                  "src": "14251:6:5"
                                },
                                "nodeType": "YulFunctionCall",
                                "src": "14251:30:5"
                              },
                              "nodeType": "YulExpressionStatement",
                              "src": "14251:30:5"
                            },
                            {
                              "expression": {
                                "arguments": [
                                  {
                                    "arguments": [
                                      {
                                        "name": "headStart",
                                        "nodeType": "YulIdentifier",
                                        "src": "14301:9:5"
                                      },
                                      {
                                        "kind": "number",
                                        "nodeType": "YulLiteral",
                                        "src": "14312:2:5",
                                        "type": "",
                                        "value": "64"
                                      }
                                    ],
                                    "functionName": {
                                      "name": "add",
                                      "nodeType": "YulIdentifier",
                                      "src": "14297:3:5"
                                    },
                                    "nodeType": "YulFunctionCall",
                                    "src": "14297:18:5"
                                  },
                                  {
                                    "hexValue": "43616c6c6572206973206e6f74207265676973746572656420766f746572",
                                    "kind": "string",
                                    "nodeType": "YulLiteral",
                                    "src": "14317:32:5",
                                    "type": "",
                                    "value": "Caller is not registered voter"
                                  }
                                ],
                                "functionName": {
                                  "name": "mstore",
                                  "nodeType": "YulIdentifier",
                                  "src": "14290:6:5"
                                },
                                "nodeType": "YulFunctionCall",
                                "src": "14290:60:5"
                              },
                              "nodeType": "YulExpressionStatement",
                              "src": "14290:60:5"
                            },
                            {
                              "nodeType": "YulAssignment",
                              "src": "14359:26:5",
                              "value": {
                                "arguments": [
                                  {
                                    "name": "headStart",
                                    "nodeType": "YulIdentifier",
                                    "src": "14371:9:5"
                                  },
                                  {
                                    "kind": "number",
                                    "nodeType": "YulLiteral",
                                    "src": "14382:2:5",
                                    "type": "",
                                    "value": "96"
                                  }
                                ],
                                "functionName": {
                                  "name": "add",
                                  "nodeType": "YulIdentifier",
                                  "src": "14367:3:5"
                                },
                                "nodeType": "YulFunctionCall",
                                "src": "14367:18:5"
                              },
                              "variableNames": [
                                {
                                  "name": "tail",
                                  "nodeType": "YulIdentifier",
                                  "src": "14359:4:5"
                                }
                              ]
                            }
                          ]
                        },
                        "name": "abi_encode_tuple_t_stringliteral_901549ad31b8a07c18007564a6bf9799e1366f1381f124f7443a4d46aa1f7276__to_t_string_memory_ptr__fromStack_reversed",
                        "nodeType": "YulFunctionDefinition",
                        "parameters": [
                          {
                            "name": "headStart",
                            "nodeType": "YulTypedName",
                            "src": "14188:9:5",
                            "type": ""
                          }
                        ],
                        "returnVariables": [
                          {
                            "name": "tail",
                            "nodeType": "YulTypedName",
                            "src": "14202:4:5",
                            "type": ""
                          }
                        ],
                        "src": "14037:354:5"
                      },
                      {
                        "body": {
                          "nodeType": "YulBlock",
                          "src": "14570:249:5",
                          "statements": [
                            {
                              "expression": {
                                "arguments": [
                                  {
                                    "name": "headStart",
                                    "nodeType": "YulIdentifier",
                                    "src": "14587:9:5"
                                  },
                                  {
                                    "kind": "number",
                                    "nodeType": "YulLiteral",
                                    "src": "14598:2:5",
                                    "type": "",
                                    "value": "32"
                                  }
                                ],
                                "functionName": {
                                  "name": "mstore",
                                  "nodeType": "YulIdentifier",
                                  "src": "14580:6:5"
                                },
                                "nodeType": "YulFunctionCall",
                                "src": "14580:21:5"
                              },
                              "nodeType": "YulExpressionStatement",
                              "src": "14580:21:5"
                            },
                            {
                              "expression": {
                                "arguments": [
                                  {
                                    "arguments": [
                                      {
                                        "name": "headStart",
                                        "nodeType": "YulIdentifier",
                                        "src": "14621:9:5"
                                      },
                                      {
                                        "kind": "number",
                                        "nodeType": "YulLiteral",
                                        "src": "14632:2:5",
                                        "type": "",
                                        "value": "32"
                                      }
                                    ],
                                    "functionName": {
                                      "name": "add",
                                      "nodeType": "YulIdentifier",
                                      "src": "14617:3:5"
                                    },
                                    "nodeType": "YulFunctionCall",
                                    "src": "14617:18:5"
                                  },
                                  {
                                    "kind": "number",
                                    "nodeType": "YulLiteral",
                                    "src": "14637:2:5",
                                    "type": "",
                                    "value": "59"
                                  }
                                ],
                                "functionName": {
                                  "name": "mstore",
                                  "nodeType": "YulIdentifier",
                                  "src": "14610:6:5"
                                },
                                "nodeType": "YulFunctionCall",
                                "src": "14610:30:5"
                              },
                              "nodeType": "YulExpressionStatement",
                              "src": "14610:30:5"
                            },
                            {
                              "expression": {
                                "arguments": [
                                  {
                                    "arguments": [
                                      {
                                        "name": "headStart",
                                        "nodeType": "YulIdentifier",
                                        "src": "14660:9:5"
                                      },
                                      {
                                        "kind": "number",
                                        "nodeType": "YulLiteral",
                                        "src": "14671:2:5",
                                        "type": "",
                                        "value": "64"
                                      }
                                    ],
                                    "functionName": {
                                      "name": "add",
                                      "nodeType": "YulIdentifier",
                                      "src": "14656:3:5"
                                    },
                                    "nodeType": "YulFunctionCall",
                                    "src": "14656:18:5"
                                  },
                                  {
                                    "hexValue": "596f7520616c726561647920706f7374656420332070726f706f73616c732077",
                                    "kind": "string",
                                    "nodeType": "YulLiteral",
                                    "src": "14676:34:5",
                                    "type": "",
                                    "value": "You already posted 3 proposals w"
                                  }
                                ],
                                "functionName": {
                                  "name": "mstore",
                                  "nodeType": "YulIdentifier",
                                  "src": "14649:6:5"
                                },
                                "nodeType": "YulFunctionCall",
                                "src": "14649:62:5"
                              },
                              "nodeType": "YulExpressionStatement",
                              "src": "14649:62:5"
                            },
                            {
                              "expression": {
                                "arguments": [
                                  {
                                    "arguments": [
                                      {
                                        "name": "headStart",
                                        "nodeType": "YulIdentifier",
                                        "src": "14731:9:5"
                                      },
                                      {
                                        "kind": "number",
                                        "nodeType": "YulLiteral",
                                        "src": "14742:2:5",
                                        "type": "",
                                        "value": "96"
                                      }
                                    ],
                                    "functionName": {
                                      "name": "add",
                                      "nodeType": "YulIdentifier",
                                      "src": "14727:3:5"
                                    },
                                    "nodeType": "YulFunctionCall",
                                    "src": "14727:18:5"
                                  },
                                  {
                                    "hexValue": "6869636820697320746865206d6178696d756d20616c6c6f776564",
                                    "kind": "string",
                                    "nodeType": "YulLiteral",
                                    "src": "14747:29:5",
                                    "type": "",
                                    "value": "hich is the maximum allowed"
                                  }
                                ],
                                "functionName": {
                                  "name": "mstore",
                                  "nodeType": "YulIdentifier",
                                  "src": "14720:6:5"
                                },
                                "nodeType": "YulFunctionCall",
                                "src": "14720:57:5"
                              },
                              "nodeType": "YulExpressionStatement",
                              "src": "14720:57:5"
                            },
                            {
                              "nodeType": "YulAssignment",
                              "src": "14786:27:5",
                              "value": {
                                "arguments": [
                                  {
                                    "name": "headStart",
                                    "nodeType": "YulIdentifier",
                                    "src": "14798:9:5"
                                  },
                                  {
                                    "kind": "number",
                                    "nodeType": "YulLiteral",
                                    "src": "14809:3:5",
                                    "type": "",
                                    "value": "128"
                                  }
                                ],
                                "functionName": {
                                  "name": "add",
                                  "nodeType": "YulIdentifier",
                                  "src": "14794:3:5"
                                },
                                "nodeType": "YulFunctionCall",
                                "src": "14794:19:5"
                              },
                              "variableNames": [
                                {
                                  "name": "tail",
                                  "nodeType": "YulIdentifier",
                                  "src": "14786:4:5"
                                }
                              ]
                            }
                          ]
                        },
                        "name": "abi_encode_tuple_t_stringliteral_d24d376fc3ad7408358c4aa13f0947d07c04aac09c9f911a7015829a44041ee6__to_t_string_memory_ptr__fromStack_reversed",
                        "nodeType": "YulFunctionDefinition",
                        "parameters": [
                          {
                            "name": "headStart",
                            "nodeType": "YulTypedName",
                            "src": "14547:9:5",
                            "type": ""
                          }
                        ],
                        "returnVariables": [
                          {
                            "name": "tail",
                            "nodeType": "YulTypedName",
                            "src": "14561:4:5",
                            "type": ""
                          }
                        ],
                        "src": "14396:423:5"
                      },
                      {
                        "body": {
                          "nodeType": "YulBlock",
                          "src": "14998:173:5",
                          "statements": [
                            {
                              "expression": {
                                "arguments": [
                                  {
                                    "name": "headStart",
                                    "nodeType": "YulIdentifier",
                                    "src": "15015:9:5"
                                  },
                                  {
                                    "kind": "number",
                                    "nodeType": "YulLiteral",
                                    "src": "15026:2:5",
                                    "type": "",
                                    "value": "32"
                                  }
                                ],
                                "functionName": {
                                  "name": "mstore",
                                  "nodeType": "YulIdentifier",
                                  "src": "15008:6:5"
                                },
                                "nodeType": "YulFunctionCall",
                                "src": "15008:21:5"
                              },
                              "nodeType": "YulExpressionStatement",
                              "src": "15008:21:5"
                            },
                            {
                              "expression": {
                                "arguments": [
                                  {
                                    "arguments": [
                                      {
                                        "name": "headStart",
                                        "nodeType": "YulIdentifier",
                                        "src": "15049:9:5"
                                      },
                                      {
                                        "kind": "number",
                                        "nodeType": "YulLiteral",
                                        "src": "15060:2:5",
                                        "type": "",
                                        "value": "32"
                                      }
                                    ],
                                    "functionName": {
                                      "name": "add",
                                      "nodeType": "YulIdentifier",
                                      "src": "15045:3:5"
                                    },
                                    "nodeType": "YulFunctionCall",
                                    "src": "15045:18:5"
                                  },
                                  {
                                    "kind": "number",
                                    "nodeType": "YulLiteral",
                                    "src": "15065:2:5",
                                    "type": "",
                                    "value": "23"
                                  }
                                ],
                                "functionName": {
                                  "name": "mstore",
                                  "nodeType": "YulIdentifier",
                                  "src": "15038:6:5"
                                },
                                "nodeType": "YulFunctionCall",
                                "src": "15038:30:5"
                              },
                              "nodeType": "YulExpressionStatement",
                              "src": "15038:30:5"
                            },
                            {
                              "expression": {
                                "arguments": [
                                  {
                                    "arguments": [
                                      {
                                        "name": "headStart",
                                        "nodeType": "YulIdentifier",
                                        "src": "15088:9:5"
                                      },
                                      {
                                        "kind": "number",
                                        "nodeType": "YulLiteral",
                                        "src": "15099:2:5",
                                        "type": "",
                                        "value": "64"
                                      }
                                    ],
                                    "functionName": {
                                      "name": "add",
                                      "nodeType": "YulIdentifier",
                                      "src": "15084:3:5"
                                    },
                                    "nodeType": "YulFunctionCall",
                                    "src": "15084:18:5"
                                  },
                                  {
                                    "hexValue": "566f7465722068617320616c726561647920766f746564",
                                    "kind": "string",
                                    "nodeType": "YulLiteral",
                                    "src": "15104:25:5",
                                    "type": "",
                                    "value": "Voter has already voted"
                                  }
                                ],
                                "functionName": {
                                  "name": "mstore",
                                  "nodeType": "YulIdentifier",
                                  "src": "15077:6:5"
                                },
                                "nodeType": "YulFunctionCall",
                                "src": "15077:53:5"
                              },
                              "nodeType": "YulExpressionStatement",
                              "src": "15077:53:5"
                            },
                            {
                              "nodeType": "YulAssignment",
                              "src": "15139:26:5",
                              "value": {
                                "arguments": [
                                  {
                                    "name": "headStart",
                                    "nodeType": "YulIdentifier",
                                    "src": "15151:9:5"
                                  },
                                  {
                                    "kind": "number",
                                    "nodeType": "YulLiteral",
                                    "src": "15162:2:5",
                                    "type": "",
                                    "value": "96"
                                  }
                                ],
                                "functionName": {
                                  "name": "add",
                                  "nodeType": "YulIdentifier",
                                  "src": "15147:3:5"
                                },
                                "nodeType": "YulFunctionCall",
                                "src": "15147:18:5"
                              },
                              "variableNames": [
                                {
                                  "name": "tail",
                                  "nodeType": "YulIdentifier",
                                  "src": "15139:4:5"
                                }
                              ]
                            }
                          ]
                        },
                        "name": "abi_encode_tuple_t_stringliteral_b5b832c47e2f8575ded4ab7736997e2d3cd77de518ea3cc88b64a21464bbf6a2__to_t_string_memory_ptr__fromStack_reversed",
                        "nodeType": "YulFunctionDefinition",
                        "parameters": [
                          {
                            "name": "headStart",
                            "nodeType": "YulTypedName",
                            "src": "14975:9:5",
                            "type": ""
                          }
                        ],
                        "returnVariables": [
                          {
                            "name": "tail",
                            "nodeType": "YulTypedName",
                            "src": "14989:4:5",
                            "type": ""
                          }
                        ],
                        "src": "14824:347:5"
                      },
                      {
                        "body": {
                          "nodeType": "YulBlock",
                          "src": "15496:267:5",
                          "statements": [
                            {
                              "expression": {
                                "arguments": [
                                  {
                                    "name": "pos",
                                    "nodeType": "YulIdentifier",
                                    "src": "15513:3:5"
                                  },
                                  {
                                    "hexValue": "50726f706f73616c20",
                                    "kind": "string",
                                    "nodeType": "YulLiteral",
                                    "src": "15518:11:5",
                                    "type": "",
                                    "value": "Proposal "
                                  }
                                ],
                                "functionName": {
                                  "name": "mstore",
                                  "nodeType": "YulIdentifier",
                                  "src": "15506:6:5"
                                },
                                "nodeType": "YulFunctionCall",
                                "src": "15506:24:5"
                              },
                              "nodeType": "YulExpressionStatement",
                              "src": "15506:24:5"
                            },
                            {
                              "nodeType": "YulVariableDeclaration",
                              "src": "15539:27:5",
                              "value": {
                                "arguments": [
                                  {
                                    "name": "value0",
                                    "nodeType": "YulIdentifier",
                                    "src": "15559:6:5"
                                  }
                                ],
                                "functionName": {
                                  "name": "mload",
                                  "nodeType": "YulIdentifier",
                                  "src": "15553:5:5"
                                },
                                "nodeType": "YulFunctionCall",
                                "src": "15553:13:5"
                              },
                              "variables": [
                                {
                                  "name": "length",
                                  "nodeType": "YulTypedName",
                                  "src": "15543:6:5",
                                  "type": ""
                                }
                              ]
                            },
                            {
                              "expression": {
                                "arguments": [
                                  {
                                    "arguments": [
                                      {
                                        "name": "value0",
                                        "nodeType": "YulIdentifier",
                                        "src": "15614:6:5"
                                      },
                                      {
                                        "kind": "number",
                                        "nodeType": "YulLiteral",
                                        "src": "15622:4:5",
                                        "type": "",
                                        "value": "0x20"
                                      }
                                    ],
                                    "functionName": {
                                      "name": "add",
                                      "nodeType": "YulIdentifier",
                                      "src": "15610:3:5"
                                    },
                                    "nodeType": "YulFunctionCall",
                                    "src": "15610:17:5"
                                  },
                                  {
                                    "arguments": [
                                      {
                                        "name": "pos",
                                        "nodeType": "YulIdentifier",
                                        "src": "15633:3:5"
                                      },
                                      {
                                        "kind": "number",
                                        "nodeType": "YulLiteral",
                                        "src": "15638:1:5",
                                        "type": "",
                                        "value": "9"
                                      }
                                    ],
                                    "functionName": {
                                      "name": "add",
                                      "nodeType": "YulIdentifier",
                                      "src": "15629:3:5"
                                    },
                                    "nodeType": "YulFunctionCall",
                                    "src": "15629:11:5"
                                  },
                                  {
                                    "name": "length",
                                    "nodeType": "YulIdentifier",
                                    "src": "15642:6:5"
                                  }
                                ],
                                "functionName": {
                                  "name": "copy_memory_to_memory_with_cleanup",
                                  "nodeType": "YulIdentifier",
                                  "src": "15575:34:5"
                                },
                                "nodeType": "YulFunctionCall",
                                "src": "15575:74:5"
                              },
                              "nodeType": "YulExpressionStatement",
                              "src": "15575:74:5"
                            },
                            {
                              "nodeType": "YulVariableDeclaration",
                              "src": "15658:26:5",
                              "value": {
                                "arguments": [
                                  {
                                    "name": "pos",
                                    "nodeType": "YulIdentifier",
                                    "src": "15672:3:5"
                                  },
                                  {
                                    "name": "length",
                                    "nodeType": "YulIdentifier",
                                    "src": "15677:6:5"
                                  }
                                ],
                                "functionName": {
                                  "name": "add",
                                  "nodeType": "YulIdentifier",
                                  "src": "15668:3:5"
                                },
                                "nodeType": "YulFunctionCall",
                                "src": "15668:16:5"
                              },
                              "variables": [
                                {
                                  "name": "_1",
                                  "nodeType": "YulTypedName",
                                  "src": "15662:2:5",
                                  "type": ""
                                }
                              ]
                            },
                            {
                              "expression": {
                                "arguments": [
                                  {
                                    "arguments": [
                                      {
                                        "name": "_1",
                                        "nodeType": "YulIdentifier",
                                        "src": "15704:2:5"
                                      },
                                      {
                                        "kind": "number",
                                        "nodeType": "YulLiteral",
                                        "src": "15708:1:5",
                                        "type": "",
                                        "value": "9"
                                      }
                                    ],
                                    "functionName": {
                                      "name": "add",
                                      "nodeType": "YulIdentifier",
                                      "src": "15700:3:5"
                                    },
                                    "nodeType": "YulFunctionCall",
                                    "src": "15700:10:5"
                                  },
                                  {
                                    "hexValue": "20646f6573206e6f74206578697374",
                                    "kind": "string",
                                    "nodeType": "YulLiteral",
                                    "src": "15712:17:5",
                                    "type": "",
                                    "value": " does not exist"
                                  }
                                ],
                                "functionName": {
                                  "name": "mstore",
                                  "nodeType": "YulIdentifier",
                                  "src": "15693:6:5"
                                },
                                "nodeType": "YulFunctionCall",
                                "src": "15693:37:5"
                              },
                              "nodeType": "YulExpressionStatement",
                              "src": "15693:37:5"
                            },
                            {
                              "nodeType": "YulAssignment",
                              "src": "15739:18:5",
                              "value": {
                                "arguments": [
                                  {
                                    "name": "_1",
                                    "nodeType": "YulIdentifier",
                                    "src": "15750:2:5"
                                  },
                                  {
                                    "kind": "number",
                                    "nodeType": "YulLiteral",
                                    "src": "15754:2:5",
                                    "type": "",
                                    "value": "24"
                                  }
                                ],
                                "functionName": {
                                  "name": "add",
                                  "nodeType": "YulIdentifier",
                                  "src": "15746:3:5"
                                },
                                "nodeType": "YulFunctionCall",
                                "src": "15746:11:5"
                              },
                              "variableNames": [
                                {
                                  "name": "end",
                                  "nodeType": "YulIdentifier",
                                  "src": "15739:3:5"
                                }
                              ]
                            }
                          ]
                        },
                        "name": "abi_encode_tuple_packed_t_stringliteral_95941de2cf661822a59b247d118deba693dab348b1a72d43aed94ab15dfa3818_t_string_memory_ptr_t_stringliteral_881a7c6e0d9cc1bef9dcc51a5535d0791dc9ce94b16aca73a1ce8b4583026adb__to_t_bytes9_t_string_memory_ptr_t_bytes15__nonPadded_inplace_fromStack_reversed",
                        "nodeType": "YulFunctionDefinition",
                        "parameters": [
                          {
                            "name": "pos",
                            "nodeType": "YulTypedName",
                            "src": "15472:3:5",
                            "type": ""
                          },
                          {
                            "name": "value0",
                            "nodeType": "YulTypedName",
                            "src": "15477:6:5",
                            "type": ""
                          }
                        ],
                        "returnVariables": [
                          {
                            "name": "end",
                            "nodeType": "YulTypedName",
                            "src": "15488:3:5",
                            "type": ""
                          }
                        ],
                        "src": "15176:587:5"
                      },
                      {
                        "body": {
                          "nodeType": "YulBlock",
                          "src": "15942:231:5",
                          "statements": [
                            {
                              "expression": {
                                "arguments": [
                                  {
                                    "name": "headStart",
                                    "nodeType": "YulIdentifier",
                                    "src": "15959:9:5"
                                  },
                                  {
                                    "kind": "number",
                                    "nodeType": "YulLiteral",
                                    "src": "15970:2:5",
                                    "type": "",
                                    "value": "32"
                                  }
                                ],
                                "functionName": {
                                  "name": "mstore",
                                  "nodeType": "YulIdentifier",
                                  "src": "15952:6:5"
                                },
                                "nodeType": "YulFunctionCall",
                                "src": "15952:21:5"
                              },
                              "nodeType": "YulExpressionStatement",
                              "src": "15952:21:5"
                            },
                            {
                              "expression": {
                                "arguments": [
                                  {
                                    "arguments": [
                                      {
                                        "name": "headStart",
                                        "nodeType": "YulIdentifier",
                                        "src": "15993:9:5"
                                      },
                                      {
                                        "kind": "number",
                                        "nodeType": "YulLiteral",
                                        "src": "16004:2:5",
                                        "type": "",
                                        "value": "32"
                                      }
                                    ],
                                    "functionName": {
                                      "name": "add",
                                      "nodeType": "YulIdentifier",
                                      "src": "15989:3:5"
                                    },
                                    "nodeType": "YulFunctionCall",
                                    "src": "15989:18:5"
                                  },
                                  {
                                    "kind": "number",
                                    "nodeType": "YulLiteral",
                                    "src": "16009:2:5",
                                    "type": "",
                                    "value": "41"
                                  }
                                ],
                                "functionName": {
                                  "name": "mstore",
                                  "nodeType": "YulIdentifier",
                                  "src": "15982:6:5"
                                },
                                "nodeType": "YulFunctionCall",
                                "src": "15982:30:5"
                              },
                              "nodeType": "YulExpressionStatement",
                              "src": "15982:30:5"
                            },
                            {
                              "expression": {
                                "arguments": [
                                  {
                                    "arguments": [
                                      {
                                        "name": "headStart",
                                        "nodeType": "YulIdentifier",
                                        "src": "16032:9:5"
                                      },
                                      {
                                        "kind": "number",
                                        "nodeType": "YulLiteral",
                                        "src": "16043:2:5",
                                        "type": "",
                                        "value": "64"
                                      }
                                    ],
                                    "functionName": {
                                      "name": "add",
                                      "nodeType": "YulIdentifier",
                                      "src": "16028:3:5"
                                    },
                                    "nodeType": "YulFunctionCall",
                                    "src": "16028:18:5"
                                  },
                                  {
                                    "hexValue": "4120766f7465722063616e206e6f7420766f746520666f7220697473206f776e",
                                    "kind": "string",
                                    "nodeType": "YulLiteral",
                                    "src": "16048:34:5",
                                    "type": "",
                                    "value": "A voter can not vote for its own"
                                  }
                                ],
                                "functionName": {
                                  "name": "mstore",
                                  "nodeType": "YulIdentifier",
                                  "src": "16021:6:5"
                                },
                                "nodeType": "YulFunctionCall",
                                "src": "16021:62:5"
                              },
                              "nodeType": "YulExpressionStatement",
                              "src": "16021:62:5"
                            },
                            {
                              "expression": {
                                "arguments": [
                                  {
                                    "arguments": [
                                      {
                                        "name": "headStart",
                                        "nodeType": "YulIdentifier",
                                        "src": "16103:9:5"
                                      },
                                      {
                                        "kind": "number",
                                        "nodeType": "YulLiteral",
                                        "src": "16114:2:5",
                                        "type": "",
                                        "value": "96"
                                      }
                                    ],
                                    "functionName": {
                                      "name": "add",
                                      "nodeType": "YulIdentifier",
                                      "src": "16099:3:5"
                                    },
                                    "nodeType": "YulFunctionCall",
                                    "src": "16099:18:5"
                                  },
                                  {
                                    "hexValue": "2070726f706f73616c",
                                    "kind": "string",
                                    "nodeType": "YulLiteral",
                                    "src": "16119:11:5",
                                    "type": "",
                                    "value": " proposal"
                                  }
                                ],
                                "functionName": {
                                  "name": "mstore",
                                  "nodeType": "YulIdentifier",
                                  "src": "16092:6:5"
                                },
                                "nodeType": "YulFunctionCall",
                                "src": "16092:39:5"
                              },
                              "nodeType": "YulExpressionStatement",
                              "src": "16092:39:5"
                            },
                            {
                              "nodeType": "YulAssignment",
                              "src": "16140:27:5",
                              "value": {
                                "arguments": [
                                  {
                                    "name": "headStart",
                                    "nodeType": "YulIdentifier",
                                    "src": "16152:9:5"
                                  },
                                  {
                                    "kind": "number",
                                    "nodeType": "YulLiteral",
                                    "src": "16163:3:5",
                                    "type": "",
                                    "value": "128"
                                  }
                                ],
                                "functionName": {
                                  "name": "add",
                                  "nodeType": "YulIdentifier",
                                  "src": "16148:3:5"
                                },
                                "nodeType": "YulFunctionCall",
                                "src": "16148:19:5"
                              },
                              "variableNames": [
                                {
                                  "name": "tail",
                                  "nodeType": "YulIdentifier",
                                  "src": "16140:4:5"
                                }
                              ]
                            }
                          ]
                        },
                        "name": "abi_encode_tuple_t_stringliteral_89875bf1134a296a98c92d31fb973ed2f2db2e6066c7892071b73ccbbecdb855__to_t_string_memory_ptr__fromStack_reversed",
                        "nodeType": "YulFunctionDefinition",
                        "parameters": [
                          {
                            "name": "headStart",
                            "nodeType": "YulTypedName",
                            "src": "15919:9:5",
                            "type": ""
                          }
                        ],
                        "returnVariables": [
                          {
                            "name": "tail",
                            "nodeType": "YulTypedName",
                            "src": "15933:4:5",
                            "type": ""
                          }
                        ],
                        "src": "15768:405:5"
                      },
                      {
                        "body": {
                          "nodeType": "YulBlock",
                          "src": "16352:231:5",
                          "statements": [
                            {
                              "expression": {
                                "arguments": [
                                  {
                                    "name": "headStart",
                                    "nodeType": "YulIdentifier",
                                    "src": "16369:9:5"
                                  },
                                  {
                                    "kind": "number",
                                    "nodeType": "YulLiteral",
                                    "src": "16380:2:5",
                                    "type": "",
                                    "value": "32"
                                  }
                                ],
                                "functionName": {
                                  "name": "mstore",
                                  "nodeType": "YulIdentifier",
                                  "src": "16362:6:5"
                                },
                                "nodeType": "YulFunctionCall",
                                "src": "16362:21:5"
                              },
                              "nodeType": "YulExpressionStatement",
                              "src": "16362:21:5"
                            },
                            {
                              "expression": {
                                "arguments": [
                                  {
                                    "arguments": [
                                      {
                                        "name": "headStart",
                                        "nodeType": "YulIdentifier",
                                        "src": "16403:9:5"
                                      },
                                      {
                                        "kind": "number",
                                        "nodeType": "YulLiteral",
                                        "src": "16414:2:5",
                                        "type": "",
                                        "value": "32"
                                      }
                                    ],
                                    "functionName": {
                                      "name": "add",
                                      "nodeType": "YulIdentifier",
                                      "src": "16399:3:5"
                                    },
                                    "nodeType": "YulFunctionCall",
                                    "src": "16399:18:5"
                                  },
                                  {
                                    "kind": "number",
                                    "nodeType": "YulLiteral",
                                    "src": "16419:2:5",
                                    "type": "",
                                    "value": "41"
                                  }
                                ],
                                "functionName": {
                                  "name": "mstore",
                                  "nodeType": "YulIdentifier",
                                  "src": "16392:6:5"
                                },
                                "nodeType": "YulFunctionCall",
                                "src": "16392:30:5"
                              },
                              "nodeType": "YulExpressionStatement",
                              "src": "16392:30:5"
                            },
                            {
                              "expression": {
                                "arguments": [
                                  {
                                    "arguments": [
                                      {
                                        "name": "headStart",
                                        "nodeType": "YulIdentifier",
                                        "src": "16442:9:5"
                                      },
                                      {
                                        "kind": "number",
                                        "nodeType": "YulLiteral",
                                        "src": "16453:2:5",
                                        "type": "",
                                        "value": "64"
                                      }
                                    ],
                                    "functionName": {
                                      "name": "add",
                                      "nodeType": "YulIdentifier",
                                      "src": "16438:3:5"
                                    },
                                    "nodeType": "YulFunctionCall",
                                    "src": "16438:18:5"
                                  },
                                  {
                                    "hexValue": "46697273742070726f706f73616c20697320726573657276656420666f722061",
                                    "kind": "string",
                                    "nodeType": "YulLiteral",
                                    "src": "16458:34:5",
                                    "type": "",
                                    "value": "First proposal is reserved for a"
                                  }
                                ],
                                "functionName": {
                                  "name": "mstore",
                                  "nodeType": "YulIdentifier",
                                  "src": "16431:6:5"
                                },
                                "nodeType": "YulFunctionCall",
                                "src": "16431:62:5"
                              },
                              "nodeType": "YulExpressionStatement",
                              "src": "16431:62:5"
                            },
                            {
                              "expression": {
                                "arguments": [
                                  {
                                    "arguments": [
                                      {
                                        "name": "headStart",
                                        "nodeType": "YulIdentifier",
                                        "src": "16513:9:5"
                                      },
                                      {
                                        "kind": "number",
                                        "nodeType": "YulLiteral",
                                        "src": "16524:2:5",
                                        "type": "",
                                        "value": "96"
                                      }
                                    ],
                                    "functionName": {
                                      "name": "add",
                                      "nodeType": "YulIdentifier",
                                      "src": "16509:3:5"
                                    },
                                    "nodeType": "YulFunctionCall",
                                    "src": "16509:18:5"
                                  },
                                  {
                                    "hexValue": "627374656e74696f6e",
                                    "kind": "string",
                                    "nodeType": "YulLiteral",
                                    "src": "16529:11:5",
                                    "type": "",
                                    "value": "bstention"
                                  }
                                ],
                                "functionName": {
                                  "name": "mstore",
                                  "nodeType": "YulIdentifier",
                                  "src": "16502:6:5"
                                },
                                "nodeType": "YulFunctionCall",
                                "src": "16502:39:5"
                              },
                              "nodeType": "YulExpressionStatement",
                              "src": "16502:39:5"
                            },
                            {
                              "nodeType": "YulAssignment",
                              "src": "16550:27:5",
                              "value": {
                                "arguments": [
                                  {
                                    "name": "headStart",
                                    "nodeType": "YulIdentifier",
                                    "src": "16562:9:5"
                                  },
                                  {
                                    "kind": "number",
                                    "nodeType": "YulLiteral",
                                    "src": "16573:3:5",
                                    "type": "",
                                    "value": "128"
                                  }
                                ],
                                "functionName": {
                                  "name": "add",
                                  "nodeType": "YulIdentifier",
                                  "src": "16558:3:5"
                                },
                                "nodeType": "YulFunctionCall",
                                "src": "16558:19:5"
                              },
                              "variableNames": [
                                {
                                  "name": "tail",
                                  "nodeType": "YulIdentifier",
                                  "src": "16550:4:5"
                                }
                              ]
                            }
                          ]
                        },
                        "name": "abi_encode_tuple_t_stringliteral_c2b306736cf2f0443edc2a88db6aa1550013162c69422af0169a5e9d5a7a35c7__to_t_string_memory_ptr__fromStack_reversed",
                        "nodeType": "YulFunctionDefinition",
                        "parameters": [
                          {
                            "name": "headStart",
                            "nodeType": "YulTypedName",
                            "src": "16329:9:5",
                            "type": ""
                          }
                        ],
                        "returnVariables": [
                          {
                            "name": "tail",
                            "nodeType": "YulTypedName",
                            "src": "16343:4:5",
                            "type": ""
                          }
                        ],
                        "src": "16178:405:5"
                      },
                      {
                        "body": {
                          "nodeType": "YulBlock",
                          "src": "16762:174:5",
                          "statements": [
                            {
                              "expression": {
                                "arguments": [
                                  {
                                    "name": "headStart",
                                    "nodeType": "YulIdentifier",
                                    "src": "16779:9:5"
                                  },
                                  {
                                    "kind": "number",
                                    "nodeType": "YulLiteral",
                                    "src": "16790:2:5",
                                    "type": "",
                                    "value": "32"
                                  }
                                ],
                                "functionName": {
                                  "name": "mstore",
                                  "nodeType": "YulIdentifier",
                                  "src": "16772:6:5"
                                },
                                "nodeType": "YulFunctionCall",
                                "src": "16772:21:5"
                              },
                              "nodeType": "YulExpressionStatement",
                              "src": "16772:21:5"
                            },
                            {
                              "expression": {
                                "arguments": [
                                  {
                                    "arguments": [
                                      {
                                        "name": "headStart",
                                        "nodeType": "YulIdentifier",
                                        "src": "16813:9:5"
                                      },
                                      {
                                        "kind": "number",
                                        "nodeType": "YulLiteral",
                                        "src": "16824:2:5",
                                        "type": "",
                                        "value": "32"
                                      }
                                    ],
                                    "functionName": {
                                      "name": "add",
                                      "nodeType": "YulIdentifier",
                                      "src": "16809:3:5"
                                    },
                                    "nodeType": "YulFunctionCall",
                                    "src": "16809:18:5"
                                  },
                                  {
                                    "kind": "number",
                                    "nodeType": "YulLiteral",
                                    "src": "16829:2:5",
                                    "type": "",
                                    "value": "24"
                                  }
                                ],
                                "functionName": {
                                  "name": "mstore",
                                  "nodeType": "YulIdentifier",
                                  "src": "16802:6:5"
                                },
                                "nodeType": "YulFunctionCall",
                                "src": "16802:30:5"
                              },
                              "nodeType": "YulExpressionStatement",
                              "src": "16802:30:5"
                            },
                            {
                              "expression": {
                                "arguments": [
                                  {
                                    "arguments": [
                                      {
                                        "name": "headStart",
                                        "nodeType": "YulIdentifier",
                                        "src": "16852:9:5"
                                      },
                                      {
                                        "kind": "number",
                                        "nodeType": "YulLiteral",
                                        "src": "16863:2:5",
                                        "type": "",
                                        "value": "64"
                                      }
                                    ],
                                    "functionName": {
                                      "name": "add",
                                      "nodeType": "YulIdentifier",
                                      "src": "16848:3:5"
                                    },
                                    "nodeType": "YulFunctionCall",
                                    "src": "16848:18:5"
                                  },
                                  {
                                    "hexValue": "4f776e65722063616e206e6f74206265206120766f746572",
                                    "kind": "string",
                                    "nodeType": "YulLiteral",
                                    "src": "16868:26:5",
                                    "type": "",
                                    "value": "Owner can not be a voter"
                                  }
                                ],
                                "functionName": {
                                  "name": "mstore",
                                  "nodeType": "YulIdentifier",
                                  "src": "16841:6:5"
                                },
                                "nodeType": "YulFunctionCall",
                                "src": "16841:54:5"
                              },
                              "nodeType": "YulExpressionStatement",
                              "src": "16841:54:5"
                            },
                            {
                              "nodeType": "YulAssignment",
                              "src": "16904:26:5",
                              "value": {
                                "arguments": [
                                  {
                                    "name": "headStart",
                                    "nodeType": "YulIdentifier",
                                    "src": "16916:9:5"
                                  },
                                  {
                                    "kind": "number",
                                    "nodeType": "YulLiteral",
                                    "src": "16927:2:5",
                                    "type": "",
                                    "value": "96"
                                  }
                                ],
                                "functionName": {
                                  "name": "add",
                                  "nodeType": "YulIdentifier",
                                  "src": "16912:3:5"
                                },
                                "nodeType": "YulFunctionCall",
                                "src": "16912:18:5"
                              },
                              "variableNames": [
                                {
                                  "name": "tail",
                                  "nodeType": "YulIdentifier",
                                  "src": "16904:4:5"
                                }
                              ]
                            }
                          ]
                        },
                        "name": "abi_encode_tuple_t_stringliteral_af5af23e3c6fc76fa379e0ec8f7f048042477a9c0a3e8410137eac64bbeeebe7__to_t_string_memory_ptr__fromStack_reversed",
                        "nodeType": "YulFunctionDefinition",
                        "parameters": [
                          {
                            "name": "headStart",
                            "nodeType": "YulTypedName",
                            "src": "16739:9:5",
                            "type": ""
                          }
                        ],
                        "returnVariables": [
                          {
                            "name": "tail",
                            "nodeType": "YulTypedName",
                            "src": "16753:4:5",
                            "type": ""
                          }
                        ],
                        "src": "16588:348:5"
                      },
                      {
                        "body": {
                          "nodeType": "YulBlock",
                          "src": "17115:177:5",
                          "statements": [
                            {
                              "expression": {
                                "arguments": [
                                  {
                                    "name": "headStart",
                                    "nodeType": "YulIdentifier",
                                    "src": "17132:9:5"
                                  },
                                  {
                                    "kind": "number",
                                    "nodeType": "YulLiteral",
                                    "src": "17143:2:5",
                                    "type": "",
                                    "value": "32"
                                  }
                                ],
                                "functionName": {
                                  "name": "mstore",
                                  "nodeType": "YulIdentifier",
                                  "src": "17125:6:5"
                                },
                                "nodeType": "YulFunctionCall",
                                "src": "17125:21:5"
                              },
                              "nodeType": "YulExpressionStatement",
                              "src": "17125:21:5"
                            },
                            {
                              "expression": {
                                "arguments": [
                                  {
                                    "arguments": [
                                      {
                                        "name": "headStart",
                                        "nodeType": "YulIdentifier",
                                        "src": "17166:9:5"
                                      },
                                      {
                                        "kind": "number",
                                        "nodeType": "YulLiteral",
                                        "src": "17177:2:5",
                                        "type": "",
                                        "value": "32"
                                      }
                                    ],
                                    "functionName": {
                                      "name": "add",
                                      "nodeType": "YulIdentifier",
                                      "src": "17162:3:5"
                                    },
                                    "nodeType": "YulFunctionCall",
                                    "src": "17162:18:5"
                                  },
                                  {
                                    "kind": "number",
                                    "nodeType": "YulLiteral",
                                    "src": "17182:2:5",
                                    "type": "",
                                    "value": "27"
                                  }
                                ],
                                "functionName": {
                                  "name": "mstore",
                                  "nodeType": "YulIdentifier",
                                  "src": "17155:6:5"
                                },
                                "nodeType": "YulFunctionCall",
                                "src": "17155:30:5"
                              },
                              "nodeType": "YulExpressionStatement",
                              "src": "17155:30:5"
                            },
                            {
                              "expression": {
                                "arguments": [
                                  {
                                    "arguments": [
                                      {
                                        "name": "headStart",
                                        "nodeType": "YulIdentifier",
                                        "src": "17205:9:5"
                                      },
                                      {
                                        "kind": "number",
                                        "nodeType": "YulLiteral",
                                        "src": "17216:2:5",
                                        "type": "",
                                        "value": "64"
                                      }
                                    ],
                                    "functionName": {
                                      "name": "add",
                                      "nodeType": "YulIdentifier",
                                      "src": "17201:3:5"
                                    },
                                    "nodeType": "YulFunctionCall",
                                    "src": "17201:18:5"
                                  },
                                  {
                                    "hexValue": "566f74657220697320616c72656164792072656769737465726564",
                                    "kind": "string",
                                    "nodeType": "YulLiteral",
                                    "src": "17221:29:5",
                                    "type": "",
                                    "value": "Voter is already registered"
                                  }
                                ],
                                "functionName": {
                                  "name": "mstore",
                                  "nodeType": "YulIdentifier",
                                  "src": "17194:6:5"
                                },
                                "nodeType": "YulFunctionCall",
                                "src": "17194:57:5"
                              },
                              "nodeType": "YulExpressionStatement",
                              "src": "17194:57:5"
                            },
                            {
                              "nodeType": "YulAssignment",
                              "src": "17260:26:5",
                              "value": {
                                "arguments": [
                                  {
                                    "name": "headStart",
                                    "nodeType": "YulIdentifier",
                                    "src": "17272:9:5"
                                  },
                                  {
                                    "kind": "number",
                                    "nodeType": "YulLiteral",
                                    "src": "17283:2:5",
                                    "type": "",
                                    "value": "96"
                                  }
                                ],
                                "functionName": {
                                  "name": "add",
                                  "nodeType": "YulIdentifier",
                                  "src": "17268:3:5"
                                },
                                "nodeType": "YulFunctionCall",
                                "src": "17268:18:5"
                              },
                              "variableNames": [
                                {
                                  "name": "tail",
                                  "nodeType": "YulIdentifier",
                                  "src": "17260:4:5"
                                }
                              ]
                            }
                          ]
                        },
                        "name": "abi_encode_tuple_t_stringliteral_a82e95e5ee84cc506f04f82fd65efe3a0cb2fd2e22975dc3a1b4006058d94650__to_t_string_memory_ptr__fromStack_reversed",
                        "nodeType": "YulFunctionDefinition",
                        "parameters": [
                          {
                            "name": "headStart",
                            "nodeType": "YulTypedName",
                            "src": "17092:9:5",
                            "type": ""
                          }
                        ],
                        "returnVariables": [
                          {
                            "name": "tail",
                            "nodeType": "YulTypedName",
                            "src": "17106:4:5",
                            "type": ""
                          }
                        ],
                        "src": "16941:351:5"
                      },
                      {
                        "body": {
                          "nodeType": "YulBlock",
                          "src": "17471:228:5",
                          "statements": [
                            {
                              "expression": {
                                "arguments": [
                                  {
                                    "name": "headStart",
                                    "nodeType": "YulIdentifier",
                                    "src": "17488:9:5"
                                  },
                                  {
                                    "kind": "number",
                                    "nodeType": "YulLiteral",
                                    "src": "17499:2:5",
                                    "type": "",
                                    "value": "32"
                                  }
                                ],
                                "functionName": {
                                  "name": "mstore",
                                  "nodeType": "YulIdentifier",
                                  "src": "17481:6:5"
                                },
                                "nodeType": "YulFunctionCall",
                                "src": "17481:21:5"
                              },
                              "nodeType": "YulExpressionStatement",
                              "src": "17481:21:5"
                            },
                            {
                              "expression": {
                                "arguments": [
                                  {
                                    "arguments": [
                                      {
                                        "name": "headStart",
                                        "nodeType": "YulIdentifier",
                                        "src": "17522:9:5"
                                      },
                                      {
                                        "kind": "number",
                                        "nodeType": "YulLiteral",
                                        "src": "17533:2:5",
                                        "type": "",
                                        "value": "32"
                                      }
                                    ],
                                    "functionName": {
                                      "name": "add",
                                      "nodeType": "YulIdentifier",
                                      "src": "17518:3:5"
                                    },
                                    "nodeType": "YulFunctionCall",
                                    "src": "17518:18:5"
                                  },
                                  {
                                    "kind": "number",
                                    "nodeType": "YulLiteral",
                                    "src": "17538:2:5",
                                    "type": "",
                                    "value": "38"
                                  }
                                ],
                                "functionName": {
                                  "name": "mstore",
                                  "nodeType": "YulIdentifier",
                                  "src": "17511:6:5"
                                },
                                "nodeType": "YulFunctionCall",
                                "src": "17511:30:5"
                              },
                              "nodeType": "YulExpressionStatement",
                              "src": "17511:30:5"
                            },
                            {
                              "expression": {
                                "arguments": [
                                  {
                                    "arguments": [
                                      {
                                        "name": "headStart",
                                        "nodeType": "YulIdentifier",
                                        "src": "17561:9:5"
                                      },
                                      {
                                        "kind": "number",
                                        "nodeType": "YulLiteral",
                                        "src": "17572:2:5",
                                        "type": "",
                                        "value": "64"
                                      }
                                    ],
                                    "functionName": {
                                      "name": "add",
                                      "nodeType": "YulIdentifier",
                                      "src": "17557:3:5"
                                    },
                                    "nodeType": "YulFunctionCall",
                                    "src": "17557:18:5"
                                  },
                                  {
                                    "hexValue": "4f776e61626c653a206e6577206f776e657220697320746865207a65726f2061",
                                    "kind": "string",
                                    "nodeType": "YulLiteral",
                                    "src": "17577:34:5",
                                    "type": "",
                                    "value": "Ownable: new owner is the zero a"
                                  }
                                ],
                                "functionName": {
                                  "name": "mstore",
                                  "nodeType": "YulIdentifier",
                                  "src": "17550:6:5"
                                },
                                "nodeType": "YulFunctionCall",
                                "src": "17550:62:5"
                              },
                              "nodeType": "YulExpressionStatement",
                              "src": "17550:62:5"
                            },
                            {
                              "expression": {
                                "arguments": [
                                  {
                                    "arguments": [
                                      {
                                        "name": "headStart",
                                        "nodeType": "YulIdentifier",
                                        "src": "17632:9:5"
                                      },
                                      {
                                        "kind": "number",
                                        "nodeType": "YulLiteral",
                                        "src": "17643:2:5",
                                        "type": "",
                                        "value": "96"
                                      }
                                    ],
                                    "functionName": {
                                      "name": "add",
                                      "nodeType": "YulIdentifier",
                                      "src": "17628:3:5"
                                    },
                                    "nodeType": "YulFunctionCall",
                                    "src": "17628:18:5"
                                  },
                                  {
                                    "hexValue": "646472657373",
                                    "kind": "string",
                                    "nodeType": "YulLiteral",
                                    "src": "17648:8:5",
                                    "type": "",
                                    "value": "ddress"
                                  }
                                ],
                                "functionName": {
                                  "name": "mstore",
                                  "nodeType": "YulIdentifier",
                                  "src": "17621:6:5"
                                },
                                "nodeType": "YulFunctionCall",
                                "src": "17621:36:5"
                              },
                              "nodeType": "YulExpressionStatement",
                              "src": "17621:36:5"
                            },
                            {
                              "nodeType": "YulAssignment",
                              "src": "17666:27:5",
                              "value": {
                                "arguments": [
                                  {
                                    "name": "headStart",
                                    "nodeType": "YulIdentifier",
                                    "src": "17678:9:5"
                                  },
                                  {
                                    "kind": "number",
                                    "nodeType": "YulLiteral",
                                    "src": "17689:3:5",
                                    "type": "",
                                    "value": "128"
                                  }
                                ],
                                "functionName": {
                                  "name": "add",
                                  "nodeType": "YulIdentifier",
                                  "src": "17674:3:5"
                                },
                                "nodeType": "YulFunctionCall",
                                "src": "17674:19:5"
                              },
                              "variableNames": [
                                {
                                  "name": "tail",
                                  "nodeType": "YulIdentifier",
                                  "src": "17666:4:5"
                                }
                              ]
                            }
                          ]
                        },
                        "name": "abi_encode_tuple_t_stringliteral_245f15ff17f551913a7a18385165551503906a406f905ac1c2437281a7cd0cfe__to_t_string_memory_ptr__fromStack_reversed",
                        "nodeType": "YulFunctionDefinition",
                        "parameters": [
                          {
                            "name": "headStart",
                            "nodeType": "YulTypedName",
                            "src": "17448:9:5",
                            "type": ""
                          }
                        ],
                        "returnVariables": [
                          {
                            "name": "tail",
                            "nodeType": "YulTypedName",
                            "src": "17462:4:5",
                            "type": ""
                          }
                        ],
                        "src": "17297:402:5"
                      },
                      {
                        "body": {
                          "nodeType": "YulBlock",
                          "src": "17878:182:5",
                          "statements": [
                            {
                              "expression": {
                                "arguments": [
                                  {
                                    "name": "headStart",
                                    "nodeType": "YulIdentifier",
                                    "src": "17895:9:5"
                                  },
                                  {
                                    "kind": "number",
                                    "nodeType": "YulLiteral",
                                    "src": "17906:2:5",
                                    "type": "",
                                    "value": "32"
                                  }
                                ],
                                "functionName": {
                                  "name": "mstore",
                                  "nodeType": "YulIdentifier",
                                  "src": "17888:6:5"
                                },
                                "nodeType": "YulFunctionCall",
                                "src": "17888:21:5"
                              },
                              "nodeType": "YulExpressionStatement",
                              "src": "17888:21:5"
                            },
                            {
                              "expression": {
                                "arguments": [
                                  {
                                    "arguments": [
                                      {
                                        "name": "headStart",
                                        "nodeType": "YulIdentifier",
                                        "src": "17929:9:5"
                                      },
                                      {
                                        "kind": "number",
                                        "nodeType": "YulLiteral",
                                        "src": "17940:2:5",
                                        "type": "",
                                        "value": "32"
                                      }
                                    ],
                                    "functionName": {
                                      "name": "add",
                                      "nodeType": "YulIdentifier",
                                      "src": "17925:3:5"
                                    },
                                    "nodeType": "YulFunctionCall",
                                    "src": "17925:18:5"
                                  },
                                  {
                                    "kind": "number",
                                    "nodeType": "YulLiteral",
                                    "src": "17945:2:5",
                                    "type": "",
                                    "value": "32"
                                  }
                                ],
                                "functionName": {
                                  "name": "mstore",
                                  "nodeType": "YulIdentifier",
                                  "src": "17918:6:5"
                                },
                                "nodeType": "YulFunctionCall",
                                "src": "17918:30:5"
                              },
                              "nodeType": "YulExpressionStatement",
                              "src": "17918:30:5"
                            },
                            {
                              "expression": {
                                "arguments": [
                                  {
                                    "arguments": [
                                      {
                                        "name": "headStart",
                                        "nodeType": "YulIdentifier",
                                        "src": "17968:9:5"
                                      },
                                      {
                                        "kind": "number",
                                        "nodeType": "YulLiteral",
                                        "src": "17979:2:5",
                                        "type": "",
                                        "value": "64"
                                      }
                                    ],
                                    "functionName": {
                                      "name": "add",
                                      "nodeType": "YulIdentifier",
                                      "src": "17964:3:5"
                                    },
                                    "nodeType": "YulFunctionCall",
                                    "src": "17964:18:5"
                                  },
                                  {
                                    "hexValue": "4f776e61626c653a2063616c6c6572206973206e6f7420746865206f776e6572",
                                    "kind": "string",
                                    "nodeType": "YulLiteral",
                                    "src": "17984:34:5",
                                    "type": "",
                                    "value": "Ownable: caller is not the owner"
                                  }
                                ],
                                "functionName": {
                                  "name": "mstore",
                                  "nodeType": "YulIdentifier",
                                  "src": "17957:6:5"
                                },
                                "nodeType": "YulFunctionCall",
                                "src": "17957:62:5"
                              },
                              "nodeType": "YulExpressionStatement",
                              "src": "17957:62:5"
                            },
                            {
                              "nodeType": "YulAssignment",
                              "src": "18028:26:5",
                              "value": {
                                "arguments": [
                                  {
                                    "name": "headStart",
                                    "nodeType": "YulIdentifier",
                                    "src": "18040:9:5"
                                  },
                                  {
                                    "kind": "number",
                                    "nodeType": "YulLiteral",
                                    "src": "18051:2:5",
                                    "type": "",
                                    "value": "96"
                                  }
                                ],
                                "functionName": {
                                  "name": "add",
                                  "nodeType": "YulIdentifier",
                                  "src": "18036:3:5"
                                },
                                "nodeType": "YulFunctionCall",
                                "src": "18036:18:5"
                              },
                              "variableNames": [
                                {
                                  "name": "tail",
                                  "nodeType": "YulIdentifier",
                                  "src": "18028:4:5"
                                }
                              ]
                            }
                          ]
                        },
                        "name": "abi_encode_tuple_t_stringliteral_9924ebdf1add33d25d4ef888e16131f0a5687b0580a36c21b5c301a6c462effe__to_t_string_memory_ptr__fromStack_reversed",
                        "nodeType": "YulFunctionDefinition",
                        "parameters": [
                          {
                            "name": "headStart",
                            "nodeType": "YulTypedName",
                            "src": "17855:9:5",
                            "type": ""
                          }
                        ],
                        "returnVariables": [
                          {
                            "name": "tail",
                            "nodeType": "YulTypedName",
                            "src": "17869:4:5",
                            "type": ""
                          }
                        ],
                        "src": "17704:356:5"
                      },
                      {
                        "body": {
                          "nodeType": "YulBlock",
                          "src": "18097:95:5",
                          "statements": [
                            {
                              "expression": {
                                "arguments": [
                                  {
                                    "kind": "number",
                                    "nodeType": "YulLiteral",
                                    "src": "18114:1:5",
                                    "type": "",
                                    "value": "0"
                                  },
                                  {
                                    "arguments": [
                                      {
                                        "kind": "number",
                                        "nodeType": "YulLiteral",
                                        "src": "18121:3:5",
                                        "type": "",
                                        "value": "224"
                                      },
                                      {
                                        "kind": "number",
                                        "nodeType": "YulLiteral",
                                        "src": "18126:10:5",
                                        "type": "",
                                        "value": "0x4e487b71"
                                      }
                                    ],
                                    "functionName": {
                                      "name": "shl",
                                      "nodeType": "YulIdentifier",
                                      "src": "18117:3:5"
                                    },
                                    "nodeType": "YulFunctionCall",
                                    "src": "18117:20:5"
                                  }
                                ],
                                "functionName": {
                                  "name": "mstore",
                                  "nodeType": "YulIdentifier",
                                  "src": "18107:6:5"
                                },
                                "nodeType": "YulFunctionCall",
                                "src": "18107:31:5"
                              },
                              "nodeType": "YulExpressionStatement",
                              "src": "18107:31:5"
                            },
                            {
                              "expression": {
                                "arguments": [
                                  {
                                    "kind": "number",
                                    "nodeType": "YulLiteral",
                                    "src": "18154:1:5",
                                    "type": "",
                                    "value": "4"
                                  },
                                  {
                                    "kind": "number",
                                    "nodeType": "YulLiteral",
                                    "src": "18157:4:5",
                                    "type": "",
                                    "value": "0x12"
                                  }
                                ],
                                "functionName": {
                                  "name": "mstore",
                                  "nodeType": "YulIdentifier",
                                  "src": "18147:6:5"
                                },
                                "nodeType": "YulFunctionCall",
                                "src": "18147:15:5"
                              },
                              "nodeType": "YulExpressionStatement",
                              "src": "18147:15:5"
                            },
                            {
                              "expression": {
                                "arguments": [
                                  {
                                    "kind": "number",
                                    "nodeType": "YulLiteral",
                                    "src": "18178:1:5",
                                    "type": "",
                                    "value": "0"
                                  },
                                  {
                                    "kind": "number",
                                    "nodeType": "YulLiteral",
                                    "src": "18181:4:5",
                                    "type": "",
                                    "value": "0x24"
                                  }
                                ],
                                "functionName": {
                                  "name": "revert",
                                  "nodeType": "YulIdentifier",
                                  "src": "18171:6:5"
                                },
                                "nodeType": "YulFunctionCall",
                                "src": "18171:15:5"
                              },
                              "nodeType": "YulExpressionStatement",
                              "src": "18171:15:5"
                            }
                          ]
                        },
                        "name": "panic_error_0x12",
                        "nodeType": "YulFunctionDefinition",
                        "src": "18065:127:5"
                      },
                      {
                        "body": {
                          "nodeType": "YulBlock",
                          "src": "18243:74:5",
                          "statements": [
                            {
                              "body": {
                                "nodeType": "YulBlock",
                                "src": "18266:22:5",
                                "statements": [
                                  {
                                    "expression": {
                                      "arguments": [],
                                      "functionName": {
                                        "name": "panic_error_0x12",
                                        "nodeType": "YulIdentifier",
                                        "src": "18268:16:5"
                                      },
                                      "nodeType": "YulFunctionCall",
                                      "src": "18268:18:5"
                                    },
                                    "nodeType": "YulExpressionStatement",
                                    "src": "18268:18:5"
                                  }
                                ]
                              },
                              "condition": {
                                "arguments": [
                                  {
                                    "name": "y",
                                    "nodeType": "YulIdentifier",
                                    "src": "18263:1:5"
                                  }
                                ],
                                "functionName": {
                                  "name": "iszero",
                                  "nodeType": "YulIdentifier",
                                  "src": "18256:6:5"
                                },
                                "nodeType": "YulFunctionCall",
                                "src": "18256:9:5"
                              },
                              "nodeType": "YulIf",
                              "src": "18253:35:5"
                            },
                            {
                              "nodeType": "YulAssignment",
                              "src": "18297:14:5",
                              "value": {
                                "arguments": [
                                  {
                                    "name": "x",
                                    "nodeType": "YulIdentifier",
                                    "src": "18306:1:5"
                                  },
                                  {
                                    "name": "y",
                                    "nodeType": "YulIdentifier",
                                    "src": "18309:1:5"
                                  }
                                ],
                                "functionName": {
                                  "name": "div",
                                  "nodeType": "YulIdentifier",
                                  "src": "18302:3:5"
                                },
                                "nodeType": "YulFunctionCall",
                                "src": "18302:9:5"
                              },
                              "variableNames": [
                                {
                                  "name": "r",
                                  "nodeType": "YulIdentifier",
                                  "src": "18297:1:5"
                                }
                              ]
                            }
                          ]
                        },
                        "name": "checked_div_t_uint256",
                        "nodeType": "YulFunctionDefinition",
                        "parameters": [
                          {
                            "name": "x",
                            "nodeType": "YulTypedName",
                            "src": "18228:1:5",
                            "type": ""
                          },
                          {
                            "name": "y",
                            "nodeType": "YulTypedName",
                            "src": "18231:1:5",
                            "type": ""
                          }
                        ],
                        "returnVariables": [
                          {
                            "name": "r",
                            "nodeType": "YulTypedName",
                            "src": "18237:1:5",
                            "type": ""
                          }
                        ],
                        "src": "18197:120:5"
                      },
                      {
                        "body": {
                          "nodeType": "YulBlock",
                          "src": "18360:74:5",
                          "statements": [
                            {
                              "body": {
                                "nodeType": "YulBlock",
                                "src": "18383:22:5",
                                "statements": [
                                  {
                                    "expression": {
                                      "arguments": [],
                                      "functionName": {
                                        "name": "panic_error_0x12",
                                        "nodeType": "YulIdentifier",
                                        "src": "18385:16:5"
                                      },
                                      "nodeType": "YulFunctionCall",
                                      "src": "18385:18:5"
                                    },
                                    "nodeType": "YulExpressionStatement",
                                    "src": "18385:18:5"
                                  }
                                ]
                              },
                              "condition": {
                                "arguments": [
                                  {
                                    "name": "y",
                                    "nodeType": "YulIdentifier",
                                    "src": "18380:1:5"
                                  }
                                ],
                                "functionName": {
                                  "name": "iszero",
                                  "nodeType": "YulIdentifier",
                                  "src": "18373:6:5"
                                },
                                "nodeType": "YulFunctionCall",
                                "src": "18373:9:5"
                              },
                              "nodeType": "YulIf",
                              "src": "18370:35:5"
                            },
                            {
                              "nodeType": "YulAssignment",
                              "src": "18414:14:5",
                              "value": {
                                "arguments": [
                                  {
                                    "name": "x",
                                    "nodeType": "YulIdentifier",
                                    "src": "18423:1:5"
                                  },
                                  {
                                    "name": "y",
                                    "nodeType": "YulIdentifier",
                                    "src": "18426:1:5"
                                  }
                                ],
                                "functionName": {
                                  "name": "mod",
                                  "nodeType": "YulIdentifier",
                                  "src": "18419:3:5"
                                },
                                "nodeType": "YulFunctionCall",
                                "src": "18419:9:5"
                              },
                              "variableNames": [
                                {
                                  "name": "r",
                                  "nodeType": "YulIdentifier",
                                  "src": "18414:1:5"
                                }
                              ]
                            }
                          ]
                        },
                        "name": "mod_t_uint256",
                        "nodeType": "YulFunctionDefinition",
                        "parameters": [
                          {
                            "name": "x",
                            "nodeType": "YulTypedName",
                            "src": "18345:1:5",
                            "type": ""
                          },
                          {
                            "name": "y",
                            "nodeType": "YulTypedName",
                            "src": "18348:1:5",
                            "type": ""
                          }
                        ],
                        "returnVariables": [
                          {
                            "name": "r",
                            "nodeType": "YulTypedName",
                            "src": "18354:1:5",
                            "type": ""
                          }
                        ],
                        "src": "18322:112:5"
                      },
                      {
                        "body": {
                          "nodeType": "YulBlock",
                          "src": "18487:77:5",
                          "statements": [
                            {
                              "nodeType": "YulAssignment",
                              "src": "18497:16:5",
                              "value": {
                                "arguments": [
                                  {
                                    "name": "x",
                                    "nodeType": "YulIdentifier",
                                    "src": "18508:1:5"
                                  },
                                  {
                                    "name": "y",
                                    "nodeType": "YulIdentifier",
                                    "src": "18511:1:5"
                                  }
                                ],
                                "functionName": {
                                  "name": "add",
                                  "nodeType": "YulIdentifier",
                                  "src": "18504:3:5"
                                },
                                "nodeType": "YulFunctionCall",
                                "src": "18504:9:5"
                              },
                              "variableNames": [
                                {
                                  "name": "sum",
                                  "nodeType": "YulIdentifier",
                                  "src": "18497:3:5"
                                }
                              ]
                            },
                            {
                              "body": {
                                "nodeType": "YulBlock",
                                "src": "18536:22:5",
                                "statements": [
                                  {
                                    "expression": {
                                      "arguments": [],
                                      "functionName": {
                                        "name": "panic_error_0x11",
                                        "nodeType": "YulIdentifier",
                                        "src": "18538:16:5"
                                      },
                                      "nodeType": "YulFunctionCall",
                                      "src": "18538:18:5"
                                    },
                                    "nodeType": "YulExpressionStatement",
                                    "src": "18538:18:5"
                                  }
                                ]
                              },
                              "condition": {
                                "arguments": [
                                  {
                                    "name": "x",
                                    "nodeType": "YulIdentifier",
                                    "src": "18528:1:5"
                                  },
                                  {
                                    "name": "sum",
                                    "nodeType": "YulIdentifier",
                                    "src": "18531:3:5"
                                  }
                                ],
                                "functionName": {
                                  "name": "gt",
                                  "nodeType": "YulIdentifier",
                                  "src": "18525:2:5"
                                },
                                "nodeType": "YulFunctionCall",
                                "src": "18525:10:5"
                              },
                              "nodeType": "YulIf",
                              "src": "18522:36:5"
                            }
                          ]
                        },
                        "name": "checked_add_t_uint256",
                        "nodeType": "YulFunctionDefinition",
                        "parameters": [
                          {
                            "name": "x",
                            "nodeType": "YulTypedName",
                            "src": "18470:1:5",
                            "type": ""
                          },
                          {
                            "name": "y",
                            "nodeType": "YulTypedName",
                            "src": "18473:1:5",
                            "type": ""
                          }
                        ],
                        "returnVariables": [
                          {
                            "name": "sum",
                            "nodeType": "YulTypedName",
                            "src": "18479:3:5",
                            "type": ""
                          }
                        ],
                        "src": "18439:125:5"
                      },
                      {
                        "body": {
                          "nodeType": "YulBlock",
                          "src": "18743:168:5",
                          "statements": [
                            {
                              "expression": {
                                "arguments": [
                                  {
                                    "name": "headStart",
                                    "nodeType": "YulIdentifier",
                                    "src": "18760:9:5"
                                  },
                                  {
                                    "kind": "number",
                                    "nodeType": "YulLiteral",
                                    "src": "18771:2:5",
                                    "type": "",
                                    "value": "32"
                                  }
                                ],
                                "functionName": {
                                  "name": "mstore",
                                  "nodeType": "YulIdentifier",
                                  "src": "18753:6:5"
                                },
                                "nodeType": "YulFunctionCall",
                                "src": "18753:21:5"
                              },
                              "nodeType": "YulExpressionStatement",
                              "src": "18753:21:5"
                            },
                            {
                              "expression": {
                                "arguments": [
                                  {
                                    "arguments": [
                                      {
                                        "name": "headStart",
                                        "nodeType": "YulIdentifier",
                                        "src": "18794:9:5"
                                      },
                                      {
                                        "kind": "number",
                                        "nodeType": "YulLiteral",
                                        "src": "18805:2:5",
                                        "type": "",
                                        "value": "32"
                                      }
                                    ],
                                    "functionName": {
                                      "name": "add",
                                      "nodeType": "YulIdentifier",
                                      "src": "18790:3:5"
                                    },
                                    "nodeType": "YulFunctionCall",
                                    "src": "18790:18:5"
                                  },
                                  {
                                    "kind": "number",
                                    "nodeType": "YulLiteral",
                                    "src": "18810:2:5",
                                    "type": "",
                                    "value": "18"
                                  }
                                ],
                                "functionName": {
                                  "name": "mstore",
                                  "nodeType": "YulIdentifier",
                                  "src": "18783:6:5"
                                },
                                "nodeType": "YulFunctionCall",
                                "src": "18783:30:5"
                              },
                              "nodeType": "YulExpressionStatement",
                              "src": "18783:30:5"
                            },
                            {
                              "expression": {
                                "arguments": [
                                  {
                                    "arguments": [
                                      {
                                        "name": "headStart",
                                        "nodeType": "YulIdentifier",
                                        "src": "18833:9:5"
                                      },
                                      {
                                        "kind": "number",
                                        "nodeType": "YulLiteral",
                                        "src": "18844:2:5",
                                        "type": "",
                                        "value": "64"
                                      }
                                    ],
                                    "functionName": {
                                      "name": "add",
                                      "nodeType": "YulIdentifier",
                                      "src": "18829:3:5"
                                    },
                                    "nodeType": "YulFunctionCall",
                                    "src": "18829:18:5"
                                  },
                                  {
                                    "hexValue": "546f6f206d616e792070726f706f73616c73",
                                    "kind": "string",
                                    "nodeType": "YulLiteral",
                                    "src": "18849:20:5",
                                    "type": "",
                                    "value": "Too many proposals"
                                  }
                                ],
                                "functionName": {
                                  "name": "mstore",
                                  "nodeType": "YulIdentifier",
                                  "src": "18822:6:5"
                                },
                                "nodeType": "YulFunctionCall",
                                "src": "18822:48:5"
                              },
                              "nodeType": "YulExpressionStatement",
                              "src": "18822:48:5"
                            },
                            {
                              "nodeType": "YulAssignment",
                              "src": "18879:26:5",
                              "value": {
                                "arguments": [
                                  {
                                    "name": "headStart",
                                    "nodeType": "YulIdentifier",
                                    "src": "18891:9:5"
                                  },
                                  {
                                    "kind": "number",
                                    "nodeType": "YulLiteral",
                                    "src": "18902:2:5",
                                    "type": "",
                                    "value": "96"
                                  }
                                ],
                                "functionName": {
                                  "name": "add",
                                  "nodeType": "YulIdentifier",
                                  "src": "18887:3:5"
                                },
                                "nodeType": "YulFunctionCall",
                                "src": "18887:18:5"
                              },
                              "variableNames": [
                                {
                                  "name": "tail",
                                  "nodeType": "YulIdentifier",
                                  "src": "18879:4:5"
                                }
                              ]
                            }
                          ]
                        },
                        "name": "abi_encode_tuple_t_stringliteral_2db7cd1b4eea613955c7b12727741acc45d26baff48337119768869e1737afa9__to_t_string_memory_ptr__fromStack_reversed",
                        "nodeType": "YulFunctionDefinition",
                        "parameters": [
                          {
                            "name": "headStart",
                            "nodeType": "YulTypedName",
                            "src": "18720:9:5",
                            "type": ""
                          }
                        ],
                        "returnVariables": [
                          {
                            "name": "tail",
                            "nodeType": "YulTypedName",
                            "src": "18734:4:5",
                            "type": ""
                          }
                        ],
                        "src": "18569:342:5"
                      },
                      {
                        "body": {
                          "nodeType": "YulBlock",
                          "src": "18961:130:5",
                          "statements": [
                            {
                              "nodeType": "YulVariableDeclaration",
                              "src": "18971:31:5",
                              "value": {
                                "arguments": [
                                  {
                                    "name": "value",
                                    "nodeType": "YulIdentifier",
                                    "src": "18990:5:5"
                                  },
                                  {
                                    "kind": "number",
                                    "nodeType": "YulLiteral",
                                    "src": "18997:4:5",
                                    "type": "",
                                    "value": "0xff"
                                  }
                                ],
                                "functionName": {
                                  "name": "and",
                                  "nodeType": "YulIdentifier",
                                  "src": "18986:3:5"
                                },
                                "nodeType": "YulFunctionCall",
                                "src": "18986:16:5"
                              },
                              "variables": [
                                {
                                  "name": "value_1",
                                  "nodeType": "YulTypedName",
                                  "src": "18975:7:5",
                                  "type": ""
                                }
                              ]
                            },
                            {
                              "body": {
                                "nodeType": "YulBlock",
                                "src": "19032:22:5",
                                "statements": [
                                  {
                                    "expression": {
                                      "arguments": [],
                                      "functionName": {
                                        "name": "panic_error_0x11",
                                        "nodeType": "YulIdentifier",
                                        "src": "19034:16:5"
                                      },
                                      "nodeType": "YulFunctionCall",
                                      "src": "19034:18:5"
                                    },
                                    "nodeType": "YulExpressionStatement",
                                    "src": "19034:18:5"
                                  }
                                ]
                              },
                              "condition": {
                                "arguments": [
                                  {
                                    "name": "value_1",
                                    "nodeType": "YulIdentifier",
                                    "src": "19017:7:5"
                                  },
                                  {
                                    "kind": "number",
                                    "nodeType": "YulLiteral",
                                    "src": "19026:4:5",
                                    "type": "",
                                    "value": "0xff"
                                  }
                                ],
                                "functionName": {
                                  "name": "eq",
                                  "nodeType": "YulIdentifier",
                                  "src": "19014:2:5"
                                },
                                "nodeType": "YulFunctionCall",
                                "src": "19014:17:5"
                              },
                              "nodeType": "YulIf",
                              "src": "19011:43:5"
                            },
                            {
                              "nodeType": "YulAssignment",
                              "src": "19063:22:5",
                              "value": {
                                "arguments": [
                                  {
                                    "name": "value_1",
                                    "nodeType": "YulIdentifier",
                                    "src": "19074:7:5"
                                  },
                                  {
                                    "kind": "number",
                                    "nodeType": "YulLiteral",
                                    "src": "19083:1:5",
                                    "type": "",
                                    "value": "1"
                                  }
                                ],
                                "functionName": {
                                  "name": "add",
                                  "nodeType": "YulIdentifier",
                                  "src": "19070:3:5"
                                },
                                "nodeType": "YulFunctionCall",
                                "src": "19070:15:5"
                              },
                              "variableNames": [
                                {
                                  "name": "ret",
                                  "nodeType": "YulIdentifier",
                                  "src": "19063:3:5"
                                }
                              ]
                            }
                          ]
                        },
                        "name": "increment_t_uint8",
                        "nodeType": "YulFunctionDefinition",
                        "parameters": [
                          {
                            "name": "value",
                            "nodeType": "YulTypedName",
                            "src": "18943:5:5",
                            "type": ""
                          }
                        ],
                        "returnVariables": [
                          {
                            "name": "ret",
                            "nodeType": "YulTypedName",
                            "src": "18953:3:5",
                            "type": ""
                          }
                        ],
                        "src": "18916:175:5"
                      },
                      {
                        "body": {
                          "nodeType": "YulBlock",
                          "src": "19238:161:5",
                          "statements": [
                            {
                              "expression": {
                                "arguments": [
                                  {
                                    "name": "headStart",
                                    "nodeType": "YulIdentifier",
                                    "src": "19255:9:5"
                                  },
                                  {
                                    "arguments": [
                                      {
                                        "name": "value0",
                                        "nodeType": "YulIdentifier",
                                        "src": "19270:6:5"
                                      },
                                      {
                                        "kind": "number",
                                        "nodeType": "YulLiteral",
                                        "src": "19278:4:5",
                                        "type": "",
                                        "value": "0xff"
                                      }
                                    ],
                                    "functionName": {
                                      "name": "and",
                                      "nodeType": "YulIdentifier",
                                      "src": "19266:3:5"
                                    },
                                    "nodeType": "YulFunctionCall",
                                    "src": "19266:17:5"
                                  }
                                ],
                                "functionName": {
                                  "name": "mstore",
                                  "nodeType": "YulIdentifier",
                                  "src": "19248:6:5"
                                },
                                "nodeType": "YulFunctionCall",
                                "src": "19248:36:5"
                              },
                              "nodeType": "YulExpressionStatement",
                              "src": "19248:36:5"
                            },
                            {
                              "expression": {
                                "arguments": [
                                  {
                                    "arguments": [
                                      {
                                        "name": "headStart",
                                        "nodeType": "YulIdentifier",
                                        "src": "19304:9:5"
                                      },
                                      {
                                        "kind": "number",
                                        "nodeType": "YulLiteral",
                                        "src": "19315:2:5",
                                        "type": "",
                                        "value": "32"
                                      }
                                    ],
                                    "functionName": {
                                      "name": "add",
                                      "nodeType": "YulIdentifier",
                                      "src": "19300:3:5"
                                    },
                                    "nodeType": "YulFunctionCall",
                                    "src": "19300:18:5"
                                  },
                                  {
                                    "kind": "number",
                                    "nodeType": "YulLiteral",
                                    "src": "19320:2:5",
                                    "type": "",
                                    "value": "64"
                                  }
                                ],
                                "functionName": {
                                  "name": "mstore",
                                  "nodeType": "YulIdentifier",
                                  "src": "19293:6:5"
                                },
                                "nodeType": "YulFunctionCall",
                                "src": "19293:30:5"
                              },
                              "nodeType": "YulExpressionStatement",
                              "src": "19293:30:5"
                            },
                            {
                              "nodeType": "YulAssignment",
                              "src": "19332:61:5",
                              "value": {
                                "arguments": [
                                  {
                                    "name": "value1",
                                    "nodeType": "YulIdentifier",
                                    "src": "19366:6:5"
                                  },
                                  {
                                    "arguments": [
                                      {
                                        "name": "headStart",
                                        "nodeType": "YulIdentifier",
                                        "src": "19378:9:5"
                                      },
                                      {
                                        "kind": "number",
                                        "nodeType": "YulLiteral",
                                        "src": "19389:2:5",
                                        "type": "",
                                        "value": "64"
                                      }
                                    ],
                                    "functionName": {
                                      "name": "add",
                                      "nodeType": "YulIdentifier",
                                      "src": "19374:3:5"
                                    },
                                    "nodeType": "YulFunctionCall",
                                    "src": "19374:18:5"
                                  }
                                ],
                                "functionName": {
                                  "name": "abi_encode_string_storage",
                                  "nodeType": "YulIdentifier",
                                  "src": "19340:25:5"
                                },
                                "nodeType": "YulFunctionCall",
                                "src": "19340:53:5"
                              },
                              "variableNames": [
                                {
                                  "name": "tail",
                                  "nodeType": "YulIdentifier",
                                  "src": "19332:4:5"
                                }
                              ]
                            }
                          ]
                        },
                        "name": "abi_encode_tuple_t_uint8_t_string_storage__to_t_uint8_t_string_memory_ptr__fromStack_reversed",
                        "nodeType": "YulFunctionDefinition",
                        "parameters": [
                          {
                            "name": "headStart",
                            "nodeType": "YulTypedName",
                            "src": "19199:9:5",
                            "type": ""
                          },
                          {
                            "name": "value1",
                            "nodeType": "YulTypedName",
                            "src": "19210:6:5",
                            "type": ""
                          },
                          {
                            "name": "value0",
                            "nodeType": "YulTypedName",
                            "src": "19218:6:5",
                            "type": ""
                          }
                        ],
                        "returnVariables": [
                          {
                            "name": "tail",
                            "nodeType": "YulTypedName",
                            "src": "19229:4:5",
                            "type": ""
                          }
                        ],
                        "src": "19096:303:5"
                      }
                    ]
                  },
                  "contents": "{\n    { }\n    function abi_decode_string_calldata(offset, end) -> arrayPos, length\n    {\n        if iszero(slt(add(offset, 0x1f), end)) { revert(0, 0) }\n        length := calldataload(offset)\n        if gt(length, 0xffffffffffffffff) { revert(0, 0) }\n        arrayPos := add(offset, 0x20)\n        if gt(add(add(offset, length), 0x20), end) { revert(0, 0) }\n    }\n    function abi_decode_tuple_t_string_calldata_ptrt_string_calldata_ptr(headStart, dataEnd) -> value0, value1, value2, value3\n    {\n        if slt(sub(dataEnd, headStart), 64) { revert(0, 0) }\n        let offset := calldataload(headStart)\n        let _1 := 0xffffffffffffffff\n        if gt(offset, _1) { revert(0, 0) }\n        let value0_1, value1_1 := abi_decode_string_calldata(add(headStart, offset), dataEnd)\n        value0 := value0_1\n        value1 := value1_1\n        let offset_1 := calldataload(add(headStart, 32))\n        if gt(offset_1, _1) { revert(0, 0) }\n        let value2_1, value3_1 := abi_decode_string_calldata(add(headStart, offset_1), dataEnd)\n        value2 := value2_1\n        value3 := value3_1\n    }\n    function abi_decode_tuple_t_uint256(headStart, dataEnd) -> value0\n    {\n        if slt(sub(dataEnd, headStart), 32) { revert(0, 0) }\n        value0 := calldataload(headStart)\n    }\n    function copy_memory_to_memory_with_cleanup(src, dst, length)\n    {\n        let i := 0\n        for { } lt(i, length) { i := add(i, 32) }\n        {\n            mstore(add(dst, i), mload(add(src, i)))\n        }\n        mstore(add(dst, length), 0)\n    }\n    function abi_encode_string(value, pos) -> end\n    {\n        let length := mload(value)\n        mstore(pos, length)\n        copy_memory_to_memory_with_cleanup(add(value, 0x20), add(pos, 0x20), length)\n        end := add(add(pos, and(add(length, 31), not(31))), 0x20)\n    }\n    function abi_encode_tuple_t_array$_t_struct$_Proposal_$391_memory_ptr_$dyn_memory_ptr__to_t_array$_t_struct$_Proposal_$391_memory_ptr_$dyn_memory_ptr__fromStack_reversed(headStart, value0) -> tail\n    {\n        let _1 := 32\n        let tail_1 := add(headStart, _1)\n        mstore(headStart, _1)\n        let pos := tail_1\n        let length := mload(value0)\n        mstore(tail_1, length)\n        let _2 := 64\n        pos := add(headStart, _2)\n        let tail_2 := add(add(headStart, shl(5, length)), _2)\n        let srcPtr := add(value0, _1)\n        let i := 0\n        for { } lt(i, length) { i := add(i, 1) }\n        {\n            mstore(pos, add(sub(tail_2, headStart), not(63)))\n            let _3 := mload(srcPtr)\n            let _4 := 0x60\n            let memberValue0 := mload(_3)\n            mstore(tail_2, _4)\n            let tail_3 := abi_encode_string(memberValue0, add(tail_2, _4))\n            mstore(add(tail_2, _1), mload(add(_3, _1)))\n            mstore(add(tail_2, _2), and(mload(add(_3, _2)), sub(shl(160, 1), 1)))\n            tail_2 := tail_3\n            srcPtr := add(srcPtr, _1)\n            pos := add(pos, _1)\n        }\n        tail := tail_2\n    }\n    function abi_decode_tuple_t_uint256t_string_calldata_ptr(headStart, dataEnd) -> value0, value1, value2\n    {\n        if slt(sub(dataEnd, headStart), 64) { revert(0, 0) }\n        value0 := calldataload(headStart)\n        let offset := calldataload(add(headStart, 32))\n        if gt(offset, 0xffffffffffffffff) { revert(0, 0) }\n        let value1_1, value2_1 := abi_decode_string_calldata(add(headStart, offset), dataEnd)\n        value1 := value1_1\n        value2 := value2_1\n    }\n    function abi_encode_tuple_t_address__to_t_address__fromStack_reversed(headStart, value0) -> tail\n    {\n        tail := add(headStart, 32)\n        mstore(headStart, and(value0, sub(shl(160, 1), 1)))\n    }\n    function abi_decode_tuple_t_uint256t_uint8(headStart, dataEnd) -> value0, value1\n    {\n        if slt(sub(dataEnd, headStart), 64) { revert(0, 0) }\n        value0 := calldataload(headStart)\n        let value := calldataload(add(headStart, 32))\n        if iszero(eq(value, and(value, 0xff))) { revert(0, 0) }\n        value1 := value\n    }\n    function abi_decode_address(offset) -> value\n    {\n        value := calldataload(offset)\n        if iszero(eq(value, and(value, sub(shl(160, 1), 1)))) { revert(0, 0) }\n    }\n    function abi_decode_tuple_t_uint256t_address(headStart, dataEnd) -> value0, value1\n    {\n        if slt(sub(dataEnd, headStart), 64) { revert(0, 0) }\n        value0 := calldataload(headStart)\n        value1 := abi_decode_address(add(headStart, 32))\n    }\n    function abi_encode_tuple_t_uint8__to_t_uint8__fromStack_reversed(headStart, value0) -> tail\n    {\n        tail := add(headStart, 32)\n        mstore(headStart, and(value0, 0xff))\n    }\n    function abi_decode_tuple_t_address(headStart, dataEnd) -> value0\n    {\n        if slt(sub(dataEnd, headStart), 32) { revert(0, 0) }\n        value0 := abi_decode_address(headStart)\n    }\n    function panic_error_0x21()\n    {\n        mstore(0, shl(224, 0x4e487b71))\n        mstore(4, 0x21)\n        revert(0, 0x24)\n    }\n    function abi_encode_string_calldata(start, length, pos) -> end\n    {\n        mstore(pos, length)\n        calldatacopy(add(pos, 0x20), start, length)\n        mstore(add(add(pos, length), 0x20), 0)\n        end := add(add(pos, and(add(length, 31), not(31))), 0x20)\n    }\n    function abi_encode_tuple_t_string_calldata_ptr_t_string_calldata_ptr__to_t_string_memory_ptr_t_string_memory_ptr__fromStack_reversed(headStart, value3, value2, value1, value0) -> tail\n    {\n        mstore(headStart, 64)\n        let tail_1 := abi_encode_string_calldata(value0, value1, add(headStart, 64))\n        mstore(add(headStart, 32), sub(tail_1, headStart))\n        tail := abi_encode_string_calldata(value2, value3, tail_1)\n    }\n    function abi_encode_enum_WorkflowStatus(value, pos)\n    {\n        if iszero(lt(value, 7))\n        {\n            mstore(0, shl(224, 0x4e487b71))\n            mstore(4, 0x21)\n            revert(0, 0x24)\n        }\n        mstore(pos, value)\n    }\n    function abi_encode_tuple_t_enum$_WorkflowStatus_$375_t_enum$_WorkflowStatus_$375__to_t_uint8_t_uint8__fromStack_reversed(headStart, value1, value0) -> tail\n    {\n        tail := add(headStart, 64)\n        abi_encode_enum_WorkflowStatus(value0, headStart)\n        abi_encode_enum_WorkflowStatus(value1, add(headStart, 32))\n    }\n    function panic_error_0x11()\n    {\n        mstore(0, shl(224, 0x4e487b71))\n        mstore(4, 0x11)\n        revert(0, 0x24)\n    }\n    function increment_t_uint256(value) -> ret\n    {\n        if eq(value, not(0)) { panic_error_0x11() }\n        ret := add(value, 1)\n    }\n    function abi_encode_tuple_packed_t_stringliteral_3d620b44d0ea3d0fd41b8141758febf894dd941858e027857ca07a3929ff2892_t_string_memory_ptr_t_stringliteral_3fd9b0dcd722604cd4fd85d779090fb081569f1da68546e1c1a84a77cdcb3486_t_string_memory_ptr__to_t_string_memory_ptr_t_string_memory_ptr_t_bytes9_t_string_memory_ptr__nonPadded_inplace_fromStack_reversed(pos, value1, value0) -> end\n    {\n        mstore(pos, \"Unexpected voting session status\")\n        mstore(add(pos, 32), \": expected=\")\n        let length := mload(value0)\n        copy_memory_to_memory_with_cleanup(add(value0, 32), add(pos, 43), length)\n        let _1 := add(pos, length)\n        mstore(add(_1, 43), \" current=\")\n        let length_1 := mload(value1)\n        copy_memory_to_memory_with_cleanup(add(value1, 32), add(_1, 52), length_1)\n        end := add(add(_1, length_1), 52)\n    }\n    function abi_encode_tuple_t_string_memory_ptr__to_t_string_memory_ptr__fromStack_reversed(headStart, value0) -> tail\n    {\n        mstore(headStart, 32)\n        tail := abi_encode_string(value0, add(headStart, 32))\n    }\n    function panic_error_0x41()\n    {\n        mstore(0, shl(224, 0x4e487b71))\n        mstore(4, 0x41)\n        revert(0, 0x24)\n    }\n    function panic_error_0x32()\n    {\n        mstore(0, shl(224, 0x4e487b71))\n        mstore(4, 0x32)\n        revert(0, 0x24)\n    }\n    function extract_byte_array_length(data) -> length\n    {\n        length := shr(1, data)\n        let outOfPlaceEncoding := and(data, 1)\n        if iszero(outOfPlaceEncoding) { length := and(length, 0x7f) }\n        if eq(outOfPlaceEncoding, lt(length, 32))\n        {\n            mstore(0, shl(224, 0x4e487b71))\n            mstore(4, 0x22)\n            revert(0, 0x24)\n        }\n    }\n    function checked_sub_t_uint256(x, y) -> diff\n    {\n        diff := sub(x, y)\n        if gt(diff, x) { panic_error_0x11() }\n    }\n    function array_dataslot_string_storage(ptr) -> data\n    {\n        mstore(0, ptr)\n        data := keccak256(0, 0x20)\n    }\n    function clean_up_bytearray_end_slots_string_storage(array, len, startIndex)\n    {\n        if gt(len, 31)\n        {\n            let _1 := 0\n            mstore(_1, array)\n            let data := keccak256(_1, 0x20)\n            let deleteStart := add(data, shr(5, add(startIndex, 31)))\n            if lt(startIndex, 0x20) { deleteStart := data }\n            let _2 := add(data, shr(5, add(len, 31)))\n            let start := deleteStart\n            for { } lt(start, _2) { start := add(start, 1) }\n            { sstore(start, _1) }\n        }\n    }\n    function extract_used_part_and_set_length_of_short_byte_array(data, len) -> used\n    {\n        used := or(and(data, not(shr(shl(3, len), not(0)))), shl(1, len))\n    }\n    function copy_byte_array_to_storage_from_t_string_memory_ptr_to_t_string_storage(slot, src)\n    {\n        let newLen := mload(src)\n        if gt(newLen, 0xffffffffffffffff) { panic_error_0x41() }\n        clean_up_bytearray_end_slots_string_storage(slot, extract_byte_array_length(sload(slot)), newLen)\n        let srcOffset := 0\n        let srcOffset_1 := 0x20\n        srcOffset := srcOffset_1\n        switch gt(newLen, 31)\n        case 1 {\n            let loopEnd := and(newLen, not(31))\n            let dstPtr := array_dataslot_string_storage(slot)\n            let i := 0\n            for { } lt(i, loopEnd) { i := add(i, srcOffset_1) }\n            {\n                sstore(dstPtr, mload(add(src, srcOffset)))\n                dstPtr := add(dstPtr, 1)\n                srcOffset := add(srcOffset, srcOffset_1)\n            }\n            if lt(loopEnd, newLen)\n            {\n                let lastValue := mload(add(src, srcOffset))\n                sstore(dstPtr, and(lastValue, not(shr(and(shl(3, newLen), 248), not(0)))))\n            }\n            sstore(slot, add(shl(1, newLen), 1))\n        }\n        default {\n            let value := 0\n            if newLen\n            {\n                value := mload(add(src, srcOffset))\n            }\n            sstore(slot, extract_used_part_and_set_length_of_short_byte_array(value, newLen))\n        }\n    }\n    function abi_encode_string_storage(value, pos) -> ret\n    {\n        let slotValue := sload(value)\n        let length := extract_byte_array_length(slotValue)\n        mstore(pos, length)\n        let _1 := 0x20\n        let _2 := 1\n        switch and(slotValue, _2)\n        case 0 {\n            mstore(add(pos, _1), and(slotValue, not(255)))\n            ret := add(add(pos, shl(5, iszero(iszero(length)))), _1)\n        }\n        case 1 {\n            mstore(0, value)\n            let dataPos := keccak256(0, _1)\n            let i := 0\n            for { } lt(i, length) { i := add(i, _1) }\n            {\n                mstore(add(add(pos, i), _1), sload(dataPos))\n                dataPos := add(dataPos, _2)\n            }\n            ret := add(add(pos, i), _1)\n        }\n    }\n    function abi_encode_tuple_t_uint256_t_uint256_t_uint256_t_uint256_t_array$_t_struct$_Proposal_$391_storage_$dyn_storage__to_t_uint256_t_uint256_t_uint256_t_uint256_t_array$_t_struct$_Proposal_$391_memory_ptr_$dyn_memory_ptr__fromStack_reversed(headStart, value4, value3, value2, value1, value0) -> tail\n    {\n        let tail_1 := add(headStart, 160)\n        mstore(headStart, value0)\n        let _1 := 32\n        mstore(add(headStart, _1), value1)\n        let _2 := 64\n        mstore(add(headStart, _2), value2)\n        let _3 := 96\n        mstore(add(headStart, _3), value3)\n        mstore(add(headStart, 128), 160)\n        let pos := tail_1\n        let length := sload(value4)\n        mstore(tail_1, length)\n        pos := add(headStart, 192)\n        let tail_2 := add(add(headStart, shl(5, length)), 192)\n        mstore(0, value4)\n        let srcPtr := keccak256(0, _1)\n        let i := 0\n        for { } lt(i, length) { i := add(i, 1) }\n        {\n            mstore(pos, add(sub(tail_2, headStart), not(191)))\n            mstore(tail_2, _3)\n            let tail_3 := abi_encode_string_storage(srcPtr, add(tail_2, _3))\n            mstore(add(tail_2, _1), sload(add(srcPtr, 1)))\n            mstore(add(tail_2, _2), and(sload(add(srcPtr, 0x02)), sub(shl(160, 1), 1)))\n            tail_2 := tail_3\n            srcPtr := add(srcPtr, 0x03)\n            pos := add(pos, _1)\n        }\n        tail := tail_2\n    }\n    function abi_encode_tuple_t_stringliteral_e2d7f4077014c8d9c3924edb65e2097550f445392084f495b9e627f6cbbf2ee1__to_t_string_memory_ptr__fromStack_reversed(headStart) -> tail\n    {\n        mstore(headStart, 32)\n        mstore(add(headStart, 32), 39)\n        mstore(add(headStart, 64), \"Caller is not owner or registere\")\n        mstore(add(headStart, 96), \"d voter\")\n        tail := add(headStart, 128)\n    }\n    function abi_encode_tuple_packed_t_stringliteral_8f119cfc6e611f08fd8a52f700c95b25100149c739be9a9b6e45b3e14ffb0039_t_string_memory_ptr_t_stringliteral_3fd9b0dcd722604cd4fd85d779090fb081569f1da68546e1c1a84a77cdcb3486_t_string_memory_ptr__to_t_string_memory_ptr_t_string_memory_ptr_t_bytes9_t_string_memory_ptr__nonPadded_inplace_fromStack_reversed(pos, value1, value0) -> end\n    {\n        mstore(pos, \"Unexpected voting session status\")\n        mstore(add(pos, 32), \": expected>=\")\n        let length := mload(value0)\n        copy_memory_to_memory_with_cleanup(add(value0, 32), add(pos, 44), length)\n        let _1 := add(pos, length)\n        mstore(add(_1, 44), \" current=\")\n        let length_1 := mload(value1)\n        copy_memory_to_memory_with_cleanup(add(value1, 32), add(_1, 53), length_1)\n        end := add(add(_1, length_1), 53)\n    }\n    function abi_encode_tuple_t_stringliteral_901549ad31b8a07c18007564a6bf9799e1366f1381f124f7443a4d46aa1f7276__to_t_string_memory_ptr__fromStack_reversed(headStart) -> tail\n    {\n        mstore(headStart, 32)\n        mstore(add(headStart, 32), 30)\n        mstore(add(headStart, 64), \"Caller is not registered voter\")\n        tail := add(headStart, 96)\n    }\n    function abi_encode_tuple_t_stringliteral_d24d376fc3ad7408358c4aa13f0947d07c04aac09c9f911a7015829a44041ee6__to_t_string_memory_ptr__fromStack_reversed(headStart) -> tail\n    {\n        mstore(headStart, 32)\n        mstore(add(headStart, 32), 59)\n        mstore(add(headStart, 64), \"You already posted 3 proposals w\")\n        mstore(add(headStart, 96), \"hich is the maximum allowed\")\n        tail := add(headStart, 128)\n    }\n    function abi_encode_tuple_t_stringliteral_b5b832c47e2f8575ded4ab7736997e2d3cd77de518ea3cc88b64a21464bbf6a2__to_t_string_memory_ptr__fromStack_reversed(headStart) -> tail\n    {\n        mstore(headStart, 32)\n        mstore(add(headStart, 32), 23)\n        mstore(add(headStart, 64), \"Voter has already voted\")\n        tail := add(headStart, 96)\n    }\n    function abi_encode_tuple_packed_t_stringliteral_95941de2cf661822a59b247d118deba693dab348b1a72d43aed94ab15dfa3818_t_string_memory_ptr_t_stringliteral_881a7c6e0d9cc1bef9dcc51a5535d0791dc9ce94b16aca73a1ce8b4583026adb__to_t_bytes9_t_string_memory_ptr_t_bytes15__nonPadded_inplace_fromStack_reversed(pos, value0) -> end\n    {\n        mstore(pos, \"Proposal \")\n        let length := mload(value0)\n        copy_memory_to_memory_with_cleanup(add(value0, 0x20), add(pos, 9), length)\n        let _1 := add(pos, length)\n        mstore(add(_1, 9), \" does not exist\")\n        end := add(_1, 24)\n    }\n    function abi_encode_tuple_t_stringliteral_89875bf1134a296a98c92d31fb973ed2f2db2e6066c7892071b73ccbbecdb855__to_t_string_memory_ptr__fromStack_reversed(headStart) -> tail\n    {\n        mstore(headStart, 32)\n        mstore(add(headStart, 32), 41)\n        mstore(add(headStart, 64), \"A voter can not vote for its own\")\n        mstore(add(headStart, 96), \" proposal\")\n        tail := add(headStart, 128)\n    }\n    function abi_encode_tuple_t_stringliteral_c2b306736cf2f0443edc2a88db6aa1550013162c69422af0169a5e9d5a7a35c7__to_t_string_memory_ptr__fromStack_reversed(headStart) -> tail\n    {\n        mstore(headStart, 32)\n        mstore(add(headStart, 32), 41)\n        mstore(add(headStart, 64), \"First proposal is reserved for a\")\n        mstore(add(headStart, 96), \"bstention\")\n        tail := add(headStart, 128)\n    }\n    function abi_encode_tuple_t_stringliteral_af5af23e3c6fc76fa379e0ec8f7f048042477a9c0a3e8410137eac64bbeeebe7__to_t_string_memory_ptr__fromStack_reversed(headStart) -> tail\n    {\n        mstore(headStart, 32)\n        mstore(add(headStart, 32), 24)\n        mstore(add(headStart, 64), \"Owner can not be a voter\")\n        tail := add(headStart, 96)\n    }\n    function abi_encode_tuple_t_stringliteral_a82e95e5ee84cc506f04f82fd65efe3a0cb2fd2e22975dc3a1b4006058d94650__to_t_string_memory_ptr__fromStack_reversed(headStart) -> tail\n    {\n        mstore(headStart, 32)\n        mstore(add(headStart, 32), 27)\n        mstore(add(headStart, 64), \"Voter is already registered\")\n        tail := add(headStart, 96)\n    }\n    function abi_encode_tuple_t_stringliteral_245f15ff17f551913a7a18385165551503906a406f905ac1c2437281a7cd0cfe__to_t_string_memory_ptr__fromStack_reversed(headStart) -> tail\n    {\n        mstore(headStart, 32)\n        mstore(add(headStart, 32), 38)\n        mstore(add(headStart, 64), \"Ownable: new owner is the zero a\")\n        mstore(add(headStart, 96), \"ddress\")\n        tail := add(headStart, 128)\n    }\n    function abi_encode_tuple_t_stringliteral_9924ebdf1add33d25d4ef888e16131f0a5687b0580a36c21b5c301a6c462effe__to_t_string_memory_ptr__fromStack_reversed(headStart) -> tail\n    {\n        mstore(headStart, 32)\n        mstore(add(headStart, 32), 32)\n        mstore(add(headStart, 64), \"Ownable: caller is not the owner\")\n        tail := add(headStart, 96)\n    }\n    function panic_error_0x12()\n    {\n        mstore(0, shl(224, 0x4e487b71))\n        mstore(4, 0x12)\n        revert(0, 0x24)\n    }\n    function checked_div_t_uint256(x, y) -> r\n    {\n        if iszero(y) { panic_error_0x12() }\n        r := div(x, y)\n    }\n    function mod_t_uint256(x, y) -> r\n    {\n        if iszero(y) { panic_error_0x12() }\n        r := mod(x, y)\n    }\n    function checked_add_t_uint256(x, y) -> sum\n    {\n        sum := add(x, y)\n        if gt(x, sum) { panic_error_0x11() }\n    }\n    function abi_encode_tuple_t_stringliteral_2db7cd1b4eea613955c7b12727741acc45d26baff48337119768869e1737afa9__to_t_string_memory_ptr__fromStack_reversed(headStart) -> tail\n    {\n        mstore(headStart, 32)\n        mstore(add(headStart, 32), 18)\n        mstore(add(headStart, 64), \"Too many proposals\")\n        tail := add(headStart, 96)\n    }\n    function increment_t_uint8(value) -> ret\n    {\n        let value_1 := and(value, 0xff)\n        if eq(value_1, 0xff) { panic_error_0x11() }\n        ret := add(value_1, 1)\n    }\n    function abi_encode_tuple_t_uint8_t_string_storage__to_t_uint8_t_string_memory_ptr__fromStack_reversed(headStart, value1, value0) -> tail\n    {\n        mstore(headStart, and(value0, 0xff))\n        mstore(add(headStart, 32), 64)\n        tail := abi_encode_string_storage(value1, add(headStart, 64))\n    }\n}",
                  "id": 5,
                  "language": "Yul",
                  "name": "#utility.yul"
                }
              ],
              "immutableReferences": {},
              "linkReferences": {},
              "object": "608060405234801561001057600080fd5b50600436106100ea5760003560e01c80638da5cb5b1161008c5780639980a55a116100665780639980a55a146101c2578063bc3f931f146101d5578063c82de38f146101fa578063f2fde38b1461020d57600080fd5b80638da5cb5b14610181578063943e82161461019c57806394c790bb146101af57600080fd5b80636f3dc556116100c85780636f3dc55614610140578063715018a6146101535780637ace41841461015b5780638bc6a6dd1461016e57600080fd5b8063153bc95b146100ef5780634d318b0e146101045780636b1426a414610117575b600080fd5b6101026100fd366004611d2b565b610220565b005b610102610112366004611d97565b6102d0565b61012a610125366004611d97565b610954565b6040516101379190611e00565b60405180910390f35b61010261014e366004611d97565b610b7b565b610102610c71565b610102610169366004611e8a565b610c85565b61010261017c366004611d97565b610e79565b6000546040516001600160a01b039091168152602001610137565b6101026101aa366004611ed6565b610fb7565b6101026101bd366004611f28565b611378565b6101026101d0366004611d97565b6115f5565b6101e86101e3366004611f28565b6116de565b60405160ff9091168152602001610137565b610102610208366004611d97565b61181c565b61010261021b366004611f54565b611905565b61022861197e565b6002546000908152600160208190526040909120805460ff1916828002179055506002547fb824462ec90945eb31146c1c4ce6515d44b184facb795bea5d1f52355b243f8b858585856040516102819493929190611fb5565b60405180910390a2600254600080516020612538833981519152600060016040516102ad929190612009565b60405180910390a2600280549060006102c58361203a565b919050555050505050565b6102d861197e565b8060058060008381526001602052604090205460ff1660068111156102ff576102ff611f76565b1461031a82600681111561031557610315611f76565b6119d8565b6000848152600160205260409020546103419060ff16600681111561031557610315611f76565b604051602001610352929190612053565b604051602081830303815290604052906103885760405162461bcd60e51b815260040161037f91906120d4565b60405180910390fd5b506000838152600160205260408120600401548190819067ffffffffffffffff8111156103b7576103b76120e7565b60405190808252806020026020018201604052801561041557816020015b6104026040518060600160405280606081526020016000815260200160006001600160a01b031681525090565b8152602001906001900390816103d55790505b50905060025b60008781526001602052604090206004015481101561077c57600087815260016020526040902060040180548591908390811061045a5761045a6120fd565b90600052602060002090600302016001015411156105ca576000878152600160205260409020600401805482908110610495576104956120fd565b9060005260206000209060030201600101549350600192506001600088815260200190815260200160002060040181815481106104d4576104d46120fd565b90600052602060002090600302016040518060600160405290816000820180546104fd90612113565b80601f016020809104026020016040519081016040528092919081815260200182805461052990612113565b80156105765780601f1061054b57610100808354040283529160200191610576565b820191906000526020600020905b81548152906001019060200180831161055957829003601f168201915b505050918352505060018281015460208301526002909201546001600160a01b031660409091015283906105aa908661214d565b815181106105ba576105ba6120fd565b602002602001018190525061076a565b60008781526001602052604081206004018054839081106105ed576105ed6120fd565b9060005260206000209060030201600101541180156106415750600087815260016020526040902060040180548591908390811061062d5761062d6120fd565b906000526020600020906003020160010154145b1561076a57826106508161203a565b60008981526001602052604090206004018054919550915082908110610678576106786120fd565b90600052602060002090600302016040518060600160405290816000820180546106a190612113565b80601f01602080910402602001604051908101604052809291908181526020018280546106cd90612113565b801561071a5780601f106106ef5761010080835404028352916020019161071a565b820191906000526020600020905b8154815290600101906020018083116106fd57829003601f168201915b505050918352505060018281015460208301526002909201546001600160a01b0316604090910152839061074e908661214d565b8151811061075e5761075e6120fd565b60200260200101819052505b806107748161203a565b91505061041b565b5060005b8281101561082757600160008881526020019081526020016000206005018282815181106107b0576107b06120fd565b602090810291909101810151825460018101845560009384529190922082516003909202019081906107e290826121b1565b5060208201516001820155604090910151600290910180546001600160a01b0319166001600160a01b039092169190911790558061081f8161203a565b915050610780565b5060008681526001602052604090819020805460ff19166006908117909155905187916000805160206125388339815191529161086691600591612009565b60405180910390a260008681526001602052604081206002015461088b5760006108ae565b600087815260016020526040902060038101546002909101546108ae919061214d565b600088815260016020819052604090912060028101546003820154600490920180549495508b947f8231621024a2914f448f5821e1168fa08ea32be09db6a89d94e306e0352d12f494929392908110610909576109096120fd565b90600052602060002090600302016001015485600160008e81526020019081526020016000206005016040516109439594939291906122ee565b60405180910390a250505050505050565b6060813361096a6000546001600160a01b031690565b6001600160a01b0316148061099a57506000818152600160208181526040808420338552909201905290205460ff165b6109b65760405162461bcd60e51b815260040161037f90612398565b8260068060008381526001602052604090205460ff1660068111156109dd576109dd611f76565b10156109f482600681111561031557610315611f76565b600084815260016020526040902054610a1b9060ff16600681111561031557610315611f76565b604051602001610a2c9291906123df565b60405160208183030381529060405290610a595760405162461bcd60e51b815260040161037f91906120d4565b50600085815260016020908152604080832060050180548251818502810185019093528083529193909284015b82821015610b6d5783829060005260206000209060030201604051806060016040529081600082018054610ab990612113565b80601f0160208091040260200160405190810160405280929190818152602001828054610ae590612113565b8015610b325780601f10610b0757610100808354040283529160200191610b32565b820191906000526020600020905b815481529060010190602001808311610b1557829003601f168201915b50505091835250506001828101546020808401919091526002909301546001600160a01b031660409092019190915291835292019101610a86565b505050509350505050919050565b610b8361197e565b8060048060008381526001602052604090205460ff166006811115610baa57610baa611f76565b14610bc082600681111561031557610315611f76565b600084815260016020526040902054610be79060ff16600681111561031557610315611f76565b604051602001610bf8929190612053565b60405160208183030381529060405290610c255760405162461bcd60e51b815260040161037f91906120d4565b5060008381526001602052604090819020805460ff191660059081179091559051849160008051602061253883398151915291610c6491600491612009565b60405180910390a2505050565b610c7961197e565b610c836000611ae1565b565b60008381526001602081815260408084203385529092019052902054839060ff16610cf25760405162461bcd60e51b815260206004820152601e60248201527f43616c6c6572206973206e6f74207265676973746572656420766f7465720000604482015260640161037f565b8360028060008381526001602052604090205460ff166006811115610d1957610d19611f76565b14610d2f82600681111561031557610315611f76565b600084815260016020526040902054610d569060ff16600681111561031557610315611f76565b604051602001610d67929190612053565b60405160208183030381529060405290610d945760405162461bcd60e51b815260040161037f91906120d4565b50600086815260016020818152604080842033855290920190529020546003630100000090910460ff1610610e315760405162461bcd60e51b815260206004820152603b60248201527f596f7520616c726561647920706f7374656420332070726f706f73616c73207760448201527f6869636820697320746865206d6178696d756d20616c6c6f7765640000000000606482015260840161037f565b610e718686868080601f016020809104026020016040519081016040528093929190818152602001838380828437600092019190915250611b3192505050565b505050505050565b610e8161197e565b8060018060008381526001602052604090205460ff166006811115610ea857610ea8611f76565b14610ebe82600681111561031557610315611f76565b600084815260016020526040902054610ee59060ff16600681111561031557610315611f76565b604051602001610ef6929190612053565b60405160208183030381529060405290610f235760405162461bcd60e51b815260040161037f91906120d4565b50610f50836040518060400160405280600a81526020016920b139ba32b73a34b7b760b11b815250611b31565b610f778360405180604001604052806005815260200164426c616e6b60d81b815250611b31565b600083815260016020819052604091829020805460ff191660029081179091559151859260008051602061253883398151915292610c6492909190612009565b60008281526001602081815260408084203385529092019052902054829060ff166110245760405162461bcd60e51b815260206004820152601e60248201527f43616c6c6572206973206e6f74207265676973746572656420766f7465720000604482015260640161037f565b8260048060008381526001602052604090205460ff16600681111561104b5761104b611f76565b1461106182600681111561031557610315611f76565b6000848152600160205260409020546110889060ff16600681111561031557610315611f76565b604051602001611099929190612053565b604051602081830303815290604052906110c65760405162461bcd60e51b815260040161037f91906120d4565b5060008581526001602081815260408084203385529092019052902054610100900460ff16156111385760405162461bcd60e51b815260206004820152601760248201527f566f7465722068617320616c726561647920766f746564000000000000000000604482015260640161037f565b60008581526001602052604090206004015460ff85169081109061115b906119d8565b60405160200161116b9190612461565b604051602081830303815290604052906111985760405162461bcd60e51b815260040161037f91906120d4565b506000858152600160205260409020600401805433919060ff87169081106111c2576111c26120fd565b60009182526020909120600260039092020101546001600160a01b03160361123e5760405162461bcd60e51b815260206004820152602960248201527f4120766f7465722063616e206e6f7420766f746520666f7220697473206f776e604482015268081c1c9bdc1bdcd85b60ba1b606482015260840161037f565b60008460ff16116112a35760405162461bcd60e51b815260206004820152602960248201527f46697273742070726f706f73616c20697320726573657276656420666f7220616044820152683139ba32b73a34b7b760b91b606482015260840161037f565b6000858152600160205260409020600401805460ff86169081106112c9576112c96120fd565b6000918252602082206001600390920201018054916112e78361203a565b909155505060008581526001602081815260408084203385528084018352908420805460ff8a16620100000262ffff0019909116176101001790558884529190526003018054916113378361203a565b909155505060405133815285907f030b0f8dcd86a031eddb071f91882edeac8173663ba775713b677b42b51be44b9060200160405180910390a25050505050565b61138061197e565b8160018060008381526001602052604090205460ff1660068111156113a7576113a7611f76565b146113bd82600681111561031557610315611f76565b6000848152600160205260409020546113e49060ff16600681111561031557610315611f76565b6040516020016113f5929190612053565b604051602081830303815290604052906114225760405162461bcd60e51b815260040161037f91906120d4565b506000546001600160a01b03166001600160a01b0316836001600160a01b03160361148f5760405162461bcd60e51b815260206004820152601860248201527f4f776e65722063616e206e6f74206265206120766f7465720000000000000000604482015260640161037f565b60008481526001602081815260408084206001600160a01b0388168552909201905290205460ff16156115045760405162461bcd60e51b815260206004820152601b60248201527f566f74657220697320616c726561647920726567697374657265640000000000604482015260640161037f565b60408051608081018252600180825260006020808401828152848601838152606086018481528b85528584528785206001600160a01b038c16865280870185529785209651875493519251915161ffff1990941690151561ff00191617610100921515929092029190911763ffff000019166201000060ff9283160263ff0000001916176301000000919092160217909355878152915260029091018054916115ac8361203a565b90915550506040516001600160a01b038416815284907ff45b8429c36d478f9a6d081c4811a819b98aa5b608588bed9d406405cf2824739060200160405180910390a250505050565b6115fd61197e565b8060038060008381526001602052604090205460ff16600681111561162457611624611f76565b1461163a82600681111561031557610315611f76565b6000848152600160205260409020546116619060ff16600681111561031557610315611f76565b604051602001611672929190612053565b6040516020818303038152906040529061169f5760405162461bcd60e51b815260040161037f91906120d4565b5060008381526001602052604090819020805460ff191660049081179091559051849160008051602061253883398151915291610c6491600391612009565b600082336116f46000546001600160a01b031690565b6001600160a01b0316148061172457506000818152600160208181526040808420338552909201905290205460ff165b6117405760405162461bcd60e51b815260040161037f90612398565b8360058060008381526001602052604090205460ff16600681111561176757611767611f76565b101561177e82600681111561031557610315611f76565b6000848152600160205260409020546117a59060ff16600681111561031557610315611f76565b6040516020016117b69291906123df565b604051602081830303815290604052906117e35760405162461bcd60e51b815260040161037f91906120d4565b505050600093845250506001602081815260408085206001600160a01b0394909416855292909101905290205462010000900460ff1690565b61182461197e565b8060028060008381526001602052604090205460ff16600681111561184b5761184b611f76565b1461186182600681111561031557610315611f76565b6000848152600160205260409020546118889060ff16600681111561031557610315611f76565b604051602001611899929190612053565b604051602081830303815290604052906118c65760405162461bcd60e51b815260040161037f91906120d4565b5060008381526001602052604090819020805460ff191660039081179091559051849160008051602061253883398151915291610c6491600291612009565b61190d61197e565b6001600160a01b0381166119725760405162461bcd60e51b815260206004820152602660248201527f4f776e61626c653a206e6577206f776e657220697320746865207a65726f206160448201526564647265737360d01b606482015260840161037f565b61197b81611ae1565b50565b6000546001600160a01b03163314610c835760405162461bcd60e51b815260206004820181905260248201527f4f776e61626c653a2063616c6c6572206973206e6f7420746865206f776e6572604482015260640161037f565b6060816000036119ff5750506040805180820190915260018152600360fc1b602082015290565b8160005b8115611a295780611a138161203a565b9150611a229050600a836124c1565b9150611a03565b60008167ffffffffffffffff811115611a4457611a446120e7565b6040519080825280601f01601f191660200182016040528015611a6e576020820181803683370190505b5090505b8415611ad957611a8360018361214d565b9150611a90600a866124d5565b611a9b9060306124e9565b60f81b818381518110611ab057611ab06120fd565b60200101906001600160f81b031916908160001a905350611ad2600a866124c1565b9450611a72565b949350505050565b600080546001600160a01b038381166001600160a01b0319831681178455604051919092169283917f8be0079c531659141344cd1fd0a4f28419497f9722a3daafe3b4186f6b6457e09190a35050565b60008281526001602052604090206004015460ff11611b875760405162461bcd60e51b8152602060048201526012602482015271546f6f206d616e792070726f706f73616c7360701b604482015260640161037f565b60008281526001602081815260408084208151606081018352868152808401869052339281019290925260040180549384018155845292208251600390920201908190611bd490826121b1565b50602082810151600183810191909155604093840151600290930180546001600160a01b0319166001600160a01b0390941693909317909255600085815282825283812033825290920190522080546301000000900460ff16906003611c39836124fc565b825460ff9182166101009390930a9283029190920219909116179055506000828152600160208190526040822060040154611c74919061214d565b9050827f734feec28275467965f53538a3f7bb9e350e316ec6f015c595d6dae504a5762f82600160008781526020019081526020016000206004018460ff1681548110611cc357611cc36120fd565b9060005260206000209060030201600001604051610c6492919061251b565b60008083601f840112611cf457600080fd5b50813567ffffffffffffffff811115611d0c57600080fd5b602083019150836020828501011115611d2457600080fd5b9250929050565b60008060008060408587031215611d4157600080fd5b843567ffffffffffffffff80821115611d5957600080fd5b611d6588838901611ce2565b90965094506020870135915080821115611d7e57600080fd5b50611d8b87828801611ce2565b95989497509550505050565b600060208284031215611da957600080fd5b5035919050565b60005b83811015611dcb578181015183820152602001611db3565b50506000910152565b60008151808452611dec816020860160208601611db0565b601f01601f19169290920160200192915050565b60006020808301818452808551808352604092508286019150828160051b87010184880160005b83811015611e7c57603f19898403018552815160608151818652611e4d82870182611dd4565b838b0151878c0152928901516001600160a01b0316958901959095525094870194925090860190600101611e27565b509098975050505050505050565b600080600060408486031215611e9f57600080fd5b83359250602084013567ffffffffffffffff811115611ebd57600080fd5b611ec986828701611ce2565b9497909650939450505050565b60008060408385031215611ee957600080fd5b82359150602083013560ff81168114611f0157600080fd5b809150509250929050565b80356001600160a01b0381168114611f2357600080fd5b919050565b60008060408385031215611f3b57600080fd5b82359150611f4b60208401611f0c565b90509250929050565b600060208284031215611f6657600080fd5b611f6f82611f0c565b9392505050565b634e487b7160e01b600052602160045260246000fd5b81835281816020850137506000828201602090810191909152601f909101601f19169091010190565b604081526000611fc9604083018688611f8c565b8281036020840152611fdc818587611f8c565b979650505050505050565b6007811061200557634e487b7160e01b600052602160045260246000fd5b9052565b604081016120178285611fe7565b611f6f6020830184611fe7565b634e487b7160e01b600052601160045260246000fd5b60006001820161204c5761204c612024565b5060010190565b7f556e657870656374656420766f74696e672073657373696f6e2073746174757381526a3a2065787065637465643d60a81b60208201526000835161209f81602b850160208801611db0565b682063757272656e743d60b81b602b9184019182015283516120c8816034840160208801611db0565b01603401949350505050565b602081526000611f6f6020830184611dd4565b634e487b7160e01b600052604160045260246000fd5b634e487b7160e01b600052603260045260246000fd5b600181811c9082168061212757607f821691505b60208210810361214757634e487b7160e01b600052602260045260246000fd5b50919050565b8181038181111561216057612160612024565b92915050565b601f8211156121ac57600081815260208120601f850160051c8101602086101561218d5750805b601f850160051c820191505b81811015610e7157828155600101612199565b505050565b815167ffffffffffffffff8111156121cb576121cb6120e7565b6121df816121d98454612113565b84612166565b602080601f83116001811461221457600084156121fc5750858301515b600019600386901b1c1916600185901b178555610e71565b600085815260208120601f198616915b8281101561224357888601518255948401946001909101908401612224565b50858210156122615787850151600019600388901b60f8161c191681555b5050505050600190811b01905550565b6000815461227e81612113565b80855260206001838116801561229b57600181146122b5576122e3565b60ff1985168884015283151560051b8801830195506122e3565b866000528260002060005b858110156122db5781548a82018601529083019084016122c0565b890184019650505b505050505092915050565b600060a0820187835260208781850152604087818601526060878187015260a0608087015283875480865260c08801915060c08160051b8901019550886000528460002060005b828110156123855789880360bf1901845284885261235585890183612271565b6001838101548a8a015260028401546001600160a01b031699880199909952979387019360039092019101612335565b50959d9c50505050505050505050505050565b60208082526027908201527f43616c6c6572206973206e6f74206f776e6572206f722072656769737465726560408201526632103b37ba32b960c91b606082015260800190565b7f556e657870656374656420766f74696e672073657373696f6e2073746174757381526b3a2065787065637465643e3d60a01b60208201526000835161242c81602c850160208801611db0565b682063757272656e743d60b81b602c918401918201528351612455816035840160208801611db0565b01603501949350505050565b680283937b837b9b0b6160bd1b815260008251612485816009850160208701611db0565b6e08191bd95cc81b9bdd08195e1a5cdd608a1b6009939091019283015250601801919050565b634e487b7160e01b600052601260045260246000fd5b6000826124d0576124d06124ab565b500490565b6000826124e4576124e46124ab565b500690565b8082018082111561216057612160612024565b600060ff821660ff810361251257612512612024565b60010192915050565b60ff83168152604060208201526000611ad9604083018461227156feb067099e10826978a3867510ad1e0dcf4ca5cef8e422fd8df2fc3d679167fe8da264697066735822122050e784fc5cec3653b840c1bd3bf965df0c90b02147ab612ac2eb06d81e99f62164736f6c63430008110033",
              "opcodes": "PUSH1 0x80 PUSH1 0x40 MSTORE CALLVALUE DUP1 ISZERO PUSH2 0x10 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST POP PUSH1 0x4 CALLDATASIZE LT PUSH2 0xEA JUMPI PUSH1 0x0 CALLDATALOAD PUSH1 0xE0 SHR DUP1 PUSH4 0x8DA5CB5B GT PUSH2 0x8C JUMPI DUP1 PUSH4 0x9980A55A GT PUSH2 0x66 JUMPI DUP1 PUSH4 0x9980A55A EQ PUSH2 0x1C2 JUMPI DUP1 PUSH4 0xBC3F931F EQ PUSH2 0x1D5 JUMPI DUP1 PUSH4 0xC82DE38F EQ PUSH2 0x1FA JUMPI DUP1 PUSH4 0xF2FDE38B EQ PUSH2 0x20D JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST DUP1 PUSH4 0x8DA5CB5B EQ PUSH2 0x181 JUMPI DUP1 PUSH4 0x943E8216 EQ PUSH2 0x19C JUMPI DUP1 PUSH4 0x94C790BB EQ PUSH2 0x1AF JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST DUP1 PUSH4 0x6F3DC556 GT PUSH2 0xC8 JUMPI DUP1 PUSH4 0x6F3DC556 EQ PUSH2 0x140 JUMPI DUP1 PUSH4 0x715018A6 EQ PUSH2 0x153 JUMPI DUP1 PUSH4 0x7ACE4184 EQ PUSH2 0x15B JUMPI DUP1 PUSH4 0x8BC6A6DD EQ PUSH2 0x16E JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST DUP1 PUSH4 0x153BC95B EQ PUSH2 0xEF JUMPI DUP1 PUSH4 0x4D318B0E EQ PUSH2 0x104 JUMPI DUP1 PUSH4 0x6B1426A4 EQ PUSH2 0x117 JUMPI JUMPDEST PUSH1 0x0 DUP1 REVERT JUMPDEST PUSH2 0x102 PUSH2 0xFD CALLDATASIZE PUSH1 0x4 PUSH2 0x1D2B JUMP JUMPDEST PUSH2 0x220 JUMP JUMPDEST STOP JUMPDEST PUSH2 0x102 PUSH2 0x112 CALLDATASIZE PUSH1 0x4 PUSH2 0x1D97 JUMP JUMPDEST PUSH2 0x2D0 JUMP JUMPDEST PUSH2 0x12A PUSH2 0x125 CALLDATASIZE PUSH1 0x4 PUSH2 0x1D97 JUMP JUMPDEST PUSH2 0x954 JUMP JUMPDEST PUSH1 0x40 MLOAD PUSH2 0x137 SWAP2 SWAP1 PUSH2 0x1E00 JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 RETURN JUMPDEST PUSH2 0x102 PUSH2 0x14E CALLDATASIZE PUSH1 0x4 PUSH2 0x1D97 JUMP JUMPDEST PUSH2 0xB7B JUMP JUMPDEST PUSH2 0x102 PUSH2 0xC71 JUMP JUMPDEST PUSH2 0x102 PUSH2 0x169 CALLDATASIZE PUSH1 0x4 PUSH2 0x1E8A JUMP JUMPDEST PUSH2 0xC85 JUMP JUMPDEST PUSH2 0x102 PUSH2 0x17C CALLDATASIZE PUSH1 0x4 PUSH2 0x1D97 JUMP JUMPDEST PUSH2 0xE79 JUMP JUMPDEST PUSH1 0x0 SLOAD PUSH1 0x40 MLOAD PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB SWAP1 SWAP2 AND DUP2 MSTORE PUSH1 0x20 ADD PUSH2 0x137 JUMP JUMPDEST PUSH2 0x102 PUSH2 0x1AA CALLDATASIZE PUSH1 0x4 PUSH2 0x1ED6 JUMP JUMPDEST PUSH2 0xFB7 JUMP JUMPDEST PUSH2 0x102 PUSH2 0x1BD CALLDATASIZE PUSH1 0x4 PUSH2 0x1F28 JUMP JUMPDEST PUSH2 0x1378 JUMP JUMPDEST PUSH2 0x102 PUSH2 0x1D0 CALLDATASIZE PUSH1 0x4 PUSH2 0x1D97 JUMP JUMPDEST PUSH2 0x15F5 JUMP JUMPDEST PUSH2 0x1E8 PUSH2 0x1E3 CALLDATASIZE PUSH1 0x4 PUSH2 0x1F28 JUMP JUMPDEST PUSH2 0x16DE JUMP JUMPDEST PUSH1 0x40 MLOAD PUSH1 0xFF SWAP1 SWAP2 AND DUP2 MSTORE PUSH1 0x20 ADD PUSH2 0x137 JUMP JUMPDEST PUSH2 0x102 PUSH2 0x208 CALLDATASIZE PUSH1 0x4 PUSH2 0x1D97 JUMP JUMPDEST PUSH2 0x181C JUMP JUMPDEST PUSH2 0x102 PUSH2 0x21B CALLDATASIZE PUSH1 0x4 PUSH2 0x1F54 JUMP JUMPDEST PUSH2 0x1905 JUMP JUMPDEST PUSH2 0x228 PUSH2 0x197E JUMP JUMPDEST PUSH1 0x2 SLOAD PUSH1 0x0 SWAP1 DUP2 MSTORE PUSH1 0x1 PUSH1 0x20 DUP2 SWAP1 MSTORE PUSH1 0x40 SWAP1 SWAP2 KECCAK256 DUP1 SLOAD PUSH1 0xFF NOT AND DUP3 DUP1 MUL OR SWAP1 SSTORE POP PUSH1 0x2 SLOAD PUSH32 0xB824462EC90945EB31146C1C4CE6515D44B184FACB795BEA5D1F52355B243F8B DUP6 DUP6 DUP6 DUP6 PUSH1 0x40 MLOAD PUSH2 0x281 SWAP5 SWAP4 SWAP3 SWAP2 SWAP1 PUSH2 0x1FB5 JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 LOG2 PUSH1 0x2 SLOAD PUSH1 0x0 DUP1 MLOAD PUSH1 0x20 PUSH2 0x2538 DUP4 CODECOPY DUP2 MLOAD SWAP2 MSTORE PUSH1 0x0 PUSH1 0x1 PUSH1 0x40 MLOAD PUSH2 0x2AD SWAP3 SWAP2 SWAP1 PUSH2 0x2009 JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 LOG2 PUSH1 0x2 DUP1 SLOAD SWAP1 PUSH1 0x0 PUSH2 0x2C5 DUP4 PUSH2 0x203A JUMP JUMPDEST SWAP2 SWAP1 POP SSTORE POP POP POP POP POP JUMP JUMPDEST PUSH2 0x2D8 PUSH2 0x197E JUMP JUMPDEST DUP1 PUSH1 0x5 DUP1 PUSH1 0x0 DUP4 DUP2 MSTORE PUSH1 0x1 PUSH1 0x20 MSTORE PUSH1 0x40 SWAP1 KECCAK256 SLOAD PUSH1 0xFF AND PUSH1 0x6 DUP2 GT ISZERO PUSH2 0x2FF JUMPI PUSH2 0x2FF PUSH2 0x1F76 JUMP JUMPDEST EQ PUSH2 0x31A DUP3 PUSH1 0x6 DUP2 GT ISZERO PUSH2 0x315 JUMPI PUSH2 0x315 PUSH2 0x1F76 JUMP JUMPDEST PUSH2 0x19D8 JUMP JUMPDEST PUSH1 0x0 DUP5 DUP2 MSTORE PUSH1 0x1 PUSH1 0x20 MSTORE PUSH1 0x40 SWAP1 KECCAK256 SLOAD PUSH2 0x341 SWAP1 PUSH1 0xFF AND PUSH1 0x6 DUP2 GT ISZERO PUSH2 0x315 JUMPI PUSH2 0x315 PUSH2 0x1F76 JUMP JUMPDEST PUSH1 0x40 MLOAD PUSH1 0x20 ADD PUSH2 0x352 SWAP3 SWAP2 SWAP1 PUSH2 0x2053 JUMP JUMPDEST PUSH1 0x40 MLOAD PUSH1 0x20 DUP2 DUP4 SUB SUB DUP2 MSTORE SWAP1 PUSH1 0x40 MSTORE SWAP1 PUSH2 0x388 JUMPI PUSH1 0x40 MLOAD PUSH3 0x461BCD PUSH1 0xE5 SHL DUP2 MSTORE PUSH1 0x4 ADD PUSH2 0x37F SWAP2 SWAP1 PUSH2 0x20D4 JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 REVERT JUMPDEST POP PUSH1 0x0 DUP4 DUP2 MSTORE PUSH1 0x1 PUSH1 0x20 MSTORE PUSH1 0x40 DUP2 KECCAK256 PUSH1 0x4 ADD SLOAD DUP2 SWAP1 DUP2 SWAP1 PUSH8 0xFFFFFFFFFFFFFFFF DUP2 GT ISZERO PUSH2 0x3B7 JUMPI PUSH2 0x3B7 PUSH2 0x20E7 JUMP JUMPDEST PUSH1 0x40 MLOAD SWAP1 DUP1 DUP3 MSTORE DUP1 PUSH1 0x20 MUL PUSH1 0x20 ADD DUP3 ADD PUSH1 0x40 MSTORE DUP1 ISZERO PUSH2 0x415 JUMPI DUP2 PUSH1 0x20 ADD JUMPDEST PUSH2 0x402 PUSH1 0x40 MLOAD DUP1 PUSH1 0x60 ADD PUSH1 0x40 MSTORE DUP1 PUSH1 0x60 DUP2 MSTORE PUSH1 0x20 ADD PUSH1 0x0 DUP2 MSTORE PUSH1 0x20 ADD PUSH1 0x0 PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB AND DUP2 MSTORE POP SWAP1 JUMP JUMPDEST DUP2 MSTORE PUSH1 0x20 ADD SWAP1 PUSH1 0x1 SWAP1 SUB SWAP1 DUP2 PUSH2 0x3D5 JUMPI SWAP1 POP JUMPDEST POP SWAP1 POP PUSH1 0x2 JUMPDEST PUSH1 0x0 DUP8 DUP2 MSTORE PUSH1 0x1 PUSH1 0x20 MSTORE PUSH1 0x40 SWAP1 KECCAK256 PUSH1 0x4 ADD SLOAD DUP2 LT ISZERO PUSH2 0x77C JUMPI PUSH1 0x0 DUP8 DUP2 MSTORE PUSH1 0x1 PUSH1 0x20 MSTORE PUSH1 0x40 SWAP1 KECCAK256 PUSH1 0x4 ADD DUP1 SLOAD DUP6 SWAP2 SWAP1 DUP4 SWAP1 DUP2 LT PUSH2 0x45A JUMPI PUSH2 0x45A PUSH2 0x20FD JUMP JUMPDEST SWAP1 PUSH1 0x0 MSTORE PUSH1 0x20 PUSH1 0x0 KECCAK256 SWAP1 PUSH1 0x3 MUL ADD PUSH1 0x1 ADD SLOAD GT ISZERO PUSH2 0x5CA JUMPI PUSH1 0x0 DUP8 DUP2 MSTORE PUSH1 0x1 PUSH1 0x20 MSTORE PUSH1 0x40 SWAP1 KECCAK256 PUSH1 0x4 ADD DUP1 SLOAD DUP3 SWAP1 DUP2 LT PUSH2 0x495 JUMPI PUSH2 0x495 PUSH2 0x20FD JUMP JUMPDEST SWAP1 PUSH1 0x0 MSTORE PUSH1 0x20 PUSH1 0x0 KECCAK256 SWAP1 PUSH1 0x3 MUL ADD PUSH1 0x1 ADD SLOAD SWAP4 POP PUSH1 0x1 SWAP3 POP PUSH1 0x1 PUSH1 0x0 DUP9 DUP2 MSTORE PUSH1 0x20 ADD SWAP1 DUP2 MSTORE PUSH1 0x20 ADD PUSH1 0x0 KECCAK256 PUSH1 0x4 ADD DUP2 DUP2 SLOAD DUP2 LT PUSH2 0x4D4 JUMPI PUSH2 0x4D4 PUSH2 0x20FD JUMP JUMPDEST SWAP1 PUSH1 0x0 MSTORE PUSH1 0x20 PUSH1 0x0 KECCAK256 SWAP1 PUSH1 0x3 MUL ADD PUSH1 0x40 MLOAD DUP1 PUSH1 0x60 ADD PUSH1 0x40 MSTORE SWAP1 DUP2 PUSH1 0x0 DUP3 ADD DUP1 SLOAD PUSH2 0x4FD SWAP1 PUSH2 0x2113 JUMP JUMPDEST DUP1 PUSH1 0x1F ADD PUSH1 0x20 DUP1 SWAP2 DIV MUL PUSH1 0x20 ADD PUSH1 0x40 MLOAD SWAP1 DUP2 ADD PUSH1 0x40 MSTORE DUP1 SWAP3 SWAP2 SWAP1 DUP2 DUP2 MSTORE PUSH1 0x20 ADD DUP3 DUP1 SLOAD PUSH2 0x529 SWAP1 PUSH2 0x2113 JUMP JUMPDEST DUP1 ISZERO PUSH2 0x576 JUMPI DUP1 PUSH1 0x1F LT PUSH2 0x54B JUMPI PUSH2 0x100 DUP1 DUP4 SLOAD DIV MUL DUP4 MSTORE SWAP2 PUSH1 0x20 ADD SWAP2 PUSH2 0x576 JUMP JUMPDEST DUP3 ADD SWAP2 SWAP1 PUSH1 0x0 MSTORE PUSH1 0x20 PUSH1 0x0 KECCAK256 SWAP1 JUMPDEST DUP2 SLOAD DUP2 MSTORE SWAP1 PUSH1 0x1 ADD SWAP1 PUSH1 0x20 ADD DUP1 DUP4 GT PUSH2 0x559 JUMPI DUP3 SWAP1 SUB PUSH1 0x1F AND DUP3 ADD SWAP2 JUMPDEST POP POP POP SWAP2 DUP4 MSTORE POP POP PUSH1 0x1 DUP3 DUP2 ADD SLOAD PUSH1 0x20 DUP4 ADD MSTORE PUSH1 0x2 SWAP1 SWAP3 ADD SLOAD PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB AND PUSH1 0x40 SWAP1 SWAP2 ADD MSTORE DUP4 SWAP1 PUSH2 0x5AA SWAP1 DUP7 PUSH2 0x214D JUMP JUMPDEST DUP2 MLOAD DUP2 LT PUSH2 0x5BA JUMPI PUSH2 0x5BA PUSH2 0x20FD JUMP JUMPDEST PUSH1 0x20 MUL PUSH1 0x20 ADD ADD DUP2 SWAP1 MSTORE POP PUSH2 0x76A JUMP JUMPDEST PUSH1 0x0 DUP8 DUP2 MSTORE PUSH1 0x1 PUSH1 0x20 MSTORE PUSH1 0x40 DUP2 KECCAK256 PUSH1 0x4 ADD DUP1 SLOAD DUP4 SWAP1 DUP2 LT PUSH2 0x5ED JUMPI PUSH2 0x5ED PUSH2 0x20FD JUMP JUMPDEST SWAP1 PUSH1 0x0 MSTORE PUSH1 0x20 PUSH1 0x0 KECCAK256 SWAP1 PUSH1 0x3 MUL ADD PUSH1 0x1 ADD SLOAD GT DUP1 ISZERO PUSH2 0x641 JUMPI POP PUSH1 0x0 DUP8 DUP2 MSTORE PUSH1 0x1 PUSH1 0x20 MSTORE PUSH1 0x40 SWAP1 KECCAK256 PUSH1 0x4 ADD DUP1 SLOAD DUP6 SWAP2 SWAP1 DUP4 SWAP1 DUP2 LT PUSH2 0x62D JUMPI PUSH2 0x62D PUSH2 0x20FD JUMP JUMPDEST SWAP1 PUSH1 0x0 MSTORE PUSH1 0x20 PUSH1 0x0 KECCAK256 SWAP1 PUSH1 0x3 MUL ADD PUSH1 0x1 ADD SLOAD EQ JUMPDEST ISZERO PUSH2 0x76A JUMPI DUP3 PUSH2 0x650 DUP2 PUSH2 0x203A JUMP JUMPDEST PUSH1 0x0 DUP10 DUP2 MSTORE PUSH1 0x1 PUSH1 0x20 MSTORE PUSH1 0x40 SWAP1 KECCAK256 PUSH1 0x4 ADD DUP1 SLOAD SWAP2 SWAP6 POP SWAP2 POP DUP3 SWAP1 DUP2 LT PUSH2 0x678 JUMPI PUSH2 0x678 PUSH2 0x20FD JUMP JUMPDEST SWAP1 PUSH1 0x0 MSTORE PUSH1 0x20 PUSH1 0x0 KECCAK256 SWAP1 PUSH1 0x3 MUL ADD PUSH1 0x40 MLOAD DUP1 PUSH1 0x60 ADD PUSH1 0x40 MSTORE SWAP1 DUP2 PUSH1 0x0 DUP3 ADD DUP1 SLOAD PUSH2 0x6A1 SWAP1 PUSH2 0x2113 JUMP JUMPDEST DUP1 PUSH1 0x1F ADD PUSH1 0x20 DUP1 SWAP2 DIV MUL PUSH1 0x20 ADD PUSH1 0x40 MLOAD SWAP1 DUP2 ADD PUSH1 0x40 MSTORE DUP1 SWAP3 SWAP2 SWAP1 DUP2 DUP2 MSTORE PUSH1 0x20 ADD DUP3 DUP1 SLOAD PUSH2 0x6CD SWAP1 PUSH2 0x2113 JUMP JUMPDEST DUP1 ISZERO PUSH2 0x71A JUMPI DUP1 PUSH1 0x1F LT PUSH2 0x6EF JUMPI PUSH2 0x100 DUP1 DUP4 SLOAD DIV MUL DUP4 MSTORE SWAP2 PUSH1 0x20 ADD SWAP2 PUSH2 0x71A JUMP JUMPDEST DUP3 ADD SWAP2 SWAP1 PUSH1 0x0 MSTORE PUSH1 0x20 PUSH1 0x0 KECCAK256 SWAP1 JUMPDEST DUP2 SLOAD DUP2 MSTORE SWAP1 PUSH1 0x1 ADD SWAP1 PUSH1 0x20 ADD DUP1 DUP4 GT PUSH2 0x6FD JUMPI DUP3 SWAP1 SUB PUSH1 0x1F AND DUP3 ADD SWAP2 JUMPDEST POP POP POP SWAP2 DUP4 MSTORE POP POP PUSH1 0x1 DUP3 DUP2 ADD SLOAD PUSH1 0x20 DUP4 ADD MSTORE PUSH1 0x2 SWAP1 SWAP3 ADD SLOAD PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB AND PUSH1 0x40 SWAP1 SWAP2 ADD MSTORE DUP4 SWAP1 PUSH2 0x74E SWAP1 DUP7 PUSH2 0x214D JUMP JUMPDEST DUP2 MLOAD DUP2 LT PUSH2 0x75E JUMPI PUSH2 0x75E PUSH2 0x20FD JUMP JUMPDEST PUSH1 0x20 MUL PUSH1 0x20 ADD ADD DUP2 SWAP1 MSTORE POP JUMPDEST DUP1 PUSH2 0x774 DUP2 PUSH2 0x203A JUMP JUMPDEST SWAP2 POP POP PUSH2 0x41B JUMP JUMPDEST POP PUSH1 0x0 JUMPDEST DUP3 DUP2 LT ISZERO PUSH2 0x827 JUMPI PUSH1 0x1 PUSH1 0x0 DUP9 DUP2 MSTORE PUSH1 0x20 ADD SWAP1 DUP2 MSTORE PUSH1 0x20 ADD PUSH1 0x0 KECCAK256 PUSH1 0x5 ADD DUP3 DUP3 DUP2 MLOAD DUP2 LT PUSH2 0x7B0 JUMPI PUSH2 0x7B0 PUSH2 0x20FD JUMP JUMPDEST PUSH1 0x20 SWAP1 DUP2 MUL SWAP2 SWAP1 SWAP2 ADD DUP2 ADD MLOAD DUP3 SLOAD PUSH1 0x1 DUP2 ADD DUP5 SSTORE PUSH1 0x0 SWAP4 DUP5 MSTORE SWAP2 SWAP1 SWAP3 KECCAK256 DUP3 MLOAD PUSH1 0x3 SWAP1 SWAP3 MUL ADD SWAP1 DUP2 SWAP1 PUSH2 0x7E2 SWAP1 DUP3 PUSH2 0x21B1 JUMP JUMPDEST POP PUSH1 0x20 DUP3 ADD MLOAD PUSH1 0x1 DUP3 ADD SSTORE PUSH1 0x40 SWAP1 SWAP2 ADD MLOAD PUSH1 0x2 SWAP1 SWAP2 ADD DUP1 SLOAD PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB NOT AND PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB SWAP1 SWAP3 AND SWAP2 SWAP1 SWAP2 OR SWAP1 SSTORE DUP1 PUSH2 0x81F DUP2 PUSH2 0x203A JUMP JUMPDEST SWAP2 POP POP PUSH2 0x780 JUMP JUMPDEST POP PUSH1 0x0 DUP7 DUP2 MSTORE PUSH1 0x1 PUSH1 0x20 MSTORE PUSH1 0x40 SWAP1 DUP2 SWAP1 KECCAK256 DUP1 SLOAD PUSH1 0xFF NOT AND PUSH1 0x6 SWAP1 DUP2 OR SWAP1 SWAP2 SSTORE SWAP1 MLOAD DUP8 SWAP2 PUSH1 0x0 DUP1 MLOAD PUSH1 0x20 PUSH2 0x2538 DUP4 CODECOPY DUP2 MLOAD SWAP2 MSTORE SWAP2 PUSH2 0x866 SWAP2 PUSH1 0x5 SWAP2 PUSH2 0x2009 JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 LOG2 PUSH1 0x0 DUP7 DUP2 MSTORE PUSH1 0x1 PUSH1 0x20 MSTORE PUSH1 0x40 DUP2 KECCAK256 PUSH1 0x2 ADD SLOAD PUSH2 0x88B JUMPI PUSH1 0x0 PUSH2 0x8AE JUMP JUMPDEST PUSH1 0x0 DUP8 DUP2 MSTORE PUSH1 0x1 PUSH1 0x20 MSTORE PUSH1 0x40 SWAP1 KECCAK256 PUSH1 0x3 DUP2 ADD SLOAD PUSH1 0x2 SWAP1 SWAP2 ADD SLOAD PUSH2 0x8AE SWAP2 SWAP1 PUSH2 0x214D JUMP JUMPDEST PUSH1 0x0 DUP9 DUP2 MSTORE PUSH1 0x1 PUSH1 0x20 DUP2 SWAP1 MSTORE PUSH1 0x40 SWAP1 SWAP2 KECCAK256 PUSH1 0x2 DUP2 ADD SLOAD PUSH1 0x3 DUP3 ADD SLOAD PUSH1 0x4 SWAP1 SWAP3 ADD DUP1 SLOAD SWAP5 SWAP6 POP DUP12 SWAP5 PUSH32 0x8231621024A2914F448F5821E1168FA08EA32BE09DB6A89D94E306E0352D12F4 SWAP5 SWAP3 SWAP4 SWAP3 SWAP1 DUP2 LT PUSH2 0x909 JUMPI PUSH2 0x909 PUSH2 0x20FD JUMP JUMPDEST SWAP1 PUSH1 0x0 MSTORE PUSH1 0x20 PUSH1 0x0 KECCAK256 SWAP1 PUSH1 0x3 MUL ADD PUSH1 0x1 ADD SLOAD DUP6 PUSH1 0x1 PUSH1 0x0 DUP15 DUP2 MSTORE PUSH1 0x20 ADD SWAP1 DUP2 MSTORE PUSH1 0x20 ADD PUSH1 0x0 KECCAK256 PUSH1 0x5 ADD PUSH1 0x40 MLOAD PUSH2 0x943 SWAP6 SWAP5 SWAP4 SWAP3 SWAP2 SWAP1 PUSH2 0x22EE JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 LOG2 POP POP POP POP POP POP POP JUMP JUMPDEST PUSH1 0x60 DUP2 CALLER PUSH2 0x96A PUSH1 0x0 SLOAD PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB AND SWAP1 JUMP JUMPDEST PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB AND EQ DUP1 PUSH2 0x99A JUMPI POP PUSH1 0x0 DUP2 DUP2 MSTORE PUSH1 0x1 PUSH1 0x20 DUP2 DUP2 MSTORE PUSH1 0x40 DUP1 DUP5 KECCAK256 CALLER DUP6 MSTORE SWAP1 SWAP3 ADD SWAP1 MSTORE SWAP1 KECCAK256 SLOAD PUSH1 0xFF AND JUMPDEST PUSH2 0x9B6 JUMPI PUSH1 0x40 MLOAD PUSH3 0x461BCD PUSH1 0xE5 SHL DUP2 MSTORE PUSH1 0x4 ADD PUSH2 0x37F SWAP1 PUSH2 0x2398 JUMP JUMPDEST DUP3 PUSH1 0x6 DUP1 PUSH1 0x0 DUP4 DUP2 MSTORE PUSH1 0x1 PUSH1 0x20 MSTORE PUSH1 0x40 SWAP1 KECCAK256 SLOAD PUSH1 0xFF AND PUSH1 0x6 DUP2 GT ISZERO PUSH2 0x9DD JUMPI PUSH2 0x9DD PUSH2 0x1F76 JUMP JUMPDEST LT ISZERO PUSH2 0x9F4 DUP3 PUSH1 0x6 DUP2 GT ISZERO PUSH2 0x315 JUMPI PUSH2 0x315 PUSH2 0x1F76 JUMP JUMPDEST PUSH1 0x0 DUP5 DUP2 MSTORE PUSH1 0x1 PUSH1 0x20 MSTORE PUSH1 0x40 SWAP1 KECCAK256 SLOAD PUSH2 0xA1B SWAP1 PUSH1 0xFF AND PUSH1 0x6 DUP2 GT ISZERO PUSH2 0x315 JUMPI PUSH2 0x315 PUSH2 0x1F76 JUMP JUMPDEST PUSH1 0x40 MLOAD PUSH1 0x20 ADD PUSH2 0xA2C SWAP3 SWAP2 SWAP1 PUSH2 0x23DF JUMP JUMPDEST PUSH1 0x40 MLOAD PUSH1 0x20 DUP2 DUP4 SUB SUB DUP2 MSTORE SWAP1 PUSH1 0x40 MSTORE SWAP1 PUSH2 0xA59 JUMPI PUSH1 0x40 MLOAD PUSH3 0x461BCD PUSH1 0xE5 SHL DUP2 MSTORE PUSH1 0x4 ADD PUSH2 0x37F SWAP2 SWAP1 PUSH2 0x20D4 JUMP JUMPDEST POP PUSH1 0x0 DUP6 DUP2 MSTORE PUSH1 0x1 PUSH1 0x20 SWAP1 DUP2 MSTORE PUSH1 0x40 DUP1 DUP4 KECCAK256 PUSH1 0x5 ADD DUP1 SLOAD DUP3 MLOAD DUP2 DUP6 MUL DUP2 ADD DUP6 ADD SWAP1 SWAP4 MSTORE DUP1 DUP4 MSTORE SWAP2 SWAP4 SWAP1 SWAP3 DUP5 ADD JUMPDEST DUP3 DUP3 LT ISZERO PUSH2 0xB6D JUMPI DUP4 DUP3 SWAP1 PUSH1 0x0 MSTORE PUSH1 0x20 PUSH1 0x0 KECCAK256 SWAP1 PUSH1 0x3 MUL ADD PUSH1 0x40 MLOAD DUP1 PUSH1 0x60 ADD PUSH1 0x40 MSTORE SWAP1 DUP2 PUSH1 0x0 DUP3 ADD DUP1 SLOAD PUSH2 0xAB9 SWAP1 PUSH2 0x2113 JUMP JUMPDEST DUP1 PUSH1 0x1F ADD PUSH1 0x20 DUP1 SWAP2 DIV MUL PUSH1 0x20 ADD PUSH1 0x40 MLOAD SWAP1 DUP2 ADD PUSH1 0x40 MSTORE DUP1 SWAP3 SWAP2 SWAP1 DUP2 DUP2 MSTORE PUSH1 0x20 ADD DUP3 DUP1 SLOAD PUSH2 0xAE5 SWAP1 PUSH2 0x2113 JUMP JUMPDEST DUP1 ISZERO PUSH2 0xB32 JUMPI DUP1 PUSH1 0x1F LT PUSH2 0xB07 JUMPI PUSH2 0x100 DUP1 DUP4 SLOAD DIV MUL DUP4 MSTORE SWAP2 PUSH1 0x20 ADD SWAP2 PUSH2 0xB32 JUMP JUMPDEST DUP3 ADD SWAP2 SWAP1 PUSH1 0x0 MSTORE PUSH1 0x20 PUSH1 0x0 KECCAK256 SWAP1 JUMPDEST DUP2 SLOAD DUP2 MSTORE SWAP1 PUSH1 0x1 ADD SWAP1 PUSH1 0x20 ADD DUP1 DUP4 GT PUSH2 0xB15 JUMPI DUP3 SWAP1 SUB PUSH1 0x1F AND DUP3 ADD SWAP2 JUMPDEST POP POP POP SWAP2 DUP4 MSTORE POP POP PUSH1 0x1 DUP3 DUP2 ADD SLOAD PUSH1 0x20 DUP1 DUP5 ADD SWAP2 SWAP1 SWAP2 MSTORE PUSH1 0x2 SWAP1 SWAP4 ADD SLOAD PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB AND PUSH1 0x40 SWAP1 SWAP3 ADD SWAP2 SWAP1 SWAP2 MSTORE SWAP2 DUP4 MSTORE SWAP3 ADD SWAP2 ADD PUSH2 0xA86 JUMP JUMPDEST POP POP POP POP SWAP4 POP POP POP POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH2 0xB83 PUSH2 0x197E JUMP JUMPDEST DUP1 PUSH1 0x4 DUP1 PUSH1 0x0 DUP4 DUP2 MSTORE PUSH1 0x1 PUSH1 0x20 MSTORE PUSH1 0x40 SWAP1 KECCAK256 SLOAD PUSH1 0xFF AND PUSH1 0x6 DUP2 GT ISZERO PUSH2 0xBAA JUMPI PUSH2 0xBAA PUSH2 0x1F76 JUMP JUMPDEST EQ PUSH2 0xBC0 DUP3 PUSH1 0x6 DUP2 GT ISZERO PUSH2 0x315 JUMPI PUSH2 0x315 PUSH2 0x1F76 JUMP JUMPDEST PUSH1 0x0 DUP5 DUP2 MSTORE PUSH1 0x1 PUSH1 0x20 MSTORE PUSH1 0x40 SWAP1 KECCAK256 SLOAD PUSH2 0xBE7 SWAP1 PUSH1 0xFF AND PUSH1 0x6 DUP2 GT ISZERO PUSH2 0x315 JUMPI PUSH2 0x315 PUSH2 0x1F76 JUMP JUMPDEST PUSH1 0x40 MLOAD PUSH1 0x20 ADD PUSH2 0xBF8 SWAP3 SWAP2 SWAP1 PUSH2 0x2053 JUMP JUMPDEST PUSH1 0x40 MLOAD PUSH1 0x20 DUP2 DUP4 SUB SUB DUP2 MSTORE SWAP1 PUSH1 0x40 MSTORE SWAP1 PUSH2 0xC25 JUMPI PUSH1 0x40 MLOAD PUSH3 0x461BCD PUSH1 0xE5 SHL DUP2 MSTORE PUSH1 0x4 ADD PUSH2 0x37F SWAP2 SWAP1 PUSH2 0x20D4 JUMP JUMPDEST POP PUSH1 0x0 DUP4 DUP2 MSTORE PUSH1 0x1 PUSH1 0x20 MSTORE PUSH1 0x40 SWAP1 DUP2 SWAP1 KECCAK256 DUP1 SLOAD PUSH1 0xFF NOT AND PUSH1 0x5 SWAP1 DUP2 OR SWAP1 SWAP2 SSTORE SWAP1 MLOAD DUP5 SWAP2 PUSH1 0x0 DUP1 MLOAD PUSH1 0x20 PUSH2 0x2538 DUP4 CODECOPY DUP2 MLOAD SWAP2 MSTORE SWAP2 PUSH2 0xC64 SWAP2 PUSH1 0x4 SWAP2 PUSH2 0x2009 JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 LOG2 POP POP POP JUMP JUMPDEST PUSH2 0xC79 PUSH2 0x197E JUMP JUMPDEST PUSH2 0xC83 PUSH1 0x0 PUSH2 0x1AE1 JUMP JUMPDEST JUMP JUMPDEST PUSH1 0x0 DUP4 DUP2 MSTORE PUSH1 0x1 PUSH1 0x20 DUP2 DUP2 MSTORE PUSH1 0x40 DUP1 DUP5 KECCAK256 CALLER DUP6 MSTORE SWAP1 SWAP3 ADD SWAP1 MSTORE SWAP1 KECCAK256 SLOAD DUP4 SWAP1 PUSH1 0xFF AND PUSH2 0xCF2 JUMPI PUSH1 0x40 MLOAD PUSH3 0x461BCD PUSH1 0xE5 SHL DUP2 MSTORE PUSH1 0x20 PUSH1 0x4 DUP3 ADD MSTORE PUSH1 0x1E PUSH1 0x24 DUP3 ADD MSTORE PUSH32 0x43616C6C6572206973206E6F74207265676973746572656420766F7465720000 PUSH1 0x44 DUP3 ADD MSTORE PUSH1 0x64 ADD PUSH2 0x37F JUMP JUMPDEST DUP4 PUSH1 0x2 DUP1 PUSH1 0x0 DUP4 DUP2 MSTORE PUSH1 0x1 PUSH1 0x20 MSTORE PUSH1 0x40 SWAP1 KECCAK256 SLOAD PUSH1 0xFF AND PUSH1 0x6 DUP2 GT ISZERO PUSH2 0xD19 JUMPI PUSH2 0xD19 PUSH2 0x1F76 JUMP JUMPDEST EQ PUSH2 0xD2F DUP3 PUSH1 0x6 DUP2 GT ISZERO PUSH2 0x315 JUMPI PUSH2 0x315 PUSH2 0x1F76 JUMP JUMPDEST PUSH1 0x0 DUP5 DUP2 MSTORE PUSH1 0x1 PUSH1 0x20 MSTORE PUSH1 0x40 SWAP1 KECCAK256 SLOAD PUSH2 0xD56 SWAP1 PUSH1 0xFF AND PUSH1 0x6 DUP2 GT ISZERO PUSH2 0x315 JUMPI PUSH2 0x315 PUSH2 0x1F76 JUMP JUMPDEST PUSH1 0x40 MLOAD PUSH1 0x20 ADD PUSH2 0xD67 SWAP3 SWAP2 SWAP1 PUSH2 0x2053 JUMP JUMPDEST PUSH1 0x40 MLOAD PUSH1 0x20 DUP2 DUP4 SUB SUB DUP2 MSTORE SWAP1 PUSH1 0x40 MSTORE SWAP1 PUSH2 0xD94 JUMPI PUSH1 0x40 MLOAD PUSH3 0x461BCD PUSH1 0xE5 SHL DUP2 MSTORE PUSH1 0x4 ADD PUSH2 0x37F SWAP2 SWAP1 PUSH2 0x20D4 JUMP JUMPDEST POP PUSH1 0x0 DUP7 DUP2 MSTORE PUSH1 0x1 PUSH1 0x20 DUP2 DUP2 MSTORE PUSH1 0x40 DUP1 DUP5 KECCAK256 CALLER DUP6 MSTORE SWAP1 SWAP3 ADD SWAP1 MSTORE SWAP1 KECCAK256 SLOAD PUSH1 0x3 PUSH4 0x1000000 SWAP1 SWAP2 DIV PUSH1 0xFF AND LT PUSH2 0xE31 JUMPI PUSH1 0x40 MLOAD PUSH3 0x461BCD PUSH1 0xE5 SHL DUP2 MSTORE PUSH1 0x20 PUSH1 0x4 DUP3 ADD MSTORE PUSH1 0x3B PUSH1 0x24 DUP3 ADD MSTORE PUSH32 0x596F7520616C726561647920706F7374656420332070726F706F73616C732077 PUSH1 0x44 DUP3 ADD MSTORE PUSH32 0x6869636820697320746865206D6178696D756D20616C6C6F7765640000000000 PUSH1 0x64 DUP3 ADD MSTORE PUSH1 0x84 ADD PUSH2 0x37F JUMP JUMPDEST PUSH2 0xE71 DUP7 DUP7 DUP7 DUP1 DUP1 PUSH1 0x1F ADD PUSH1 0x20 DUP1 SWAP2 DIV MUL PUSH1 0x20 ADD PUSH1 0x40 MLOAD SWAP1 DUP2 ADD PUSH1 0x40 MSTORE DUP1 SWAP4 SWAP3 SWAP2 SWAP1 DUP2 DUP2 MSTORE PUSH1 0x20 ADD DUP4 DUP4 DUP1 DUP3 DUP5 CALLDATACOPY PUSH1 0x0 SWAP3 ADD SWAP2 SWAP1 SWAP2 MSTORE POP PUSH2 0x1B31 SWAP3 POP POP POP JUMP JUMPDEST POP POP POP POP POP POP JUMP JUMPDEST PUSH2 0xE81 PUSH2 0x197E JUMP JUMPDEST DUP1 PUSH1 0x1 DUP1 PUSH1 0x0 DUP4 DUP2 MSTORE PUSH1 0x1 PUSH1 0x20 MSTORE PUSH1 0x40 SWAP1 KECCAK256 SLOAD PUSH1 0xFF AND PUSH1 0x6 DUP2 GT ISZERO PUSH2 0xEA8 JUMPI PUSH2 0xEA8 PUSH2 0x1F76 JUMP JUMPDEST EQ PUSH2 0xEBE DUP3 PUSH1 0x6 DUP2 GT ISZERO PUSH2 0x315 JUMPI PUSH2 0x315 PUSH2 0x1F76 JUMP JUMPDEST PUSH1 0x0 DUP5 DUP2 MSTORE PUSH1 0x1 PUSH1 0x20 MSTORE PUSH1 0x40 SWAP1 KECCAK256 SLOAD PUSH2 0xEE5 SWAP1 PUSH1 0xFF AND PUSH1 0x6 DUP2 GT ISZERO PUSH2 0x315 JUMPI PUSH2 0x315 PUSH2 0x1F76 JUMP JUMPDEST PUSH1 0x40 MLOAD PUSH1 0x20 ADD PUSH2 0xEF6 SWAP3 SWAP2 SWAP1 PUSH2 0x2053 JUMP JUMPDEST PUSH1 0x40 MLOAD PUSH1 0x20 DUP2 DUP4 SUB SUB DUP2 MSTORE SWAP1 PUSH1 0x40 MSTORE SWAP1 PUSH2 0xF23 JUMPI PUSH1 0x40 MLOAD PUSH3 0x461BCD PUSH1 0xE5 SHL DUP2 MSTORE PUSH1 0x4 ADD PUSH2 0x37F SWAP2 SWAP1 PUSH2 0x20D4 JUMP JUMPDEST POP PUSH2 0xF50 DUP4 PUSH1 0x40 MLOAD DUP1 PUSH1 0x40 ADD PUSH1 0x40 MSTORE DUP1 PUSH1 0xA DUP2 MSTORE PUSH1 0x20 ADD PUSH10 0x20B139BA32B73A34B7B7 PUSH1 0xB1 SHL DUP2 MSTORE POP PUSH2 0x1B31 JUMP JUMPDEST PUSH2 0xF77 DUP4 PUSH1 0x40 MLOAD DUP1 PUSH1 0x40 ADD PUSH1 0x40 MSTORE DUP1 PUSH1 0x5 DUP2 MSTORE PUSH1 0x20 ADD PUSH5 0x426C616E6B PUSH1 0xD8 SHL DUP2 MSTORE POP PUSH2 0x1B31 JUMP JUMPDEST PUSH1 0x0 DUP4 DUP2 MSTORE PUSH1 0x1 PUSH1 0x20 DUP2 SWAP1 MSTORE PUSH1 0x40 SWAP2 DUP3 SWAP1 KECCAK256 DUP1 SLOAD PUSH1 0xFF NOT AND PUSH1 0x2 SWAP1 DUP2 OR SWAP1 SWAP2 SSTORE SWAP2 MLOAD DUP6 SWAP3 PUSH1 0x0 DUP1 MLOAD PUSH1 0x20 PUSH2 0x2538 DUP4 CODECOPY DUP2 MLOAD SWAP2 MSTORE SWAP3 PUSH2 0xC64 SWAP3 SWAP1 SWAP2 SWAP1 PUSH2 0x2009 JUMP JUMPDEST PUSH1 0x0 DUP3 DUP2 MSTORE PUSH1 0x1 PUSH1 0x20 DUP2 DUP2 MSTORE PUSH1 0x40 DUP1 DUP5 KECCAK256 CALLER DUP6 MSTORE SWAP1 SWAP3 ADD SWAP1 MSTORE SWAP1 KECCAK256 SLOAD DUP3 SWAP1 PUSH1 0xFF AND PUSH2 0x1024 JUMPI PUSH1 0x40 MLOAD PUSH3 0x461BCD PUSH1 0xE5 SHL DUP2 MSTORE PUSH1 0x20 PUSH1 0x4 DUP3 ADD MSTORE PUSH1 0x1E PUSH1 0x24 DUP3 ADD MSTORE PUSH32 0x43616C6C6572206973206E6F74207265676973746572656420766F7465720000 PUSH1 0x44 DUP3 ADD MSTORE PUSH1 0x64 ADD PUSH2 0x37F JUMP JUMPDEST DUP3 PUSH1 0x4 DUP1 PUSH1 0x0 DUP4 DUP2 MSTORE PUSH1 0x1 PUSH1 0x20 MSTORE PUSH1 0x40 SWAP1 KECCAK256 SLOAD PUSH1 0xFF AND PUSH1 0x6 DUP2 GT ISZERO PUSH2 0x104B JUMPI PUSH2 0x104B PUSH2 0x1F76 JUMP JUMPDEST EQ PUSH2 0x1061 DUP3 PUSH1 0x6 DUP2 GT ISZERO PUSH2 0x315 JUMPI PUSH2 0x315 PUSH2 0x1F76 JUMP JUMPDEST PUSH1 0x0 DUP5 DUP2 MSTORE PUSH1 0x1 PUSH1 0x20 MSTORE PUSH1 0x40 SWAP1 KECCAK256 SLOAD PUSH2 0x1088 SWAP1 PUSH1 0xFF AND PUSH1 0x6 DUP2 GT ISZERO PUSH2 0x315 JUMPI PUSH2 0x315 PUSH2 0x1F76 JUMP JUMPDEST PUSH1 0x40 MLOAD PUSH1 0x20 ADD PUSH2 0x1099 SWAP3 SWAP2 SWAP1 PUSH2 0x2053 JUMP JUMPDEST PUSH1 0x40 MLOAD PUSH1 0x20 DUP2 DUP4 SUB SUB DUP2 MSTORE SWAP1 PUSH1 0x40 MSTORE SWAP1 PUSH2 0x10C6 JUMPI PUSH1 0x40 MLOAD PUSH3 0x461BCD PUSH1 0xE5 SHL DUP2 MSTORE PUSH1 0x4 ADD PUSH2 0x37F SWAP2 SWAP1 PUSH2 0x20D4 JUMP JUMPDEST POP PUSH1 0x0 DUP6 DUP2 MSTORE PUSH1 0x1 PUSH1 0x20 DUP2 DUP2 MSTORE PUSH1 0x40 DUP1 DUP5 KECCAK256 CALLER DUP6 MSTORE SWAP1 SWAP3 ADD SWAP1 MSTORE SWAP1 KECCAK256 SLOAD PUSH2 0x100 SWAP1 DIV PUSH1 0xFF AND ISZERO PUSH2 0x1138 JUMPI PUSH1 0x40 MLOAD PUSH3 0x461BCD PUSH1 0xE5 SHL DUP2 MSTORE PUSH1 0x20 PUSH1 0x4 DUP3 ADD MSTORE PUSH1 0x17 PUSH1 0x24 DUP3 ADD MSTORE PUSH32 0x566F7465722068617320616C726561647920766F746564000000000000000000 PUSH1 0x44 DUP3 ADD MSTORE PUSH1 0x64 ADD PUSH2 0x37F JUMP JUMPDEST PUSH1 0x0 DUP6 DUP2 MSTORE PUSH1 0x1 PUSH1 0x20 MSTORE PUSH1 0x40 SWAP1 KECCAK256 PUSH1 0x4 ADD SLOAD PUSH1 0xFF DUP6 AND SWAP1 DUP2 LT SWAP1 PUSH2 0x115B SWAP1 PUSH2 0x19D8 JUMP JUMPDEST PUSH1 0x40 MLOAD PUSH1 0x20 ADD PUSH2 0x116B SWAP2 SWAP1 PUSH2 0x2461 JUMP JUMPDEST PUSH1 0x40 MLOAD PUSH1 0x20 DUP2 DUP4 SUB SUB DUP2 MSTORE SWAP1 PUSH1 0x40 MSTORE SWAP1 PUSH2 0x1198 JUMPI PUSH1 0x40 MLOAD PUSH3 0x461BCD PUSH1 0xE5 SHL DUP2 MSTORE PUSH1 0x4 ADD PUSH2 0x37F SWAP2 SWAP1 PUSH2 0x20D4 JUMP JUMPDEST POP PUSH1 0x0 DUP6 DUP2 MSTORE PUSH1 0x1 PUSH1 0x20 MSTORE PUSH1 0x40 SWAP1 KECCAK256 PUSH1 0x4 ADD DUP1 SLOAD CALLER SWAP2 SWAP1 PUSH1 0xFF DUP8 AND SWAP1 DUP2 LT PUSH2 0x11C2 JUMPI PUSH2 0x11C2 PUSH2 0x20FD JUMP JUMPDEST PUSH1 0x0 SWAP2 DUP3 MSTORE PUSH1 0x20 SWAP1 SWAP2 KECCAK256 PUSH1 0x2 PUSH1 0x3 SWAP1 SWAP3 MUL ADD ADD SLOAD PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB AND SUB PUSH2 0x123E JUMPI PUSH1 0x40 MLOAD PUSH3 0x461BCD PUSH1 0xE5 SHL DUP2 MSTORE PUSH1 0x20 PUSH1 0x4 DUP3 ADD MSTORE PUSH1 0x29 PUSH1 0x24 DUP3 ADD MSTORE PUSH32 0x4120766F7465722063616E206E6F7420766F746520666F7220697473206F776E PUSH1 0x44 DUP3 ADD MSTORE PUSH9 0x81C1C9BDC1BDCD85B PUSH1 0xBA SHL PUSH1 0x64 DUP3 ADD MSTORE PUSH1 0x84 ADD PUSH2 0x37F JUMP JUMPDEST PUSH1 0x0 DUP5 PUSH1 0xFF AND GT PUSH2 0x12A3 JUMPI PUSH1 0x40 MLOAD PUSH3 0x461BCD PUSH1 0xE5 SHL DUP2 MSTORE PUSH1 0x20 PUSH1 0x4 DUP3 ADD MSTORE PUSH1 0x29 PUSH1 0x24 DUP3 ADD MSTORE PUSH32 0x46697273742070726F706F73616C20697320726573657276656420666F722061 PUSH1 0x44 DUP3 ADD MSTORE PUSH9 0x3139BA32B73A34B7B7 PUSH1 0xB9 SHL PUSH1 0x64 DUP3 ADD MSTORE PUSH1 0x84 ADD PUSH2 0x37F JUMP JUMPDEST PUSH1 0x0 DUP6 DUP2 MSTORE PUSH1 0x1 PUSH1 0x20 MSTORE PUSH1 0x40 SWAP1 KECCAK256 PUSH1 0x4 ADD DUP1 SLOAD PUSH1 0xFF DUP7 AND SWAP1 DUP2 LT PUSH2 0x12C9 JUMPI PUSH2 0x12C9 PUSH2 0x20FD JUMP JUMPDEST PUSH1 0x0 SWAP2 DUP3 MSTORE PUSH1 0x20 DUP3 KECCAK256 PUSH1 0x1 PUSH1 0x3 SWAP1 SWAP3 MUL ADD ADD DUP1 SLOAD SWAP2 PUSH2 0x12E7 DUP4 PUSH2 0x203A JUMP JUMPDEST SWAP1 SWAP2 SSTORE POP POP PUSH1 0x0 DUP6 DUP2 MSTORE PUSH1 0x1 PUSH1 0x20 DUP2 DUP2 MSTORE PUSH1 0x40 DUP1 DUP5 KECCAK256 CALLER DUP6 MSTORE DUP1 DUP5 ADD DUP4 MSTORE SWAP1 DUP5 KECCAK256 DUP1 SLOAD PUSH1 0xFF DUP11 AND PUSH3 0x10000 MUL PUSH3 0xFFFF00 NOT SWAP1 SWAP2 AND OR PUSH2 0x100 OR SWAP1 SSTORE DUP9 DUP5 MSTORE SWAP2 SWAP1 MSTORE PUSH1 0x3 ADD DUP1 SLOAD SWAP2 PUSH2 0x1337 DUP4 PUSH2 0x203A JUMP JUMPDEST SWAP1 SWAP2 SSTORE POP POP PUSH1 0x40 MLOAD CALLER DUP2 MSTORE DUP6 SWAP1 PUSH32 0x30B0F8DCD86A031EDDB071F91882EDEAC8173663BA775713B677B42B51BE44B SWAP1 PUSH1 0x20 ADD PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 LOG2 POP POP POP POP POP JUMP JUMPDEST PUSH2 0x1380 PUSH2 0x197E JUMP JUMPDEST DUP2 PUSH1 0x1 DUP1 PUSH1 0x0 DUP4 DUP2 MSTORE PUSH1 0x1 PUSH1 0x20 MSTORE PUSH1 0x40 SWAP1 KECCAK256 SLOAD PUSH1 0xFF AND PUSH1 0x6 DUP2 GT ISZERO PUSH2 0x13A7 JUMPI PUSH2 0x13A7 PUSH2 0x1F76 JUMP JUMPDEST EQ PUSH2 0x13BD DUP3 PUSH1 0x6 DUP2 GT ISZERO PUSH2 0x315 JUMPI PUSH2 0x315 PUSH2 0x1F76 JUMP JUMPDEST PUSH1 0x0 DUP5 DUP2 MSTORE PUSH1 0x1 PUSH1 0x20 MSTORE PUSH1 0x40 SWAP1 KECCAK256 SLOAD PUSH2 0x13E4 SWAP1 PUSH1 0xFF AND PUSH1 0x6 DUP2 GT ISZERO PUSH2 0x315 JUMPI PUSH2 0x315 PUSH2 0x1F76 JUMP JUMPDEST PUSH1 0x40 MLOAD PUSH1 0x20 ADD PUSH2 0x13F5 SWAP3 SWAP2 SWAP1 PUSH2 0x2053 JUMP JUMPDEST PUSH1 0x40 MLOAD PUSH1 0x20 DUP2 DUP4 SUB SUB DUP2 MSTORE SWAP1 PUSH1 0x40 MSTORE SWAP1 PUSH2 0x1422 JUMPI PUSH1 0x40 MLOAD PUSH3 0x461BCD PUSH1 0xE5 SHL DUP2 MSTORE PUSH1 0x4 ADD PUSH2 0x37F SWAP2 SWAP1 PUSH2 0x20D4 JUMP JUMPDEST POP PUSH1 0x0 SLOAD PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB AND PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB AND DUP4 PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB AND SUB PUSH2 0x148F JUMPI PUSH1 0x40 MLOAD PUSH3 0x461BCD PUSH1 0xE5 SHL DUP2 MSTORE PUSH1 0x20 PUSH1 0x4 DUP3 ADD MSTORE PUSH1 0x18 PUSH1 0x24 DUP3 ADD MSTORE PUSH32 0x4F776E65722063616E206E6F74206265206120766F7465720000000000000000 PUSH1 0x44 DUP3 ADD MSTORE PUSH1 0x64 ADD PUSH2 0x37F JUMP JUMPDEST PUSH1 0x0 DUP5 DUP2 MSTORE PUSH1 0x1 PUSH1 0x20 DUP2 DUP2 MSTORE PUSH1 0x40 DUP1 DUP5 KECCAK256 PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB DUP9 AND DUP6 MSTORE SWAP1 SWAP3 ADD SWAP1 MSTORE SWAP1 KECCAK256 SLOAD PUSH1 0xFF AND ISZERO PUSH2 0x1504 JUMPI PUSH1 0x40 MLOAD PUSH3 0x461BCD PUSH1 0xE5 SHL DUP2 MSTORE PUSH1 0x20 PUSH1 0x4 DUP3 ADD MSTORE PUSH1 0x1B PUSH1 0x24 DUP3 ADD MSTORE PUSH32 0x566F74657220697320616C726561647920726567697374657265640000000000 PUSH1 0x44 DUP3 ADD MSTORE PUSH1 0x64 ADD PUSH2 0x37F JUMP JUMPDEST PUSH1 0x40 DUP1 MLOAD PUSH1 0x80 DUP2 ADD DUP3 MSTORE PUSH1 0x1 DUP1 DUP3 MSTORE PUSH1 0x0 PUSH1 0x20 DUP1 DUP5 ADD DUP3 DUP2 MSTORE DUP5 DUP7 ADD DUP4 DUP2 MSTORE PUSH1 0x60 DUP7 ADD DUP5 DUP2 MSTORE DUP12 DUP6 MSTORE DUP6 DUP5 MSTORE DUP8 DUP6 KECCAK256 PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB DUP13 AND DUP7 MSTORE DUP1 DUP8 ADD DUP6 MSTORE SWAP8 DUP6 KECCAK256 SWAP7 MLOAD DUP8 SLOAD SWAP4 MLOAD SWAP3 MLOAD SWAP2 MLOAD PUSH2 0xFFFF NOT SWAP1 SWAP5 AND SWAP1 ISZERO ISZERO PUSH2 0xFF00 NOT AND OR PUSH2 0x100 SWAP3 ISZERO ISZERO SWAP3 SWAP1 SWAP3 MUL SWAP2 SWAP1 SWAP2 OR PUSH4 0xFFFF0000 NOT AND PUSH3 0x10000 PUSH1 0xFF SWAP3 DUP4 AND MUL PUSH4 0xFF000000 NOT AND OR PUSH4 0x1000000 SWAP2 SWAP1 SWAP3 AND MUL OR SWAP1 SWAP4 SSTORE DUP8 DUP2 MSTORE SWAP2 MSTORE PUSH1 0x2 SWAP1 SWAP2 ADD DUP1 SLOAD SWAP2 PUSH2 0x15AC DUP4 PUSH2 0x203A JUMP JUMPDEST SWAP1 SWAP2 SSTORE POP POP PUSH1 0x40 MLOAD PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB DUP5 AND DUP2 MSTORE DUP5 SWAP1 PUSH32 0xF45B8429C36D478F9A6D081C4811A819B98AA5B608588BED9D406405CF282473 SWAP1 PUSH1 0x20 ADD PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 LOG2 POP POP POP POP JUMP JUMPDEST PUSH2 0x15FD PUSH2 0x197E JUMP JUMPDEST DUP1 PUSH1 0x3 DUP1 PUSH1 0x0 DUP4 DUP2 MSTORE PUSH1 0x1 PUSH1 0x20 MSTORE PUSH1 0x40 SWAP1 KECCAK256 SLOAD PUSH1 0xFF AND PUSH1 0x6 DUP2 GT ISZERO PUSH2 0x1624 JUMPI PUSH2 0x1624 PUSH2 0x1F76 JUMP JUMPDEST EQ PUSH2 0x163A DUP3 PUSH1 0x6 DUP2 GT ISZERO PUSH2 0x315 JUMPI PUSH2 0x315 PUSH2 0x1F76 JUMP JUMPDEST PUSH1 0x0 DUP5 DUP2 MSTORE PUSH1 0x1 PUSH1 0x20 MSTORE PUSH1 0x40 SWAP1 KECCAK256 SLOAD PUSH2 0x1661 SWAP1 PUSH1 0xFF AND PUSH1 0x6 DUP2 GT ISZERO PUSH2 0x315 JUMPI PUSH2 0x315 PUSH2 0x1F76 JUMP JUMPDEST PUSH1 0x40 MLOAD PUSH1 0x20 ADD PUSH2 0x1672 SWAP3 SWAP2 SWAP1 PUSH2 0x2053 JUMP JUMPDEST PUSH1 0x40 MLOAD PUSH1 0x20 DUP2 DUP4 SUB SUB DUP2 MSTORE SWAP1 PUSH1 0x40 MSTORE SWAP1 PUSH2 0x169F JUMPI PUSH1 0x40 MLOAD PUSH3 0x461BCD PUSH1 0xE5 SHL DUP2 MSTORE PUSH1 0x4 ADD PUSH2 0x37F SWAP2 SWAP1 PUSH2 0x20D4 JUMP JUMPDEST POP PUSH1 0x0 DUP4 DUP2 MSTORE PUSH1 0x1 PUSH1 0x20 MSTORE PUSH1 0x40 SWAP1 DUP2 SWAP1 KECCAK256 DUP1 SLOAD PUSH1 0xFF NOT AND PUSH1 0x4 SWAP1 DUP2 OR SWAP1 SWAP2 SSTORE SWAP1 MLOAD DUP5 SWAP2 PUSH1 0x0 DUP1 MLOAD PUSH1 0x20 PUSH2 0x2538 DUP4 CODECOPY DUP2 MLOAD SWAP2 MSTORE SWAP2 PUSH2 0xC64 SWAP2 PUSH1 0x3 SWAP2 PUSH2 0x2009 JUMP JUMPDEST PUSH1 0x0 DUP3 CALLER PUSH2 0x16F4 PUSH1 0x0 SLOAD PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB AND SWAP1 JUMP JUMPDEST PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB AND EQ DUP1 PUSH2 0x1724 JUMPI POP PUSH1 0x0 DUP2 DUP2 MSTORE PUSH1 0x1 PUSH1 0x20 DUP2 DUP2 MSTORE PUSH1 0x40 DUP1 DUP5 KECCAK256 CALLER DUP6 MSTORE SWAP1 SWAP3 ADD SWAP1 MSTORE SWAP1 KECCAK256 SLOAD PUSH1 0xFF AND JUMPDEST PUSH2 0x1740 JUMPI PUSH1 0x40 MLOAD PUSH3 0x461BCD PUSH1 0xE5 SHL DUP2 MSTORE PUSH1 0x4 ADD PUSH2 0x37F SWAP1 PUSH2 0x2398 JUMP JUMPDEST DUP4 PUSH1 0x5 DUP1 PUSH1 0x0 DUP4 DUP2 MSTORE PUSH1 0x1 PUSH1 0x20 MSTORE PUSH1 0x40 SWAP1 KECCAK256 SLOAD PUSH1 0xFF AND PUSH1 0x6 DUP2 GT ISZERO PUSH2 0x1767 JUMPI PUSH2 0x1767 PUSH2 0x1F76 JUMP JUMPDEST LT ISZERO PUSH2 0x177E DUP3 PUSH1 0x6 DUP2 GT ISZERO PUSH2 0x315 JUMPI PUSH2 0x315 PUSH2 0x1F76 JUMP JUMPDEST PUSH1 0x0 DUP5 DUP2 MSTORE PUSH1 0x1 PUSH1 0x20 MSTORE PUSH1 0x40 SWAP1 KECCAK256 SLOAD PUSH2 0x17A5 SWAP1 PUSH1 0xFF AND PUSH1 0x6 DUP2 GT ISZERO PUSH2 0x315 JUMPI PUSH2 0x315 PUSH2 0x1F76 JUMP JUMPDEST PUSH1 0x40 MLOAD PUSH1 0x20 ADD PUSH2 0x17B6 SWAP3 SWAP2 SWAP1 PUSH2 0x23DF JUMP JUMPDEST PUSH1 0x40 MLOAD PUSH1 0x20 DUP2 DUP4 SUB SUB DUP2 MSTORE SWAP1 PUSH1 0x40 MSTORE SWAP1 PUSH2 0x17E3 JUMPI PUSH1 0x40 MLOAD PUSH3 0x461BCD PUSH1 0xE5 SHL DUP2 MSTORE PUSH1 0x4 ADD PUSH2 0x37F SWAP2 SWAP1 PUSH2 0x20D4 JUMP JUMPDEST POP POP POP PUSH1 0x0 SWAP4 DUP5 MSTORE POP POP PUSH1 0x1 PUSH1 0x20 DUP2 DUP2 MSTORE PUSH1 0x40 DUP1 DUP6 KECCAK256 PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB SWAP5 SWAP1 SWAP5 AND DUP6 MSTORE SWAP3 SWAP1 SWAP2 ADD SWAP1 MSTORE SWAP1 KECCAK256 SLOAD PUSH3 0x10000 SWAP1 DIV PUSH1 0xFF AND SWAP1 JUMP JUMPDEST PUSH2 0x1824 PUSH2 0x197E JUMP JUMPDEST DUP1 PUSH1 0x2 DUP1 PUSH1 0x0 DUP4 DUP2 MSTORE PUSH1 0x1 PUSH1 0x20 MSTORE PUSH1 0x40 SWAP1 KECCAK256 SLOAD PUSH1 0xFF AND PUSH1 0x6 DUP2 GT ISZERO PUSH2 0x184B JUMPI PUSH2 0x184B PUSH2 0x1F76 JUMP JUMPDEST EQ PUSH2 0x1861 DUP3 PUSH1 0x6 DUP2 GT ISZERO PUSH2 0x315 JUMPI PUSH2 0x315 PUSH2 0x1F76 JUMP JUMPDEST PUSH1 0x0 DUP5 DUP2 MSTORE PUSH1 0x1 PUSH1 0x20 MSTORE PUSH1 0x40 SWAP1 KECCAK256 SLOAD PUSH2 0x1888 SWAP1 PUSH1 0xFF AND PUSH1 0x6 DUP2 GT ISZERO PUSH2 0x315 JUMPI PUSH2 0x315 PUSH2 0x1F76 JUMP JUMPDEST PUSH1 0x40 MLOAD PUSH1 0x20 ADD PUSH2 0x1899 SWAP3 SWAP2 SWAP1 PUSH2 0x2053 JUMP JUMPDEST PUSH1 0x40 MLOAD PUSH1 0x20 DUP2 DUP4 SUB SUB DUP2 MSTORE SWAP1 PUSH1 0x40 MSTORE SWAP1 PUSH2 0x18C6 JUMPI PUSH1 0x40 MLOAD PUSH3 0x461BCD PUSH1 0xE5 SHL DUP2 MSTORE PUSH1 0x4 ADD PUSH2 0x37F SWAP2 SWAP1 PUSH2 0x20D4 JUMP JUMPDEST POP PUSH1 0x0 DUP4 DUP2 MSTORE PUSH1 0x1 PUSH1 0x20 MSTORE PUSH1 0x40 SWAP1 DUP2 SWAP1 KECCAK256 DUP1 SLOAD PUSH1 0xFF NOT AND PUSH1 0x3 SWAP1 DUP2 OR SWAP1 SWAP2 SSTORE SWAP1 MLOAD DUP5 SWAP2 PUSH1 0x0 DUP1 MLOAD PUSH1 0x20 PUSH2 0x2538 DUP4 CODECOPY DUP2 MLOAD SWAP2 MSTORE SWAP2 PUSH2 0xC64 SWAP2 PUSH1 0x2 SWAP2 PUSH2 0x2009 JUMP JUMPDEST PUSH2 0x190D PUSH2 0x197E JUMP JUMPDEST PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB DUP2 AND PUSH2 0x1972 JUMPI PUSH1 0x40 MLOAD PUSH3 0x461BCD PUSH1 0xE5 SHL DUP2 MSTORE PUSH1 0x20 PUSH1 0x4 DUP3 ADD MSTORE PUSH1 0x26 PUSH1 0x24 DUP3 ADD MSTORE PUSH32 0x4F776E61626C653A206E6577206F776E657220697320746865207A65726F2061 PUSH1 0x44 DUP3 ADD MSTORE PUSH6 0x646472657373 PUSH1 0xD0 SHL PUSH1 0x64 DUP3 ADD MSTORE PUSH1 0x84 ADD PUSH2 0x37F JUMP JUMPDEST PUSH2 0x197B DUP2 PUSH2 0x1AE1 JUMP JUMPDEST POP JUMP JUMPDEST PUSH1 0x0 SLOAD PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB AND CALLER EQ PUSH2 0xC83 JUMPI PUSH1 0x40 MLOAD PUSH3 0x461BCD PUSH1 0xE5 SHL DUP2 MSTORE PUSH1 0x20 PUSH1 0x4 DUP3 ADD DUP2 SWAP1 MSTORE PUSH1 0x24 DUP3 ADD MSTORE PUSH32 0x4F776E61626C653A2063616C6C6572206973206E6F7420746865206F776E6572 PUSH1 0x44 DUP3 ADD MSTORE PUSH1 0x64 ADD PUSH2 0x37F JUMP JUMPDEST PUSH1 0x60 DUP2 PUSH1 0x0 SUB PUSH2 0x19FF JUMPI POP POP PUSH1 0x40 DUP1 MLOAD DUP1 DUP3 ADD SWAP1 SWAP2 MSTORE PUSH1 0x1 DUP2 MSTORE PUSH1 0x3 PUSH1 0xFC SHL PUSH1 0x20 DUP3 ADD MSTORE SWAP1 JUMP JUMPDEST DUP2 PUSH1 0x0 JUMPDEST DUP2 ISZERO PUSH2 0x1A29 JUMPI DUP1 PUSH2 0x1A13 DUP2 PUSH2 0x203A JUMP JUMPDEST SWAP2 POP PUSH2 0x1A22 SWAP1 POP PUSH1 0xA DUP4 PUSH2 0x24C1 JUMP JUMPDEST SWAP2 POP PUSH2 0x1A03 JUMP JUMPDEST PUSH1 0x0 DUP2 PUSH8 0xFFFFFFFFFFFFFFFF DUP2 GT ISZERO PUSH2 0x1A44 JUMPI PUSH2 0x1A44 PUSH2 0x20E7 JUMP JUMPDEST PUSH1 0x40 MLOAD SWAP1 DUP1 DUP3 MSTORE DUP1 PUSH1 0x1F ADD PUSH1 0x1F NOT AND PUSH1 0x20 ADD DUP3 ADD PUSH1 0x40 MSTORE DUP1 ISZERO PUSH2 0x1A6E JUMPI PUSH1 0x20 DUP3 ADD DUP2 DUP1 CALLDATASIZE DUP4 CALLDATACOPY ADD SWAP1 POP JUMPDEST POP SWAP1 POP JUMPDEST DUP5 ISZERO PUSH2 0x1AD9 JUMPI PUSH2 0x1A83 PUSH1 0x1 DUP4 PUSH2 0x214D JUMP JUMPDEST SWAP2 POP PUSH2 0x1A90 PUSH1 0xA DUP7 PUSH2 0x24D5 JUMP JUMPDEST PUSH2 0x1A9B SWAP1 PUSH1 0x30 PUSH2 0x24E9 JUMP JUMPDEST PUSH1 0xF8 SHL DUP2 DUP4 DUP2 MLOAD DUP2 LT PUSH2 0x1AB0 JUMPI PUSH2 0x1AB0 PUSH2 0x20FD JUMP JUMPDEST PUSH1 0x20 ADD ADD SWAP1 PUSH1 0x1 PUSH1 0x1 PUSH1 0xF8 SHL SUB NOT AND SWAP1 DUP2 PUSH1 0x0 BYTE SWAP1 MSTORE8 POP PUSH2 0x1AD2 PUSH1 0xA DUP7 PUSH2 0x24C1 JUMP JUMPDEST SWAP5 POP PUSH2 0x1A72 JUMP JUMPDEST SWAP5 SWAP4 POP POP POP POP JUMP JUMPDEST PUSH1 0x0 DUP1 SLOAD PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB DUP4 DUP2 AND PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB NOT DUP4 AND DUP2 OR DUP5 SSTORE PUSH1 0x40 MLOAD SWAP2 SWAP1 SWAP3 AND SWAP3 DUP4 SWAP2 PUSH32 0x8BE0079C531659141344CD1FD0A4F28419497F9722A3DAAFE3B4186F6B6457E0 SWAP2 SWAP1 LOG3 POP POP JUMP JUMPDEST PUSH1 0x0 DUP3 DUP2 MSTORE PUSH1 0x1 PUSH1 0x20 MSTORE PUSH1 0x40 SWAP1 KECCAK256 PUSH1 0x4 ADD SLOAD PUSH1 0xFF GT PUSH2 0x1B87 JUMPI PUSH1 0x40 MLOAD PUSH3 0x461BCD PUSH1 0xE5 SHL DUP2 MSTORE PUSH1 0x20 PUSH1 0x4 DUP3 ADD MSTORE PUSH1 0x12 PUSH1 0x24 DUP3 ADD MSTORE PUSH18 0x546F6F206D616E792070726F706F73616C73 PUSH1 0x70 SHL PUSH1 0x44 DUP3 ADD MSTORE PUSH1 0x64 ADD PUSH2 0x37F JUMP JUMPDEST PUSH1 0x0 DUP3 DUP2 MSTORE PUSH1 0x1 PUSH1 0x20 DUP2 DUP2 MSTORE PUSH1 0x40 DUP1 DUP5 KECCAK256 DUP2 MLOAD PUSH1 0x60 DUP2 ADD DUP4 MSTORE DUP7 DUP2 MSTORE DUP1 DUP5 ADD DUP7 SWAP1 MSTORE CALLER SWAP3 DUP2 ADD SWAP3 SWAP1 SWAP3 MSTORE PUSH1 0x4 ADD DUP1 SLOAD SWAP4 DUP5 ADD DUP2 SSTORE DUP5 MSTORE SWAP3 KECCAK256 DUP3 MLOAD PUSH1 0x3 SWAP1 SWAP3 MUL ADD SWAP1 DUP2 SWAP1 PUSH2 0x1BD4 SWAP1 DUP3 PUSH2 0x21B1 JUMP JUMPDEST POP PUSH1 0x20 DUP3 DUP2 ADD MLOAD PUSH1 0x1 DUP4 DUP2 ADD SWAP2 SWAP1 SWAP2 SSTORE PUSH1 0x40 SWAP4 DUP5 ADD MLOAD PUSH1 0x2 SWAP1 SWAP4 ADD DUP1 SLOAD PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB NOT AND PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB SWAP1 SWAP5 AND SWAP4 SWAP1 SWAP4 OR SWAP1 SWAP3 SSTORE PUSH1 0x0 DUP6 DUP2 MSTORE DUP3 DUP3 MSTORE DUP4 DUP2 KECCAK256 CALLER DUP3 MSTORE SWAP1 SWAP3 ADD SWAP1 MSTORE KECCAK256 DUP1 SLOAD PUSH4 0x1000000 SWAP1 DIV PUSH1 0xFF AND SWAP1 PUSH1 0x3 PUSH2 0x1C39 DUP4 PUSH2 0x24FC JUMP JUMPDEST DUP3 SLOAD PUSH1 0xFF SWAP2 DUP3 AND PUSH2 0x100 SWAP4 SWAP1 SWAP4 EXP SWAP3 DUP4 MUL SWAP2 SWAP1 SWAP3 MUL NOT SWAP1 SWAP2 AND OR SWAP1 SSTORE POP PUSH1 0x0 DUP3 DUP2 MSTORE PUSH1 0x1 PUSH1 0x20 DUP2 SWAP1 MSTORE PUSH1 0x40 DUP3 KECCAK256 PUSH1 0x4 ADD SLOAD PUSH2 0x1C74 SWAP2 SWAP1 PUSH2 0x214D JUMP JUMPDEST SWAP1 POP DUP3 PUSH32 0x734FEEC28275467965F53538A3F7BB9E350E316EC6F015C595D6DAE504A5762F DUP3 PUSH1 0x1 PUSH1 0x0 DUP8 DUP2 MSTORE PUSH1 0x20 ADD SWAP1 DUP2 MSTORE PUSH1 0x20 ADD PUSH1 0x0 KECCAK256 PUSH1 0x4 ADD DUP5 PUSH1 0xFF AND DUP2 SLOAD DUP2 LT PUSH2 0x1CC3 JUMPI PUSH2 0x1CC3 PUSH2 0x20FD JUMP JUMPDEST SWAP1 PUSH1 0x0 MSTORE PUSH1 0x20 PUSH1 0x0 KECCAK256 SWAP1 PUSH1 0x3 MUL ADD PUSH1 0x0 ADD PUSH1 0x40 MLOAD PUSH2 0xC64 SWAP3 SWAP2 SWAP1 PUSH2 0x251B JUMP JUMPDEST PUSH1 0x0 DUP1 DUP4 PUSH1 0x1F DUP5 ADD SLT PUSH2 0x1CF4 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST POP DUP2 CALLDATALOAD PUSH8 0xFFFFFFFFFFFFFFFF DUP2 GT ISZERO PUSH2 0x1D0C JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST PUSH1 0x20 DUP4 ADD SWAP2 POP DUP4 PUSH1 0x20 DUP3 DUP6 ADD ADD GT ISZERO PUSH2 0x1D24 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST SWAP3 POP SWAP3 SWAP1 POP JUMP JUMPDEST PUSH1 0x0 DUP1 PUSH1 0x0 DUP1 PUSH1 0x40 DUP6 DUP8 SUB SLT ISZERO PUSH2 0x1D41 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST DUP5 CALLDATALOAD PUSH8 0xFFFFFFFFFFFFFFFF DUP1 DUP3 GT ISZERO PUSH2 0x1D59 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST PUSH2 0x1D65 DUP9 DUP4 DUP10 ADD PUSH2 0x1CE2 JUMP JUMPDEST SWAP1 SWAP7 POP SWAP5 POP PUSH1 0x20 DUP8 ADD CALLDATALOAD SWAP2 POP DUP1 DUP3 GT ISZERO PUSH2 0x1D7E JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST POP PUSH2 0x1D8B DUP8 DUP3 DUP9 ADD PUSH2 0x1CE2 JUMP JUMPDEST SWAP6 SWAP9 SWAP5 SWAP8 POP SWAP6 POP POP POP POP JUMP JUMPDEST PUSH1 0x0 PUSH1 0x20 DUP3 DUP5 SUB SLT ISZERO PUSH2 0x1DA9 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST POP CALLDATALOAD SWAP2 SWAP1 POP JUMP JUMPDEST PUSH1 0x0 JUMPDEST DUP4 DUP2 LT ISZERO PUSH2 0x1DCB JUMPI DUP2 DUP2 ADD MLOAD DUP4 DUP3 ADD MSTORE PUSH1 0x20 ADD PUSH2 0x1DB3 JUMP JUMPDEST POP POP PUSH1 0x0 SWAP2 ADD MSTORE JUMP JUMPDEST PUSH1 0x0 DUP2 MLOAD DUP1 DUP5 MSTORE PUSH2 0x1DEC DUP2 PUSH1 0x20 DUP7 ADD PUSH1 0x20 DUP7 ADD PUSH2 0x1DB0 JUMP JUMPDEST PUSH1 0x1F ADD PUSH1 0x1F NOT AND SWAP3 SWAP1 SWAP3 ADD PUSH1 0x20 ADD SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH1 0x0 PUSH1 0x20 DUP1 DUP4 ADD DUP2 DUP5 MSTORE DUP1 DUP6 MLOAD DUP1 DUP4 MSTORE PUSH1 0x40 SWAP3 POP DUP3 DUP7 ADD SWAP2 POP DUP3 DUP2 PUSH1 0x5 SHL DUP8 ADD ADD DUP5 DUP9 ADD PUSH1 0x0 JUMPDEST DUP4 DUP2 LT ISZERO PUSH2 0x1E7C JUMPI PUSH1 0x3F NOT DUP10 DUP5 SUB ADD DUP6 MSTORE DUP2 MLOAD PUSH1 0x60 DUP2 MLOAD DUP2 DUP7 MSTORE PUSH2 0x1E4D DUP3 DUP8 ADD DUP3 PUSH2 0x1DD4 JUMP JUMPDEST DUP4 DUP12 ADD MLOAD DUP8 DUP13 ADD MSTORE SWAP3 DUP10 ADD MLOAD PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB AND SWAP6 DUP10 ADD SWAP6 SWAP1 SWAP6 MSTORE POP SWAP5 DUP8 ADD SWAP5 SWAP3 POP SWAP1 DUP7 ADD SWAP1 PUSH1 0x1 ADD PUSH2 0x1E27 JUMP JUMPDEST POP SWAP1 SWAP9 SWAP8 POP POP POP POP POP POP POP POP JUMP JUMPDEST PUSH1 0x0 DUP1 PUSH1 0x0 PUSH1 0x40 DUP5 DUP7 SUB SLT ISZERO PUSH2 0x1E9F JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST DUP4 CALLDATALOAD SWAP3 POP PUSH1 0x20 DUP5 ADD CALLDATALOAD PUSH8 0xFFFFFFFFFFFFFFFF DUP2 GT ISZERO PUSH2 0x1EBD JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST PUSH2 0x1EC9 DUP7 DUP3 DUP8 ADD PUSH2 0x1CE2 JUMP JUMPDEST SWAP5 SWAP8 SWAP1 SWAP7 POP SWAP4 SWAP5 POP POP POP POP JUMP JUMPDEST PUSH1 0x0 DUP1 PUSH1 0x40 DUP4 DUP6 SUB SLT ISZERO PUSH2 0x1EE9 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST DUP3 CALLDATALOAD SWAP2 POP PUSH1 0x20 DUP4 ADD CALLDATALOAD PUSH1 0xFF DUP2 AND DUP2 EQ PUSH2 0x1F01 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST DUP1 SWAP2 POP POP SWAP3 POP SWAP3 SWAP1 POP JUMP JUMPDEST DUP1 CALLDATALOAD PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB DUP2 AND DUP2 EQ PUSH2 0x1F23 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST SWAP2 SWAP1 POP JUMP JUMPDEST PUSH1 0x0 DUP1 PUSH1 0x40 DUP4 DUP6 SUB SLT ISZERO PUSH2 0x1F3B JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST DUP3 CALLDATALOAD SWAP2 POP PUSH2 0x1F4B PUSH1 0x20 DUP5 ADD PUSH2 0x1F0C JUMP JUMPDEST SWAP1 POP SWAP3 POP SWAP3 SWAP1 POP JUMP JUMPDEST PUSH1 0x0 PUSH1 0x20 DUP3 DUP5 SUB SLT ISZERO PUSH2 0x1F66 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST PUSH2 0x1F6F DUP3 PUSH2 0x1F0C JUMP JUMPDEST SWAP4 SWAP3 POP POP POP JUMP JUMPDEST PUSH4 0x4E487B71 PUSH1 0xE0 SHL PUSH1 0x0 MSTORE PUSH1 0x21 PUSH1 0x4 MSTORE PUSH1 0x24 PUSH1 0x0 REVERT JUMPDEST DUP2 DUP4 MSTORE DUP2 DUP2 PUSH1 0x20 DUP6 ADD CALLDATACOPY POP PUSH1 0x0 DUP3 DUP3 ADD PUSH1 0x20 SWAP1 DUP2 ADD SWAP2 SWAP1 SWAP2 MSTORE PUSH1 0x1F SWAP1 SWAP2 ADD PUSH1 0x1F NOT AND SWAP1 SWAP2 ADD ADD SWAP1 JUMP JUMPDEST PUSH1 0x40 DUP2 MSTORE PUSH1 0x0 PUSH2 0x1FC9 PUSH1 0x40 DUP4 ADD DUP7 DUP9 PUSH2 0x1F8C JUMP JUMPDEST DUP3 DUP2 SUB PUSH1 0x20 DUP5 ADD MSTORE PUSH2 0x1FDC DUP2 DUP6 DUP8 PUSH2 0x1F8C JUMP JUMPDEST SWAP8 SWAP7 POP POP POP POP POP POP POP JUMP JUMPDEST PUSH1 0x7 DUP2 LT PUSH2 0x2005 JUMPI PUSH4 0x4E487B71 PUSH1 0xE0 SHL PUSH1 0x0 MSTORE PUSH1 0x21 PUSH1 0x4 MSTORE PUSH1 0x24 PUSH1 0x0 REVERT JUMPDEST SWAP1 MSTORE JUMP JUMPDEST PUSH1 0x40 DUP2 ADD PUSH2 0x2017 DUP3 DUP6 PUSH2 0x1FE7 JUMP JUMPDEST PUSH2 0x1F6F PUSH1 0x20 DUP4 ADD DUP5 PUSH2 0x1FE7 JUMP JUMPDEST PUSH4 0x4E487B71 PUSH1 0xE0 SHL PUSH1 0x0 MSTORE PUSH1 0x11 PUSH1 0x4 MSTORE PUSH1 0x24 PUSH1 0x0 REVERT JUMPDEST PUSH1 0x0 PUSH1 0x1 DUP3 ADD PUSH2 0x204C JUMPI PUSH2 0x204C PUSH2 0x2024 JUMP JUMPDEST POP PUSH1 0x1 ADD SWAP1 JUMP JUMPDEST PUSH32 0x556E657870656374656420766F74696E672073657373696F6E20737461747573 DUP2 MSTORE PUSH11 0x3A2065787065637465643D PUSH1 0xA8 SHL PUSH1 0x20 DUP3 ADD MSTORE PUSH1 0x0 DUP4 MLOAD PUSH2 0x209F DUP2 PUSH1 0x2B DUP6 ADD PUSH1 0x20 DUP9 ADD PUSH2 0x1DB0 JUMP JUMPDEST PUSH9 0x2063757272656E743D PUSH1 0xB8 SHL PUSH1 0x2B SWAP2 DUP5 ADD SWAP2 DUP3 ADD MSTORE DUP4 MLOAD PUSH2 0x20C8 DUP2 PUSH1 0x34 DUP5 ADD PUSH1 0x20 DUP9 ADD PUSH2 0x1DB0 JUMP JUMPDEST ADD PUSH1 0x34 ADD SWAP5 SWAP4 POP POP POP POP JUMP JUMPDEST PUSH1 0x20 DUP2 MSTORE PUSH1 0x0 PUSH2 0x1F6F PUSH1 0x20 DUP4 ADD DUP5 PUSH2 0x1DD4 JUMP JUMPDEST PUSH4 0x4E487B71 PUSH1 0xE0 SHL PUSH1 0x0 MSTORE PUSH1 0x41 PUSH1 0x4 MSTORE PUSH1 0x24 PUSH1 0x0 REVERT JUMPDEST PUSH4 0x4E487B71 PUSH1 0xE0 SHL PUSH1 0x0 MSTORE PUSH1 0x32 PUSH1 0x4 MSTORE PUSH1 0x24 PUSH1 0x0 REVERT JUMPDEST PUSH1 0x1 DUP2 DUP2 SHR SWAP1 DUP3 AND DUP1 PUSH2 0x2127 JUMPI PUSH1 0x7F DUP3 AND SWAP2 POP JUMPDEST PUSH1 0x20 DUP3 LT DUP2 SUB PUSH2 0x2147 JUMPI PUSH4 0x4E487B71 PUSH1 0xE0 SHL PUSH1 0x0 MSTORE PUSH1 0x22 PUSH1 0x4 MSTORE PUSH1 0x24 PUSH1 0x0 REVERT JUMPDEST POP SWAP2 SWAP1 POP JUMP JUMPDEST DUP2 DUP2 SUB DUP2 DUP2 GT ISZERO PUSH2 0x2160 JUMPI PUSH2 0x2160 PUSH2 0x2024 JUMP JUMPDEST SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH1 0x1F DUP3 GT ISZERO PUSH2 0x21AC JUMPI PUSH1 0x0 DUP2 DUP2 MSTORE PUSH1 0x20 DUP2 KECCAK256 PUSH1 0x1F DUP6 ADD PUSH1 0x5 SHR DUP2 ADD PUSH1 0x20 DUP7 LT ISZERO PUSH2 0x218D JUMPI POP DUP1 JUMPDEST PUSH1 0x1F DUP6 ADD PUSH1 0x5 SHR DUP3 ADD SWAP2 POP JUMPDEST DUP2 DUP2 LT ISZERO PUSH2 0xE71 JUMPI DUP3 DUP2 SSTORE PUSH1 0x1 ADD PUSH2 0x2199 JUMP JUMPDEST POP POP POP JUMP JUMPDEST DUP2 MLOAD PUSH8 0xFFFFFFFFFFFFFFFF DUP2 GT ISZERO PUSH2 0x21CB JUMPI PUSH2 0x21CB PUSH2 0x20E7 JUMP JUMPDEST PUSH2 0x21DF DUP2 PUSH2 0x21D9 DUP5 SLOAD PUSH2 0x2113 JUMP JUMPDEST DUP5 PUSH2 0x2166 JUMP JUMPDEST PUSH1 0x20 DUP1 PUSH1 0x1F DUP4 GT PUSH1 0x1 DUP2 EQ PUSH2 0x2214 JUMPI PUSH1 0x0 DUP5 ISZERO PUSH2 0x21FC JUMPI POP DUP6 DUP4 ADD MLOAD JUMPDEST PUSH1 0x0 NOT PUSH1 0x3 DUP7 SWAP1 SHL SHR NOT AND PUSH1 0x1 DUP6 SWAP1 SHL OR DUP6 SSTORE PUSH2 0xE71 JUMP JUMPDEST PUSH1 0x0 DUP6 DUP2 MSTORE PUSH1 0x20 DUP2 KECCAK256 PUSH1 0x1F NOT DUP7 AND SWAP2 JUMPDEST DUP3 DUP2 LT ISZERO PUSH2 0x2243 JUMPI DUP9 DUP7 ADD MLOAD DUP3 SSTORE SWAP5 DUP5 ADD SWAP5 PUSH1 0x1 SWAP1 SWAP2 ADD SWAP1 DUP5 ADD PUSH2 0x2224 JUMP JUMPDEST POP DUP6 DUP3 LT ISZERO PUSH2 0x2261 JUMPI DUP8 DUP6 ADD MLOAD PUSH1 0x0 NOT PUSH1 0x3 DUP9 SWAP1 SHL PUSH1 0xF8 AND SHR NOT AND DUP2 SSTORE JUMPDEST POP POP POP POP POP PUSH1 0x1 SWAP1 DUP2 SHL ADD SWAP1 SSTORE POP JUMP JUMPDEST PUSH1 0x0 DUP2 SLOAD PUSH2 0x227E DUP2 PUSH2 0x2113 JUMP JUMPDEST DUP1 DUP6 MSTORE PUSH1 0x20 PUSH1 0x1 DUP4 DUP2 AND DUP1 ISZERO PUSH2 0x229B JUMPI PUSH1 0x1 DUP2 EQ PUSH2 0x22B5 JUMPI PUSH2 0x22E3 JUMP JUMPDEST PUSH1 0xFF NOT DUP6 AND DUP9 DUP5 ADD MSTORE DUP4 ISZERO ISZERO PUSH1 0x5 SHL DUP9 ADD DUP4 ADD SWAP6 POP PUSH2 0x22E3 JUMP JUMPDEST DUP7 PUSH1 0x0 MSTORE DUP3 PUSH1 0x0 KECCAK256 PUSH1 0x0 JUMPDEST DUP6 DUP2 LT ISZERO PUSH2 0x22DB JUMPI DUP2 SLOAD DUP11 DUP3 ADD DUP7 ADD MSTORE SWAP1 DUP4 ADD SWAP1 DUP5 ADD PUSH2 0x22C0 JUMP JUMPDEST DUP10 ADD DUP5 ADD SWAP7 POP POP JUMPDEST POP POP POP POP POP SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH1 0x0 PUSH1 0xA0 DUP3 ADD DUP8 DUP4 MSTORE PUSH1 0x20 DUP8 DUP2 DUP6 ADD MSTORE PUSH1 0x40 DUP8 DUP2 DUP7 ADD MSTORE PUSH1 0x60 DUP8 DUP2 DUP8 ADD MSTORE PUSH1 0xA0 PUSH1 0x80 DUP8 ADD MSTORE DUP4 DUP8 SLOAD DUP1 DUP7 MSTORE PUSH1 0xC0 DUP9 ADD SWAP2 POP PUSH1 0xC0 DUP2 PUSH1 0x5 SHL DUP10 ADD ADD SWAP6 POP DUP9 PUSH1 0x0 MSTORE DUP5 PUSH1 0x0 KECCAK256 PUSH1 0x0 JUMPDEST DUP3 DUP2 LT ISZERO PUSH2 0x2385 JUMPI DUP10 DUP9 SUB PUSH1 0xBF NOT ADD DUP5 MSTORE DUP5 DUP9 MSTORE PUSH2 0x2355 DUP6 DUP10 ADD DUP4 PUSH2 0x2271 JUMP JUMPDEST PUSH1 0x1 DUP4 DUP2 ADD SLOAD DUP11 DUP11 ADD MSTORE PUSH1 0x2 DUP5 ADD SLOAD PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB AND SWAP10 DUP9 ADD SWAP10 SWAP1 SWAP10 MSTORE SWAP8 SWAP4 DUP8 ADD SWAP4 PUSH1 0x3 SWAP1 SWAP3 ADD SWAP2 ADD PUSH2 0x2335 JUMP JUMPDEST POP SWAP6 SWAP14 SWAP13 POP POP POP POP POP POP POP POP POP POP POP POP POP JUMP JUMPDEST PUSH1 0x20 DUP1 DUP3 MSTORE PUSH1 0x27 SWAP1 DUP3 ADD MSTORE PUSH32 0x43616C6C6572206973206E6F74206F776E6572206F7220726567697374657265 PUSH1 0x40 DUP3 ADD MSTORE PUSH7 0x32103B37BA32B9 PUSH1 0xC9 SHL PUSH1 0x60 DUP3 ADD MSTORE PUSH1 0x80 ADD SWAP1 JUMP JUMPDEST PUSH32 0x556E657870656374656420766F74696E672073657373696F6E20737461747573 DUP2 MSTORE PUSH12 0x3A2065787065637465643E3D PUSH1 0xA0 SHL PUSH1 0x20 DUP3 ADD MSTORE PUSH1 0x0 DUP4 MLOAD PUSH2 0x242C DUP2 PUSH1 0x2C DUP6 ADD PUSH1 0x20 DUP9 ADD PUSH2 0x1DB0 JUMP JUMPDEST PUSH9 0x2063757272656E743D PUSH1 0xB8 SHL PUSH1 0x2C SWAP2 DUP5 ADD SWAP2 DUP3 ADD MSTORE DUP4 MLOAD PUSH2 0x2455 DUP2 PUSH1 0x35 DUP5 ADD PUSH1 0x20 DUP9 ADD PUSH2 0x1DB0 JUMP JUMPDEST ADD PUSH1 0x35 ADD SWAP5 SWAP4 POP POP POP POP JUMP JUMPDEST PUSH9 0x283937B837B9B0B61 PUSH1 0xBD SHL DUP2 MSTORE PUSH1 0x0 DUP3 MLOAD PUSH2 0x2485 DUP2 PUSH1 0x9 DUP6 ADD PUSH1 0x20 DUP8 ADD PUSH2 0x1DB0 JUMP JUMPDEST PUSH15 0x8191BD95CC81B9BDD08195E1A5CDD PUSH1 0x8A SHL PUSH1 0x9 SWAP4 SWAP1 SWAP2 ADD SWAP3 DUP4 ADD MSTORE POP PUSH1 0x18 ADD SWAP2 SWAP1 POP JUMP JUMPDEST PUSH4 0x4E487B71 PUSH1 0xE0 SHL PUSH1 0x0 MSTORE PUSH1 0x12 PUSH1 0x4 MSTORE PUSH1 0x24 PUSH1 0x0 REVERT JUMPDEST PUSH1 0x0 DUP3 PUSH2 0x24D0 JUMPI PUSH2 0x24D0 PUSH2 0x24AB JUMP JUMPDEST POP DIV SWAP1 JUMP JUMPDEST PUSH1 0x0 DUP3 PUSH2 0x24E4 JUMPI PUSH2 0x24E4 PUSH2 0x24AB JUMP JUMPDEST POP MOD SWAP1 JUMP JUMPDEST DUP1 DUP3 ADD DUP1 DUP3 GT ISZERO PUSH2 0x2160 JUMPI PUSH2 0x2160 PUSH2 0x2024 JUMP JUMPDEST PUSH1 0x0 PUSH1 0xFF DUP3 AND PUSH1 0xFF DUP2 SUB PUSH2 0x2512 JUMPI PUSH2 0x2512 PUSH2 0x2024 JUMP JUMPDEST PUSH1 0x1 ADD SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH1 0xFF DUP4 AND DUP2 MSTORE PUSH1 0x40 PUSH1 0x20 DUP3 ADD MSTORE PUSH1 0x0 PUSH2 0x1AD9 PUSH1 0x40 DUP4 ADD DUP5 PUSH2 0x2271 JUMP INVALID 0xB0 PUSH8 0x99E10826978A386 PUSH22 0x10AD1E0DCF4CA5CEF8E422FD8DF2FC3D679167FE8DA2 PUSH5 0x6970667358 0x22 SLT KECCAK256 POP 0xE7 DUP5 0xFC 0x5C 0xEC CALLDATASIZE MSTORE8 0xB8 BLOCKHASH 0xC1 0xBD EXTCODESIZE 0xF9 PUSH6 0xDF0C90B02147 0xAB PUSH2 0x2AC2 0xEB MOD 0xD8 0x1E SWAP10 0xF6 0x21 PUSH5 0x736F6C6343 STOP ADDMOD GT STOP CALLER ",
              "sourceMap": "1520:15723:3:-:0;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;7113:378;;;;;;:::i;:::-;;:::i;:::-;;11434:1840;;;;;;:::i;:::-;;:::i;16387:224::-;;;;;;:::i;:::-;;:::i;:::-;;;;;;;:::i;:::-;;;;;;;;10731:320;;;;;;:::i;:::-;;:::i;1831:101:0:-;;;:::i;13871:365:3:-;;;;;;:::i;:::-;;:::i;8801:444::-;;;;;;:::i;:::-;;:::i;1201:85:0:-;1247:7;1273:6;1201:85;;-1:-1:-1;;;;;1273:6:0;;;3613:51:5;;3601:2;3586:18;1201:85:0;3467:203:5;14586:909:3;;;;;;:::i;:::-;;:::i;7819:466::-;;;;;;:::i;:::-;;:::i;10138:337::-;;;;;;:::i;:::-;;:::i;15900:245::-;;;;;;:::i;:::-;;:::i;:::-;;;4626:4:5;4614:17;;;4596:36;;4584:2;4569:18;15900:245:3;4454:184:5;9517:360:3;;;;;;:::i;:::-;;:::i;2081:198:0:-;;;;;;:::i;:::-;;:::i;7113:378:3:-;1094:13:0;:11;:13::i;:::-;7233::3::1;::::0;7224:23:::1;::::0;;;7257:32:::1;7224:23;::::0;;;;;;;:65;;-1:-1:-1;;7224:65:3::1;7257:32:::0;;7224:65:::1;;;;;7319:13;;7304:50;7334:5;;7341:12;;7304:50;;;;;;;;;:::i;:::-;;;;;;;;7390:13;;-1:-1:-1::0;;;;;;;;;;;7405:19:3::1;7426:32;7369:90;;;;;;;:::i;:::-;;;;;;;;7469:13;:15:::0;;;:13:::1;:15;::::0;::::1;:::i;:::-;;;;;;7113:378:::0;;;;:::o;11434:1840::-;1094:13:0;:11;:13::i;:::-;11499:10:3;11511:33:::1;::::0;5656:20:::1;::::0;;;:8:::1;:20;::::0;;;;:27;::::1;;:38;::::0;::::1;;;;;;:::i;:::-;;5770:31;5792:7;5787:13;;;;;;;;:::i;:::-;5770:16;:31::i;:::-;5838:20;::::0;;;:8:::1;:20;::::0;;;;:27;5816:51:::1;::::0;5838:27:::1;;5833:33;::::0;::::1;;;;;;:::i;5816:51::-;5696:172;;;;;;;;;:::i;:::-;;;;;;;;;;;;;5648:221;;;;;-1:-1:-1::0;;;5648:221:3::1;;;;;;;;:::i;:::-;;;;;;;;;-1:-1:-1::0;11556:19:3::2;11834:20:::0;;;:8:::2;:20;::::0;;;;:30:::2;;:37:::0;11556:19;;;;11819:53:::2;::::0;::::2;;;;;;:::i;:::-;;;;;;;;;;;;;;;;;;;;;;;;;-1:-1:-1::0;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;11819:53:3::2;;;;;;;;;;;;;;;;-1:-1:-1::0;11781:91:3;-1:-1:-1;11978:1:3::2;11964:635;11985:20;::::0;;;:8:::2;:20;::::0;;;;:30:::2;;:37:::0;11981:41;::::2;11964:635;;;12047:20;::::0;;;:8:::2;:20;::::0;;;;:30:::2;;:33:::0;;12093:14;;12047:30;12078:1;;12047:33;::::2;;;;;:::i;:::-;;;;;;;;;;;:43;;;:60;12043:546;;;12144:20;::::0;;;:8:::2;:20;::::0;;;;:30:::2;;:33:::0;;12175:1;;12144:33;::::2;;;;;:::i;:::-;;;;;;;;;;;:43;;;12127:60;;12221:1;12205:17;;12279:8;:20;12288:10;12279:20;;;;;;;;;;;:30;;12310:1;12279:33;;;;;;;;:::i;:::-;;;;;;;;;;;12240:72;;;;;;;;;;;;;;;;;:::i;:::-;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;:::i;:::-;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;-1:-1:-1::0;;;12240:72:3;;;-1:-1:-1;;12240:72:3::2;::::0;;::::2;::::0;::::2;::::0;::::2;::::0;::::2;::::0;;::::2;::::0;-1:-1:-1;;;;;12240:72:3::2;::::0;;;;;:17;;12258::::2;::::0;:13;:17:::2;:::i;:::-;12240:36;;;;;;;;:::i;:::-;;;;;;:72;;;;12043:546;;;12383:1;12337:20:::0;;;:8:::2;:20;::::0;;;;:30:::2;;:33:::0;;12368:1;;12337:33;::::2;;;;;:::i;:::-;;;;;;;;;;;:43;;;:47;:112;;;;-1:-1:-1::0;12388:20:3::2;::::0;;;:8:::2;:20;::::0;;;;:30:::2;;:33:::0;;12435:14;;12388:30;12419:1;;12388:33;::::2;;;;;:::i;:::-;;;;;;;;;;;:43;;;:61;12337:112;12333:256;;;12469:15:::0;::::2;::::0;::::2;:::i;:::-;12541:20;::::0;;;:8:::2;:20;::::0;;;;:30:::2;;:33:::0;;12469:15;;-1:-1:-1;12541:30:3;-1:-1:-1;12572:1:3;;12541:33;::::2;;;;;:::i;:::-;;;;;;;;;;;12502:72;;;;;;;;;;;;;;;;;:::i;:::-;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;:::i;:::-;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;-1:-1:-1::0;;;12502:72:3;;;-1:-1:-1;;12502:72:3::2;::::0;;::::2;::::0;::::2;::::0;::::2;::::0;::::2;::::0;;::::2;::::0;-1:-1:-1;;;;;12502:72:3::2;::::0;;;;;:17;;12520::::2;::::0;:13;:17:::2;:::i;:::-;12502:36;;;;;;;;:::i;:::-;;;;;;:72;;;;12333:256;12024:3:::0;::::2;::::0;::::2;:::i;:::-;;;;11964:635;;;;12614:6;12609:130;12630:13;12626:1;:17;12609:130;;;12664:8;:20;12673:10;12664:20;;;;;;;;;;;:37;;12707:17;12725:1;12707:20;;;;;;;;:::i;:::-;;::::0;;::::2;::::0;;;;;;;12664:64;;::::2;::::0;::::2;::::0;;-1:-1:-1;12664:64:3;;;;;;;;;::::2;::::0;;::::2;;::::0;;;::::2;::::0;;::::2;:::i;:::-;-1:-1:-1::0;12664:64:3::2;::::0;::::2;::::0;::::2;::::0;::::2;::::0;::::2;::::0;;::::2;::::0;::::2;::::0;;::::2;::::0;;-1:-1:-1;;;;;;12664:64:3::2;-1:-1:-1::0;;;;;12664:64:3;;::::2;::::0;;;::::2;::::0;;12645:3;::::2;::::0;::::2;:::i;:::-;;;;12609:130;;;-1:-1:-1::0;12749:20:3::2;::::0;;;:8:::2;:20;::::0;;;;;;:57;;-1:-1:-1;;12749:57:3::2;12779:27;12749:57:::0;;::::2;::::0;;;12821:96;;12749:20;;-1:-1:-1;;;;;;;;;;;12821:96:3;::::2;::::0;12854:33:::2;::::0;12821:96:::2;:::i;:::-;;;;;;;;12928:15;12946:20:::0;;;:8:::2;:20;::::0;;;;:32:::2;;::::0;:114:::2;;13059:1;12946:114;;;13020:20;::::0;;;:8:::2;:20;::::0;;;;:36:::2;::::0;::::2;::::0;12985:32:::2;::::0;;::::2;::::0;:71:::2;::::0;13020:36;12985:71:::2;:::i;:::-;13100:20;::::0;;;:8:::2;:20;::::0;;;;;;;:32:::2;::::0;::::2;::::0;13134:36:::2;::::0;::::2;::::0;13172:30:::2;::::0;;::::2;:33:::0;;12928:132;;-1:-1:-1;13088:10:3;;13075:192:::2;::::0;13100:32;;13134:36;13100:8;13172:33;::::2;;;;;:::i;:::-;;;;;;;;;;;:43;;;13217:10;13229:8;:20;13238:10;13229:20;;;;;;;;;;;:37;;13075:192;;;;;;;;;;:::i;:::-;;;;;;;;11546:1728;;;;1117:1:0::1;;11434:1840:3::0;:::o;16387:224::-;16531:17;16455:10;6740;6729:7;1247::0;1273:6;-1:-1:-1;;;;;1273:6:0;;1201:85;6729:7:3;-1:-1:-1;;;;;6729:21:3;;:77;;;-1:-1:-1;6754:20:3;;;;:8;:20;;;;;;;;6782:10;6754:39;;:27;;;:39;;;;:52;;;6729:77;6721:129;;;;-1:-1:-1;;;6721:129:3;;;;;;;:::i;:::-;16481:10;16493:27:::1;::::0;6074:20:::1;::::0;;;:8:::1;:20;::::0;;;;:27;::::1;;:38;::::0;::::1;;;;;;:::i;:::-;;;6188:31;6210:7;6205:13;;;;;;;;:::i;6188:31::-;6256:20;::::0;;;:8:::1;:20;::::0;;;;:27;6234:51:::1;::::0;6256:27:::1;;6251:33;::::0;::::1;;;;;;:::i;6234:51::-;6114:172;;;;;;;;;:::i;:::-;;;;;;;;;;;;;6066:221;;;;;-1:-1:-1::0;;;6066:221:3::1;;;;;;;;:::i;:::-;-1:-1:-1::0;16567:20:3::2;::::0;;;:8:::2;:20;::::0;;;;;;;:37:::2;;16560:44:::0;;;;;;::::2;::::0;;;;;;;;;;;;16567:37;;16560:44;::::2;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;:::i;:::-;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;:::i;:::-;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;-1:-1:-1::0;;;16560:44:3;;;-1:-1:-1;;16560:44:3::2;::::0;;::::2;::::0;::::2;::::0;;::::2;::::0;;;;::::2;::::0;;::::2;::::0;-1:-1:-1;;;;;16560:44:3::2;::::0;;;;;;;;;;;;::::2;::::0;::::2;;;;;;;;;;6860:1:::1;;16387:224:::0;;;;:::o;10731:320::-;1094:13:0;:11;:13::i;:::-;10803:10:3;10815:35:::1;::::0;5656:20:::1;::::0;;;:8:::1;:20;::::0;;;;:27;::::1;;:38;::::0;::::1;;;;;;:::i;:::-;;5770:31;5792:7;5787:13;;;;;;;;:::i;5770:31::-;5838:20;::::0;;;:8:::1;:20;::::0;;;;:27;5816:51:::1;::::0;5838:27:::1;;5833:33;::::0;::::1;;;;;;:::i;5816:51::-;5696:172;;;;;;;;;:::i;:::-;;;;;;;;;;;;;5648:221;;;;;-1:-1:-1::0;;;5648:221:3::1;;;;;;;;:::i;:::-;-1:-1:-1::0;10862:20:3::2;::::0;;;:8:::2;:20;::::0;;;;;;:63;;-1:-1:-1;;10862:63:3::2;10892:33;10862:63:::0;;::::2;::::0;;;10940:104;;10862:20;;-1:-1:-1;;;;;;;;;;;10940:104:3;::::2;::::0;10973:35:::2;::::0;10940:104:::2;:::i;:::-;;;;;;;;1117:1:0::1;;10731:320:3::0;:::o;1831:101:0:-;1094:13;:11;:13::i;:::-;1895:30:::1;1922:1;1895:18;:30::i;:::-;1831:101::o:0;13871:365:3:-;6450:20;;;;:8;:20;;;;;;;;6478:10;6450:39;;:27;;;:39;;;;:52;13961:10;;6450:52;;6442:95;;;;-1:-1:-1;;;6442:95:3;;14239:2:5;6442:95:3;;;14221:21:5;14278:2;14258:18;;;14251:30;14317:32;14297:18;;;14290:60;14367:18;;6442:95:3;14037:354:5;6442:95:3;13982:10;13994:43:::1;::::0;5656:20:::1;::::0;;;:8:::1;:20;::::0;;;;:27;::::1;;:38;::::0;::::1;;;;;;:::i;:::-;;5770:31;5792:7;5787:13;;;;;;;;:::i;5770:31::-;5838:20;::::0;;;:8:::1;:20;::::0;;;;:27;5816:51:::1;::::0;5838:27:::1;;5833:33;::::0;::::1;;;;;;:::i;5816:51::-;5696:172;;;;;;;;;:::i;:::-;;;;;;;;;;;;;5648:221;;;;;-1:-1:-1::0;;;5648:221:3::1;;;;;;;;:::i;:::-;-1:-1:-1::0;14057:20:3::2;::::0;;;:8:::2;:20;::::0;;;;;;;14085:10:::2;14057:39:::0;;:27;;::::2;:39:::0;;;;:51;14111:1:::2;14057:51:::0;;;::::2;;;:55;14049:127;;;::::0;-1:-1:-1;;;14049:127:3;;14598:2:5;14049:127:3::2;::::0;::::2;14580:21:5::0;14637:2;14617:18;;;14610:30;14676:34;14656:18;;;14649:62;14747:29;14727:18;;;14720:57;14794:19;;14049:127:3::2;14396:423:5::0;14049:127:3::2;14186:43;14204:10;14216:12;;14186:43;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;::::0;::::2;::::0;;;;-1:-1:-1;14186:17:3::2;::::0;-1:-1:-1;;;14186:43:3:i:2;:::-;6547:1:::1;;13871:365:::0;;;;:::o;8801:444::-;1094:13:0;:11;:13::i;:::-;8882:10:3;8894:32:::1;::::0;5656:20:::1;::::0;;;:8:::1;:20;::::0;;;;:27;::::1;;:38;::::0;::::1;;;;;;:::i;:::-;;5770:31;5792:7;5787:13;;;;;;;;:::i;5770:31::-;5838:20;::::0;;;:8:::1;:20;::::0;;;;:27;5816:51:::1;::::0;5838:27:::1;;5833:33;::::0;::::1;;;;;;:::i;5816:51::-;5696:172;;;;;;;;;:::i;:::-;;;;;;;;;;;;;5648:221;;;;;-1:-1:-1::0;;;5648:221:3::1;;;;;;;;:::i;:::-;;8938:43:::2;8956:10;8938:43;;;;;;;;;;;;;-1:-1:-1::0;;;8938:43:3::2;;::::0;:17:::2;:43::i;:::-;8991:38;9009:10;8991:38;;;;;;;;;;;;;-1:-1:-1::0;;;8991:38:3::2;;::::0;:17:::2;:38::i;:::-;9039:20;::::0;;;:8:::2;:20;::::0;;;;;;;;:73;;-1:-1:-1;;9039:73:3::2;9069:43;9039:73:::0;;::::2;::::0;;;9127:111;;9039:20;;-1:-1:-1;;;;;;;;;;;9127:111:3;::::2;::::0;9039:8;;9069:43;9127:111:::2;:::i;14586:909::-:0;6450:20;;;;:8;:20;;;;;;;;6478:10;6450:39;;:27;;;:39;;;;:52;14655:10;;6450:52;;6442:95;;;;-1:-1:-1;;;6442:95:3;;14239:2:5;6442:95:3;;;14221:21:5;14278:2;14258:18;;;14251:30;14317:32;14297:18;;;14290:60;14367:18;;6442:95:3;14037:354:5;6442:95:3;14676:10;14688:35:::1;::::0;5656:20:::1;::::0;;;:8:::1;:20;::::0;;;;:27;::::1;;:38;::::0;::::1;;;;;;:::i;:::-;;5770:31;5792:7;5787:13;;;;;;;;:::i;5770:31::-;5838:20;::::0;;;:8:::1;:20;::::0;;;;:27;5816:51:::1;::::0;5838:27:::1;;5833:33;::::0;::::1;;;;;;:::i;5816:51::-;5696:172;;;;;;;;;:::i;:::-;;;;;;;;;;;;;5648:221;;;;;-1:-1:-1::0;;;5648:221:3::1;;;;;;;;:::i;:::-;-1:-1:-1::0;14744:20:3::2;::::0;;;:8:::2;:20;::::0;;;;;;;14772:10:::2;14744:39:::0;;:27;;::::2;:39:::0;;;;:48;::::2;::::0;::::2;;;14743:49;14735:85;;;::::0;-1:-1:-1;;;14735:85:3;;15026:2:5;14735:85:3::2;::::0;::::2;15008:21:5::0;15065:2;15045:18;;;15038:30;15104:25;15084:18;;;15077:53;15147:18;;14735:85:3::2;14824:347:5::0;14735:85:3::2;14852:20;::::0;;;:8:::2;:20;::::0;;;;:30:::2;;:37:::0;14838:51:::2;::::0;::::2;::::0;;::::2;::::0;14918:29:::2;::::0;:16:::2;:29::i;:::-;14891:76;;;;;;;;:::i;:::-;;;;;;;;;;;;;14830:138;;;;;-1:-1:-1::0;;;14830:138:3::2;;;;;;;;:::i;:::-;-1:-1:-1::0;14986:20:3::2;::::0;;;:8:::2;:20;::::0;;;;:30:::2;;:43:::0;;15042:10:::2;::::0;14986:30;:43:::2;::::0;::::2;::::0;;::::2;;;;;:::i;:::-;;::::0;;;::::2;::::0;;;:52:::2;:43;::::0;;::::2;;:52;::::0;-1:-1:-1;;;;;14986:52:3::2;:66:::0;14978:120:::2;;;::::0;-1:-1:-1;;;14978:120:3;;15970:2:5;14978:120:3::2;::::0;::::2;15952:21:5::0;16009:2;15989:18;;;15982:30;16048:34;16028:18;;;16021:62;-1:-1:-1;;;16099:18:5;;;16092:39;16148:19;;14978:120:3::2;15768:405:5::0;14978:120:3::2;15130:1;15116:11;:15;;;15108:69;;;::::0;-1:-1:-1;;;15108:69:3;;16380:2:5;15108:69:3::2;::::0;::::2;16362:21:5::0;16419:2;16399:18;;;16392:30;16458:34;16438:18;;;16431:62;-1:-1:-1;;;16509:18:5;;;16502:39;16558:19;;15108:69:3::2;16178:405:5::0;15108:69:3::2;15188:20;::::0;;;:8:::2;:20;::::0;;;;:30:::2;;:43:::0;;::::2;::::0;::::2;::::0;;::::2;;;;;:::i;:::-;;::::0;;;::::2;::::0;;:53:::2;:43;::::0;;::::2;;:53;:55:::0;;;::::2;::::0;::::2;:::i;:::-;::::0;;;-1:-1:-1;;15253:20:3::2;::::0;;;15304:4:::2;15253:20;::::0;;;;;;;15281:10:::2;15253:39:::0;;:27;;::::2;:39:::0;;;;;:55;;::::2;15318:69:::0;::::2;::::0;::::2;-1:-1:-1::0;;15318:69:3;;;;15253:55:::2;15318:69:::0;;;15397:20;;;;;;:36:::2;;:38:::0;;;::::2;::::0;::::2;:::i;:::-;::::0;;;-1:-1:-1;;15459:29:3::2;::::0;15477:10:::2;3613:51:5::0;;15465:10:3;;15459:29:::2;::::0;3601:2:5;3586:18;15459:29:3::2;;;;;;;6547:1:::1;;14586:909:::0;;;:::o;7819:466::-;1094:13:0;:11;:13::i;:::-;7903:10:3;7915:32:::1;::::0;5656:20:::1;::::0;;;:8:::1;:20;::::0;;;;:27;::::1;;:38;::::0;::::1;;;;;;:::i;:::-;;5770:31;5792:7;5787:13;;;;;;;;:::i;5770:31::-;5838:20;::::0;;;:8:::1;:20;::::0;;;;:27;5816:51:::1;::::0;5838:27:::1;;5833:33;::::0;::::1;;;;;;:::i;5816:51::-;5696:172;;;;;;;;;:::i;:::-;;;;;;;;;;;;;5648:221;;;;;-1:-1:-1::0;;;5648:221:3::1;;;;;;;;:::i;:::-;-1:-1:-1::0;1247:7:0;1273:6;-1:-1:-1;;;;;1273:6:0;-1:-1:-1;;;;;7967:17:3::2;:6;-1:-1:-1::0;;;;;7967:17:3::2;::::0;7959:54:::2;;;::::0;-1:-1:-1;;;7959:54:3;;16790:2:5;7959:54:3::2;::::0;::::2;16772:21:5::0;16829:2;16809:18;;;16802:30;16868:26;16848:18;;;16841:54;16912:18;;7959:54:3::2;16588:348:5::0;7959:54:3::2;8032:20;::::0;;;:8:::2;:20;::::0;;;;;;;-1:-1:-1;;;;;8032:35:3;::::2;::::0;;:27;;::::2;:35:::0;;;;:48;::::2;;8031:49;8023:89;;;::::0;-1:-1:-1;;;8023:89:3;;17143:2:5;8023:89:3::2;::::0;::::2;17125:21:5::0;17182:2;17162:18;;;17155:30;17221:29;17201:18;;;17194:57;17268:18;;8023:89:3::2;16941:351:5::0;8023:89:3::2;8160:24;::::0;;::::2;::::0;::::2;::::0;;8166:4:::2;8160:24:::0;;;-1:-1:-1;8160:24:3::2;::::0;;::::2;::::0;;;;;;;;;;;;;;;8122:20;;;;;;;;;-1:-1:-1;;;;;8122:35:3;::::2;::::0;;:27;;::::2;:35:::0;;;;;:62;;;;;;;;;;-1:-1:-1;;8122:62:3;;;;::::2;;-1:-1:-1::0;;8122:62:3;;::::2;::::0;::::2;;::::0;;;::::2;::::0;;;::::2;-1:-1:-1::0;;8122:62:3;;8160:24:::2;8122:62:::0;;::::2;;-1:-1:-1::0;;8122:62:3;;;;;;::::2;;;::::0;;;8194:20;;;;;8122:62:::2;8194:32:::0;;::::2;:34:::0;;;::::2;::::0;::::2;:::i;:::-;::::0;;;-1:-1:-1;;8243:35:3::2;::::0;-1:-1:-1;;;;;3631:32:5;;3613:51;;8259:10:3;;8243:35:::2;::::0;3601:2:5;3586:18;8243:35:3::2;;;;;;;1117:1:0::1;;7819:466:3::0;;:::o;10138:337::-;1094:13:0;:11;:13::i;:::-;10211:10:3;10223:41:::1;::::0;5656:20:::1;::::0;;;:8:::1;:20;::::0;;;;:27;::::1;;:38;::::0;::::1;;;;;;:::i;:::-;;5770:31;5792:7;5787:13;;;;;;;;:::i;5770:31::-;5838:20;::::0;;;:8:::1;:20;::::0;;;;:27;5816:51:::1;::::0;5838:27:::1;;5833:33;::::0;::::1;;;;;;:::i;5816:51::-;5696:172;;;;;;;;;:::i;:::-;;;;;;;;;;;;;5648:221;;;;;-1:-1:-1::0;;;5648:221:3::1;;;;;;;;:::i;:::-;-1:-1:-1::0;10276:20:3::2;::::0;;;:8:::2;:20;::::0;;;;;;:65;;-1:-1:-1;;10276:65:3::2;10306:35;10276:65:::0;;::::2;::::0;;;10356:112;;10276:20;;-1:-1:-1;;;;;;;;;;;10356:112:3;::::2;::::0;10389:41:::2;::::0;10356:112:::2;:::i;15900:245::-:0;16063:5;15981:10;6740;6729:7;1247::0;1273:6;-1:-1:-1;;;;;1273:6:0;;1201:85;6729:7:3;-1:-1:-1;;;;;6729:21:3;;:77;;;-1:-1:-1;6754:20:3;;;;:8;:20;;;;;;;;6782:10;6754:39;;:27;;;:39;;;;:52;;;6729:77;6721:129;;;;-1:-1:-1;;;6721:129:3;;;;;;;:::i;:::-;16007:10;16019:33:::1;::::0;6074:20:::1;::::0;;;:8:::1;:20;::::0;;;;:27;::::1;;:38;::::0;::::1;;;;;;:::i;:::-;;;6188:31;6210:7;6205:13;;;;;;;;:::i;6188:31::-;6256:20;::::0;;;:8:::1;:20;::::0;;;;:27;6234:51:::1;::::0;6256:27:::1;;6251:33;::::0;::::1;;;;;;:::i;6234:51::-;6114:172;;;;;;;;;:::i;:::-;;;;;;;;;;;;;6066:221;;;;;-1:-1:-1::0;;;6066:221:3::1;;;;;;;;:::i;:::-;-1:-1:-1::0;;;16087:20:3::2;::::0;;;-1:-1:-1;;16087:8:3::2;:20;::::0;;;;;;;-1:-1:-1;;;;;16087:35:3;;;::::2;::::0;;:27;;;::::2;:35:::0;;;;:51;;;::::2;;;::::0;15900:245::o;9517:360::-;1094:13:0;:11;:13::i;:::-;9597:10:3;9609:43:::1;::::0;5656:20:::1;::::0;;;:8:::1;:20;::::0;;;;:27;::::1;;:38;::::0;::::1;;;;;;:::i;:::-;;5770:31;5792:7;5787:13;;;;;;;;:::i;5770:31::-;5838:20;::::0;;;:8:::1;:20;::::0;;;;:27;5816:51:::1;::::0;5838:27:::1;;5833:33;::::0;::::1;;;;;;:::i;5816:51::-;5696:172;;;;;;;;;:::i;:::-;;;;;;;;;;;;;5648:221;;;;;-1:-1:-1::0;;;5648:221:3::1;;;;;;;;:::i;:::-;-1:-1:-1::0;9664:20:3::2;::::0;;;:8:::2;:20;::::0;;;;;;:71;;-1:-1:-1;;9664:71:3::2;9694:41;9664:71:::0;;::::2;::::0;;;9750:120;;9664:20;;-1:-1:-1;;;;;;;;;;;9750:120:3;::::2;::::0;9783:43:::2;::::0;9750:120:::2;:::i;2081:198:0:-:0;1094:13;:11;:13::i;:::-;-1:-1:-1;;;;;2169:22:0;::::1;2161:73;;;::::0;-1:-1:-1;;;2161:73:0;;17499:2:5;2161:73:0::1;::::0;::::1;17481:21:5::0;17538:2;17518:18;;;17511:30;17577:34;17557:18;;;17550:62;-1:-1:-1;;;17628:18:5;;;17621:36;17674:19;;2161:73:0::1;17297:402:5::0;2161:73:0::1;2244:28;2263:8;2244:18;:28::i;:::-;2081:198:::0;:::o;1359:130::-;1247:7;1273:6;-1:-1:-1;;;;;1273:6:0;719:10:1;1422:23:0;1414:68;;;;-1:-1:-1;;;1414:68:0;;17906:2:5;1414:68:0;;;17888:21:5;;;17925:18;;;17918:30;17984:34;17964:18;;;17957:62;18036:18;;1414:68:0;17704:356:5;392:703:2;448:13;665:5;674:1;665:10;661:51;;-1:-1:-1;;691:10:2;;;;;;;;;;;;-1:-1:-1;;;691:10:2;;;;;392:703::o;661:51::-;736:5;721:12;775:75;782:9;;775:75;;807:8;;;;:::i;:::-;;-1:-1:-1;829:10:2;;-1:-1:-1;837:2:2;829:10;;:::i;:::-;;;775:75;;;859:19;891:6;881:17;;;;;;;;:::i;:::-;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;-1:-1:-1;881:17:2;;859:39;;908:150;915:10;;908:150;;941:11;951:1;941:11;;:::i;:::-;;-1:-1:-1;1009:10:2;1017:2;1009:5;:10;:::i;:::-;996:24;;:2;:24;:::i;:::-;983:39;;966:6;973;966:14;;;;;;;;:::i;:::-;;;;:56;-1:-1:-1;;;;;966:56:2;;;;;;;;-1:-1:-1;1036:11:2;1045:2;1036:11;;:::i;:::-;;;908:150;;;1081:6;392:703;-1:-1:-1;;;;392:703:2:o;2433:187:0:-;2506:16;2525:6;;-1:-1:-1;;;;;2541:17:0;;;-1:-1:-1;;;;;;2541:17:0;;;;;;2573:40;;2525:6;;;;;;;2573:40;;2506:16;2573:40;2496:124;2433:187;:::o;16688:553:3:-;16786:20;;;;:8;:20;;;;;:30;;:37;16826:10;-1:-1:-1;16778:81:3;;;;-1:-1:-1;;;16778:81:3;;18771:2:5;16778:81:3;;;18753:21:5;18810:2;18790:18;;;18783:30;-1:-1:-1;;;18829:18:5;;;18822:48;18887:18;;16778:81:3;18569:342:5;16778:81:3;16907:20;;;;:8;:20;;;;;;;;16943:37;;;;;;;;;;;;;;;;16969:10;16943:37;;;;;;;16907:30;;:74;;;;;;;;;;;;;;;;;;;;;;;;;:::i;:::-;-1:-1:-1;16907:74:3;;;;;;;;;;;;;;;;;;;;;;;;-1:-1:-1;;;;;;16907:74:3;-1:-1:-1;;;;;16907:74:3;;;;;;;;;;-1:-1:-1;16991:20:3;;;;;;;;;17019:10;16991:39;;:27;;;:39;;;:53;;;;;;;;:51;:53;;;:::i;:::-;;;;;;;;;;;;;;;;;;;;;;;;;;-1:-1:-1;;17079:20:3;;;-1:-1:-1;17079:20:3;;;;;;;:30;;:37;:41;;-1:-1:-1;17079:41:3;:::i;:::-;17054:67;;17155:10;17136:98;17167:10;17179:8;:20;17188:10;17179:20;;;;;;;;;;;:30;;17210:10;17179:42;;;;;;;;;;:::i;:::-;;;;;;;;;;;:54;;17136:98;;;;;;;:::i;14:348:5:-;66:8;76:6;130:3;123:4;115:6;111:17;107:27;97:55;;148:1;145;138:12;97:55;-1:-1:-1;171:20:5;;214:18;203:30;;200:50;;;246:1;243;236:12;200:50;283:4;275:6;271:17;259:29;;335:3;328:4;319:6;311;307:19;303:30;300:39;297:59;;;352:1;349;342:12;297:59;14:348;;;;;:::o;367:721::-;459:6;467;475;483;536:2;524:9;515:7;511:23;507:32;504:52;;;552:1;549;542:12;504:52;592:9;579:23;621:18;662:2;654:6;651:14;648:34;;;678:1;675;668:12;648:34;717:59;768:7;759:6;748:9;744:22;717:59;:::i;:::-;795:8;;-1:-1:-1;691:85:5;-1:-1:-1;883:2:5;868:18;;855:32;;-1:-1:-1;899:16:5;;;896:36;;;928:1;925;918:12;896:36;;967:61;1020:7;1009:8;998:9;994:24;967:61;:::i;:::-;367:721;;;;-1:-1:-1;1047:8:5;-1:-1:-1;;;;367:721:5:o;1093:180::-;1152:6;1205:2;1193:9;1184:7;1180:23;1176:32;1173:52;;;1221:1;1218;1211:12;1173:52;-1:-1:-1;1244:23:5;;1093:180;-1:-1:-1;1093:180:5:o;1278:250::-;1363:1;1373:113;1387:6;1384:1;1381:13;1373:113;;;1463:11;;;1457:18;1444:11;;;1437:39;1409:2;1402:10;1373:113;;;-1:-1:-1;;1520:1:5;1502:16;;1495:27;1278:250::o;1533:271::-;1575:3;1613:5;1607:12;1640:6;1635:3;1628:19;1656:76;1725:6;1718:4;1713:3;1709:14;1702:4;1695:5;1691:16;1656:76;:::i;:::-;1786:2;1765:15;-1:-1:-1;;1761:29:5;1752:39;;;;1793:4;1748:50;;1533:271;-1:-1:-1;;1533:271:5:o;1809:1169::-;2001:4;2030:2;2070;2059:9;2055:18;2100:2;2089:9;2082:21;2123:6;2158;2152:13;2189:6;2181;2174:22;2215:2;2205:12;;2248:2;2237:9;2233:18;2226:25;;2310:2;2300:6;2297:1;2293:14;2282:9;2278:30;2274:39;2348:2;2340:6;2336:15;2369:1;2379:570;2393:6;2390:1;2387:13;2379:570;;;2486:2;2482:7;2470:9;2462:6;2458:22;2454:36;2449:3;2442:49;2520:6;2514:13;2550:4;2593:2;2587:9;2624:2;2616:6;2609:18;2654:48;2698:2;2690:6;2686:15;2672:12;2654:48;:::i;:::-;2745:11;;;2739:18;2722:15;;;2715:43;2805:11;;;2799:18;-1:-1:-1;;;;;2795:44:5;2778:15;;;2771:69;;;;-1:-1:-1;2927:12:5;;;;2640:62;-1:-1:-1;2892:15:5;;;;2836:1;2408:9;2379:570;;;-1:-1:-1;2966:6:5;;1809:1169;-1:-1:-1;;;;;;;;1809:1169:5:o;2983:479::-;3063:6;3071;3079;3132:2;3120:9;3111:7;3107:23;3103:32;3100:52;;;3148:1;3145;3138:12;3100:52;3184:9;3171:23;3161:33;;3245:2;3234:9;3230:18;3217:32;3272:18;3264:6;3261:30;3258:50;;;3304:1;3301;3294:12;3258:50;3343:59;3394:7;3385:6;3374:9;3370:22;3343:59;:::i;:::-;2983:479;;3421:8;;-1:-1:-1;3317:85:5;;-1:-1:-1;;;;2983:479:5:o;3675:337::-;3741:6;3749;3802:2;3790:9;3781:7;3777:23;3773:32;3770:52;;;3818:1;3815;3808:12;3770:52;3854:9;3841:23;3831:33;;3914:2;3903:9;3899:18;3886:32;3958:4;3951:5;3947:16;3940:5;3937:27;3927:55;;3978:1;3975;3968:12;3927:55;4001:5;3991:15;;;3675:337;;;;;:::o;4017:173::-;4085:20;;-1:-1:-1;;;;;4134:31:5;;4124:42;;4114:70;;4180:1;4177;4170:12;4114:70;4017:173;;;:::o;4195:254::-;4263:6;4271;4324:2;4312:9;4303:7;4299:23;4295:32;4292:52;;;4340:1;4337;4330:12;4292:52;4376:9;4363:23;4353:33;;4405:38;4439:2;4428:9;4424:18;4405:38;:::i;:::-;4395:48;;4195:254;;;;;:::o;4643:186::-;4702:6;4755:2;4743:9;4734:7;4730:23;4726:32;4723:52;;;4771:1;4768;4761:12;4723:52;4794:29;4813:9;4794:29;:::i;:::-;4784:39;4643:186;-1:-1:-1;;;4643:186:5:o;4834:127::-;4895:10;4890:3;4886:20;4883:1;4876:31;4926:4;4923:1;4916:15;4950:4;4947:1;4940:15;4966:267;5055:6;5050:3;5043:19;5107:6;5100:5;5093:4;5088:3;5084:14;5071:43;-1:-1:-1;5159:1:5;5134:16;;;5152:4;5130:27;;;5123:38;;;;5215:2;5194:15;;;-1:-1:-1;;5190:29:5;5181:39;;;5177:50;;4966:267::o;5238:437::-;5455:2;5444:9;5437:21;5418:4;5481:62;5539:2;5528:9;5524:18;5516:6;5508;5481:62;:::i;:::-;5591:9;5583:6;5579:22;5574:2;5563:9;5559:18;5552:50;5619;5662:6;5654;5646;5619:50;:::i;:::-;5611:58;5238:437;-1:-1:-1;;;;;;;5238:437:5:o;5680:242::-;5766:1;5759:5;5756:12;5746:143;;5811:10;5806:3;5802:20;5799:1;5792:31;5846:4;5843:1;5836:15;5874:4;5871:1;5864:15;5746:143;5898:18;;5680:242::o;5927:328::-;6121:2;6106:18;;6133:49;6110:9;6164:6;6133:49;:::i;:::-;6191:58;6245:2;6234:9;6230:18;6222:6;6191:58;:::i;6260:127::-;6321:10;6316:3;6312:20;6309:1;6302:31;6352:4;6349:1;6342:15;6376:4;6373:1;6366:15;6392:135;6431:3;6452:17;;;6449:43;;6472:18;;:::i;:::-;-1:-1:-1;6519:1:5;6508:13;;6392:135::o;6532:842::-;6932:34;6927:3;6920:47;-1:-1:-1;;;6992:2:5;6987:3;6983:12;6976:35;6902:3;7040:6;7034:13;7056:73;7122:6;7117:2;7112:3;7108:12;7103:2;7095:6;7091:15;7056:73;:::i;:::-;-1:-1:-1;;;7188:2:5;7148:16;;;7180:11;;;7173:32;7230:13;;7252:74;7230:13;7312:2;7304:11;;7299:2;7287:15;;7252:74;:::i;:::-;7346:17;7365:2;7342:26;;6532:842;-1:-1:-1;;;;6532:842:5:o;7379:220::-;7528:2;7517:9;7510:21;7491:4;7548:45;7589:2;7578:9;7574:18;7566:6;7548:45;:::i;7604:127::-;7665:10;7660:3;7656:20;7653:1;7646:31;7696:4;7693:1;7686:15;7720:4;7717:1;7710:15;7736:127;7797:10;7792:3;7788:20;7785:1;7778:31;7828:4;7825:1;7818:15;7852:4;7849:1;7842:15;7868:380;7947:1;7943:12;;;;7990;;;8011:61;;8065:4;8057:6;8053:17;8043:27;;8011:61;8118:2;8110:6;8107:14;8087:18;8084:38;8081:161;;8164:10;8159:3;8155:20;8152:1;8145:31;8199:4;8196:1;8189:15;8227:4;8224:1;8217:15;8081:161;;7868:380;;;:::o;8253:128::-;8320:9;;;8341:11;;;8338:37;;;8355:18;;:::i;:::-;8253:128;;;;:::o;8512:545::-;8614:2;8609:3;8606:11;8603:448;;;8650:1;8675:5;8671:2;8664:17;8720:4;8716:2;8706:19;8790:2;8778:10;8774:19;8771:1;8767:27;8761:4;8757:38;8826:4;8814:10;8811:20;8808:47;;;-1:-1:-1;8849:4:5;8808:47;8904:2;8899:3;8895:12;8892:1;8888:20;8882:4;8878:31;8868:41;;8959:82;8977:2;8970:5;8967:13;8959:82;;;9022:17;;;9003:1;8992:13;8959:82;;8603:448;8512:545;;;:::o;9233:1352::-;9359:3;9353:10;9386:18;9378:6;9375:30;9372:56;;;9408:18;;:::i;:::-;9437:97;9527:6;9487:38;9519:4;9513:11;9487:38;:::i;:::-;9481:4;9437:97;:::i;:::-;9589:4;;9653:2;9642:14;;9670:1;9665:663;;;;10372:1;10389:6;10386:89;;;-1:-1:-1;10441:19:5;;;10435:26;10386:89;-1:-1:-1;;9190:1:5;9186:11;;;9182:24;9178:29;9168:40;9214:1;9210:11;;;9165:57;10488:81;;9635:944;;9665:663;8459:1;8452:14;;;8496:4;8483:18;;-1:-1:-1;;9701:20:5;;;9819:236;9833:7;9830:1;9827:14;9819:236;;;9922:19;;;9916:26;9901:42;;10014:27;;;;9982:1;9970:14;;;;9849:19;;9819:236;;;9823:3;10083:6;10074:7;10071:19;10068:201;;;10144:19;;;10138:26;-1:-1:-1;;10227:1:5;10223:14;;;10239:3;10219:24;10215:37;10211:42;10196:58;10181:74;;10068:201;-1:-1:-1;;;;;10315:1:5;10299:14;;;10295:22;10282:36;;-1:-1:-1;9233:1352:5:o;10590:772::-;10640:3;10681:5;10675:12;10710:36;10736:9;10710:36;:::i;:::-;10755:19;;;10793:4;10816:1;10833:18;;;10860:146;;;;11020:1;11015:341;;;;10826:530;;10860:146;-1:-1:-1;;10902:24:5;;10888:12;;;10881:46;10974:14;;10967:22;10964:1;10960:30;10951:40;;10947:49;;;-1:-1:-1;10860:146:5;;11015:341;11046:5;11043:1;11036:16;11093:2;11090:1;11080:16;11118:1;11132:174;11146:6;11143:1;11140:13;11132:174;;;11233:14;;11215:11;;;11211:20;;11204:44;11276:16;;;;11161:10;;11132:174;;;11330:11;;11326:20;;;-1:-1:-1;;10826:530:5;;;;;;10590:772;;;;:::o;11367:1409::-;11665:4;11713:3;11702:9;11698:19;11744:6;11733:9;11726:25;11770:2;11808:6;11803:2;11792:9;11788:18;11781:34;11834:2;11872:6;11867:2;11856:9;11852:18;11845:34;11898:2;11936:6;11931:2;11920:9;11916:18;11909:34;11980:3;11974;11963:9;11959:19;11952:32;12004:6;12039;12033:13;12070:6;12062;12055:22;12108:3;12097:9;12093:19;12086:26;;12171:3;12161:6;12158:1;12154:14;12143:9;12139:30;12135:40;12121:54;;12194:6;12191:1;12184:17;12237:2;12234:1;12224:16;12258:1;12268:479;12282:6;12279:1;12276:13;12268:479;;;12347:22;;;-1:-1:-1;;12343:37:5;12331:50;;12394:18;;;12439:50;12473:15;;;12465:6;12439:50;:::i;:::-;12544:1;12532:14;;;12526:21;12509:15;;;12502:46;12607:4;12595:17;;12589:24;-1:-1:-1;;;;;12585:50:5;12568:15;;;12561:75;;;;12659:6;12725:12;;;;12700:4;12688:17;;;;12297:9;12268:479;;;-1:-1:-1;12764:6:5;;11367:1409;-1:-1:-1;;;;;;;;;;;;;11367:1409:5:o;12781:403::-;12983:2;12965:21;;;13022:2;13002:18;;;12995:30;13061:34;13056:2;13041:18;;13034:62;-1:-1:-1;;;13127:2:5;13112:18;;13105:37;13174:3;13159:19;;12781:403::o;13189:843::-;13589:34;13584:3;13577:47;-1:-1:-1;;;13649:2:5;13644:3;13640:12;13633:36;13559:3;13698:6;13692:13;13714:73;13780:6;13775:2;13770:3;13766:12;13761:2;13753:6;13749:15;13714:73;:::i;:::-;-1:-1:-1;;;13846:2:5;13806:16;;;13838:11;;;13831:32;13888:13;;13910:74;13888:13;13970:2;13962:11;;13957:2;13945:15;;13910:74;:::i;:::-;14004:17;14023:2;14000:26;;13189:843;-1:-1:-1;;;;13189:843:5:o;15176:587::-;-1:-1:-1;;;15513:3:5;15506:24;15488:3;15559:6;15553:13;15575:74;15642:6;15638:1;15633:3;15629:11;15622:4;15614:6;15610:17;15575:74;:::i;:::-;-1:-1:-1;;;15708:1:5;15668:16;;;;15700:10;;;15693:37;-1:-1:-1;15754:2:5;15746:11;;15176:587;-1:-1:-1;15176:587:5:o;18065:127::-;18126:10;18121:3;18117:20;18114:1;18107:31;18157:4;18154:1;18147:15;18181:4;18178:1;18171:15;18197:120;18237:1;18263;18253:35;;18268:18;;:::i;:::-;-1:-1:-1;18302:9:5;;18197:120::o;18322:112::-;18354:1;18380;18370:35;;18385:18;;:::i;:::-;-1:-1:-1;18419:9:5;;18322:112::o;18439:125::-;18504:9;;;18525:10;;;18522:36;;;18538:18;;:::i;18916:175::-;18953:3;18997:4;18990:5;18986:16;19026:4;19017:7;19014:17;19011:43;;19034:18;;:::i;:::-;19083:1;19070:15;;18916:175;-1:-1:-1;;18916:175:5:o;19096:303::-;19278:4;19270:6;19266:17;19255:9;19248:36;19320:2;19315;19304:9;19300:18;19293:30;19229:4;19340:53;19389:2;19378:9;19374:18;19366:6;19340:53;:::i"
            },
            "gasEstimates": {
              "creation": {
                "codeDepositCost": "1922600",
                "executionCost": "27874",
                "totalCost": "1950474"
              },
              "external": {
                "createVotingSession(string,string)": "infinite",
                "getVote(uint256,address)": "infinite",
                "getWinners(uint256)": "infinite",
                "owner()": "2324",
                "registerProposal(uint256,string)": "infinite",
                "registerVoter(uint256,address)": "infinite",
                "renounceOwnership()": "infinite",
                "startProposalsRegistration(uint256)": "infinite",
                "startVotingSession(uint256)": "infinite",
                "stopProposalsRegistration(uint256)": "infinite",
                "stopVotingSession(uint256)": "infinite",
                "tallyVotes(uint256)": "infinite",
                "transferOwnership(address)": "28421",
                "vote(uint256,uint8)": "infinite"
              },
              "internal": {
                "_registerProposal(uint256,string memory)": "infinite"
              }
            },
            "methodIdentifiers": {
              "createVotingSession(string,string)": "153bc95b",
              "getVote(uint256,address)": "bc3f931f",
              "getWinners(uint256)": "6b1426a4",
              "owner()": "8da5cb5b",
              "registerProposal(uint256,string)": "7ace4184",
              "registerVoter(uint256,address)": "94c790bb",
              "renounceOwnership()": "715018a6",
              "startProposalsRegistration(uint256)": "8bc6a6dd",
              "startVotingSession(uint256)": "9980a55a",
              "stopProposalsRegistration(uint256)": "c82de38f",
              "stopVotingSession(uint256)": "6f3dc556",
              "tallyVotes(uint256)": "4d318b0e",
              "transferOwnership(address)": "f2fde38b",
              "vote(uint256,uint8)": "943e8216"
            }
          },
          "metadata": "{\"compiler\":{\"version\":\"0.8.17+commit.8df45f5f\"},\"language\":\"Solidity\",\"output\":{\"abi\":[{\"anonymous\":false,\"inputs\":[{\"indexed\":true,\"internalType\":\"address\",\"name\":\"previousOwner\",\"type\":\"address\"},{\"indexed\":true,\"internalType\":\"address\",\"name\":\"newOwner\",\"type\":\"address\"}],\"name\":\"OwnershipTransferred\",\"type\":\"event\"},{\"anonymous\":false,\"inputs\":[{\"indexed\":true,\"internalType\":\"uint256\",\"name\":\"sessionId\",\"type\":\"uint256\"},{\"indexed\":false,\"internalType\":\"uint8\",\"name\":\"proposalId\",\"type\":\"uint8\"},{\"indexed\":false,\"internalType\":\"string\",\"name\":\"description\",\"type\":\"string\"}],\"name\":\"ProposalRegistered\",\"type\":\"event\"},{\"anonymous\":false,\"inputs\":[{\"indexed\":true,\"internalType\":\"uint256\",\"name\":\"sessionId\",\"type\":\"uint256\"},{\"indexed\":false,\"internalType\":\"string\",\"name\":\"name\",\"type\":\"string\"},{\"indexed\":false,\"internalType\":\"string\",\"name\":\"description\",\"type\":\"string\"}],\"name\":\"SessionCreated\",\"type\":\"event\"},{\"anonymous\":false,\"inputs\":[{\"indexed\":true,\"internalType\":\"uint256\",\"name\":\"sessionId\",\"type\":\"uint256\"},{\"indexed\":false,\"internalType\":\"address\",\"name\":\"voter\",\"type\":\"address\"}],\"name\":\"Voted\",\"type\":\"event\"},{\"anonymous\":false,\"inputs\":[{\"indexed\":true,\"internalType\":\"uint256\",\"name\":\"sessionId\",\"type\":\"uint256\"},{\"indexed\":false,\"internalType\":\"address\",\"name\":\"voterAddress\",\"type\":\"address\"}],\"name\":\"VoterRegistered\",\"type\":\"event\"},{\"anonymous\":false,\"inputs\":[{\"indexed\":true,\"internalType\":\"uint256\",\"name\":\"sessionId\",\"type\":\"uint256\"},{\"indexed\":false,\"internalType\":\"uint256\",\"name\":\"votersCount\",\"type\":\"uint256\"},{\"indexed\":false,\"internalType\":\"uint256\",\"name\":\"totalVotes\",\"type\":\"uint256\"},{\"indexed\":false,\"internalType\":\"uint256\",\"name\":\"blankVotes\",\"type\":\"uint256\"},{\"indexed\":false,\"internalType\":\"uint256\",\"name\":\"abstention\",\"type\":\"uint256\"},{\"components\":[{\"internalType\":\"string\",\"name\":\"description\",\"type\":\"string\"},{\"internalType\":\"uint256\",\"name\":\"voteCount\",\"type\":\"uint256\"},{\"internalType\":\"address\",\"name\":\"proposer\",\"type\":\"address\"}],\"indexed\":false,\"internalType\":\"struct Voting.Proposal[]\",\"name\":\"winningProposals\",\"type\":\"tuple[]\"}],\"name\":\"VotesTallied\",\"type\":\"event\"},{\"anonymous\":false,\"inputs\":[{\"indexed\":true,\"internalType\":\"uint256\",\"name\":\"sessionId\",\"type\":\"uint256\"},{\"indexed\":false,\"internalType\":\"enum Voting.WorkflowStatus\",\"name\":\"previousStatus\",\"type\":\"uint8\"},{\"indexed\":false,\"internalType\":\"enum Voting.WorkflowStatus\",\"name\":\"newStatus\",\"type\":\"uint8\"}],\"name\":\"WorkflowStatusChange\",\"type\":\"event\"},{\"inputs\":[{\"internalType\":\"string\",\"name\":\"_name\",\"type\":\"string\"},{\"internalType\":\"string\",\"name\":\"_description\",\"type\":\"string\"}],\"name\":\"createVotingSession\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"uint256\",\"name\":\"_sessionId\",\"type\":\"uint256\"},{\"internalType\":\"address\",\"name\":\"_voter\",\"type\":\"address\"}],\"name\":\"getVote\",\"outputs\":[{\"internalType\":\"uint8\",\"name\":\"\",\"type\":\"uint8\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"uint256\",\"name\":\"_sessionId\",\"type\":\"uint256\"}],\"name\":\"getWinners\",\"outputs\":[{\"components\":[{\"internalType\":\"string\",\"name\":\"description\",\"type\":\"string\"},{\"internalType\":\"uint256\",\"name\":\"voteCount\",\"type\":\"uint256\"},{\"internalType\":\"address\",\"name\":\"proposer\",\"type\":\"address\"}],\"internalType\":\"struct Voting.Proposal[]\",\"name\":\"\",\"type\":\"tuple[]\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"owner\",\"outputs\":[{\"internalType\":\"address\",\"name\":\"\",\"type\":\"address\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"uint256\",\"name\":\"_sessionId\",\"type\":\"uint256\"},{\"internalType\":\"string\",\"name\":\"_description\",\"type\":\"string\"}],\"name\":\"registerProposal\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"uint256\",\"name\":\"_sessionId\",\"type\":\"uint256\"},{\"internalType\":\"address\",\"name\":\"_voter\",\"type\":\"address\"}],\"name\":\"registerVoter\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"renounceOwnership\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"uint256\",\"name\":\"_sessionId\",\"type\":\"uint256\"}],\"name\":\"startProposalsRegistration\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"uint256\",\"name\":\"_sessionId\",\"type\":\"uint256\"}],\"name\":\"startVotingSession\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"uint256\",\"name\":\"_sessionId\",\"type\":\"uint256\"}],\"name\":\"stopProposalsRegistration\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"uint256\",\"name\":\"_sessionId\",\"type\":\"uint256\"}],\"name\":\"stopVotingSession\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"uint256\",\"name\":\"_sessionId\",\"type\":\"uint256\"}],\"name\":\"tallyVotes\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"newOwner\",\"type\":\"address\"}],\"name\":\"transferOwnership\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"uint256\",\"name\":\"_sessionId\",\"type\":\"uint256\"},{\"internalType\":\"uint8\",\"name\":\"_proposalId\",\"type\":\"uint8\"}],\"name\":\"vote\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"}],\"devdoc\":{\"author\":\"Teddy Chambard\",\"details\":\"Only the contract owner is able to create new voting session. The contract owner is also able to change the session status and activate next session steps. The word `Administrator` in contract documentation corresponds to contract owner. /!\\\\ BONUS: I took some decisions to change initial specifications to improve the features available in the exercice: 1) Many voting sessions can be created and evolve in parallel 2) Votes are kept secret until the end of session, then every votes become accessible to voters and contract owner 3) Every events expose sessionId as first parameter 4) `Voted` event does not expose chosen proposal ID in order to keep votes secret until the end of the session 5) A session is limited to 256 proposals 6) Two proposals are registered by default in every session: abstention and blank vote 7) A voter can not do more than 3 proposals by session 6) A voter can not vote for its own proposals 7) A vote session can terminate with equality if many proposals obtain same number of votes\",\"events\":{\"ProposalRegistered(uint256,uint8,string)\":{\"details\":\"I decided to add description into ProposalRegistered event in order to expose proposals during the voting session without the vote count. By this way voters are able to retrieve proposal information but they can not access to each proposal vote count before the end ot the session.\"},\"SessionCreated(uint256,string,string)\":{\"details\":\"All events signatures integrate sessionId parameter that was not required in specification\"},\"Voted(uint256,address)\":{\"details\":\"I decided to remove proposalId from Voted event despite the specification as  I think no one should be able to see voters choice before the end of voting session\"}},\"kind\":\"dev\",\"methods\":{\"createVotingSession(string,string)\":{\"params\":{\"_description\":\"The session description \",\"_name\":\"The session name \"}},\"getVote(uint256,address)\":{\"details\":\"Administrator and registered voters can all access to everybody votes but only at the end of voting session. \",\"params\":{\"_sessionId\":\"The session identifier\",\"_voter\":\"The voter address\"},\"returns\":{\"_0\":\"uint8 target voter proposal choice\"}},\"getWinners(uint256)\":{\"details\":\"Administrator and registered voters can retreive winning proposals but only at the end of voting session. \",\"returns\":{\"_0\":\"Proposal[] The winning proposals\"}},\"owner()\":{\"details\":\"Returns the address of the current owner.\"},\"registerProposal(uint256,string)\":{\"details\":\"Each voter can register many proposals. As the vote is considered to be done in small organization context, the maximum number of proposals is limited to 256. Maximum number of proposals per voter is also limited to 3. A vote can be added only by registered voter when status is set to VotingSessionStarted \",\"params\":{\"_description\":\"The proposal description\",\"_sessionId\":\"The session identifier\"}},\"registerVoter(uint256,address)\":{\"details\":\"voters can be added only by contract owner when status is set to RegisteringVoters An event VoterRegistered is emitted \",\"params\":{\"_sessionId\":\"The session identifier \",\"_voter\":\"The address to add into voters registry\"}},\"renounceOwnership()\":{\"details\":\"Leaves the contract without owner. It will not be possible to call `onlyOwner` functions anymore. Can only be called by the current owner. NOTE: Renouncing ownership will leave the contract without an owner, thereby removing any functionality that is only available to the owner.\"},\"startProposalsRegistration(uint256)\":{\"details\":\"Can be called only when status is set to RegisteringVoters. Two default proposals are registered at the beginning of this step: `Abstention` and `Blank`. That means a registered voter that forget to vote will be counted as `abstention` thanks to `proposals` array index 0 An event WorkflowStatusChange is emitted\",\"params\":{\"_sessionId\":\"The session identifier \"}},\"startVotingSession(uint256)\":{\"details\":\"Can be called only when status is set to ProposalsRegistrationEnded. An event WorkflowStatusChange is emitted\",\"params\":{\"_sessionId\":\"The session identifier \"}},\"stopProposalsRegistration(uint256)\":{\"details\":\"Can be called only when status is set to ProposalsRegistrationStarted. An event WorkflowStatusChange is emitted\",\"params\":{\"_sessionId\":\"The session identifier \"}},\"stopVotingSession(uint256)\":{\"details\":\"Can be called only when status is set to VotingSessionStarted. An event WorkflowStatusChange is emitted\",\"params\":{\"_sessionId\":\"The session identifier \"}},\"tallyVotes(uint256)\":{\"details\":\"After votes talling, it is possible that we got many winning proposals. Votes talling can be triggered only by contract owner when voting session status is set to VotingSessionEnded An event WorkflowStatusChange is emitted\",\"params\":{\"_sessionId\":\"The session identifier \"}},\"transferOwnership(address)\":{\"details\":\"Transfers ownership of the contract to a new account (`newOwner`). Can only be called by the current owner.\"},\"vote(uint256,uint8)\":{\"details\":\"Each voter can vote only once for one proposal. Votes can be added only by registered voter when status is set to VotingSessionStarted \",\"params\":{\"_proposalId\":\"The chosen proposal identifier\",\"_sessionId\":\"The session identifier\"}}},\"title\":\"Alyra Project: Voting system\",\"version\":1},\"userdoc\":{\"events\":{\"ProposalRegistered(uint256,uint8,string)\":{\"notice\":\"!!! WARNING !!!\"},\"SessionCreated(uint256,string,string)\":{\"notice\":\"!!! WARNING !!!\"},\"Voted(uint256,address)\":{\"notice\":\"!!! WARNING !!!\"}},\"kind\":\"user\",\"methods\":{\"createVotingSession(string,string)\":{\"notice\":\"Administrator can create new voting session\"},\"getVote(uint256,address)\":{\"notice\":\"Retreive vote \"},\"getWinners(uint256)\":{\"notice\":\"Retreive winning proposals \"},\"registerProposal(uint256,string)\":{\"notice\":\"A voter can register a new proposal. \"},\"registerVoter(uint256,address)\":{\"notice\":\"Administrator can register voters. \"},\"startProposalsRegistration(uint256)\":{\"notice\":\"Administrator can close voters registration and open proposals registration. \"},\"startVotingSession(uint256)\":{\"notice\":\"Administrator can open voting session. \"},\"stopProposalsRegistration(uint256)\":{\"notice\":\"Administrator can close proposals registration. \"},\"stopVotingSession(uint256)\":{\"notice\":\"Administrator can close voting session. \"},\"tallyVotes(uint256)\":{\"notice\":\"Administrator can trigger votes talling. \"},\"vote(uint256,uint8)\":{\"notice\":\"A voter can register his vote for a proposal. \"}},\"notice\":\"This contract defines a basic voting system including different steps: 1) voting session creation 1) voters registration 2) proposals registration 3) votes recording 4) votes talling \",\"version\":1}},\"settings\":{\"compilationTarget\":{\"contracts/Voting.sol\":\"Voting\"},\"evmVersion\":\"london\",\"libraries\":{},\"metadata\":{\"bytecodeHash\":\"ipfs\",\"useLiteralContent\":true},\"optimizer\":{\"enabled\":true,\"runs\":200},\"remappings\":[]},\"sources\":{\"@openzeppelin/contracts/access/Ownable.sol\":{\"content\":\"// SPDX-License-Identifier: MIT\\n// OpenZeppelin Contracts (last updated v4.7.0) (access/Ownable.sol)\\n\\npragma solidity ^0.8.0;\\n\\nimport \\\"../utils/Context.sol\\\";\\n\\n/**\\n * @dev Contract module which provides a basic access control mechanism, where\\n * there is an account (an owner) that can be granted exclusive access to\\n * specific functions.\\n *\\n * By default, the owner account will be the one that deploys the contract. This\\n * can later be changed with {transferOwnership}.\\n *\\n * This module is used through inheritance. It will make available the modifier\\n * `onlyOwner`, which can be applied to your functions to restrict their use to\\n * the owner.\\n */\\nabstract contract Ownable is Context {\\n    address private _owner;\\n\\n    event OwnershipTransferred(address indexed previousOwner, address indexed newOwner);\\n\\n    /**\\n     * @dev Initializes the contract setting the deployer as the initial owner.\\n     */\\n    constructor() {\\n        _transferOwnership(_msgSender());\\n    }\\n\\n    /**\\n     * @dev Throws if called by any account other than the owner.\\n     */\\n    modifier onlyOwner() {\\n        _checkOwner();\\n        _;\\n    }\\n\\n    /**\\n     * @dev Returns the address of the current owner.\\n     */\\n    function owner() public view virtual returns (address) {\\n        return _owner;\\n    }\\n\\n    /**\\n     * @dev Throws if the sender is not the owner.\\n     */\\n    function _checkOwner() internal view virtual {\\n        require(owner() == _msgSender(), \\\"Ownable: caller is not the owner\\\");\\n    }\\n\\n    /**\\n     * @dev Leaves the contract without owner. It will not be possible to call\\n     * `onlyOwner` functions anymore. Can only be called by the current owner.\\n     *\\n     * NOTE: Renouncing ownership will leave the contract without an owner,\\n     * thereby removing any functionality that is only available to the owner.\\n     */\\n    function renounceOwnership() public virtual onlyOwner {\\n        _transferOwnership(address(0));\\n    }\\n\\n    /**\\n     * @dev Transfers ownership of the contract to a new account (`newOwner`).\\n     * Can only be called by the current owner.\\n     */\\n    function transferOwnership(address newOwner) public virtual onlyOwner {\\n        require(newOwner != address(0), \\\"Ownable: new owner is the zero address\\\");\\n        _transferOwnership(newOwner);\\n    }\\n\\n    /**\\n     * @dev Transfers ownership of the contract to a new account (`newOwner`).\\n     * Internal function without access restriction.\\n     */\\n    function _transferOwnership(address newOwner) internal virtual {\\n        address oldOwner = _owner;\\n        _owner = newOwner;\\n        emit OwnershipTransferred(oldOwner, newOwner);\\n    }\\n}\\n\",\"keccak256\":\"0xa94b34880e3c1b0b931662cb1c09e5dfa6662f31cba80e07c5ee71cd135c9673\",\"license\":\"MIT\"},\"@openzeppelin/contracts/utils/Context.sol\":{\"content\":\"// SPDX-License-Identifier: MIT\\n// OpenZeppelin Contracts v4.4.1 (utils/Context.sol)\\n\\npragma solidity ^0.8.0;\\n\\n/**\\n * @dev Provides information about the current execution context, including the\\n * sender of the transaction and its data. While these are generally available\\n * via msg.sender and msg.data, they should not be accessed in such a direct\\n * manner, since when dealing with meta-transactions the account sending and\\n * paying for execution may not be the actual sender (as far as an application\\n * is concerned).\\n *\\n * This contract is only required for intermediate, library-like contracts.\\n */\\nabstract contract Context {\\n    function _msgSender() internal view virtual returns (address) {\\n        return msg.sender;\\n    }\\n\\n    function _msgData() internal view virtual returns (bytes calldata) {\\n        return msg.data;\\n    }\\n}\\n\",\"keccak256\":\"0xe2e337e6dde9ef6b680e07338c493ebea1b5fd09b43424112868e9cc1706bca7\",\"license\":\"MIT\"},\"@openzeppelin/contracts/utils/Strings.sol\":{\"content\":\"// SPDX-License-Identifier: MIT\\n// OpenZeppelin Contracts (last updated v4.7.0) (utils/Strings.sol)\\n\\npragma solidity ^0.8.0;\\n\\n/**\\n * @dev String operations.\\n */\\nlibrary Strings {\\n    bytes16 private constant _HEX_SYMBOLS = \\\"0123456789abcdef\\\";\\n    uint8 private constant _ADDRESS_LENGTH = 20;\\n\\n    /**\\n     * @dev Converts a `uint256` to its ASCII `string` decimal representation.\\n     */\\n    function toString(uint256 value) internal pure returns (string memory) {\\n        // Inspired by OraclizeAPI's implementation - MIT licence\\n        // https://github.com/oraclize/ethereum-api/blob/b42146b063c7d6ee1358846c198246239e9360e8/oraclizeAPI_0.4.25.sol\\n\\n        if (value == 0) {\\n            return \\\"0\\\";\\n        }\\n        uint256 temp = value;\\n        uint256 digits;\\n        while (temp != 0) {\\n            digits++;\\n            temp /= 10;\\n        }\\n        bytes memory buffer = new bytes(digits);\\n        while (value != 0) {\\n            digits -= 1;\\n            buffer[digits] = bytes1(uint8(48 + uint256(value % 10)));\\n            value /= 10;\\n        }\\n        return string(buffer);\\n    }\\n\\n    /**\\n     * @dev Converts a `uint256` to its ASCII `string` hexadecimal representation.\\n     */\\n    function toHexString(uint256 value) internal pure returns (string memory) {\\n        if (value == 0) {\\n            return \\\"0x00\\\";\\n        }\\n        uint256 temp = value;\\n        uint256 length = 0;\\n        while (temp != 0) {\\n            length++;\\n            temp >>= 8;\\n        }\\n        return toHexString(value, length);\\n    }\\n\\n    /**\\n     * @dev Converts a `uint256` to its ASCII `string` hexadecimal representation with fixed length.\\n     */\\n    function toHexString(uint256 value, uint256 length) internal pure returns (string memory) {\\n        bytes memory buffer = new bytes(2 * length + 2);\\n        buffer[0] = \\\"0\\\";\\n        buffer[1] = \\\"x\\\";\\n        for (uint256 i = 2 * length + 1; i > 1; --i) {\\n            buffer[i] = _HEX_SYMBOLS[value & 0xf];\\n            value >>= 4;\\n        }\\n        require(value == 0, \\\"Strings: hex length insufficient\\\");\\n        return string(buffer);\\n    }\\n\\n    /**\\n     * @dev Converts an `address` with fixed length of 20 bytes to its not checksummed ASCII `string` hexadecimal representation.\\n     */\\n    function toHexString(address addr) internal pure returns (string memory) {\\n        return toHexString(uint256(uint160(addr)), _ADDRESS_LENGTH);\\n    }\\n}\\n\",\"keccak256\":\"0xaf159a8b1923ad2a26d516089bceca9bdeaeacd04be50983ea00ba63070f08a3\",\"license\":\"MIT\"},\"contracts/Voting.sol\":{\"content\":\"// SPDX-License-Identifier: GPL-3.0\\npragma solidity 0.8.17;\\n\\nimport '@openzeppelin/contracts/access/Ownable.sol';\\nimport '@openzeppelin/contracts/utils/Strings.sol';\\n\\n/** \\n * @title Alyra Project: Voting system\\n * @author Teddy Chambard\\n * @notice This contract defines a basic voting system including different steps:\\n * 1) voting session creation\\n * 1) voters registration\\n * 2) proposals registration\\n * 3) votes recording\\n * 4) votes talling\\n * \\n * @dev Only the contract owner is able to create new voting session.\\n * The contract owner is also able to change the session status and activate next session steps.\\n * The word `Administrator` in contract documentation corresponds to contract owner.\\n *\\n * /!\\\\ BONUS: I took some decisions to change initial specifications to improve the features available in the exercice:\\n *\\n * 1) Many voting sessions can be created and evolve in parallel\\n * 2) Votes are kept secret until the end of session, then every votes become accessible to voters and contract owner\\n * 3) Every events expose sessionId as first parameter\\n * 4) `Voted` event does not expose chosen proposal ID in order to keep votes secret until the end of the session\\n * 5) A session is limited to 256 proposals\\n * 6) Two proposals are registered by default in every session: abstention and blank vote\\n * 7) A voter can not do more than 3 proposals by session\\n * 6) A voter can not vote for its own proposals\\n * 7) A vote session can terminate with equality if many proposals obtain same number of votes\\n */\\ncontract Voting is Ownable {\\n\\n    // ===============\\n    // types\\n    // ===============\\n\\n    enum WorkflowStatus {\\n        None,\\n        RegisteringVoters,\\n        ProposalsRegistrationStarted,\\n        ProposalsRegistrationEnded,\\n        VotingSessionStarted,\\n        VotingSessionEnded,\\n        VotesTallied\\n    }\\n\\n    struct Voter {\\n        bool isRegistered;\\n        bool hasVoted;\\n        uint8 votedProposalId;\\n        uint8 nbProposals;\\n    }\\n\\n    struct Proposal {\\n        string description;\\n        uint voteCount;\\n        address proposer;\\n    }\\n    \\n    struct Session {\\n\\n        /**\\n         * @dev status is set to RegisteringVoters by createVotingSession function.\\n         * The inilial value `None` does not match with any expected status used with `isStatus` modifier.\\n         * Note: every functions are covered by `isStatus` modifier and that's why we can be sure a \\n         * session exist when its status is different than None.\\n         */\\n        WorkflowStatus status;\\n\\n        /**\\n         * !!! WARNING !!!\\n         * I decided to change a little the specifications to give more sense to the voting project:\\n         * \\n         * Initial specifications were :\\n         * \\u2714\\ufe0f Le vote n'est pas secret pour les utilisateurs ajout\\u00e9s \\u00e0 la Whitelist\\n         * \\u2714\\ufe0f Chaque \\u00e9lecteur peut voir les votes des autres\\n         *\\n         * @dev In my implementation, voters mapping is never accessible from external so voter's choice (votedProposalId) \\n         * is not known until `getVote` become available after end of voting session.\\n         * Informations like `isRegistered`, `hasVoted` or `nbProposals` are still available trough events.\\n         */\\n        mapping(address => Voter) voters;\\n\\n        /**\\n         * @dev Voters count will be used to compute abstention\\n         */\\n        uint votersCount;\\n\\n        /**\\n         * @dev Total votes count can be different than voters count and it will be used to compute abstention.\\n         */\\n        uint totalVotesCount;\\n\\n        /**\\n         * @dev proposals are not available directly to protect `voteCount` information during voting process.\\n         * However, informations like `description` or `proposer` are still available trough events.\\n         */\\n        Proposal[] proposals;\\n\\n        /**\\n         * winningProposals can be retrive after votes tallied with the function `getWinners`\\n         */\\n        Proposal[] winningProposals;\\n    }\\n\\n    // ===============\\n    // events\\n    // ===============\\n\\n    /**\\n     * !!! WARNING !!!\\n     * @dev All events signatures integrate sessionId parameter that was not required in specification\\n     */\\n\\n    event SessionCreated(uint indexed sessionId, string name, string description);\\n\\n    event VoterRegistered(uint indexed sessionId, address voterAddress);\\n\\n    event WorkflowStatusChange(uint indexed sessionId, WorkflowStatus previousStatus, WorkflowStatus newStatus);\\n\\n    /**\\n     * !!! WARNING !!!\\n     * @dev I decided to add description into ProposalRegistered event in order to expose proposals during the voting session without the vote count.\\n     * By this way voters are able to retrieve proposal information but they can not access to each proposal vote count before the end ot the session.\\n     */\\n    event ProposalRegistered(uint indexed sessionId, uint8 proposalId, string description);\\n\\n    /**\\n     * !!! WARNING !!!\\n     * @dev I decided to remove proposalId from Voted event despite the specification as \\n     * I think no one should be able to see voters choice before the end of voting session\\n     */\\n    event Voted(uint indexed sessionId, address voter);\\n\\n    event VotesTallied(uint indexed sessionId, uint votersCount, uint totalVotes, uint blankVotes, uint abstention, Proposal[] winningProposals);\\n\\n    // ===============\\n    // storage\\n    // ===============\\n\\n    mapping(uint => Session) private sessions;\\n\\n    uint sessionsCount;\\n\\n    // ===============\\n    // modifiers\\n    // ===============\\n\\n    /**\\n     * @dev Throws if called when status is not the expected one.\\n     */\\n    modifier statusIs(uint _sessionId, WorkflowStatus _status) {\\n        require(sessions[_sessionId].status == _status, string.concat('Unexpected voting session status: expected=', \\n            Strings.toString(uint(_status)), ' current=', Strings.toString(uint(sessions[_sessionId].status))));\\n        _;\\n    }    \\n    \\n    /**\\n     * @dev Throws if called when status is not at least the given status.\\n     */\\n    modifier statusAtLeast(uint _sessionId, WorkflowStatus _status) {\\n        require(sessions[_sessionId].status >= _status, string.concat('Unexpected voting session status: expected>=',\\n            Strings.toString(uint(_status)), ' current=', Strings.toString(uint(sessions[_sessionId].status))));\\n        _;\\n    }\\n\\n    /**\\n     * @dev Throws if called by any account not registered as voter.\\n     */\\n    modifier onlyVoter(uint _sessionId) {\\n        require(sessions[_sessionId].voters[msg.sender].isRegistered, 'Caller is not registered voter');\\n        _;\\n    }\\n\\n    /**\\n     * @dev Throws if called by any account not registered as voter or if it is not owner.\\n     */\\n    modifier onlyVoterOrOwner(uint _sessionId) {\\n        require(owner() == msg.sender || sessions[_sessionId].voters[msg.sender].isRegistered, 'Caller is not owner or registered voter');\\n        _;\\n    }\\n\\n    // ===============\\n    // only owner functions\\n    // ===============\\n\\n    /**\\n     * Administrator can create new voting session\\n     *\\n     * @param _name The session name \\n     * @param _description The session description \\n     */\\n    function createVotingSession(string calldata _name, string calldata _description) external onlyOwner {\\n        sessions[sessionsCount].status = WorkflowStatus.RegisteringVoters;\\n        emit SessionCreated(sessionsCount, _name, _description);\\n        emit WorkflowStatusChange(sessionsCount, WorkflowStatus.None, WorkflowStatus.RegisteringVoters);\\n        sessionsCount++;\\n    }\\n\\n    /**\\n     * Administrator can register voters.\\n     * \\n     * @dev voters can be added only by contract owner when status is set to RegisteringVoters\\n     * An event VoterRegistered is emitted\\n     * \\n     * @param _sessionId The session identifier \\n     * @param _voter The address to add into voters registry\\n     */\\n    function registerVoter(uint _sessionId, address _voter) external onlyOwner statusIs(_sessionId, WorkflowStatus.RegisteringVoters) {\\n        require(_voter != owner(), 'Owner can not be a voter');\\n        require(!sessions[_sessionId].voters[_voter].isRegistered, 'Voter is already registered');\\n        sessions[_sessionId].voters[_voter] = Voter(true, false, 0, 0);\\n        sessions[_sessionId].votersCount++;\\n        emit VoterRegistered(_sessionId, _voter);\\n    }\\n\\n    /**\\n     * Administrator can close voters registration and open proposals registration.\\n     * \\n     * @dev Can be called only when status is set to RegisteringVoters.\\n     * Two default proposals are registered at the beginning of this step: `Abstention` and `Blank`.\\n     * That means a registered voter that forget to vote will be counted as `abstention` thanks to `proposals` array index 0\\n     * An event WorkflowStatusChange is emitted\\n     *\\n     * @param _sessionId The session identifier \\n     */\\n    function startProposalsRegistration(uint _sessionId) external onlyOwner statusIs(_sessionId, WorkflowStatus.RegisteringVoters) {\\n        _registerProposal(_sessionId, 'Abstention');\\n        _registerProposal(_sessionId, 'Blank');\\n        sessions[_sessionId].status = WorkflowStatus.ProposalsRegistrationStarted;\\n        emit WorkflowStatusChange(_sessionId, WorkflowStatus.RegisteringVoters, WorkflowStatus.ProposalsRegistrationStarted);\\n    }\\n\\n    /**\\n     * Administrator can close proposals registration.\\n     * \\n     * @dev Can be called only when status is set to ProposalsRegistrationStarted.\\n     * An event WorkflowStatusChange is emitted\\n     *\\n     * @param _sessionId The session identifier \\n     */\\n    function stopProposalsRegistration(uint _sessionId) external onlyOwner statusIs(_sessionId, WorkflowStatus.ProposalsRegistrationStarted) {\\n        sessions[_sessionId].status = WorkflowStatus.ProposalsRegistrationEnded;\\n        emit WorkflowStatusChange(_sessionId, WorkflowStatus.ProposalsRegistrationStarted, WorkflowStatus.ProposalsRegistrationEnded);\\n    }\\n\\n    /**\\n     * Administrator can open voting session.\\n     * \\n     * @dev Can be called only when status is set to ProposalsRegistrationEnded.\\n     * An event WorkflowStatusChange is emitted\\n     *\\n     * @param _sessionId The session identifier \\n     */\\n    function startVotingSession(uint _sessionId) external onlyOwner statusIs(_sessionId, WorkflowStatus.ProposalsRegistrationEnded) {\\n        sessions[_sessionId].status = WorkflowStatus.VotingSessionStarted;\\n        emit WorkflowStatusChange(_sessionId, WorkflowStatus.ProposalsRegistrationEnded, WorkflowStatus.VotingSessionStarted);\\n    }\\n\\n    /**\\n     * Administrator can close voting session.\\n     * \\n     * @dev Can be called only when status is set to VotingSessionStarted.\\n     * An event WorkflowStatusChange is emitted\\n     *\\n     * @param _sessionId The session identifier \\n     */\\n    function stopVotingSession(uint _sessionId) external onlyOwner statusIs(_sessionId, WorkflowStatus.VotingSessionStarted) {\\n        sessions[_sessionId].status = WorkflowStatus.VotingSessionEnded;\\n        emit WorkflowStatusChange(_sessionId, WorkflowStatus.VotingSessionStarted, WorkflowStatus.VotingSessionEnded);\\n    }\\n\\n    /**\\n     * Administrator can trigger votes talling.\\n     * \\n     * @dev After votes talling, it is possible that we got many winning proposals.\\n     * Votes talling can be triggered only by contract owner when voting session status is set to VotingSessionEnded\\n     * An event WorkflowStatusChange is emitted\\n     *\\n     * @param _sessionId The session identifier \\n     */\\n    function tallyVotes(uint _sessionId) external onlyOwner statusIs(_sessionId, WorkflowStatus.VotingSessionEnded) {\\n        uint _bestVoteCount = 0;\\n        uint _winnersCount = 0;\\n        \\n        // use memory here to not write too many times in storage in the first loop below\\n        // not sure it's better because of static array size\\n        Proposal[] memory _winningProposals = new Proposal[](sessions[_sessionId].proposals.length);\\n\\n        // we do not consider two first proposal elements (abstention and blank)\\n        for (uint i = 2; i < sessions[_sessionId].proposals.length; i++) {\\n            if (sessions[_sessionId].proposals[i].voteCount > _bestVoteCount) {\\n                _bestVoteCount = sessions[_sessionId].proposals[i].voteCount;\\n                _winnersCount = 1;\\n                _winningProposals[_winnersCount - 1] = sessions[_sessionId].proposals[i];\\n            } else if (sessions[_sessionId].proposals[i].voteCount > 0 && sessions[_sessionId].proposals[i].voteCount == _bestVoteCount) {\\n                _winnersCount++;\\n                _winningProposals[_winnersCount - 1] = sessions[_sessionId].proposals[i];\\n            }\\n        }\\n\\n        for (uint i = 0; i < _winnersCount; i++) {\\n            sessions[_sessionId].winningProposals.push(_winningProposals[i]);\\n        }\\n\\n        sessions[_sessionId].status = WorkflowStatus.VotesTallied;\\n        emit WorkflowStatusChange(_sessionId, WorkflowStatus.VotingSessionEnded, WorkflowStatus.VotesTallied);\\n\\n        uint abstention = sessions[_sessionId].votersCount > 0 ? sessions[_sessionId].votersCount - sessions[_sessionId].totalVotesCount : 0;\\n        emit VotesTallied(_sessionId, sessions[_sessionId].votersCount, sessions[_sessionId].totalVotesCount, sessions[_sessionId].proposals[1].voteCount, abstention, sessions[_sessionId].winningProposals);\\n    }\\n\\n    // ===============\\n    // only voter functions\\n    // ===============\\n\\n    /**\\n     * A voter can register a new proposal.\\n     * \\n     * @dev Each voter can register many proposals.\\n     * As the vote is considered to be done in small organization context, the maximum number of proposals is limited to 256.\\n     * Maximum number of proposals per voter is also limited to 3.\\n     * A vote can be added only by registered voter when status is set to VotingSessionStarted\\n     * \\n     * @param _sessionId The session identifier\\n     * @param _description The proposal description\\n     */\\n    function registerProposal(uint _sessionId, string calldata _description) public onlyVoter(_sessionId) statusIs(_sessionId, WorkflowStatus.ProposalsRegistrationStarted) {\\n        require(sessions[_sessionId].voters[msg.sender].nbProposals < 3, 'You already posted 3 proposals which is the maximum allowed');\\n        _registerProposal(_sessionId, _description);\\n    }\\n\\n    /**\\n     * A voter can register his vote for a proposal.\\n     * \\n     * @dev Each voter can vote only once for one proposal.\\n     * Votes can be added only by registered voter when status is set to VotingSessionStarted\\n     * \\n     * @param _sessionId The session identifier\\n     * @param _proposalId The chosen proposal identifier\\n     */\\n    function vote(uint _sessionId, uint8 _proposalId) external onlyVoter(_sessionId) statusIs(_sessionId, WorkflowStatus.VotingSessionStarted) {\\n        require(!sessions[_sessionId].voters[msg.sender].hasVoted, 'Voter has already voted');\\n        require(_proposalId < sessions[_sessionId].proposals.length, string.concat('Proposal ', Strings.toString(_proposalId), ' does not exist'));\\n        require(sessions[_sessionId].proposals[_proposalId].proposer != msg.sender, 'A voter can not vote for its own proposal');\\n        require(_proposalId > 0, 'First proposal is reserved for abstention');\\n\\n        sessions[_sessionId].proposals[_proposalId].voteCount++;\\n        sessions[_sessionId].voters[msg.sender].hasVoted = true;\\n        sessions[_sessionId].voters[msg.sender].votedProposalId = _proposalId;\\n        sessions[_sessionId].totalVotesCount++;\\n        \\n        emit Voted(_sessionId, msg.sender);\\n    }\\n\\n    // ===============\\n    // only owner or voter functions\\n    // ===============\\n\\n    /**\\n     * Retreive vote\\n     * \\n     * @dev Administrator and registered voters can all access to everybody votes but only at the end of voting session.\\n     * \\n     * @param _sessionId The session identifier\\n     * @param _voter The voter address\\n     * @return uint8 target voter proposal choice\\n     */    \\n    function getVote(uint _sessionId, address _voter) external view onlyVoterOrOwner(_sessionId) statusAtLeast(_sessionId, WorkflowStatus.VotingSessionEnded) returns (uint8) {\\n        return sessions[_sessionId].voters[_voter].votedProposalId;\\n    }\\n\\n    /**\\n     * Retreive winning proposals\\n     * \\n     * @dev Administrator and registered voters can retreive winning proposals but only at the end of voting session.\\n     * \\n     * @return Proposal[] The winning proposals\\n     */    \\n    function getWinners(uint _sessionId) external view onlyVoterOrOwner(_sessionId) statusAtLeast(_sessionId, WorkflowStatus.VotesTallied) returns (Proposal[] memory) {\\n        return sessions[_sessionId].winningProposals;\\n    }\\n\\n    // ===============\\n    // private functions\\n    // ===============\\n    function _registerProposal(uint _sessionId, string memory _description) private {\\n        require(sessions[_sessionId].proposals.length < 2 ** 8 - 1, 'Too many proposals'); // limit total proposals count to 256\\n        sessions[_sessionId].proposals.push(Proposal(_description, 0, msg.sender));\\n        sessions[_sessionId].voters[msg.sender].nbProposals++;\\n        uint8 proposalId = uint8(sessions[_sessionId].proposals.length - 1);\\n        emit ProposalRegistered(_sessionId, proposalId, sessions[_sessionId].proposals[proposalId].description);\\n    }\\n}\",\"keccak256\":\"0x3e44e91dcbe4d34a770f90ec5d599499d259cc3b3008426b2ff811e2bd1c1e00\",\"license\":\"GPL-3.0\"}},\"version\":1}",
          "storageLayout": {
            "storage": [
              {
                "astId": 7,
                "contract": "contracts/Voting.sol:Voting",
                "label": "_owner",
                "offset": 0,
                "slot": "0",
                "type": "t_address"
              },
              {
                "astId": 480,
                "contract": "contracts/Voting.sol:Voting",
                "label": "sessions",
                "offset": 0,
                "slot": "1",
                "type": "t_mapping(t_uint256,t_struct(Session)418_storage)"
              },
              {
                "astId": 482,
                "contract": "contracts/Voting.sol:Voting",
                "label": "sessionsCount",
                "offset": 0,
                "slot": "2",
                "type": "t_uint256"
              }
            ],
            "types": {
              "t_address": {
                "encoding": "inplace",
                "label": "address",
                "numberOfBytes": "20"
              },
              "t_array(t_struct(Proposal)391_storage)dyn_storage": {
                "base": "t_struct(Proposal)391_storage",
                "encoding": "dynamic_array",
                "label": "struct Voting.Proposal[]",
                "numberOfBytes": "32"
              },
              "t_bool": {
                "encoding": "inplace",
                "label": "bool",
                "numberOfBytes": "1"
              },
              "t_enum(WorkflowStatus)375": {
                "encoding": "inplace",
                "label": "enum Voting.WorkflowStatus",
                "numberOfBytes": "1"
              },
              "t_mapping(t_address,t_struct(Voter)384_storage)": {
                "encoding": "mapping",
                "key": "t_address",
                "label": "mapping(address => struct Voting.Voter)",
                "numberOfBytes": "32",
                "value": "t_struct(Voter)384_storage"
              },
              "t_mapping(t_uint256,t_struct(Session)418_storage)": {
                "encoding": "mapping",
                "key": "t_uint256",
                "label": "mapping(uint256 => struct Voting.Session)",
                "numberOfBytes": "32",
                "value": "t_struct(Session)418_storage"
              },
              "t_string_storage": {
                "encoding": "bytes",
                "label": "string",
                "numberOfBytes": "32"
              },
              "t_struct(Proposal)391_storage": {
                "encoding": "inplace",
                "label": "struct Voting.Proposal",
                "members": [
                  {
                    "astId": 386,
                    "contract": "contracts/Voting.sol:Voting",
                    "label": "description",
                    "offset": 0,
                    "slot": "0",
                    "type": "t_string_storage"
                  },
                  {
                    "astId": 388,
                    "contract": "contracts/Voting.sol:Voting",
                    "label": "voteCount",
                    "offset": 0,
                    "slot": "1",
                    "type": "t_uint256"
                  },
                  {
                    "astId": 390,
                    "contract": "contracts/Voting.sol:Voting",
                    "label": "proposer",
                    "offset": 0,
                    "slot": "2",
                    "type": "t_address"
                  }
                ],
                "numberOfBytes": "96"
              },
              "t_struct(Session)418_storage": {
                "encoding": "inplace",
                "label": "struct Voting.Session",
                "members": [
                  {
                    "astId": 395,
                    "contract": "contracts/Voting.sol:Voting",
                    "label": "status",
                    "offset": 0,
                    "slot": "0",
                    "type": "t_enum(WorkflowStatus)375"
                  },
                  {
                    "astId": 401,
                    "contract": "contracts/Voting.sol:Voting",
                    "label": "voters",
                    "offset": 0,
                    "slot": "1",
                    "type": "t_mapping(t_address,t_struct(Voter)384_storage)"
                  },
                  {
                    "astId": 404,
                    "contract": "contracts/Voting.sol:Voting",
                    "label": "votersCount",
                    "offset": 0,
                    "slot": "2",
                    "type": "t_uint256"
                  },
                  {
                    "astId": 407,
                    "contract": "contracts/Voting.sol:Voting",
                    "label": "totalVotesCount",
                    "offset": 0,
                    "slot": "3",
                    "type": "t_uint256"
                  },
                  {
                    "astId": 412,
                    "contract": "contracts/Voting.sol:Voting",
                    "label": "proposals",
                    "offset": 0,
                    "slot": "4",
                    "type": "t_array(t_struct(Proposal)391_storage)dyn_storage"
                  },
                  {
                    "astId": 417,
                    "contract": "contracts/Voting.sol:Voting",
                    "label": "winningProposals",
                    "offset": 0,
                    "slot": "5",
                    "type": "t_array(t_struct(Proposal)391_storage)dyn_storage"
                  }
                ],
                "numberOfBytes": "192"
              },
              "t_struct(Voter)384_storage": {
                "encoding": "inplace",
                "label": "struct Voting.Voter",
                "members": [
                  {
                    "astId": 377,
                    "contract": "contracts/Voting.sol:Voting",
                    "label": "isRegistered",
                    "offset": 0,
                    "slot": "0",
                    "type": "t_bool"
                  },
                  {
                    "astId": 379,
                    "contract": "contracts/Voting.sol:Voting",
                    "label": "hasVoted",
                    "offset": 1,
                    "slot": "0",
                    "type": "t_bool"
                  },
                  {
                    "astId": 381,
                    "contract": "contracts/Voting.sol:Voting",
                    "label": "votedProposalId",
                    "offset": 2,
                    "slot": "0",
                    "type": "t_uint8"
                  },
                  {
                    "astId": 383,
                    "contract": "contracts/Voting.sol:Voting",
                    "label": "nbProposals",
                    "offset": 3,
                    "slot": "0",
                    "type": "t_uint8"
                  }
                ],
                "numberOfBytes": "32"
              },
              "t_uint256": {
                "encoding": "inplace",
                "label": "uint256",
                "numberOfBytes": "32"
              },
              "t_uint8": {
                "encoding": "inplace",
                "label": "uint8",
                "numberOfBytes": "1"
              }
            }
          },
          "userdoc": {
            "events": {
              "ProposalRegistered(uint256,uint8,string)": {
                "notice": "!!! WARNING !!!"
              },
              "SessionCreated(uint256,string,string)": {
                "notice": "!!! WARNING !!!"
              },
              "Voted(uint256,address)": { "notice": "!!! WARNING !!!" }
            },
            "kind": "user",
            "methods": {
              "createVotingSession(string,string)": {
                "notice": "Administrator can create new voting session"
              },
              "getVote(uint256,address)": { "notice": "Retreive vote " },
              "getWinners(uint256)": {
                "notice": "Retreive winning proposals "
              },
              "registerProposal(uint256,string)": {
                "notice": "A voter can register a new proposal. "
              },
              "registerVoter(uint256,address)": {
                "notice": "Administrator can register voters. "
              },
              "startProposalsRegistration(uint256)": {
                "notice": "Administrator can close voters registration and open proposals registration. "
              },
              "startVotingSession(uint256)": {
                "notice": "Administrator can open voting session. "
              },
              "stopProposalsRegistration(uint256)": {
                "notice": "Administrator can close proposals registration. "
              },
              "stopVotingSession(uint256)": {
                "notice": "Administrator can close voting session. "
              },
              "tallyVotes(uint256)": {
                "notice": "Administrator can trigger votes talling. "
              },
              "vote(uint256,uint8)": {
                "notice": "A voter can register his vote for a proposal. "
              }
            },
            "notice": "This contract defines a basic voting system including different steps: 1) voting session creation 1) voters registration 2) proposals registration 3) votes recording 4) votes talling ",
            "version": 1
          }
        }
      },
      "contracts/VotingAlyra.sol": {
        "VotingAlyra": {
          "abi": [
            {
              "anonymous": false,
              "inputs": [
                {
                  "indexed": true,
                  "internalType": "address",
                  "name": "previousOwner",
                  "type": "address"
                },
                {
                  "indexed": true,
                  "internalType": "address",
                  "name": "newOwner",
                  "type": "address"
                }
              ],
              "name": "OwnershipTransferred",
              "type": "event"
            },
            {
              "anonymous": false,
              "inputs": [
                {
                  "indexed": false,
                  "internalType": "uint256",
                  "name": "proposalId",
                  "type": "uint256"
                }
              ],
              "name": "ProposalRegistered",
              "type": "event"
            },
            {
              "anonymous": false,
              "inputs": [
                {
                  "indexed": false,
                  "internalType": "address",
                  "name": "voter",
                  "type": "address"
                },
                {
                  "indexed": false,
                  "internalType": "uint256",
                  "name": "proposalId",
                  "type": "uint256"
                }
              ],
              "name": "Voted",
              "type": "event"
            },
            {
              "anonymous": false,
              "inputs": [
                {
                  "indexed": false,
                  "internalType": "address",
                  "name": "voterAddress",
                  "type": "address"
                }
              ],
              "name": "VoterRegistered",
              "type": "event"
            },
            {
              "anonymous": false,
              "inputs": [
                {
                  "indexed": false,
                  "internalType": "enum VotingAlyra.WorkflowStatus",
                  "name": "previousStatus",
                  "type": "uint8"
                },
                {
                  "indexed": false,
                  "internalType": "enum VotingAlyra.WorkflowStatus",
                  "name": "newStatus",
                  "type": "uint8"
                }
              ],
              "name": "WorkflowStatusChange",
              "type": "event"
            },
            {
              "inputs": [
                { "internalType": "string", "name": "_desc", "type": "string" }
              ],
              "name": "addProposal",
              "outputs": [],
              "stateMutability": "nonpayable",
              "type": "function"
            },
            {
              "inputs": [
                {
                  "internalType": "address",
                  "name": "_addr",
                  "type": "address"
                }
              ],
              "name": "addVoter",
              "outputs": [],
              "stateMutability": "nonpayable",
              "type": "function"
            },
            {
              "inputs": [],
              "name": "endProposalsRegistering",
              "outputs": [],
              "stateMutability": "nonpayable",
              "type": "function"
            },
            {
              "inputs": [],
              "name": "endVotingSession",
              "outputs": [],
              "stateMutability": "nonpayable",
              "type": "function"
            },
            {
              "inputs": [
                { "internalType": "uint256", "name": "_id", "type": "uint256" }
              ],
              "name": "getOneProposal",
              "outputs": [
                {
                  "components": [
                    {
                      "internalType": "string",
                      "name": "description",
                      "type": "string"
                    },
                    {
                      "internalType": "uint256",
                      "name": "voteCount",
                      "type": "uint256"
                    }
                  ],
                  "internalType": "struct VotingAlyra.Proposal",
                  "name": "",
                  "type": "tuple"
                }
              ],
              "stateMutability": "view",
              "type": "function"
            },
            {
              "inputs": [
                {
                  "internalType": "address",
                  "name": "_addr",
                  "type": "address"
                }
              ],
              "name": "getVoter",
              "outputs": [
                {
                  "components": [
                    {
                      "internalType": "bool",
                      "name": "isRegistered",
                      "type": "bool"
                    },
                    {
                      "internalType": "bool",
                      "name": "hasVoted",
                      "type": "bool"
                    },
                    {
                      "internalType": "uint256",
                      "name": "votedProposalId",
                      "type": "uint256"
                    }
                  ],
                  "internalType": "struct VotingAlyra.Voter",
                  "name": "",
                  "type": "tuple"
                }
              ],
              "stateMutability": "view",
              "type": "function"
            },
            {
              "inputs": [],
              "name": "owner",
              "outputs": [
                { "internalType": "address", "name": "", "type": "address" }
              ],
              "stateMutability": "view",
              "type": "function"
            },
            {
              "inputs": [],
              "name": "renounceOwnership",
              "outputs": [],
              "stateMutability": "nonpayable",
              "type": "function"
            },
            {
              "inputs": [
                { "internalType": "uint256", "name": "_id", "type": "uint256" }
              ],
              "name": "setVote",
              "outputs": [],
              "stateMutability": "nonpayable",
              "type": "function"
            },
            {
              "inputs": [],
              "name": "startProposalsRegistering",
              "outputs": [],
              "stateMutability": "nonpayable",
              "type": "function"
            },
            {
              "inputs": [],
              "name": "startVotingSession",
              "outputs": [],
              "stateMutability": "nonpayable",
              "type": "function"
            },
            {
              "inputs": [],
              "name": "tallyVotes",
              "outputs": [],
              "stateMutability": "nonpayable",
              "type": "function"
            },
            {
              "inputs": [
                {
                  "internalType": "address",
                  "name": "newOwner",
                  "type": "address"
                }
              ],
              "name": "transferOwnership",
              "outputs": [],
              "stateMutability": "nonpayable",
              "type": "function"
            },
            {
              "inputs": [],
              "name": "winningProposalID",
              "outputs": [
                { "internalType": "uint256", "name": "", "type": "uint256" }
              ],
              "stateMutability": "view",
              "type": "function"
            },
            {
              "inputs": [],
              "name": "workflowStatus",
              "outputs": [
                {
                  "internalType": "enum VotingAlyra.WorkflowStatus",
                  "name": "",
                  "type": "uint8"
                }
              ],
              "stateMutability": "view",
              "type": "function"
            }
          ],
          "devdoc": {
            "kind": "dev",
            "methods": {
              "owner()": {
                "details": "Returns the address of the current owner."
              },
              "renounceOwnership()": {
                "details": "Leaves the contract without owner. It will not be possible to call `onlyOwner` functions anymore. Can only be called by the current owner. NOTE: Renouncing ownership will leave the contract without an owner, thereby removing any functionality that is only available to the owner."
              },
              "transferOwnership(address)": {
                "details": "Transfers ownership of the contract to a new account (`newOwner`). Can only be called by the current owner."
              }
            },
            "version": 1
          },
          "evm": {
            "bytecode": {
              "functionDebugData": {
                "@_23": {
                  "entryPoint": null,
                  "id": 23,
                  "parameterSlots": 0,
                  "returnSlots": 0
                },
                "@_msgSender_124": {
                  "entryPoint": null,
                  "id": 124,
                  "parameterSlots": 0,
                  "returnSlots": 1
                },
                "@_transferOwnership_111": {
                  "entryPoint": 31,
                  "id": 111,
                  "parameterSlots": 1,
                  "returnSlots": 0
                }
              },
              "generatedSources": [],
              "linkReferences": {},
              "object": "608060405234801561001057600080fd5b5061001a3361001f565b61006f565b600080546001600160a01b038381166001600160a01b0319831681178455604051919092169283917f8be0079c531659141344cd1fd0a4f28419497f9722a3daafe3b4186f6b6457e09190a35050565b6112648061007e6000396000f3fe608060405234801561001057600080fd5b50600436106100f55760003560e01c8063a7bfab1611610097578063d4f50f9811610066578063d4f50f98146101bb578063ee74c678146101f4578063f2fde38b146101fc578063f4ab9adf1461020f57600080fd5b8063a7bfab161461018c578063bdc0143114610194578063c7038a4e146101ab578063c88af42f146101b357600080fd5b8063715018a6116100d3578063715018a61461012a5780638da5cb5b14610132578063a1edffa214610152578063a2788cce1461016c57600080fd5b8063230796ae146100fa5780632fdae3c51461010f578063378a217814610122575b600080fd5b61010d610108366004610e38565b610222565b005b61010d61011d366004610e51565b6103cf565b61010d6105f8565b61010d610723565b6000546040516001600160a01b0390911681526020015b60405180910390f35b60025461015f9060ff1681565b6040516101499190610efb565b61017f61017a366004610e38565b610737565b6040516101499190610f0f565b61010d61084a565b61019d60015481565b604051908152602001610149565b61010d6108c2565b61010d6109f7565b6101ce6101c9366004610f70565b610aa2565b604080518251151581526020808401511515908201529181015190820152606001610149565b61010d610b37565b61010d61020a366004610f70565b610be5565b61010d61021d366004610f70565b610c5e565b3360009081526004602052604090205460ff1661025a5760405162461bcd60e51b815260040161025190610fa0565b60405180910390fd5b600360025460ff16600581111561027357610273610ec3565b146102905760405162461bcd60e51b815260040161025190610fcc565b33600090815260046020526040902054610100900460ff1615156001036102f25760405162461bcd60e51b8152602060048201526016602482015275165bdd481a185d9948185b1c9958591e481d9bdd195960521b6044820152606401610251565b60035481106103385760405162461bcd60e51b8152602060048201526012602482015271141c9bdc1bdcd85b081b9bdd08199bdd5b9960721b6044820152606401610251565b33600090815260046020526040902060018101829055805461ff001916610100179055600380548290811061036f5761036f61100d565b60009182526020822060016002909202010180549161038d83611039565b909155505060408051338152602081018390527f4d99b957a2bc29a30ebd96a7be8e68fe50a3c701db28a91436490b7d53870ca491015b60405180910390a150565b3360009081526004602052604090205460ff166103fe5760405162461bcd60e51b815260040161025190610fa0565b600160025460ff16600581111561041757610417610ec3565b146104645760405162461bcd60e51b815260206004820152601d60248201527f50726f706f73616c7320617265206e6f7420616c6c6f776564207965740000006044820152606401610251565b60405160200161047f90602080825260009082015260400190565b6040516020818303038152906040528051906020012082826040516020016104a8929190611052565b60405160208183030381529060405280519060200120036105175760405162461bcd60e51b815260206004820152602360248201527f566f7573206e6520706f7576657a20706173206e65207269656e2070726f706f60448201526239b2b960e91b6064820152608401610251565b60408051808201909152606081526000602082015282828080601f0160208091040260200160405190810160405280939291908181526020018383808284376000920182905250938552505060038054600181018255925250815182916002027fc2575a0e9e593c00f959f8c92f12db2869c3395a3b0502d05e2516446f71f85b019081906105a69082611120565b50602091909101516001918201556003547f92e393e9b54e2f801d3ea4beb0c5e71a21cc34a5d34b77d0fb8a3aa1650dc18f916105e2916111e0565b60405190815260200160405180910390a1505050565b610600610d8e565b600460025460ff16600581111561061957610619610ec3565b146106795760405162461bcd60e51b815260206004820152602a60248201527f43757272656e7420737461747573206973206e6f7420766f74696e67207365736044820152691cda5bdb88195b99195960b21b6064820152608401610251565b6000805b6003548110156106ed576003828154811061069a5761069a61100d565b906000526020600020906002020160010154600382815481106106bf576106bf61100d565b90600052602060002090600202016001015411156106db578091505b806106e581611039565b91505061067d565b5060018190556002805460ff1916600590811790915560405160008051602061120f833981519152916103c491600491906111f3565b61072b610d8e565b6107356000610de8565b565b6040805180820190915260608152600060208201523360009081526004602052604090205460ff1661077b5760405162461bcd60e51b815260040161025190610fa0565b6003828154811061078e5761078e61100d565b90600052602060002090600202016040518060400160405290816000820180546107b790611097565b80601f01602080910402602001604051908101604052809291908181526020018280546107e390611097565b80156108305780601f1061080557610100808354040283529160200191610830565b820191906000526020600020905b81548152906001019060200180831161081357829003601f168201915b505050505081526020016001820154815250509050919050565b610852610d8e565b600360025460ff16600581111561086b5761086b610ec3565b146108885760405162461bcd60e51b815260040161025190610fcc565b6002805460ff1916600490811790915560405160008051602061120f833981519152916108b891600391906111f3565b60405180910390a1565b6108ca610d8e565b600060025460ff1660058111156108e3576108e3610ec3565b146109425760405162461bcd60e51b815260206004820152602960248201527f5265676973746572696e672070726f706f73616c732063616e742062652073746044820152686172746564206e6f7760b81b6064820152608401610251565b6002805460ff19166001908117825560408051808201825260608152600060208083018290528351808501909452600784526647454e4553495360c81b908401529181526003805493840181559091528051909283927fc2575a0e9e593c00f959f8c92f12db2869c3395a3b0502d05e2516446f71f85b9102019081906109c99082611120565b5060208201518160010155505060008051602061120f833981519152600060016040516103c49291906111f3565b6109ff610d8e565b600160025460ff166005811115610a1857610a18610ec3565b14610a765760405162461bcd60e51b815260206004820152602860248201527f5265676973746572696e672070726f706f73616c7320686176656e74207374616044820152671c9d1959081e595d60c21b6064820152608401610251565b6002805460ff19168117815560405160008051602061120f833981519152916108b891600191906111f3565b604080516060810182526000808252602080830182905282840182905233825260049052919091205460ff16610aea5760405162461bcd60e51b815260040161025190610fa0565b506001600160a01b03166000908152600460209081526040918290208251606081018452815460ff8082161515835261010090910416151592810192909252600101549181019190915290565b610b3f610d8e565b6002805460ff166005811115610b5757610b57610ec3565b14610bb85760405162461bcd60e51b815260206004820152602b60248201527f5265676973746572696e672070726f706f73616c73207068617365206973206e60448201526a1bdd08199a5b9a5cda195960aa1b6064820152608401610251565b6002805460ff19166003908117825560405160008051602061120f833981519152926108b89290916111f3565b610bed610d8e565b6001600160a01b038116610c525760405162461bcd60e51b815260206004820152602660248201527f4f776e61626c653a206e6577206f776e657220697320746865207a65726f206160448201526564647265737360d01b6064820152608401610251565b610c5b81610de8565b50565b610c66610d8e565b600060025460ff166005811115610c7f57610c7f610ec3565b14610cd85760405162461bcd60e51b815260206004820152602360248201527f566f7465727320726567697374726174696f6e206973206e6f74206f70656e206044820152621e595d60ea1b6064820152608401610251565b6001600160a01b03811660009081526004602052604090205460ff161515600103610d3a5760405162461bcd60e51b8152602060048201526012602482015271105b1c9958591e481c9959da5cdd195c995960721b6044820152606401610251565b6001600160a01b038116600081815260046020908152604091829020805460ff1916600117905590519182527fb6be2187d059cc2a55fe29e0e503b566e1e0f8c8780096e185429350acffd3dd91016103c4565b6000546001600160a01b031633146107355760405162461bcd60e51b815260206004820181905260248201527f4f776e61626c653a2063616c6c6572206973206e6f7420746865206f776e65726044820152606401610251565b600080546001600160a01b038381166001600160a01b0319831681178455604051919092169283917f8be0079c531659141344cd1fd0a4f28419497f9722a3daafe3b4186f6b6457e09190a35050565b600060208284031215610e4a57600080fd5b5035919050565b60008060208385031215610e6457600080fd5b823567ffffffffffffffff80821115610e7c57600080fd5b818501915085601f830112610e9057600080fd5b813581811115610e9f57600080fd5b866020828501011115610eb157600080fd5b60209290920196919550909350505050565b634e487b7160e01b600052602160045260246000fd5b60068110610ef757634e487b7160e01b600052602160045260246000fd5b9052565b60208101610f098284610ed9565b92915050565b600060208083528351604082850152805180606086015260005b81811015610f4557828101840151868201608001528301610f29565b506000608082870101528286015160408601526080601f19601f830116860101935050505092915050565b600060208284031215610f8257600080fd5b81356001600160a01b0381168114610f9957600080fd5b9392505050565b6020808252601290820152712cb7ba93b932903737ba1030903b37ba32b960711b604082015260600190565b60208082526021908201527f566f74696e672073657373696f6e20686176656e7420737461727465642079656040820152601d60fa1b606082015260800190565b634e487b7160e01b600052603260045260246000fd5b634e487b7160e01b600052601160045260246000fd5b60006001820161104b5761104b611023565b5060010190565b60208152816020820152818360408301376000818301604090810191909152601f909201601f19160101919050565b634e487b7160e01b600052604160045260246000fd5b600181811c908216806110ab57607f821691505b6020821081036110cb57634e487b7160e01b600052602260045260246000fd5b50919050565b601f82111561111b57600081815260208120601f850160051c810160208610156110f85750805b601f850160051c820191505b8181101561111757828155600101611104565b5050505b505050565b815167ffffffffffffffff81111561113a5761113a611081565b61114e816111488454611097565b846110d1565b602080601f831160018114611183576000841561116b5750858301515b600019600386901b1c1916600185901b178555611117565b600085815260208120601f198616915b828110156111b257888601518255948401946001909101908401611193565b50858210156111d05787850151600019600388901b60f8161c191681555b5050505050600190811b01905550565b81810381811115610f0957610f09611023565b604081016112018285610ed9565b610f996020830184610ed956fe0a97a4ee45751e2abf3e4fc8946939630b11b371ea8ae39ccdc3056e98f5cc3fa2646970667358221220c1ba66bd644f986587d986f8a3bffd6d07c3299c666d7dfb9f945861bbd030c764736f6c63430008110033",
              "opcodes": "PUSH1 0x80 PUSH1 0x40 MSTORE CALLVALUE DUP1 ISZERO PUSH2 0x10 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST POP PUSH2 0x1A CALLER PUSH2 0x1F JUMP JUMPDEST PUSH2 0x6F JUMP JUMPDEST PUSH1 0x0 DUP1 SLOAD PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB DUP4 DUP2 AND PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB NOT DUP4 AND DUP2 OR DUP5 SSTORE PUSH1 0x40 MLOAD SWAP2 SWAP1 SWAP3 AND SWAP3 DUP4 SWAP2 PUSH32 0x8BE0079C531659141344CD1FD0A4F28419497F9722A3DAAFE3B4186F6B6457E0 SWAP2 SWAP1 LOG3 POP POP JUMP JUMPDEST PUSH2 0x1264 DUP1 PUSH2 0x7E PUSH1 0x0 CODECOPY PUSH1 0x0 RETURN INVALID PUSH1 0x80 PUSH1 0x40 MSTORE CALLVALUE DUP1 ISZERO PUSH2 0x10 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST POP PUSH1 0x4 CALLDATASIZE LT PUSH2 0xF5 JUMPI PUSH1 0x0 CALLDATALOAD PUSH1 0xE0 SHR DUP1 PUSH4 0xA7BFAB16 GT PUSH2 0x97 JUMPI DUP1 PUSH4 0xD4F50F98 GT PUSH2 0x66 JUMPI DUP1 PUSH4 0xD4F50F98 EQ PUSH2 0x1BB JUMPI DUP1 PUSH4 0xEE74C678 EQ PUSH2 0x1F4 JUMPI DUP1 PUSH4 0xF2FDE38B EQ PUSH2 0x1FC JUMPI DUP1 PUSH4 0xF4AB9ADF EQ PUSH2 0x20F JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST DUP1 PUSH4 0xA7BFAB16 EQ PUSH2 0x18C JUMPI DUP1 PUSH4 0xBDC01431 EQ PUSH2 0x194 JUMPI DUP1 PUSH4 0xC7038A4E EQ PUSH2 0x1AB JUMPI DUP1 PUSH4 0xC88AF42F EQ PUSH2 0x1B3 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST DUP1 PUSH4 0x715018A6 GT PUSH2 0xD3 JUMPI DUP1 PUSH4 0x715018A6 EQ PUSH2 0x12A JUMPI DUP1 PUSH4 0x8DA5CB5B EQ PUSH2 0x132 JUMPI DUP1 PUSH4 0xA1EDFFA2 EQ PUSH2 0x152 JUMPI DUP1 PUSH4 0xA2788CCE EQ PUSH2 0x16C JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST DUP1 PUSH4 0x230796AE EQ PUSH2 0xFA JUMPI DUP1 PUSH4 0x2FDAE3C5 EQ PUSH2 0x10F JUMPI DUP1 PUSH4 0x378A2178 EQ PUSH2 0x122 JUMPI JUMPDEST PUSH1 0x0 DUP1 REVERT JUMPDEST PUSH2 0x10D PUSH2 0x108 CALLDATASIZE PUSH1 0x4 PUSH2 0xE38 JUMP JUMPDEST PUSH2 0x222 JUMP JUMPDEST STOP JUMPDEST PUSH2 0x10D PUSH2 0x11D CALLDATASIZE PUSH1 0x4 PUSH2 0xE51 JUMP JUMPDEST PUSH2 0x3CF JUMP JUMPDEST PUSH2 0x10D PUSH2 0x5F8 JUMP JUMPDEST PUSH2 0x10D PUSH2 0x723 JUMP JUMPDEST PUSH1 0x0 SLOAD PUSH1 0x40 MLOAD PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB SWAP1 SWAP2 AND DUP2 MSTORE PUSH1 0x20 ADD JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 RETURN JUMPDEST PUSH1 0x2 SLOAD PUSH2 0x15F SWAP1 PUSH1 0xFF AND DUP2 JUMP JUMPDEST PUSH1 0x40 MLOAD PUSH2 0x149 SWAP2 SWAP1 PUSH2 0xEFB JUMP JUMPDEST PUSH2 0x17F PUSH2 0x17A CALLDATASIZE PUSH1 0x4 PUSH2 0xE38 JUMP JUMPDEST PUSH2 0x737 JUMP JUMPDEST PUSH1 0x40 MLOAD PUSH2 0x149 SWAP2 SWAP1 PUSH2 0xF0F JUMP JUMPDEST PUSH2 0x10D PUSH2 0x84A JUMP JUMPDEST PUSH2 0x19D PUSH1 0x1 SLOAD DUP2 JUMP JUMPDEST PUSH1 0x40 MLOAD SWAP1 DUP2 MSTORE PUSH1 0x20 ADD PUSH2 0x149 JUMP JUMPDEST PUSH2 0x10D PUSH2 0x8C2 JUMP JUMPDEST PUSH2 0x10D PUSH2 0x9F7 JUMP JUMPDEST PUSH2 0x1CE PUSH2 0x1C9 CALLDATASIZE PUSH1 0x4 PUSH2 0xF70 JUMP JUMPDEST PUSH2 0xAA2 JUMP JUMPDEST PUSH1 0x40 DUP1 MLOAD DUP3 MLOAD ISZERO ISZERO DUP2 MSTORE PUSH1 0x20 DUP1 DUP5 ADD MLOAD ISZERO ISZERO SWAP1 DUP3 ADD MSTORE SWAP2 DUP2 ADD MLOAD SWAP1 DUP3 ADD MSTORE PUSH1 0x60 ADD PUSH2 0x149 JUMP JUMPDEST PUSH2 0x10D PUSH2 0xB37 JUMP JUMPDEST PUSH2 0x10D PUSH2 0x20A CALLDATASIZE PUSH1 0x4 PUSH2 0xF70 JUMP JUMPDEST PUSH2 0xBE5 JUMP JUMPDEST PUSH2 0x10D PUSH2 0x21D CALLDATASIZE PUSH1 0x4 PUSH2 0xF70 JUMP JUMPDEST PUSH2 0xC5E JUMP JUMPDEST CALLER PUSH1 0x0 SWAP1 DUP2 MSTORE PUSH1 0x4 PUSH1 0x20 MSTORE PUSH1 0x40 SWAP1 KECCAK256 SLOAD PUSH1 0xFF AND PUSH2 0x25A JUMPI PUSH1 0x40 MLOAD PUSH3 0x461BCD PUSH1 0xE5 SHL DUP2 MSTORE PUSH1 0x4 ADD PUSH2 0x251 SWAP1 PUSH2 0xFA0 JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 REVERT JUMPDEST PUSH1 0x3 PUSH1 0x2 SLOAD PUSH1 0xFF AND PUSH1 0x5 DUP2 GT ISZERO PUSH2 0x273 JUMPI PUSH2 0x273 PUSH2 0xEC3 JUMP JUMPDEST EQ PUSH2 0x290 JUMPI PUSH1 0x40 MLOAD PUSH3 0x461BCD PUSH1 0xE5 SHL DUP2 MSTORE PUSH1 0x4 ADD PUSH2 0x251 SWAP1 PUSH2 0xFCC JUMP JUMPDEST CALLER PUSH1 0x0 SWAP1 DUP2 MSTORE PUSH1 0x4 PUSH1 0x20 MSTORE PUSH1 0x40 SWAP1 KECCAK256 SLOAD PUSH2 0x100 SWAP1 DIV PUSH1 0xFF AND ISZERO ISZERO PUSH1 0x1 SUB PUSH2 0x2F2 JUMPI PUSH1 0x40 MLOAD PUSH3 0x461BCD PUSH1 0xE5 SHL DUP2 MSTORE PUSH1 0x20 PUSH1 0x4 DUP3 ADD MSTORE PUSH1 0x16 PUSH1 0x24 DUP3 ADD MSTORE PUSH22 0x165BDD481A185D9948185B1C9958591E481D9BDD1959 PUSH1 0x52 SHL PUSH1 0x44 DUP3 ADD MSTORE PUSH1 0x64 ADD PUSH2 0x251 JUMP JUMPDEST PUSH1 0x3 SLOAD DUP2 LT PUSH2 0x338 JUMPI PUSH1 0x40 MLOAD PUSH3 0x461BCD PUSH1 0xE5 SHL DUP2 MSTORE PUSH1 0x20 PUSH1 0x4 DUP3 ADD MSTORE PUSH1 0x12 PUSH1 0x24 DUP3 ADD MSTORE PUSH18 0x141C9BDC1BDCD85B081B9BDD08199BDD5B99 PUSH1 0x72 SHL PUSH1 0x44 DUP3 ADD MSTORE PUSH1 0x64 ADD PUSH2 0x251 JUMP JUMPDEST CALLER PUSH1 0x0 SWAP1 DUP2 MSTORE PUSH1 0x4 PUSH1 0x20 MSTORE PUSH1 0x40 SWAP1 KECCAK256 PUSH1 0x1 DUP2 ADD DUP3 SWAP1 SSTORE DUP1 SLOAD PUSH2 0xFF00 NOT AND PUSH2 0x100 OR SWAP1 SSTORE PUSH1 0x3 DUP1 SLOAD DUP3 SWAP1 DUP2 LT PUSH2 0x36F JUMPI PUSH2 0x36F PUSH2 0x100D JUMP JUMPDEST PUSH1 0x0 SWAP2 DUP3 MSTORE PUSH1 0x20 DUP3 KECCAK256 PUSH1 0x1 PUSH1 0x2 SWAP1 SWAP3 MUL ADD ADD DUP1 SLOAD SWAP2 PUSH2 0x38D DUP4 PUSH2 0x1039 JUMP JUMPDEST SWAP1 SWAP2 SSTORE POP POP PUSH1 0x40 DUP1 MLOAD CALLER DUP2 MSTORE PUSH1 0x20 DUP2 ADD DUP4 SWAP1 MSTORE PUSH32 0x4D99B957A2BC29A30EBD96A7BE8E68FE50A3C701DB28A91436490B7D53870CA4 SWAP2 ADD JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 LOG1 POP JUMP JUMPDEST CALLER PUSH1 0x0 SWAP1 DUP2 MSTORE PUSH1 0x4 PUSH1 0x20 MSTORE PUSH1 0x40 SWAP1 KECCAK256 SLOAD PUSH1 0xFF AND PUSH2 0x3FE JUMPI PUSH1 0x40 MLOAD PUSH3 0x461BCD PUSH1 0xE5 SHL DUP2 MSTORE PUSH1 0x4 ADD PUSH2 0x251 SWAP1 PUSH2 0xFA0 JUMP JUMPDEST PUSH1 0x1 PUSH1 0x2 SLOAD PUSH1 0xFF AND PUSH1 0x5 DUP2 GT ISZERO PUSH2 0x417 JUMPI PUSH2 0x417 PUSH2 0xEC3 JUMP JUMPDEST EQ PUSH2 0x464 JUMPI PUSH1 0x40 MLOAD PUSH3 0x461BCD PUSH1 0xE5 SHL DUP2 MSTORE PUSH1 0x20 PUSH1 0x4 DUP3 ADD MSTORE PUSH1 0x1D PUSH1 0x24 DUP3 ADD MSTORE PUSH32 0x50726F706F73616C7320617265206E6F7420616C6C6F77656420796574000000 PUSH1 0x44 DUP3 ADD MSTORE PUSH1 0x64 ADD PUSH2 0x251 JUMP JUMPDEST PUSH1 0x40 MLOAD PUSH1 0x20 ADD PUSH2 0x47F SWAP1 PUSH1 0x20 DUP1 DUP3 MSTORE PUSH1 0x0 SWAP1 DUP3 ADD MSTORE PUSH1 0x40 ADD SWAP1 JUMP JUMPDEST PUSH1 0x40 MLOAD PUSH1 0x20 DUP2 DUP4 SUB SUB DUP2 MSTORE SWAP1 PUSH1 0x40 MSTORE DUP1 MLOAD SWAP1 PUSH1 0x20 ADD KECCAK256 DUP3 DUP3 PUSH1 0x40 MLOAD PUSH1 0x20 ADD PUSH2 0x4A8 SWAP3 SWAP2 SWAP1 PUSH2 0x1052 JUMP JUMPDEST PUSH1 0x40 MLOAD PUSH1 0x20 DUP2 DUP4 SUB SUB DUP2 MSTORE SWAP1 PUSH1 0x40 MSTORE DUP1 MLOAD SWAP1 PUSH1 0x20 ADD KECCAK256 SUB PUSH2 0x517 JUMPI PUSH1 0x40 MLOAD PUSH3 0x461BCD PUSH1 0xE5 SHL DUP2 MSTORE PUSH1 0x20 PUSH1 0x4 DUP3 ADD MSTORE PUSH1 0x23 PUSH1 0x24 DUP3 ADD MSTORE PUSH32 0x566F7573206E6520706F7576657A20706173206E65207269656E2070726F706F PUSH1 0x44 DUP3 ADD MSTORE PUSH3 0x39B2B9 PUSH1 0xE9 SHL PUSH1 0x64 DUP3 ADD MSTORE PUSH1 0x84 ADD PUSH2 0x251 JUMP JUMPDEST PUSH1 0x40 DUP1 MLOAD DUP1 DUP3 ADD SWAP1 SWAP2 MSTORE PUSH1 0x60 DUP2 MSTORE PUSH1 0x0 PUSH1 0x20 DUP3 ADD MSTORE DUP3 DUP3 DUP1 DUP1 PUSH1 0x1F ADD PUSH1 0x20 DUP1 SWAP2 DIV MUL PUSH1 0x20 ADD PUSH1 0x40 MLOAD SWAP1 DUP2 ADD PUSH1 0x40 MSTORE DUP1 SWAP4 SWAP3 SWAP2 SWAP1 DUP2 DUP2 MSTORE PUSH1 0x20 ADD DUP4 DUP4 DUP1 DUP3 DUP5 CALLDATACOPY PUSH1 0x0 SWAP3 ADD DUP3 SWAP1 MSTORE POP SWAP4 DUP6 MSTORE POP POP PUSH1 0x3 DUP1 SLOAD PUSH1 0x1 DUP2 ADD DUP3 SSTORE SWAP3 MSTORE POP DUP2 MLOAD DUP3 SWAP2 PUSH1 0x2 MUL PUSH32 0xC2575A0E9E593C00F959F8C92F12DB2869C3395A3B0502D05E2516446F71F85B ADD SWAP1 DUP2 SWAP1 PUSH2 0x5A6 SWAP1 DUP3 PUSH2 0x1120 JUMP JUMPDEST POP PUSH1 0x20 SWAP2 SWAP1 SWAP2 ADD MLOAD PUSH1 0x1 SWAP2 DUP3 ADD SSTORE PUSH1 0x3 SLOAD PUSH32 0x92E393E9B54E2F801D3EA4BEB0C5E71A21CC34A5D34B77D0FB8A3AA1650DC18F SWAP2 PUSH2 0x5E2 SWAP2 PUSH2 0x11E0 JUMP JUMPDEST PUSH1 0x40 MLOAD SWAP1 DUP2 MSTORE PUSH1 0x20 ADD PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 LOG1 POP POP POP JUMP JUMPDEST PUSH2 0x600 PUSH2 0xD8E JUMP JUMPDEST PUSH1 0x4 PUSH1 0x2 SLOAD PUSH1 0xFF AND PUSH1 0x5 DUP2 GT ISZERO PUSH2 0x619 JUMPI PUSH2 0x619 PUSH2 0xEC3 JUMP JUMPDEST EQ PUSH2 0x679 JUMPI PUSH1 0x40 MLOAD PUSH3 0x461BCD PUSH1 0xE5 SHL DUP2 MSTORE PUSH1 0x20 PUSH1 0x4 DUP3 ADD MSTORE PUSH1 0x2A PUSH1 0x24 DUP3 ADD MSTORE PUSH32 0x43757272656E7420737461747573206973206E6F7420766F74696E6720736573 PUSH1 0x44 DUP3 ADD MSTORE PUSH10 0x1CDA5BDB88195B991959 PUSH1 0xB2 SHL PUSH1 0x64 DUP3 ADD MSTORE PUSH1 0x84 ADD PUSH2 0x251 JUMP JUMPDEST PUSH1 0x0 DUP1 JUMPDEST PUSH1 0x3 SLOAD DUP2 LT ISZERO PUSH2 0x6ED JUMPI PUSH1 0x3 DUP3 DUP2 SLOAD DUP2 LT PUSH2 0x69A JUMPI PUSH2 0x69A PUSH2 0x100D JUMP JUMPDEST SWAP1 PUSH1 0x0 MSTORE PUSH1 0x20 PUSH1 0x0 KECCAK256 SWAP1 PUSH1 0x2 MUL ADD PUSH1 0x1 ADD SLOAD PUSH1 0x3 DUP3 DUP2 SLOAD DUP2 LT PUSH2 0x6BF JUMPI PUSH2 0x6BF PUSH2 0x100D JUMP JUMPDEST SWAP1 PUSH1 0x0 MSTORE PUSH1 0x20 PUSH1 0x0 KECCAK256 SWAP1 PUSH1 0x2 MUL ADD PUSH1 0x1 ADD SLOAD GT ISZERO PUSH2 0x6DB JUMPI DUP1 SWAP2 POP JUMPDEST DUP1 PUSH2 0x6E5 DUP2 PUSH2 0x1039 JUMP JUMPDEST SWAP2 POP POP PUSH2 0x67D JUMP JUMPDEST POP PUSH1 0x1 DUP2 SWAP1 SSTORE PUSH1 0x2 DUP1 SLOAD PUSH1 0xFF NOT AND PUSH1 0x5 SWAP1 DUP2 OR SWAP1 SWAP2 SSTORE PUSH1 0x40 MLOAD PUSH1 0x0 DUP1 MLOAD PUSH1 0x20 PUSH2 0x120F DUP4 CODECOPY DUP2 MLOAD SWAP2 MSTORE SWAP2 PUSH2 0x3C4 SWAP2 PUSH1 0x4 SWAP2 SWAP1 PUSH2 0x11F3 JUMP JUMPDEST PUSH2 0x72B PUSH2 0xD8E JUMP JUMPDEST PUSH2 0x735 PUSH1 0x0 PUSH2 0xDE8 JUMP JUMPDEST JUMP JUMPDEST PUSH1 0x40 DUP1 MLOAD DUP1 DUP3 ADD SWAP1 SWAP2 MSTORE PUSH1 0x60 DUP2 MSTORE PUSH1 0x0 PUSH1 0x20 DUP3 ADD MSTORE CALLER PUSH1 0x0 SWAP1 DUP2 MSTORE PUSH1 0x4 PUSH1 0x20 MSTORE PUSH1 0x40 SWAP1 KECCAK256 SLOAD PUSH1 0xFF AND PUSH2 0x77B JUMPI PUSH1 0x40 MLOAD PUSH3 0x461BCD PUSH1 0xE5 SHL DUP2 MSTORE PUSH1 0x4 ADD PUSH2 0x251 SWAP1 PUSH2 0xFA0 JUMP JUMPDEST PUSH1 0x3 DUP3 DUP2 SLOAD DUP2 LT PUSH2 0x78E JUMPI PUSH2 0x78E PUSH2 0x100D JUMP JUMPDEST SWAP1 PUSH1 0x0 MSTORE PUSH1 0x20 PUSH1 0x0 KECCAK256 SWAP1 PUSH1 0x2 MUL ADD PUSH1 0x40 MLOAD DUP1 PUSH1 0x40 ADD PUSH1 0x40 MSTORE SWAP1 DUP2 PUSH1 0x0 DUP3 ADD DUP1 SLOAD PUSH2 0x7B7 SWAP1 PUSH2 0x1097 JUMP JUMPDEST DUP1 PUSH1 0x1F ADD PUSH1 0x20 DUP1 SWAP2 DIV MUL PUSH1 0x20 ADD PUSH1 0x40 MLOAD SWAP1 DUP2 ADD PUSH1 0x40 MSTORE DUP1 SWAP3 SWAP2 SWAP1 DUP2 DUP2 MSTORE PUSH1 0x20 ADD DUP3 DUP1 SLOAD PUSH2 0x7E3 SWAP1 PUSH2 0x1097 JUMP JUMPDEST DUP1 ISZERO PUSH2 0x830 JUMPI DUP1 PUSH1 0x1F LT PUSH2 0x805 JUMPI PUSH2 0x100 DUP1 DUP4 SLOAD DIV MUL DUP4 MSTORE SWAP2 PUSH1 0x20 ADD SWAP2 PUSH2 0x830 JUMP JUMPDEST DUP3 ADD SWAP2 SWAP1 PUSH1 0x0 MSTORE PUSH1 0x20 PUSH1 0x0 KECCAK256 SWAP1 JUMPDEST DUP2 SLOAD DUP2 MSTORE SWAP1 PUSH1 0x1 ADD SWAP1 PUSH1 0x20 ADD DUP1 DUP4 GT PUSH2 0x813 JUMPI DUP3 SWAP1 SUB PUSH1 0x1F AND DUP3 ADD SWAP2 JUMPDEST POP POP POP POP POP DUP2 MSTORE PUSH1 0x20 ADD PUSH1 0x1 DUP3 ADD SLOAD DUP2 MSTORE POP POP SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH2 0x852 PUSH2 0xD8E JUMP JUMPDEST PUSH1 0x3 PUSH1 0x2 SLOAD PUSH1 0xFF AND PUSH1 0x5 DUP2 GT ISZERO PUSH2 0x86B JUMPI PUSH2 0x86B PUSH2 0xEC3 JUMP JUMPDEST EQ PUSH2 0x888 JUMPI PUSH1 0x40 MLOAD PUSH3 0x461BCD PUSH1 0xE5 SHL DUP2 MSTORE PUSH1 0x4 ADD PUSH2 0x251 SWAP1 PUSH2 0xFCC JUMP JUMPDEST PUSH1 0x2 DUP1 SLOAD PUSH1 0xFF NOT AND PUSH1 0x4 SWAP1 DUP2 OR SWAP1 SWAP2 SSTORE PUSH1 0x40 MLOAD PUSH1 0x0 DUP1 MLOAD PUSH1 0x20 PUSH2 0x120F DUP4 CODECOPY DUP2 MLOAD SWAP2 MSTORE SWAP2 PUSH2 0x8B8 SWAP2 PUSH1 0x3 SWAP2 SWAP1 PUSH2 0x11F3 JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 LOG1 JUMP JUMPDEST PUSH2 0x8CA PUSH2 0xD8E JUMP JUMPDEST PUSH1 0x0 PUSH1 0x2 SLOAD PUSH1 0xFF AND PUSH1 0x5 DUP2 GT ISZERO PUSH2 0x8E3 JUMPI PUSH2 0x8E3 PUSH2 0xEC3 JUMP JUMPDEST EQ PUSH2 0x942 JUMPI PUSH1 0x40 MLOAD PUSH3 0x461BCD PUSH1 0xE5 SHL DUP2 MSTORE PUSH1 0x20 PUSH1 0x4 DUP3 ADD MSTORE PUSH1 0x29 PUSH1 0x24 DUP3 ADD MSTORE PUSH32 0x5265676973746572696E672070726F706F73616C732063616E74206265207374 PUSH1 0x44 DUP3 ADD MSTORE PUSH9 0x6172746564206E6F77 PUSH1 0xB8 SHL PUSH1 0x64 DUP3 ADD MSTORE PUSH1 0x84 ADD PUSH2 0x251 JUMP JUMPDEST PUSH1 0x2 DUP1 SLOAD PUSH1 0xFF NOT AND PUSH1 0x1 SWAP1 DUP2 OR DUP3 SSTORE PUSH1 0x40 DUP1 MLOAD DUP1 DUP3 ADD DUP3 MSTORE PUSH1 0x60 DUP2 MSTORE PUSH1 0x0 PUSH1 0x20 DUP1 DUP4 ADD DUP3 SWAP1 MSTORE DUP4 MLOAD DUP1 DUP6 ADD SWAP1 SWAP5 MSTORE PUSH1 0x7 DUP5 MSTORE PUSH7 0x47454E45534953 PUSH1 0xC8 SHL SWAP1 DUP5 ADD MSTORE SWAP2 DUP2 MSTORE PUSH1 0x3 DUP1 SLOAD SWAP4 DUP5 ADD DUP2 SSTORE SWAP1 SWAP2 MSTORE DUP1 MLOAD SWAP1 SWAP3 DUP4 SWAP3 PUSH32 0xC2575A0E9E593C00F959F8C92F12DB2869C3395A3B0502D05E2516446F71F85B SWAP2 MUL ADD SWAP1 DUP2 SWAP1 PUSH2 0x9C9 SWAP1 DUP3 PUSH2 0x1120 JUMP JUMPDEST POP PUSH1 0x20 DUP3 ADD MLOAD DUP2 PUSH1 0x1 ADD SSTORE POP POP PUSH1 0x0 DUP1 MLOAD PUSH1 0x20 PUSH2 0x120F DUP4 CODECOPY DUP2 MLOAD SWAP2 MSTORE PUSH1 0x0 PUSH1 0x1 PUSH1 0x40 MLOAD PUSH2 0x3C4 SWAP3 SWAP2 SWAP1 PUSH2 0x11F3 JUMP JUMPDEST PUSH2 0x9FF PUSH2 0xD8E JUMP JUMPDEST PUSH1 0x1 PUSH1 0x2 SLOAD PUSH1 0xFF AND PUSH1 0x5 DUP2 GT ISZERO PUSH2 0xA18 JUMPI PUSH2 0xA18 PUSH2 0xEC3 JUMP JUMPDEST EQ PUSH2 0xA76 JUMPI PUSH1 0x40 MLOAD PUSH3 0x461BCD PUSH1 0xE5 SHL DUP2 MSTORE PUSH1 0x20 PUSH1 0x4 DUP3 ADD MSTORE PUSH1 0x28 PUSH1 0x24 DUP3 ADD MSTORE PUSH32 0x5265676973746572696E672070726F706F73616C7320686176656E7420737461 PUSH1 0x44 DUP3 ADD MSTORE PUSH8 0x1C9D1959081E595D PUSH1 0xC2 SHL PUSH1 0x64 DUP3 ADD MSTORE PUSH1 0x84 ADD PUSH2 0x251 JUMP JUMPDEST PUSH1 0x2 DUP1 SLOAD PUSH1 0xFF NOT AND DUP2 OR DUP2 SSTORE PUSH1 0x40 MLOAD PUSH1 0x0 DUP1 MLOAD PUSH1 0x20 PUSH2 0x120F DUP4 CODECOPY DUP2 MLOAD SWAP2 MSTORE SWAP2 PUSH2 0x8B8 SWAP2 PUSH1 0x1 SWAP2 SWAP1 PUSH2 0x11F3 JUMP JUMPDEST PUSH1 0x40 DUP1 MLOAD PUSH1 0x60 DUP2 ADD DUP3 MSTORE PUSH1 0x0 DUP1 DUP3 MSTORE PUSH1 0x20 DUP1 DUP4 ADD DUP3 SWAP1 MSTORE DUP3 DUP5 ADD DUP3 SWAP1 MSTORE CALLER DUP3 MSTORE PUSH1 0x4 SWAP1 MSTORE SWAP2 SWAP1 SWAP2 KECCAK256 SLOAD PUSH1 0xFF AND PUSH2 0xAEA JUMPI PUSH1 0x40 MLOAD PUSH3 0x461BCD PUSH1 0xE5 SHL DUP2 MSTORE PUSH1 0x4 ADD PUSH2 0x251 SWAP1 PUSH2 0xFA0 JUMP JUMPDEST POP PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB AND PUSH1 0x0 SWAP1 DUP2 MSTORE PUSH1 0x4 PUSH1 0x20 SWAP1 DUP2 MSTORE PUSH1 0x40 SWAP2 DUP3 SWAP1 KECCAK256 DUP3 MLOAD PUSH1 0x60 DUP2 ADD DUP5 MSTORE DUP2 SLOAD PUSH1 0xFF DUP1 DUP3 AND ISZERO ISZERO DUP4 MSTORE PUSH2 0x100 SWAP1 SWAP2 DIV AND ISZERO ISZERO SWAP3 DUP2 ADD SWAP3 SWAP1 SWAP3 MSTORE PUSH1 0x1 ADD SLOAD SWAP2 DUP2 ADD SWAP2 SWAP1 SWAP2 MSTORE SWAP1 JUMP JUMPDEST PUSH2 0xB3F PUSH2 0xD8E JUMP JUMPDEST PUSH1 0x2 DUP1 SLOAD PUSH1 0xFF AND PUSH1 0x5 DUP2 GT ISZERO PUSH2 0xB57 JUMPI PUSH2 0xB57 PUSH2 0xEC3 JUMP JUMPDEST EQ PUSH2 0xBB8 JUMPI PUSH1 0x40 MLOAD PUSH3 0x461BCD PUSH1 0xE5 SHL DUP2 MSTORE PUSH1 0x20 PUSH1 0x4 DUP3 ADD MSTORE PUSH1 0x2B PUSH1 0x24 DUP3 ADD MSTORE PUSH32 0x5265676973746572696E672070726F706F73616C73207068617365206973206E PUSH1 0x44 DUP3 ADD MSTORE PUSH11 0x1BDD08199A5B9A5CDA1959 PUSH1 0xAA SHL PUSH1 0x64 DUP3 ADD MSTORE PUSH1 0x84 ADD PUSH2 0x251 JUMP JUMPDEST PUSH1 0x2 DUP1 SLOAD PUSH1 0xFF NOT AND PUSH1 0x3 SWAP1 DUP2 OR DUP3 SSTORE PUSH1 0x40 MLOAD PUSH1 0x0 DUP1 MLOAD PUSH1 0x20 PUSH2 0x120F DUP4 CODECOPY DUP2 MLOAD SWAP2 MSTORE SWAP3 PUSH2 0x8B8 SWAP3 SWAP1 SWAP2 PUSH2 0x11F3 JUMP JUMPDEST PUSH2 0xBED PUSH2 0xD8E JUMP JUMPDEST PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB DUP2 AND PUSH2 0xC52 JUMPI PUSH1 0x40 MLOAD PUSH3 0x461BCD PUSH1 0xE5 SHL DUP2 MSTORE PUSH1 0x20 PUSH1 0x4 DUP3 ADD MSTORE PUSH1 0x26 PUSH1 0x24 DUP3 ADD MSTORE PUSH32 0x4F776E61626C653A206E6577206F776E657220697320746865207A65726F2061 PUSH1 0x44 DUP3 ADD MSTORE PUSH6 0x646472657373 PUSH1 0xD0 SHL PUSH1 0x64 DUP3 ADD MSTORE PUSH1 0x84 ADD PUSH2 0x251 JUMP JUMPDEST PUSH2 0xC5B DUP2 PUSH2 0xDE8 JUMP JUMPDEST POP JUMP JUMPDEST PUSH2 0xC66 PUSH2 0xD8E JUMP JUMPDEST PUSH1 0x0 PUSH1 0x2 SLOAD PUSH1 0xFF AND PUSH1 0x5 DUP2 GT ISZERO PUSH2 0xC7F JUMPI PUSH2 0xC7F PUSH2 0xEC3 JUMP JUMPDEST EQ PUSH2 0xCD8 JUMPI PUSH1 0x40 MLOAD PUSH3 0x461BCD PUSH1 0xE5 SHL DUP2 MSTORE PUSH1 0x20 PUSH1 0x4 DUP3 ADD MSTORE PUSH1 0x23 PUSH1 0x24 DUP3 ADD MSTORE PUSH32 0x566F7465727320726567697374726174696F6E206973206E6F74206F70656E20 PUSH1 0x44 DUP3 ADD MSTORE PUSH3 0x1E595D PUSH1 0xEA SHL PUSH1 0x64 DUP3 ADD MSTORE PUSH1 0x84 ADD PUSH2 0x251 JUMP JUMPDEST PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB DUP2 AND PUSH1 0x0 SWAP1 DUP2 MSTORE PUSH1 0x4 PUSH1 0x20 MSTORE PUSH1 0x40 SWAP1 KECCAK256 SLOAD PUSH1 0xFF AND ISZERO ISZERO PUSH1 0x1 SUB PUSH2 0xD3A JUMPI PUSH1 0x40 MLOAD PUSH3 0x461BCD PUSH1 0xE5 SHL DUP2 MSTORE PUSH1 0x20 PUSH1 0x4 DUP3 ADD MSTORE PUSH1 0x12 PUSH1 0x24 DUP3 ADD MSTORE PUSH18 0x105B1C9958591E481C9959DA5CDD195C9959 PUSH1 0x72 SHL PUSH1 0x44 DUP3 ADD MSTORE PUSH1 0x64 ADD PUSH2 0x251 JUMP JUMPDEST PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB DUP2 AND PUSH1 0x0 DUP2 DUP2 MSTORE PUSH1 0x4 PUSH1 0x20 SWAP1 DUP2 MSTORE PUSH1 0x40 SWAP2 DUP3 SWAP1 KECCAK256 DUP1 SLOAD PUSH1 0xFF NOT AND PUSH1 0x1 OR SWAP1 SSTORE SWAP1 MLOAD SWAP2 DUP3 MSTORE PUSH32 0xB6BE2187D059CC2A55FE29E0E503B566E1E0F8C8780096E185429350ACFFD3DD SWAP2 ADD PUSH2 0x3C4 JUMP JUMPDEST PUSH1 0x0 SLOAD PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB AND CALLER EQ PUSH2 0x735 JUMPI PUSH1 0x40 MLOAD PUSH3 0x461BCD PUSH1 0xE5 SHL DUP2 MSTORE PUSH1 0x20 PUSH1 0x4 DUP3 ADD DUP2 SWAP1 MSTORE PUSH1 0x24 DUP3 ADD MSTORE PUSH32 0x4F776E61626C653A2063616C6C6572206973206E6F7420746865206F776E6572 PUSH1 0x44 DUP3 ADD MSTORE PUSH1 0x64 ADD PUSH2 0x251 JUMP JUMPDEST PUSH1 0x0 DUP1 SLOAD PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB DUP4 DUP2 AND PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB NOT DUP4 AND DUP2 OR DUP5 SSTORE PUSH1 0x40 MLOAD SWAP2 SWAP1 SWAP3 AND SWAP3 DUP4 SWAP2 PUSH32 0x8BE0079C531659141344CD1FD0A4F28419497F9722A3DAAFE3B4186F6B6457E0 SWAP2 SWAP1 LOG3 POP POP JUMP JUMPDEST PUSH1 0x0 PUSH1 0x20 DUP3 DUP5 SUB SLT ISZERO PUSH2 0xE4A JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST POP CALLDATALOAD SWAP2 SWAP1 POP JUMP JUMPDEST PUSH1 0x0 DUP1 PUSH1 0x20 DUP4 DUP6 SUB SLT ISZERO PUSH2 0xE64 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST DUP3 CALLDATALOAD PUSH8 0xFFFFFFFFFFFFFFFF DUP1 DUP3 GT ISZERO PUSH2 0xE7C JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST DUP2 DUP6 ADD SWAP2 POP DUP6 PUSH1 0x1F DUP4 ADD SLT PUSH2 0xE90 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST DUP2 CALLDATALOAD DUP2 DUP2 GT ISZERO PUSH2 0xE9F JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST DUP7 PUSH1 0x20 DUP3 DUP6 ADD ADD GT ISZERO PUSH2 0xEB1 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST PUSH1 0x20 SWAP3 SWAP1 SWAP3 ADD SWAP7 SWAP2 SWAP6 POP SWAP1 SWAP4 POP POP POP POP JUMP JUMPDEST PUSH4 0x4E487B71 PUSH1 0xE0 SHL PUSH1 0x0 MSTORE PUSH1 0x21 PUSH1 0x4 MSTORE PUSH1 0x24 PUSH1 0x0 REVERT JUMPDEST PUSH1 0x6 DUP2 LT PUSH2 0xEF7 JUMPI PUSH4 0x4E487B71 PUSH1 0xE0 SHL PUSH1 0x0 MSTORE PUSH1 0x21 PUSH1 0x4 MSTORE PUSH1 0x24 PUSH1 0x0 REVERT JUMPDEST SWAP1 MSTORE JUMP JUMPDEST PUSH1 0x20 DUP2 ADD PUSH2 0xF09 DUP3 DUP5 PUSH2 0xED9 JUMP JUMPDEST SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH1 0x0 PUSH1 0x20 DUP1 DUP4 MSTORE DUP4 MLOAD PUSH1 0x40 DUP3 DUP6 ADD MSTORE DUP1 MLOAD DUP1 PUSH1 0x60 DUP7 ADD MSTORE PUSH1 0x0 JUMPDEST DUP2 DUP2 LT ISZERO PUSH2 0xF45 JUMPI DUP3 DUP2 ADD DUP5 ADD MLOAD DUP7 DUP3 ADD PUSH1 0x80 ADD MSTORE DUP4 ADD PUSH2 0xF29 JUMP JUMPDEST POP PUSH1 0x0 PUSH1 0x80 DUP3 DUP8 ADD ADD MSTORE DUP3 DUP7 ADD MLOAD PUSH1 0x40 DUP7 ADD MSTORE PUSH1 0x80 PUSH1 0x1F NOT PUSH1 0x1F DUP4 ADD AND DUP7 ADD ADD SWAP4 POP POP POP POP SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH1 0x0 PUSH1 0x20 DUP3 DUP5 SUB SLT ISZERO PUSH2 0xF82 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST DUP2 CALLDATALOAD PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB DUP2 AND DUP2 EQ PUSH2 0xF99 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST SWAP4 SWAP3 POP POP POP JUMP JUMPDEST PUSH1 0x20 DUP1 DUP3 MSTORE PUSH1 0x12 SWAP1 DUP3 ADD MSTORE PUSH18 0x2CB7BA93B932903737BA1030903B37BA32B9 PUSH1 0x71 SHL PUSH1 0x40 DUP3 ADD MSTORE PUSH1 0x60 ADD SWAP1 JUMP JUMPDEST PUSH1 0x20 DUP1 DUP3 MSTORE PUSH1 0x21 SWAP1 DUP3 ADD MSTORE PUSH32 0x566F74696E672073657373696F6E20686176656E742073746172746564207965 PUSH1 0x40 DUP3 ADD MSTORE PUSH1 0x1D PUSH1 0xFA SHL PUSH1 0x60 DUP3 ADD MSTORE PUSH1 0x80 ADD SWAP1 JUMP JUMPDEST PUSH4 0x4E487B71 PUSH1 0xE0 SHL PUSH1 0x0 MSTORE PUSH1 0x32 PUSH1 0x4 MSTORE PUSH1 0x24 PUSH1 0x0 REVERT JUMPDEST PUSH4 0x4E487B71 PUSH1 0xE0 SHL PUSH1 0x0 MSTORE PUSH1 0x11 PUSH1 0x4 MSTORE PUSH1 0x24 PUSH1 0x0 REVERT JUMPDEST PUSH1 0x0 PUSH1 0x1 DUP3 ADD PUSH2 0x104B JUMPI PUSH2 0x104B PUSH2 0x1023 JUMP JUMPDEST POP PUSH1 0x1 ADD SWAP1 JUMP JUMPDEST PUSH1 0x20 DUP2 MSTORE DUP2 PUSH1 0x20 DUP3 ADD MSTORE DUP2 DUP4 PUSH1 0x40 DUP4 ADD CALLDATACOPY PUSH1 0x0 DUP2 DUP4 ADD PUSH1 0x40 SWAP1 DUP2 ADD SWAP2 SWAP1 SWAP2 MSTORE PUSH1 0x1F SWAP1 SWAP3 ADD PUSH1 0x1F NOT AND ADD ADD SWAP2 SWAP1 POP JUMP JUMPDEST PUSH4 0x4E487B71 PUSH1 0xE0 SHL PUSH1 0x0 MSTORE PUSH1 0x41 PUSH1 0x4 MSTORE PUSH1 0x24 PUSH1 0x0 REVERT JUMPDEST PUSH1 0x1 DUP2 DUP2 SHR SWAP1 DUP3 AND DUP1 PUSH2 0x10AB JUMPI PUSH1 0x7F DUP3 AND SWAP2 POP JUMPDEST PUSH1 0x20 DUP3 LT DUP2 SUB PUSH2 0x10CB JUMPI PUSH4 0x4E487B71 PUSH1 0xE0 SHL PUSH1 0x0 MSTORE PUSH1 0x22 PUSH1 0x4 MSTORE PUSH1 0x24 PUSH1 0x0 REVERT JUMPDEST POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH1 0x1F DUP3 GT ISZERO PUSH2 0x111B JUMPI PUSH1 0x0 DUP2 DUP2 MSTORE PUSH1 0x20 DUP2 KECCAK256 PUSH1 0x1F DUP6 ADD PUSH1 0x5 SHR DUP2 ADD PUSH1 0x20 DUP7 LT ISZERO PUSH2 0x10F8 JUMPI POP DUP1 JUMPDEST PUSH1 0x1F DUP6 ADD PUSH1 0x5 SHR DUP3 ADD SWAP2 POP JUMPDEST DUP2 DUP2 LT ISZERO PUSH2 0x1117 JUMPI DUP3 DUP2 SSTORE PUSH1 0x1 ADD PUSH2 0x1104 JUMP JUMPDEST POP POP POP JUMPDEST POP POP POP JUMP JUMPDEST DUP2 MLOAD PUSH8 0xFFFFFFFFFFFFFFFF DUP2 GT ISZERO PUSH2 0x113A JUMPI PUSH2 0x113A PUSH2 0x1081 JUMP JUMPDEST PUSH2 0x114E DUP2 PUSH2 0x1148 DUP5 SLOAD PUSH2 0x1097 JUMP JUMPDEST DUP5 PUSH2 0x10D1 JUMP JUMPDEST PUSH1 0x20 DUP1 PUSH1 0x1F DUP4 GT PUSH1 0x1 DUP2 EQ PUSH2 0x1183 JUMPI PUSH1 0x0 DUP5 ISZERO PUSH2 0x116B JUMPI POP DUP6 DUP4 ADD MLOAD JUMPDEST PUSH1 0x0 NOT PUSH1 0x3 DUP7 SWAP1 SHL SHR NOT AND PUSH1 0x1 DUP6 SWAP1 SHL OR DUP6 SSTORE PUSH2 0x1117 JUMP JUMPDEST PUSH1 0x0 DUP6 DUP2 MSTORE PUSH1 0x20 DUP2 KECCAK256 PUSH1 0x1F NOT DUP7 AND SWAP2 JUMPDEST DUP3 DUP2 LT ISZERO PUSH2 0x11B2 JUMPI DUP9 DUP7 ADD MLOAD DUP3 SSTORE SWAP5 DUP5 ADD SWAP5 PUSH1 0x1 SWAP1 SWAP2 ADD SWAP1 DUP5 ADD PUSH2 0x1193 JUMP JUMPDEST POP DUP6 DUP3 LT ISZERO PUSH2 0x11D0 JUMPI DUP8 DUP6 ADD MLOAD PUSH1 0x0 NOT PUSH1 0x3 DUP9 SWAP1 SHL PUSH1 0xF8 AND SHR NOT AND DUP2 SSTORE JUMPDEST POP POP POP POP POP PUSH1 0x1 SWAP1 DUP2 SHL ADD SWAP1 SSTORE POP JUMP JUMPDEST DUP2 DUP2 SUB DUP2 DUP2 GT ISZERO PUSH2 0xF09 JUMPI PUSH2 0xF09 PUSH2 0x1023 JUMP JUMPDEST PUSH1 0x40 DUP2 ADD PUSH2 0x1201 DUP3 DUP6 PUSH2 0xED9 JUMP JUMPDEST PUSH2 0xF99 PUSH1 0x20 DUP4 ADD DUP5 PUSH2 0xED9 JUMP INVALID EXP SWAP8 LOG4 0xEE GASLIMIT PUSH22 0x1E2ABF3E4FC8946939630B11B371EA8AE39CCDC3056E SWAP9 CREATE2 0xCC EXTCODEHASH LOG2 PUSH5 0x6970667358 0x22 SLT KECCAK256 0xC1 0xBA PUSH7 0xBD644F986587D9 DUP7 0xF8 LOG3 0xBF REVERT PUSH14 0x7C3299C666D7DFB9F945861BBD0 ADDRESS 0xC7 PUSH5 0x736F6C6343 STOP ADDMOD GT STOP CALLER ",
              "sourceMap": "112:5119:4:-:0;;;;;;;;;;;;-1:-1:-1;936:32:0;719:10:1;936:18:0;:32::i;:::-;112:5119:4;;2433:187:0;2506:16;2525:6;;-1:-1:-1;;;;;2541:17:0;;;-1:-1:-1;;;;;;2541:17:0;;;;;;2573:40;;2525:6;;;;;;;2573:40;;2506:16;2573:40;2496:124;2433:187;:::o;112:5119:4:-;;;;;;;"
            },
            "deployedBytecode": {
              "functionDebugData": {
                "@_checkOwner_54": {
                  "entryPoint": 3470,
                  "id": 54,
                  "parameterSlots": 0,
                  "returnSlots": 0
                },
                "@_msgSender_124": {
                  "entryPoint": null,
                  "id": 124,
                  "parameterSlots": 0,
                  "returnSlots": 1
                },
                "@_transferOwnership_111": {
                  "entryPoint": 3560,
                  "id": 111,
                  "parameterSlots": 1,
                  "returnSlots": 0
                },
                "@addProposal_1517": {
                  "entryPoint": 975,
                  "id": 1517,
                  "parameterSlots": 2,
                  "returnSlots": 0
                },
                "@addVoter_1461": {
                  "entryPoint": 3166,
                  "id": 1461,
                  "parameterSlots": 1,
                  "returnSlots": 0
                },
                "@endProposalsRegistering_1648": {
                  "entryPoint": 2551,
                  "id": 1648,
                  "parameterSlots": 0,
                  "returnSlots": 0
                },
                "@endVotingSession_1700": {
                  "entryPoint": 2122,
                  "id": 1700,
                  "parameterSlots": 0,
                  "returnSlots": 0
                },
                "@getOneProposal_1424": {
                  "entryPoint": 1847,
                  "id": 1424,
                  "parameterSlots": 1,
                  "returnSlots": 1
                },
                "@getVoter_1409": {
                  "entryPoint": 2722,
                  "id": 1409,
                  "parameterSlots": 1,
                  "returnSlots": 1
                },
                "@owner_40": {
                  "entryPoint": null,
                  "id": 40,
                  "parameterSlots": 0,
                  "returnSlots": 1
                },
                "@renounceOwnership_68": {
                  "entryPoint": 1827,
                  "id": 68,
                  "parameterSlots": 0,
                  "returnSlots": 0
                },
                "@setVote_1580": {
                  "entryPoint": 546,
                  "id": 1580,
                  "parameterSlots": 1,
                  "returnSlots": 0
                },
                "@startProposalsRegistering_1622": {
                  "entryPoint": 2242,
                  "id": 1622,
                  "parameterSlots": 0,
                  "returnSlots": 0
                },
                "@startVotingSession_1674": {
                  "entryPoint": 2871,
                  "id": 1674,
                  "parameterSlots": 0,
                  "returnSlots": 0
                },
                "@tallyVotes_1761": {
                  "entryPoint": 1528,
                  "id": 1761,
                  "parameterSlots": 0,
                  "returnSlots": 0
                },
                "@transferOwnership_91": {
                  "entryPoint": 3045,
                  "id": 91,
                  "parameterSlots": 1,
                  "returnSlots": 0
                },
                "@winningProposalID_1328": {
                  "entryPoint": null,
                  "id": 1328,
                  "parameterSlots": 0,
                  "returnSlots": 0
                },
                "@workflowStatus_1350": {
                  "entryPoint": null,
                  "id": 1350,
                  "parameterSlots": 0,
                  "returnSlots": 0
                },
                "abi_decode_tuple_t_address": {
                  "entryPoint": 3952,
                  "id": null,
                  "parameterSlots": 2,
                  "returnSlots": 1
                },
                "abi_decode_tuple_t_string_calldata_ptr": {
                  "entryPoint": 3665,
                  "id": null,
                  "parameterSlots": 2,
                  "returnSlots": 2
                },
                "abi_decode_tuple_t_uint256": {
                  "entryPoint": 3640,
                  "id": null,
                  "parameterSlots": 2,
                  "returnSlots": 1
                },
                "abi_encode_enum_WorkflowStatus": {
                  "entryPoint": 3801,
                  "id": null,
                  "parameterSlots": 2,
                  "returnSlots": 0
                },
                "abi_encode_tuple_t_address__to_t_address__fromStack_reversed": {
                  "entryPoint": null,
                  "id": null,
                  "parameterSlots": 2,
                  "returnSlots": 1
                },
                "abi_encode_tuple_t_address_t_uint256__to_t_address_t_uint256__fromStack_reversed": {
                  "entryPoint": null,
                  "id": null,
                  "parameterSlots": 3,
                  "returnSlots": 1
                },
                "abi_encode_tuple_t_enum$_WorkflowStatus_$1347__to_t_uint8__fromStack_reversed": {
                  "entryPoint": 3835,
                  "id": null,
                  "parameterSlots": 2,
                  "returnSlots": 1
                },
                "abi_encode_tuple_t_enum$_WorkflowStatus_$1347_t_enum$_WorkflowStatus_$1347__to_t_uint8_t_uint8__fromStack_reversed": {
                  "entryPoint": 4595,
                  "id": null,
                  "parameterSlots": 3,
                  "returnSlots": 1
                },
                "abi_encode_tuple_t_string_calldata_ptr__to_t_string_memory_ptr__fromStack_reversed": {
                  "entryPoint": 4178,
                  "id": null,
                  "parameterSlots": 3,
                  "returnSlots": 1
                },
                "abi_encode_tuple_t_stringliteral_245f15ff17f551913a7a18385165551503906a406f905ac1c2437281a7cd0cfe__to_t_string_memory_ptr__fromStack_reversed": {
                  "entryPoint": null,
                  "id": null,
                  "parameterSlots": 1,
                  "returnSlots": 1
                },
                "abi_encode_tuple_t_stringliteral_4935f8dc8deae1355305b992e890d0242809a3705c9c83131ed47acca0dd4fe2__to_t_string_memory_ptr__fromStack_reversed": {
                  "entryPoint": null,
                  "id": null,
                  "parameterSlots": 1,
                  "returnSlots": 1
                },
                "abi_encode_tuple_t_stringliteral_4ac8d0af2cd45fcc1fa588da657d5362c91a987e5991f233eaf7fb5c4b0c5a0a__to_t_string_memory_ptr__fromStack_reversed": {
                  "entryPoint": 4000,
                  "id": null,
                  "parameterSlots": 1,
                  "returnSlots": 1
                },
                "abi_encode_tuple_t_stringliteral_62400aa7da0e280fc286fd5482d79ac3e2aa4e6d6dca70b4997f2ac0f4a46e72__to_t_string_memory_ptr__fromStack_reversed": {
                  "entryPoint": 4044,
                  "id": null,
                  "parameterSlots": 1,
                  "returnSlots": 1
                },
                "abi_encode_tuple_t_stringliteral_6cc4ccc1a7d3097254b36ddb7a78effd34b6d9f8b0b1bad60ab55e8a2f5f45a4__to_t_string_memory_ptr__fromStack_reversed": {
                  "entryPoint": null,
                  "id": null,
                  "parameterSlots": 1,
                  "returnSlots": 1
                },
                "abi_encode_tuple_t_stringliteral_9924ebdf1add33d25d4ef888e16131f0a5687b0580a36c21b5c301a6c462effe__to_t_string_memory_ptr__fromStack_reversed": {
                  "entryPoint": null,
                  "id": null,
                  "parameterSlots": 1,
                  "returnSlots": 1
                },
                "abi_encode_tuple_t_stringliteral_a4c3e15cbc00caa216d105711ac6ae2f726d0f810654930587c82d89febb3184__to_t_string_memory_ptr__fromStack_reversed": {
                  "entryPoint": null,
                  "id": null,
                  "parameterSlots": 1,
                  "returnSlots": 1
                },
                "abi_encode_tuple_t_stringliteral_bcf95e6a362746bd232f2b944afd538b26aa461607b394f948bce2609a1a50c9__to_t_string_memory_ptr__fromStack_reversed": {
                  "entryPoint": null,
                  "id": null,
                  "parameterSlots": 1,
                  "returnSlots": 1
                },
                "abi_encode_tuple_t_stringliteral_c08ba2fb32a439193d402103beb50d60ed171e76f51206ca6a45d50440a03472__to_t_string_memory_ptr__fromStack_reversed": {
                  "entryPoint": null,
                  "id": null,
                  "parameterSlots": 1,
                  "returnSlots": 1
                },
                "abi_encode_tuple_t_stringliteral_c5d2460186f7233c927e7db2dcc703c0e500b653ca82273b7bfad8045d85a470__to_t_string_memory_ptr__fromStack_reversed": {
                  "entryPoint": null,
                  "id": null,
                  "parameterSlots": 1,
                  "returnSlots": 1
                },
                "abi_encode_tuple_t_stringliteral_e2a80632f2fcd18d6496f0cfcfccd5b0e23dd9fc7a8b9b52e45db1b65d7da09e__to_t_string_memory_ptr__fromStack_reversed": {
                  "entryPoint": null,
                  "id": null,
                  "parameterSlots": 1,
                  "returnSlots": 1
                },
                "abi_encode_tuple_t_stringliteral_e924b915216d9035118ecb3780d0b361b3358f4cd76cb017027ea4d540d49116__to_t_string_memory_ptr__fromStack_reversed": {
                  "entryPoint": null,
                  "id": null,
                  "parameterSlots": 1,
                  "returnSlots": 1
                },
                "abi_encode_tuple_t_stringliteral_ea2f0cf2e21bed202157d2615233837ad8b5dafcd570b1bb5b6197e0c7e41fcc__to_t_string_memory_ptr__fromStack_reversed": {
                  "entryPoint": null,
                  "id": null,
                  "parameterSlots": 1,
                  "returnSlots": 1
                },
                "abi_encode_tuple_t_stringliteral_ed5ce0bc94e9e9dfad6df12428397b8324b782ad847e98d94fc3bc087f13b0bd__to_t_string_memory_ptr__fromStack_reversed": {
                  "entryPoint": null,
                  "id": null,
                  "parameterSlots": 1,
                  "returnSlots": 1
                },
                "abi_encode_tuple_t_stringliteral_f717c48f565c1f6c8c7139cf54f577e481ac65760eb92c077a08597c622f2a8a__to_t_string_memory_ptr__fromStack_reversed": {
                  "entryPoint": null,
                  "id": null,
                  "parameterSlots": 1,
                  "returnSlots": 1
                },
                "abi_encode_tuple_t_struct$_Proposal_$1340_memory_ptr__to_t_struct$_Proposal_$1340_memory_ptr__fromStack_reversed": {
                  "entryPoint": 3855,
                  "id": null,
                  "parameterSlots": 2,
                  "returnSlots": 1
                },
                "abi_encode_tuple_t_struct$_Voter_$1335_memory_ptr__to_t_struct$_Voter_$1335_memory_ptr__fromStack_reversed": {
                  "entryPoint": null,
                  "id": null,
                  "parameterSlots": 2,
                  "returnSlots": 1
                },
                "abi_encode_tuple_t_uint256__to_t_uint256__fromStack_reversed": {
                  "entryPoint": null,
                  "id": null,
                  "parameterSlots": 2,
                  "returnSlots": 1
                },
                "array_dataslot_string_storage": {
                  "entryPoint": null,
                  "id": null,
                  "parameterSlots": 1,
                  "returnSlots": 1
                },
                "checked_sub_t_uint256": {
                  "entryPoint": 4576,
                  "id": null,
                  "parameterSlots": 2,
                  "returnSlots": 1
                },
                "clean_up_bytearray_end_slots_string_storage": {
                  "entryPoint": 4305,
                  "id": null,
                  "parameterSlots": 3,
                  "returnSlots": 0
                },
                "copy_byte_array_to_storage_from_t_string_memory_ptr_to_t_string_storage": {
                  "entryPoint": 4384,
                  "id": null,
                  "parameterSlots": 2,
                  "returnSlots": 0
                },
                "extract_byte_array_length": {
                  "entryPoint": 4247,
                  "id": null,
                  "parameterSlots": 1,
                  "returnSlots": 1
                },
                "extract_used_part_and_set_length_of_short_byte_array": {
                  "entryPoint": null,
                  "id": null,
                  "parameterSlots": 2,
                  "returnSlots": 1
                },
                "increment_t_uint256": {
                  "entryPoint": 4153,
                  "id": null,
                  "parameterSlots": 1,
                  "returnSlots": 1
                },
                "panic_error_0x11": {
                  "entryPoint": 4131,
                  "id": null,
                  "parameterSlots": 0,
                  "returnSlots": 0
                },
                "panic_error_0x21": {
                  "entryPoint": 3779,
                  "id": null,
                  "parameterSlots": 0,
                  "returnSlots": 0
                },
                "panic_error_0x32": {
                  "entryPoint": 4109,
                  "id": null,
                  "parameterSlots": 0,
                  "returnSlots": 0
                },
                "panic_error_0x41": {
                  "entryPoint": 4225,
                  "id": null,
                  "parameterSlots": 0,
                  "returnSlots": 0
                }
              },
              "generatedSources": [
                {
                  "ast": {
                    "nodeType": "YulBlock",
                    "src": "0:13139:5",
                    "statements": [
                      {
                        "nodeType": "YulBlock",
                        "src": "6:3:5",
                        "statements": []
                      },
                      {
                        "body": {
                          "nodeType": "YulBlock",
                          "src": "84:110:5",
                          "statements": [
                            {
                              "body": {
                                "nodeType": "YulBlock",
                                "src": "130:16:5",
                                "statements": [
                                  {
                                    "expression": {
                                      "arguments": [
                                        {
                                          "kind": "number",
                                          "nodeType": "YulLiteral",
                                          "src": "139:1:5",
                                          "type": "",
                                          "value": "0"
                                        },
                                        {
                                          "kind": "number",
                                          "nodeType": "YulLiteral",
                                          "src": "142:1:5",
                                          "type": "",
                                          "value": "0"
                                        }
                                      ],
                                      "functionName": {
                                        "name": "revert",
                                        "nodeType": "YulIdentifier",
                                        "src": "132:6:5"
                                      },
                                      "nodeType": "YulFunctionCall",
                                      "src": "132:12:5"
                                    },
                                    "nodeType": "YulExpressionStatement",
                                    "src": "132:12:5"
                                  }
                                ]
                              },
                              "condition": {
                                "arguments": [
                                  {
                                    "arguments": [
                                      {
                                        "name": "dataEnd",
                                        "nodeType": "YulIdentifier",
                                        "src": "105:7:5"
                                      },
                                      {
                                        "name": "headStart",
                                        "nodeType": "YulIdentifier",
                                        "src": "114:9:5"
                                      }
                                    ],
                                    "functionName": {
                                      "name": "sub",
                                      "nodeType": "YulIdentifier",
                                      "src": "101:3:5"
                                    },
                                    "nodeType": "YulFunctionCall",
                                    "src": "101:23:5"
                                  },
                                  {
                                    "kind": "number",
                                    "nodeType": "YulLiteral",
                                    "src": "126:2:5",
                                    "type": "",
                                    "value": "32"
                                  }
                                ],
                                "functionName": {
                                  "name": "slt",
                                  "nodeType": "YulIdentifier",
                                  "src": "97:3:5"
                                },
                                "nodeType": "YulFunctionCall",
                                "src": "97:32:5"
                              },
                              "nodeType": "YulIf",
                              "src": "94:52:5"
                            },
                            {
                              "nodeType": "YulAssignment",
                              "src": "155:33:5",
                              "value": {
                                "arguments": [
                                  {
                                    "name": "headStart",
                                    "nodeType": "YulIdentifier",
                                    "src": "178:9:5"
                                  }
                                ],
                                "functionName": {
                                  "name": "calldataload",
                                  "nodeType": "YulIdentifier",
                                  "src": "165:12:5"
                                },
                                "nodeType": "YulFunctionCall",
                                "src": "165:23:5"
                              },
                              "variableNames": [
                                {
                                  "name": "value0",
                                  "nodeType": "YulIdentifier",
                                  "src": "155:6:5"
                                }
                              ]
                            }
                          ]
                        },
                        "name": "abi_decode_tuple_t_uint256",
                        "nodeType": "YulFunctionDefinition",
                        "parameters": [
                          {
                            "name": "headStart",
                            "nodeType": "YulTypedName",
                            "src": "50:9:5",
                            "type": ""
                          },
                          {
                            "name": "dataEnd",
                            "nodeType": "YulTypedName",
                            "src": "61:7:5",
                            "type": ""
                          }
                        ],
                        "returnVariables": [
                          {
                            "name": "value0",
                            "nodeType": "YulTypedName",
                            "src": "73:6:5",
                            "type": ""
                          }
                        ],
                        "src": "14:180:5"
                      },
                      {
                        "body": {
                          "nodeType": "YulBlock",
                          "src": "289:502:5",
                          "statements": [
                            {
                              "body": {
                                "nodeType": "YulBlock",
                                "src": "335:16:5",
                                "statements": [
                                  {
                                    "expression": {
                                      "arguments": [
                                        {
                                          "kind": "number",
                                          "nodeType": "YulLiteral",
                                          "src": "344:1:5",
                                          "type": "",
                                          "value": "0"
                                        },
                                        {
                                          "kind": "number",
                                          "nodeType": "YulLiteral",
                                          "src": "347:1:5",
                                          "type": "",
                                          "value": "0"
                                        }
                                      ],
                                      "functionName": {
                                        "name": "revert",
                                        "nodeType": "YulIdentifier",
                                        "src": "337:6:5"
                                      },
                                      "nodeType": "YulFunctionCall",
                                      "src": "337:12:5"
                                    },
                                    "nodeType": "YulExpressionStatement",
                                    "src": "337:12:5"
                                  }
                                ]
                              },
                              "condition": {
                                "arguments": [
                                  {
                                    "arguments": [
                                      {
                                        "name": "dataEnd",
                                        "nodeType": "YulIdentifier",
                                        "src": "310:7:5"
                                      },
                                      {
                                        "name": "headStart",
                                        "nodeType": "YulIdentifier",
                                        "src": "319:9:5"
                                      }
                                    ],
                                    "functionName": {
                                      "name": "sub",
                                      "nodeType": "YulIdentifier",
                                      "src": "306:3:5"
                                    },
                                    "nodeType": "YulFunctionCall",
                                    "src": "306:23:5"
                                  },
                                  {
                                    "kind": "number",
                                    "nodeType": "YulLiteral",
                                    "src": "331:2:5",
                                    "type": "",
                                    "value": "32"
                                  }
                                ],
                                "functionName": {
                                  "name": "slt",
                                  "nodeType": "YulIdentifier",
                                  "src": "302:3:5"
                                },
                                "nodeType": "YulFunctionCall",
                                "src": "302:32:5"
                              },
                              "nodeType": "YulIf",
                              "src": "299:52:5"
                            },
                            {
                              "nodeType": "YulVariableDeclaration",
                              "src": "360:37:5",
                              "value": {
                                "arguments": [
                                  {
                                    "name": "headStart",
                                    "nodeType": "YulIdentifier",
                                    "src": "387:9:5"
                                  }
                                ],
                                "functionName": {
                                  "name": "calldataload",
                                  "nodeType": "YulIdentifier",
                                  "src": "374:12:5"
                                },
                                "nodeType": "YulFunctionCall",
                                "src": "374:23:5"
                              },
                              "variables": [
                                {
                                  "name": "offset",
                                  "nodeType": "YulTypedName",
                                  "src": "364:6:5",
                                  "type": ""
                                }
                              ]
                            },
                            {
                              "nodeType": "YulVariableDeclaration",
                              "src": "406:28:5",
                              "value": {
                                "kind": "number",
                                "nodeType": "YulLiteral",
                                "src": "416:18:5",
                                "type": "",
                                "value": "0xffffffffffffffff"
                              },
                              "variables": [
                                {
                                  "name": "_1",
                                  "nodeType": "YulTypedName",
                                  "src": "410:2:5",
                                  "type": ""
                                }
                              ]
                            },
                            {
                              "body": {
                                "nodeType": "YulBlock",
                                "src": "461:16:5",
                                "statements": [
                                  {
                                    "expression": {
                                      "arguments": [
                                        {
                                          "kind": "number",
                                          "nodeType": "YulLiteral",
                                          "src": "470:1:5",
                                          "type": "",
                                          "value": "0"
                                        },
                                        {
                                          "kind": "number",
                                          "nodeType": "YulLiteral",
                                          "src": "473:1:5",
                                          "type": "",
                                          "value": "0"
                                        }
                                      ],
                                      "functionName": {
                                        "name": "revert",
                                        "nodeType": "YulIdentifier",
                                        "src": "463:6:5"
                                      },
                                      "nodeType": "YulFunctionCall",
                                      "src": "463:12:5"
                                    },
                                    "nodeType": "YulExpressionStatement",
                                    "src": "463:12:5"
                                  }
                                ]
                              },
                              "condition": {
                                "arguments": [
                                  {
                                    "name": "offset",
                                    "nodeType": "YulIdentifier",
                                    "src": "449:6:5"
                                  },
                                  {
                                    "name": "_1",
                                    "nodeType": "YulIdentifier",
                                    "src": "457:2:5"
                                  }
                                ],
                                "functionName": {
                                  "name": "gt",
                                  "nodeType": "YulIdentifier",
                                  "src": "446:2:5"
                                },
                                "nodeType": "YulFunctionCall",
                                "src": "446:14:5"
                              },
                              "nodeType": "YulIf",
                              "src": "443:34:5"
                            },
                            {
                              "nodeType": "YulVariableDeclaration",
                              "src": "486:32:5",
                              "value": {
                                "arguments": [
                                  {
                                    "name": "headStart",
                                    "nodeType": "YulIdentifier",
                                    "src": "500:9:5"
                                  },
                                  {
                                    "name": "offset",
                                    "nodeType": "YulIdentifier",
                                    "src": "511:6:5"
                                  }
                                ],
                                "functionName": {
                                  "name": "add",
                                  "nodeType": "YulIdentifier",
                                  "src": "496:3:5"
                                },
                                "nodeType": "YulFunctionCall",
                                "src": "496:22:5"
                              },
                              "variables": [
                                {
                                  "name": "_2",
                                  "nodeType": "YulTypedName",
                                  "src": "490:2:5",
                                  "type": ""
                                }
                              ]
                            },
                            {
                              "body": {
                                "nodeType": "YulBlock",
                                "src": "566:16:5",
                                "statements": [
                                  {
                                    "expression": {
                                      "arguments": [
                                        {
                                          "kind": "number",
                                          "nodeType": "YulLiteral",
                                          "src": "575:1:5",
                                          "type": "",
                                          "value": "0"
                                        },
                                        {
                                          "kind": "number",
                                          "nodeType": "YulLiteral",
                                          "src": "578:1:5",
                                          "type": "",
                                          "value": "0"
                                        }
                                      ],
                                      "functionName": {
                                        "name": "revert",
                                        "nodeType": "YulIdentifier",
                                        "src": "568:6:5"
                                      },
                                      "nodeType": "YulFunctionCall",
                                      "src": "568:12:5"
                                    },
                                    "nodeType": "YulExpressionStatement",
                                    "src": "568:12:5"
                                  }
                                ]
                              },
                              "condition": {
                                "arguments": [
                                  {
                                    "arguments": [
                                      {
                                        "arguments": [
                                          {
                                            "name": "_2",
                                            "nodeType": "YulIdentifier",
                                            "src": "545:2:5"
                                          },
                                          {
                                            "kind": "number",
                                            "nodeType": "YulLiteral",
                                            "src": "549:4:5",
                                            "type": "",
                                            "value": "0x1f"
                                          }
                                        ],
                                        "functionName": {
                                          "name": "add",
                                          "nodeType": "YulIdentifier",
                                          "src": "541:3:5"
                                        },
                                        "nodeType": "YulFunctionCall",
                                        "src": "541:13:5"
                                      },
                                      {
                                        "name": "dataEnd",
                                        "nodeType": "YulIdentifier",
                                        "src": "556:7:5"
                                      }
                                    ],
                                    "functionName": {
                                      "name": "slt",
                                      "nodeType": "YulIdentifier",
                                      "src": "537:3:5"
                                    },
                                    "nodeType": "YulFunctionCall",
                                    "src": "537:27:5"
                                  }
                                ],
                                "functionName": {
                                  "name": "iszero",
                                  "nodeType": "YulIdentifier",
                                  "src": "530:6:5"
                                },
                                "nodeType": "YulFunctionCall",
                                "src": "530:35:5"
                              },
                              "nodeType": "YulIf",
                              "src": "527:55:5"
                            },
                            {
                              "nodeType": "YulVariableDeclaration",
                              "src": "591:30:5",
                              "value": {
                                "arguments": [
                                  {
                                    "name": "_2",
                                    "nodeType": "YulIdentifier",
                                    "src": "618:2:5"
                                  }
                                ],
                                "functionName": {
                                  "name": "calldataload",
                                  "nodeType": "YulIdentifier",
                                  "src": "605:12:5"
                                },
                                "nodeType": "YulFunctionCall",
                                "src": "605:16:5"
                              },
                              "variables": [
                                {
                                  "name": "length",
                                  "nodeType": "YulTypedName",
                                  "src": "595:6:5",
                                  "type": ""
                                }
                              ]
                            },
                            {
                              "body": {
                                "nodeType": "YulBlock",
                                "src": "648:16:5",
                                "statements": [
                                  {
                                    "expression": {
                                      "arguments": [
                                        {
                                          "kind": "number",
                                          "nodeType": "YulLiteral",
                                          "src": "657:1:5",
                                          "type": "",
                                          "value": "0"
                                        },
                                        {
                                          "kind": "number",
                                          "nodeType": "YulLiteral",
                                          "src": "660:1:5",
                                          "type": "",
                                          "value": "0"
                                        }
                                      ],
                                      "functionName": {
                                        "name": "revert",
                                        "nodeType": "YulIdentifier",
                                        "src": "650:6:5"
                                      },
                                      "nodeType": "YulFunctionCall",
                                      "src": "650:12:5"
                                    },
                                    "nodeType": "YulExpressionStatement",
                                    "src": "650:12:5"
                                  }
                                ]
                              },
                              "condition": {
                                "arguments": [
                                  {
                                    "name": "length",
                                    "nodeType": "YulIdentifier",
                                    "src": "636:6:5"
                                  },
                                  {
                                    "name": "_1",
                                    "nodeType": "YulIdentifier",
                                    "src": "644:2:5"
                                  }
                                ],
                                "functionName": {
                                  "name": "gt",
                                  "nodeType": "YulIdentifier",
                                  "src": "633:2:5"
                                },
                                "nodeType": "YulFunctionCall",
                                "src": "633:14:5"
                              },
                              "nodeType": "YulIf",
                              "src": "630:34:5"
                            },
                            {
                              "body": {
                                "nodeType": "YulBlock",
                                "src": "714:16:5",
                                "statements": [
                                  {
                                    "expression": {
                                      "arguments": [
                                        {
                                          "kind": "number",
                                          "nodeType": "YulLiteral",
                                          "src": "723:1:5",
                                          "type": "",
                                          "value": "0"
                                        },
                                        {
                                          "kind": "number",
                                          "nodeType": "YulLiteral",
                                          "src": "726:1:5",
                                          "type": "",
                                          "value": "0"
                                        }
                                      ],
                                      "functionName": {
                                        "name": "revert",
                                        "nodeType": "YulIdentifier",
                                        "src": "716:6:5"
                                      },
                                      "nodeType": "YulFunctionCall",
                                      "src": "716:12:5"
                                    },
                                    "nodeType": "YulExpressionStatement",
                                    "src": "716:12:5"
                                  }
                                ]
                              },
                              "condition": {
                                "arguments": [
                                  {
                                    "arguments": [
                                      {
                                        "arguments": [
                                          {
                                            "name": "_2",
                                            "nodeType": "YulIdentifier",
                                            "src": "687:2:5"
                                          },
                                          {
                                            "name": "length",
                                            "nodeType": "YulIdentifier",
                                            "src": "691:6:5"
                                          }
                                        ],
                                        "functionName": {
                                          "name": "add",
                                          "nodeType": "YulIdentifier",
                                          "src": "683:3:5"
                                        },
                                        "nodeType": "YulFunctionCall",
                                        "src": "683:15:5"
                                      },
                                      {
                                        "kind": "number",
                                        "nodeType": "YulLiteral",
                                        "src": "700:2:5",
                                        "type": "",
                                        "value": "32"
                                      }
                                    ],
                                    "functionName": {
                                      "name": "add",
                                      "nodeType": "YulIdentifier",
                                      "src": "679:3:5"
                                    },
                                    "nodeType": "YulFunctionCall",
                                    "src": "679:24:5"
                                  },
                                  {
                                    "name": "dataEnd",
                                    "nodeType": "YulIdentifier",
                                    "src": "705:7:5"
                                  }
                                ],
                                "functionName": {
                                  "name": "gt",
                                  "nodeType": "YulIdentifier",
                                  "src": "676:2:5"
                                },
                                "nodeType": "YulFunctionCall",
                                "src": "676:37:5"
                              },
                              "nodeType": "YulIf",
                              "src": "673:57:5"
                            },
                            {
                              "nodeType": "YulAssignment",
                              "src": "739:21:5",
                              "value": {
                                "arguments": [
                                  {
                                    "name": "_2",
                                    "nodeType": "YulIdentifier",
                                    "src": "753:2:5"
                                  },
                                  {
                                    "kind": "number",
                                    "nodeType": "YulLiteral",
                                    "src": "757:2:5",
                                    "type": "",
                                    "value": "32"
                                  }
                                ],
                                "functionName": {
                                  "name": "add",
                                  "nodeType": "YulIdentifier",
                                  "src": "749:3:5"
                                },
                                "nodeType": "YulFunctionCall",
                                "src": "749:11:5"
                              },
                              "variableNames": [
                                {
                                  "name": "value0",
                                  "nodeType": "YulIdentifier",
                                  "src": "739:6:5"
                                }
                              ]
                            },
                            {
                              "nodeType": "YulAssignment",
                              "src": "769:16:5",
                              "value": {
                                "name": "length",
                                "nodeType": "YulIdentifier",
                                "src": "779:6:5"
                              },
                              "variableNames": [
                                {
                                  "name": "value1",
                                  "nodeType": "YulIdentifier",
                                  "src": "769:6:5"
                                }
                              ]
                            }
                          ]
                        },
                        "name": "abi_decode_tuple_t_string_calldata_ptr",
                        "nodeType": "YulFunctionDefinition",
                        "parameters": [
                          {
                            "name": "headStart",
                            "nodeType": "YulTypedName",
                            "src": "247:9:5",
                            "type": ""
                          },
                          {
                            "name": "dataEnd",
                            "nodeType": "YulTypedName",
                            "src": "258:7:5",
                            "type": ""
                          }
                        ],
                        "returnVariables": [
                          {
                            "name": "value0",
                            "nodeType": "YulTypedName",
                            "src": "270:6:5",
                            "type": ""
                          },
                          {
                            "name": "value1",
                            "nodeType": "YulTypedName",
                            "src": "278:6:5",
                            "type": ""
                          }
                        ],
                        "src": "199:592:5"
                      },
                      {
                        "body": {
                          "nodeType": "YulBlock",
                          "src": "897:102:5",
                          "statements": [
                            {
                              "nodeType": "YulAssignment",
                              "src": "907:26:5",
                              "value": {
                                "arguments": [
                                  {
                                    "name": "headStart",
                                    "nodeType": "YulIdentifier",
                                    "src": "919:9:5"
                                  },
                                  {
                                    "kind": "number",
                                    "nodeType": "YulLiteral",
                                    "src": "930:2:5",
                                    "type": "",
                                    "value": "32"
                                  }
                                ],
                                "functionName": {
                                  "name": "add",
                                  "nodeType": "YulIdentifier",
                                  "src": "915:3:5"
                                },
                                "nodeType": "YulFunctionCall",
                                "src": "915:18:5"
                              },
                              "variableNames": [
                                {
                                  "name": "tail",
                                  "nodeType": "YulIdentifier",
                                  "src": "907:4:5"
                                }
                              ]
                            },
                            {
                              "expression": {
                                "arguments": [
                                  {
                                    "name": "headStart",
                                    "nodeType": "YulIdentifier",
                                    "src": "949:9:5"
                                  },
                                  {
                                    "arguments": [
                                      {
                                        "name": "value0",
                                        "nodeType": "YulIdentifier",
                                        "src": "964:6:5"
                                      },
                                      {
                                        "arguments": [
                                          {
                                            "arguments": [
                                              {
                                                "kind": "number",
                                                "nodeType": "YulLiteral",
                                                "src": "980:3:5",
                                                "type": "",
                                                "value": "160"
                                              },
                                              {
                                                "kind": "number",
                                                "nodeType": "YulLiteral",
                                                "src": "985:1:5",
                                                "type": "",
                                                "value": "1"
                                              }
                                            ],
                                            "functionName": {
                                              "name": "shl",
                                              "nodeType": "YulIdentifier",
                                              "src": "976:3:5"
                                            },
                                            "nodeType": "YulFunctionCall",
                                            "src": "976:11:5"
                                          },
                                          {
                                            "kind": "number",
                                            "nodeType": "YulLiteral",
                                            "src": "989:1:5",
                                            "type": "",
                                            "value": "1"
                                          }
                                        ],
                                        "functionName": {
                                          "name": "sub",
                                          "nodeType": "YulIdentifier",
                                          "src": "972:3:5"
                                        },
                                        "nodeType": "YulFunctionCall",
                                        "src": "972:19:5"
                                      }
                                    ],
                                    "functionName": {
                                      "name": "and",
                                      "nodeType": "YulIdentifier",
                                      "src": "960:3:5"
                                    },
                                    "nodeType": "YulFunctionCall",
                                    "src": "960:32:5"
                                  }
                                ],
                                "functionName": {
                                  "name": "mstore",
                                  "nodeType": "YulIdentifier",
                                  "src": "942:6:5"
                                },
                                "nodeType": "YulFunctionCall",
                                "src": "942:51:5"
                              },
                              "nodeType": "YulExpressionStatement",
                              "src": "942:51:5"
                            }
                          ]
                        },
                        "name": "abi_encode_tuple_t_address__to_t_address__fromStack_reversed",
                        "nodeType": "YulFunctionDefinition",
                        "parameters": [
                          {
                            "name": "headStart",
                            "nodeType": "YulTypedName",
                            "src": "866:9:5",
                            "type": ""
                          },
                          {
                            "name": "value0",
                            "nodeType": "YulTypedName",
                            "src": "877:6:5",
                            "type": ""
                          }
                        ],
                        "returnVariables": [
                          {
                            "name": "tail",
                            "nodeType": "YulTypedName",
                            "src": "888:4:5",
                            "type": ""
                          }
                        ],
                        "src": "796:203:5"
                      },
                      {
                        "body": {
                          "nodeType": "YulBlock",
                          "src": "1036:95:5",
                          "statements": [
                            {
                              "expression": {
                                "arguments": [
                                  {
                                    "kind": "number",
                                    "nodeType": "YulLiteral",
                                    "src": "1053:1:5",
                                    "type": "",
                                    "value": "0"
                                  },
                                  {
                                    "arguments": [
                                      {
                                        "kind": "number",
                                        "nodeType": "YulLiteral",
                                        "src": "1060:3:5",
                                        "type": "",
                                        "value": "224"
                                      },
                                      {
                                        "kind": "number",
                                        "nodeType": "YulLiteral",
                                        "src": "1065:10:5",
                                        "type": "",
                                        "value": "0x4e487b71"
                                      }
                                    ],
                                    "functionName": {
                                      "name": "shl",
                                      "nodeType": "YulIdentifier",
                                      "src": "1056:3:5"
                                    },
                                    "nodeType": "YulFunctionCall",
                                    "src": "1056:20:5"
                                  }
                                ],
                                "functionName": {
                                  "name": "mstore",
                                  "nodeType": "YulIdentifier",
                                  "src": "1046:6:5"
                                },
                                "nodeType": "YulFunctionCall",
                                "src": "1046:31:5"
                              },
                              "nodeType": "YulExpressionStatement",
                              "src": "1046:31:5"
                            },
                            {
                              "expression": {
                                "arguments": [
                                  {
                                    "kind": "number",
                                    "nodeType": "YulLiteral",
                                    "src": "1093:1:5",
                                    "type": "",
                                    "value": "4"
                                  },
                                  {
                                    "kind": "number",
                                    "nodeType": "YulLiteral",
                                    "src": "1096:4:5",
                                    "type": "",
                                    "value": "0x21"
                                  }
                                ],
                                "functionName": {
                                  "name": "mstore",
                                  "nodeType": "YulIdentifier",
                                  "src": "1086:6:5"
                                },
                                "nodeType": "YulFunctionCall",
                                "src": "1086:15:5"
                              },
                              "nodeType": "YulExpressionStatement",
                              "src": "1086:15:5"
                            },
                            {
                              "expression": {
                                "arguments": [
                                  {
                                    "kind": "number",
                                    "nodeType": "YulLiteral",
                                    "src": "1117:1:5",
                                    "type": "",
                                    "value": "0"
                                  },
                                  {
                                    "kind": "number",
                                    "nodeType": "YulLiteral",
                                    "src": "1120:4:5",
                                    "type": "",
                                    "value": "0x24"
                                  }
                                ],
                                "functionName": {
                                  "name": "revert",
                                  "nodeType": "YulIdentifier",
                                  "src": "1110:6:5"
                                },
                                "nodeType": "YulFunctionCall",
                                "src": "1110:15:5"
                              },
                              "nodeType": "YulExpressionStatement",
                              "src": "1110:15:5"
                            }
                          ]
                        },
                        "name": "panic_error_0x21",
                        "nodeType": "YulFunctionDefinition",
                        "src": "1004:127:5"
                      },
                      {
                        "body": {
                          "nodeType": "YulBlock",
                          "src": "1192:186:5",
                          "statements": [
                            {
                              "body": {
                                "nodeType": "YulBlock",
                                "src": "1234:111:5",
                                "statements": [
                                  {
                                    "expression": {
                                      "arguments": [
                                        {
                                          "kind": "number",
                                          "nodeType": "YulLiteral",
                                          "src": "1255:1:5",
                                          "type": "",
                                          "value": "0"
                                        },
                                        {
                                          "arguments": [
                                            {
                                              "kind": "number",
                                              "nodeType": "YulLiteral",
                                              "src": "1262:3:5",
                                              "type": "",
                                              "value": "224"
                                            },
                                            {
                                              "kind": "number",
                                              "nodeType": "YulLiteral",
                                              "src": "1267:10:5",
                                              "type": "",
                                              "value": "0x4e487b71"
                                            }
                                          ],
                                          "functionName": {
                                            "name": "shl",
                                            "nodeType": "YulIdentifier",
                                            "src": "1258:3:5"
                                          },
                                          "nodeType": "YulFunctionCall",
                                          "src": "1258:20:5"
                                        }
                                      ],
                                      "functionName": {
                                        "name": "mstore",
                                        "nodeType": "YulIdentifier",
                                        "src": "1248:6:5"
                                      },
                                      "nodeType": "YulFunctionCall",
                                      "src": "1248:31:5"
                                    },
                                    "nodeType": "YulExpressionStatement",
                                    "src": "1248:31:5"
                                  },
                                  {
                                    "expression": {
                                      "arguments": [
                                        {
                                          "kind": "number",
                                          "nodeType": "YulLiteral",
                                          "src": "1299:1:5",
                                          "type": "",
                                          "value": "4"
                                        },
                                        {
                                          "kind": "number",
                                          "nodeType": "YulLiteral",
                                          "src": "1302:4:5",
                                          "type": "",
                                          "value": "0x21"
                                        }
                                      ],
                                      "functionName": {
                                        "name": "mstore",
                                        "nodeType": "YulIdentifier",
                                        "src": "1292:6:5"
                                      },
                                      "nodeType": "YulFunctionCall",
                                      "src": "1292:15:5"
                                    },
                                    "nodeType": "YulExpressionStatement",
                                    "src": "1292:15:5"
                                  },
                                  {
                                    "expression": {
                                      "arguments": [
                                        {
                                          "kind": "number",
                                          "nodeType": "YulLiteral",
                                          "src": "1327:1:5",
                                          "type": "",
                                          "value": "0"
                                        },
                                        {
                                          "kind": "number",
                                          "nodeType": "YulLiteral",
                                          "src": "1330:4:5",
                                          "type": "",
                                          "value": "0x24"
                                        }
                                      ],
                                      "functionName": {
                                        "name": "revert",
                                        "nodeType": "YulIdentifier",
                                        "src": "1320:6:5"
                                      },
                                      "nodeType": "YulFunctionCall",
                                      "src": "1320:15:5"
                                    },
                                    "nodeType": "YulExpressionStatement",
                                    "src": "1320:15:5"
                                  }
                                ]
                              },
                              "condition": {
                                "arguments": [
                                  {
                                    "arguments": [
                                      {
                                        "name": "value",
                                        "nodeType": "YulIdentifier",
                                        "src": "1215:5:5"
                                      },
                                      {
                                        "kind": "number",
                                        "nodeType": "YulLiteral",
                                        "src": "1222:1:5",
                                        "type": "",
                                        "value": "6"
                                      }
                                    ],
                                    "functionName": {
                                      "name": "lt",
                                      "nodeType": "YulIdentifier",
                                      "src": "1212:2:5"
                                    },
                                    "nodeType": "YulFunctionCall",
                                    "src": "1212:12:5"
                                  }
                                ],
                                "functionName": {
                                  "name": "iszero",
                                  "nodeType": "YulIdentifier",
                                  "src": "1205:6:5"
                                },
                                "nodeType": "YulFunctionCall",
                                "src": "1205:20:5"
                              },
                              "nodeType": "YulIf",
                              "src": "1202:143:5"
                            },
                            {
                              "expression": {
                                "arguments": [
                                  {
                                    "name": "pos",
                                    "nodeType": "YulIdentifier",
                                    "src": "1361:3:5"
                                  },
                                  {
                                    "name": "value",
                                    "nodeType": "YulIdentifier",
                                    "src": "1366:5:5"
                                  }
                                ],
                                "functionName": {
                                  "name": "mstore",
                                  "nodeType": "YulIdentifier",
                                  "src": "1354:6:5"
                                },
                                "nodeType": "YulFunctionCall",
                                "src": "1354:18:5"
                              },
                              "nodeType": "YulExpressionStatement",
                              "src": "1354:18:5"
                            }
                          ]
                        },
                        "name": "abi_encode_enum_WorkflowStatus",
                        "nodeType": "YulFunctionDefinition",
                        "parameters": [
                          {
                            "name": "value",
                            "nodeType": "YulTypedName",
                            "src": "1176:5:5",
                            "type": ""
                          },
                          {
                            "name": "pos",
                            "nodeType": "YulTypedName",
                            "src": "1183:3:5",
                            "type": ""
                          }
                        ],
                        "src": "1136:242:5"
                      },
                      {
                        "body": {
                          "nodeType": "YulBlock",
                          "src": "1501:100:5",
                          "statements": [
                            {
                              "nodeType": "YulAssignment",
                              "src": "1511:26:5",
                              "value": {
                                "arguments": [
                                  {
                                    "name": "headStart",
                                    "nodeType": "YulIdentifier",
                                    "src": "1523:9:5"
                                  },
                                  {
                                    "kind": "number",
                                    "nodeType": "YulLiteral",
                                    "src": "1534:2:5",
                                    "type": "",
                                    "value": "32"
                                  }
                                ],
                                "functionName": {
                                  "name": "add",
                                  "nodeType": "YulIdentifier",
                                  "src": "1519:3:5"
                                },
                                "nodeType": "YulFunctionCall",
                                "src": "1519:18:5"
                              },
                              "variableNames": [
                                {
                                  "name": "tail",
                                  "nodeType": "YulIdentifier",
                                  "src": "1511:4:5"
                                }
                              ]
                            },
                            {
                              "expression": {
                                "arguments": [
                                  {
                                    "name": "value0",
                                    "nodeType": "YulIdentifier",
                                    "src": "1577:6:5"
                                  },
                                  {
                                    "name": "headStart",
                                    "nodeType": "YulIdentifier",
                                    "src": "1585:9:5"
                                  }
                                ],
                                "functionName": {
                                  "name": "abi_encode_enum_WorkflowStatus",
                                  "nodeType": "YulIdentifier",
                                  "src": "1546:30:5"
                                },
                                "nodeType": "YulFunctionCall",
                                "src": "1546:49:5"
                              },
                              "nodeType": "YulExpressionStatement",
                              "src": "1546:49:5"
                            }
                          ]
                        },
                        "name": "abi_encode_tuple_t_enum$_WorkflowStatus_$1347__to_t_uint8__fromStack_reversed",
                        "nodeType": "YulFunctionDefinition",
                        "parameters": [
                          {
                            "name": "headStart",
                            "nodeType": "YulTypedName",
                            "src": "1470:9:5",
                            "type": ""
                          },
                          {
                            "name": "value0",
                            "nodeType": "YulTypedName",
                            "src": "1481:6:5",
                            "type": ""
                          }
                        ],
                        "returnVariables": [
                          {
                            "name": "tail",
                            "nodeType": "YulTypedName",
                            "src": "1492:4:5",
                            "type": ""
                          }
                        ],
                        "src": "1383:218:5"
                      },
                      {
                        "body": {
                          "nodeType": "YulBlock",
                          "src": "1759:586:5",
                          "statements": [
                            {
                              "nodeType": "YulVariableDeclaration",
                              "src": "1769:12:5",
                              "value": {
                                "kind": "number",
                                "nodeType": "YulLiteral",
                                "src": "1779:2:5",
                                "type": "",
                                "value": "32"
                              },
                              "variables": [
                                {
                                  "name": "_1",
                                  "nodeType": "YulTypedName",
                                  "src": "1773:2:5",
                                  "type": ""
                                }
                              ]
                            },
                            {
                              "expression": {
                                "arguments": [
                                  {
                                    "name": "headStart",
                                    "nodeType": "YulIdentifier",
                                    "src": "1797:9:5"
                                  },
                                  {
                                    "name": "_1",
                                    "nodeType": "YulIdentifier",
                                    "src": "1808:2:5"
                                  }
                                ],
                                "functionName": {
                                  "name": "mstore",
                                  "nodeType": "YulIdentifier",
                                  "src": "1790:6:5"
                                },
                                "nodeType": "YulFunctionCall",
                                "src": "1790:21:5"
                              },
                              "nodeType": "YulExpressionStatement",
                              "src": "1790:21:5"
                            },
                            {
                              "nodeType": "YulVariableDeclaration",
                              "src": "1820:33:5",
                              "value": {
                                "arguments": [
                                  {
                                    "name": "value0",
                                    "nodeType": "YulIdentifier",
                                    "src": "1846:6:5"
                                  }
                                ],
                                "functionName": {
                                  "name": "mload",
                                  "nodeType": "YulIdentifier",
                                  "src": "1840:5:5"
                                },
                                "nodeType": "YulFunctionCall",
                                "src": "1840:13:5"
                              },
                              "variables": [
                                {
                                  "name": "memberValue0",
                                  "nodeType": "YulTypedName",
                                  "src": "1824:12:5",
                                  "type": ""
                                }
                              ]
                            },
                            {
                              "expression": {
                                "arguments": [
                                  {
                                    "arguments": [
                                      {
                                        "name": "headStart",
                                        "nodeType": "YulIdentifier",
                                        "src": "1873:9:5"
                                      },
                                      {
                                        "name": "_1",
                                        "nodeType": "YulIdentifier",
                                        "src": "1884:2:5"
                                      }
                                    ],
                                    "functionName": {
                                      "name": "add",
                                      "nodeType": "YulIdentifier",
                                      "src": "1869:3:5"
                                    },
                                    "nodeType": "YulFunctionCall",
                                    "src": "1869:18:5"
                                  },
                                  {
                                    "kind": "number",
                                    "nodeType": "YulLiteral",
                                    "src": "1889:4:5",
                                    "type": "",
                                    "value": "0x40"
                                  }
                                ],
                                "functionName": {
                                  "name": "mstore",
                                  "nodeType": "YulIdentifier",
                                  "src": "1862:6:5"
                                },
                                "nodeType": "YulFunctionCall",
                                "src": "1862:32:5"
                              },
                              "nodeType": "YulExpressionStatement",
                              "src": "1862:32:5"
                            },
                            {
                              "nodeType": "YulVariableDeclaration",
                              "src": "1903:33:5",
                              "value": {
                                "arguments": [
                                  {
                                    "name": "memberValue0",
                                    "nodeType": "YulIdentifier",
                                    "src": "1923:12:5"
                                  }
                                ],
                                "functionName": {
                                  "name": "mload",
                                  "nodeType": "YulIdentifier",
                                  "src": "1917:5:5"
                                },
                                "nodeType": "YulFunctionCall",
                                "src": "1917:19:5"
                              },
                              "variables": [
                                {
                                  "name": "length",
                                  "nodeType": "YulTypedName",
                                  "src": "1907:6:5",
                                  "type": ""
                                }
                              ]
                            },
                            {
                              "expression": {
                                "arguments": [
                                  {
                                    "arguments": [
                                      {
                                        "name": "headStart",
                                        "nodeType": "YulIdentifier",
                                        "src": "1956:9:5"
                                      },
                                      {
                                        "kind": "number",
                                        "nodeType": "YulLiteral",
                                        "src": "1967:2:5",
                                        "type": "",
                                        "value": "96"
                                      }
                                    ],
                                    "functionName": {
                                      "name": "add",
                                      "nodeType": "YulIdentifier",
                                      "src": "1952:3:5"
                                    },
                                    "nodeType": "YulFunctionCall",
                                    "src": "1952:18:5"
                                  },
                                  {
                                    "name": "length",
                                    "nodeType": "YulIdentifier",
                                    "src": "1972:6:5"
                                  }
                                ],
                                "functionName": {
                                  "name": "mstore",
                                  "nodeType": "YulIdentifier",
                                  "src": "1945:6:5"
                                },
                                "nodeType": "YulFunctionCall",
                                "src": "1945:34:5"
                              },
                              "nodeType": "YulExpressionStatement",
                              "src": "1945:34:5"
                            },
                            {
                              "nodeType": "YulVariableDeclaration",
                              "src": "1988:10:5",
                              "value": {
                                "kind": "number",
                                "nodeType": "YulLiteral",
                                "src": "1997:1:5",
                                "type": "",
                                "value": "0"
                              },
                              "variables": [
                                {
                                  "name": "i",
                                  "nodeType": "YulTypedName",
                                  "src": "1992:1:5",
                                  "type": ""
                                }
                              ]
                            },
                            {
                              "body": {
                                "nodeType": "YulBlock",
                                "src": "2057:97:5",
                                "statements": [
                                  {
                                    "expression": {
                                      "arguments": [
                                        {
                                          "arguments": [
                                            {
                                              "arguments": [
                                                {
                                                  "name": "headStart",
                                                  "nodeType": "YulIdentifier",
                                                  "src": "2086:9:5"
                                                },
                                                {
                                                  "name": "i",
                                                  "nodeType": "YulIdentifier",
                                                  "src": "2097:1:5"
                                                }
                                              ],
                                              "functionName": {
                                                "name": "add",
                                                "nodeType": "YulIdentifier",
                                                "src": "2082:3:5"
                                              },
                                              "nodeType": "YulFunctionCall",
                                              "src": "2082:17:5"
                                            },
                                            {
                                              "kind": "number",
                                              "nodeType": "YulLiteral",
                                              "src": "2101:3:5",
                                              "type": "",
                                              "value": "128"
                                            }
                                          ],
                                          "functionName": {
                                            "name": "add",
                                            "nodeType": "YulIdentifier",
                                            "src": "2078:3:5"
                                          },
                                          "nodeType": "YulFunctionCall",
                                          "src": "2078:27:5"
                                        },
                                        {
                                          "arguments": [
                                            {
                                              "arguments": [
                                                {
                                                  "arguments": [
                                                    {
                                                      "name": "memberValue0",
                                                      "nodeType": "YulIdentifier",
                                                      "src": "2121:12:5"
                                                    },
                                                    {
                                                      "name": "i",
                                                      "nodeType": "YulIdentifier",
                                                      "src": "2135:1:5"
                                                    }
                                                  ],
                                                  "functionName": {
                                                    "name": "add",
                                                    "nodeType": "YulIdentifier",
                                                    "src": "2117:3:5"
                                                  },
                                                  "nodeType": "YulFunctionCall",
                                                  "src": "2117:20:5"
                                                },
                                                {
                                                  "name": "_1",
                                                  "nodeType": "YulIdentifier",
                                                  "src": "2139:2:5"
                                                }
                                              ],
                                              "functionName": {
                                                "name": "add",
                                                "nodeType": "YulIdentifier",
                                                "src": "2113:3:5"
                                              },
                                              "nodeType": "YulFunctionCall",
                                              "src": "2113:29:5"
                                            }
                                          ],
                                          "functionName": {
                                            "name": "mload",
                                            "nodeType": "YulIdentifier",
                                            "src": "2107:5:5"
                                          },
                                          "nodeType": "YulFunctionCall",
                                          "src": "2107:36:5"
                                        }
                                      ],
                                      "functionName": {
                                        "name": "mstore",
                                        "nodeType": "YulIdentifier",
                                        "src": "2071:6:5"
                                      },
                                      "nodeType": "YulFunctionCall",
                                      "src": "2071:73:5"
                                    },
                                    "nodeType": "YulExpressionStatement",
                                    "src": "2071:73:5"
                                  }
                                ]
                              },
                              "condition": {
                                "arguments": [
                                  {
                                    "name": "i",
                                    "nodeType": "YulIdentifier",
                                    "src": "2018:1:5"
                                  },
                                  {
                                    "name": "length",
                                    "nodeType": "YulIdentifier",
                                    "src": "2021:6:5"
                                  }
                                ],
                                "functionName": {
                                  "name": "lt",
                                  "nodeType": "YulIdentifier",
                                  "src": "2015:2:5"
                                },
                                "nodeType": "YulFunctionCall",
                                "src": "2015:13:5"
                              },
                              "nodeType": "YulForLoop",
                              "post": {
                                "nodeType": "YulBlock",
                                "src": "2029:19:5",
                                "statements": [
                                  {
                                    "nodeType": "YulAssignment",
                                    "src": "2031:15:5",
                                    "value": {
                                      "arguments": [
                                        {
                                          "name": "i",
                                          "nodeType": "YulIdentifier",
                                          "src": "2040:1:5"
                                        },
                                        {
                                          "name": "_1",
                                          "nodeType": "YulIdentifier",
                                          "src": "2043:2:5"
                                        }
                                      ],
                                      "functionName": {
                                        "name": "add",
                                        "nodeType": "YulIdentifier",
                                        "src": "2036:3:5"
                                      },
                                      "nodeType": "YulFunctionCall",
                                      "src": "2036:10:5"
                                    },
                                    "variableNames": [
                                      {
                                        "name": "i",
                                        "nodeType": "YulIdentifier",
                                        "src": "2031:1:5"
                                      }
                                    ]
                                  }
                                ]
                              },
                              "pre": {
                                "nodeType": "YulBlock",
                                "src": "2011:3:5",
                                "statements": []
                              },
                              "src": "2007:147:5"
                            },
                            {
                              "expression": {
                                "arguments": [
                                  {
                                    "arguments": [
                                      {
                                        "arguments": [
                                          {
                                            "name": "headStart",
                                            "nodeType": "YulIdentifier",
                                            "src": "2178:9:5"
                                          },
                                          {
                                            "name": "length",
                                            "nodeType": "YulIdentifier",
                                            "src": "2189:6:5"
                                          }
                                        ],
                                        "functionName": {
                                          "name": "add",
                                          "nodeType": "YulIdentifier",
                                          "src": "2174:3:5"
                                        },
                                        "nodeType": "YulFunctionCall",
                                        "src": "2174:22:5"
                                      },
                                      {
                                        "kind": "number",
                                        "nodeType": "YulLiteral",
                                        "src": "2198:3:5",
                                        "type": "",
                                        "value": "128"
                                      }
                                    ],
                                    "functionName": {
                                      "name": "add",
                                      "nodeType": "YulIdentifier",
                                      "src": "2170:3:5"
                                    },
                                    "nodeType": "YulFunctionCall",
                                    "src": "2170:32:5"
                                  },
                                  {
                                    "kind": "number",
                                    "nodeType": "YulLiteral",
                                    "src": "2204:1:5",
                                    "type": "",
                                    "value": "0"
                                  }
                                ],
                                "functionName": {
                                  "name": "mstore",
                                  "nodeType": "YulIdentifier",
                                  "src": "2163:6:5"
                                },
                                "nodeType": "YulFunctionCall",
                                "src": "2163:43:5"
                              },
                              "nodeType": "YulExpressionStatement",
                              "src": "2163:43:5"
                            },
                            {
                              "expression": {
                                "arguments": [
                                  {
                                    "arguments": [
                                      {
                                        "name": "headStart",
                                        "nodeType": "YulIdentifier",
                                        "src": "2226:9:5"
                                      },
                                      {
                                        "kind": "number",
                                        "nodeType": "YulLiteral",
                                        "src": "2237:4:5",
                                        "type": "",
                                        "value": "0x40"
                                      }
                                    ],
                                    "functionName": {
                                      "name": "add",
                                      "nodeType": "YulIdentifier",
                                      "src": "2222:3:5"
                                    },
                                    "nodeType": "YulFunctionCall",
                                    "src": "2222:20:5"
                                  },
                                  {
                                    "arguments": [
                                      {
                                        "arguments": [
                                          {
                                            "name": "value0",
                                            "nodeType": "YulIdentifier",
                                            "src": "2254:6:5"
                                          },
                                          {
                                            "name": "_1",
                                            "nodeType": "YulIdentifier",
                                            "src": "2262:2:5"
                                          }
                                        ],
                                        "functionName": {
                                          "name": "add",
                                          "nodeType": "YulIdentifier",
                                          "src": "2250:3:5"
                                        },
                                        "nodeType": "YulFunctionCall",
                                        "src": "2250:15:5"
                                      }
                                    ],
                                    "functionName": {
                                      "name": "mload",
                                      "nodeType": "YulIdentifier",
                                      "src": "2244:5:5"
                                    },
                                    "nodeType": "YulFunctionCall",
                                    "src": "2244:22:5"
                                  }
                                ],
                                "functionName": {
                                  "name": "mstore",
                                  "nodeType": "YulIdentifier",
                                  "src": "2215:6:5"
                                },
                                "nodeType": "YulFunctionCall",
                                "src": "2215:52:5"
                              },
                              "nodeType": "YulExpressionStatement",
                              "src": "2215:52:5"
                            },
                            {
                              "nodeType": "YulAssignment",
                              "src": "2276:63:5",
                              "value": {
                                "arguments": [
                                  {
                                    "arguments": [
                                      {
                                        "name": "headStart",
                                        "nodeType": "YulIdentifier",
                                        "src": "2292:9:5"
                                      },
                                      {
                                        "arguments": [
                                          {
                                            "arguments": [
                                              {
                                                "name": "length",
                                                "nodeType": "YulIdentifier",
                                                "src": "2311:6:5"
                                              },
                                              {
                                                "kind": "number",
                                                "nodeType": "YulLiteral",
                                                "src": "2319:2:5",
                                                "type": "",
                                                "value": "31"
                                              }
                                            ],
                                            "functionName": {
                                              "name": "add",
                                              "nodeType": "YulIdentifier",
                                              "src": "2307:3:5"
                                            },
                                            "nodeType": "YulFunctionCall",
                                            "src": "2307:15:5"
                                          },
                                          {
                                            "arguments": [
                                              {
                                                "kind": "number",
                                                "nodeType": "YulLiteral",
                                                "src": "2328:2:5",
                                                "type": "",
                                                "value": "31"
                                              }
                                            ],
                                            "functionName": {
                                              "name": "not",
                                              "nodeType": "YulIdentifier",
                                              "src": "2324:3:5"
                                            },
                                            "nodeType": "YulFunctionCall",
                                            "src": "2324:7:5"
                                          }
                                        ],
                                        "functionName": {
                                          "name": "and",
                                          "nodeType": "YulIdentifier",
                                          "src": "2303:3:5"
                                        },
                                        "nodeType": "YulFunctionCall",
                                        "src": "2303:29:5"
                                      }
                                    ],
                                    "functionName": {
                                      "name": "add",
                                      "nodeType": "YulIdentifier",
                                      "src": "2288:3:5"
                                    },
                                    "nodeType": "YulFunctionCall",
                                    "src": "2288:45:5"
                                  },
                                  {
                                    "kind": "number",
                                    "nodeType": "YulLiteral",
                                    "src": "2335:3:5",
                                    "type": "",
                                    "value": "128"
                                  }
                                ],
                                "functionName": {
                                  "name": "add",
                                  "nodeType": "YulIdentifier",
                                  "src": "2284:3:5"
                                },
                                "nodeType": "YulFunctionCall",
                                "src": "2284:55:5"
                              },
                              "variableNames": [
                                {
                                  "name": "tail",
                                  "nodeType": "YulIdentifier",
                                  "src": "2276:4:5"
                                }
                              ]
                            }
                          ]
                        },
                        "name": "abi_encode_tuple_t_struct$_Proposal_$1340_memory_ptr__to_t_struct$_Proposal_$1340_memory_ptr__fromStack_reversed",
                        "nodeType": "YulFunctionDefinition",
                        "parameters": [
                          {
                            "name": "headStart",
                            "nodeType": "YulTypedName",
                            "src": "1728:9:5",
                            "type": ""
                          },
                          {
                            "name": "value0",
                            "nodeType": "YulTypedName",
                            "src": "1739:6:5",
                            "type": ""
                          }
                        ],
                        "returnVariables": [
                          {
                            "name": "tail",
                            "nodeType": "YulTypedName",
                            "src": "1750:4:5",
                            "type": ""
                          }
                        ],
                        "src": "1606:739:5"
                      },
                      {
                        "body": {
                          "nodeType": "YulBlock",
                          "src": "2451:76:5",
                          "statements": [
                            {
                              "nodeType": "YulAssignment",
                              "src": "2461:26:5",
                              "value": {
                                "arguments": [
                                  {
                                    "name": "headStart",
                                    "nodeType": "YulIdentifier",
                                    "src": "2473:9:5"
                                  },
                                  {
                                    "kind": "number",
                                    "nodeType": "YulLiteral",
                                    "src": "2484:2:5",
                                    "type": "",
                                    "value": "32"
                                  }
                                ],
                                "functionName": {
                                  "name": "add",
                                  "nodeType": "YulIdentifier",
                                  "src": "2469:3:5"
                                },
                                "nodeType": "YulFunctionCall",
                                "src": "2469:18:5"
                              },
                              "variableNames": [
                                {
                                  "name": "tail",
                                  "nodeType": "YulIdentifier",
                                  "src": "2461:4:5"
                                }
                              ]
                            },
                            {
                              "expression": {
                                "arguments": [
                                  {
                                    "name": "headStart",
                                    "nodeType": "YulIdentifier",
                                    "src": "2503:9:5"
                                  },
                                  {
                                    "name": "value0",
                                    "nodeType": "YulIdentifier",
                                    "src": "2514:6:5"
                                  }
                                ],
                                "functionName": {
                                  "name": "mstore",
                                  "nodeType": "YulIdentifier",
                                  "src": "2496:6:5"
                                },
                                "nodeType": "YulFunctionCall",
                                "src": "2496:25:5"
                              },
                              "nodeType": "YulExpressionStatement",
                              "src": "2496:25:5"
                            }
                          ]
                        },
                        "name": "abi_encode_tuple_t_uint256__to_t_uint256__fromStack_reversed",
                        "nodeType": "YulFunctionDefinition",
                        "parameters": [
                          {
                            "name": "headStart",
                            "nodeType": "YulTypedName",
                            "src": "2420:9:5",
                            "type": ""
                          },
                          {
                            "name": "value0",
                            "nodeType": "YulTypedName",
                            "src": "2431:6:5",
                            "type": ""
                          }
                        ],
                        "returnVariables": [
                          {
                            "name": "tail",
                            "nodeType": "YulTypedName",
                            "src": "2442:4:5",
                            "type": ""
                          }
                        ],
                        "src": "2350:177:5"
                      },
                      {
                        "body": {
                          "nodeType": "YulBlock",
                          "src": "2602:216:5",
                          "statements": [
                            {
                              "body": {
                                "nodeType": "YulBlock",
                                "src": "2648:16:5",
                                "statements": [
                                  {
                                    "expression": {
                                      "arguments": [
                                        {
                                          "kind": "number",
                                          "nodeType": "YulLiteral",
                                          "src": "2657:1:5",
                                          "type": "",
                                          "value": "0"
                                        },
                                        {
                                          "kind": "number",
                                          "nodeType": "YulLiteral",
                                          "src": "2660:1:5",
                                          "type": "",
                                          "value": "0"
                                        }
                                      ],
                                      "functionName": {
                                        "name": "revert",
                                        "nodeType": "YulIdentifier",
                                        "src": "2650:6:5"
                                      },
                                      "nodeType": "YulFunctionCall",
                                      "src": "2650:12:5"
                                    },
                                    "nodeType": "YulExpressionStatement",
                                    "src": "2650:12:5"
                                  }
                                ]
                              },
                              "condition": {
                                "arguments": [
                                  {
                                    "arguments": [
                                      {
                                        "name": "dataEnd",
                                        "nodeType": "YulIdentifier",
                                        "src": "2623:7:5"
                                      },
                                      {
                                        "name": "headStart",
                                        "nodeType": "YulIdentifier",
                                        "src": "2632:9:5"
                                      }
                                    ],
                                    "functionName": {
                                      "name": "sub",
                                      "nodeType": "YulIdentifier",
                                      "src": "2619:3:5"
                                    },
                                    "nodeType": "YulFunctionCall",
                                    "src": "2619:23:5"
                                  },
                                  {
                                    "kind": "number",
                                    "nodeType": "YulLiteral",
                                    "src": "2644:2:5",
                                    "type": "",
                                    "value": "32"
                                  }
                                ],
                                "functionName": {
                                  "name": "slt",
                                  "nodeType": "YulIdentifier",
                                  "src": "2615:3:5"
                                },
                                "nodeType": "YulFunctionCall",
                                "src": "2615:32:5"
                              },
                              "nodeType": "YulIf",
                              "src": "2612:52:5"
                            },
                            {
                              "nodeType": "YulVariableDeclaration",
                              "src": "2673:36:5",
                              "value": {
                                "arguments": [
                                  {
                                    "name": "headStart",
                                    "nodeType": "YulIdentifier",
                                    "src": "2699:9:5"
                                  }
                                ],
                                "functionName": {
                                  "name": "calldataload",
                                  "nodeType": "YulIdentifier",
                                  "src": "2686:12:5"
                                },
                                "nodeType": "YulFunctionCall",
                                "src": "2686:23:5"
                              },
                              "variables": [
                                {
                                  "name": "value",
                                  "nodeType": "YulTypedName",
                                  "src": "2677:5:5",
                                  "type": ""
                                }
                              ]
                            },
                            {
                              "body": {
                                "nodeType": "YulBlock",
                                "src": "2772:16:5",
                                "statements": [
                                  {
                                    "expression": {
                                      "arguments": [
                                        {
                                          "kind": "number",
                                          "nodeType": "YulLiteral",
                                          "src": "2781:1:5",
                                          "type": "",
                                          "value": "0"
                                        },
                                        {
                                          "kind": "number",
                                          "nodeType": "YulLiteral",
                                          "src": "2784:1:5",
                                          "type": "",
                                          "value": "0"
                                        }
                                      ],
                                      "functionName": {
                                        "name": "revert",
                                        "nodeType": "YulIdentifier",
                                        "src": "2774:6:5"
                                      },
                                      "nodeType": "YulFunctionCall",
                                      "src": "2774:12:5"
                                    },
                                    "nodeType": "YulExpressionStatement",
                                    "src": "2774:12:5"
                                  }
                                ]
                              },
                              "condition": {
                                "arguments": [
                                  {
                                    "arguments": [
                                      {
                                        "name": "value",
                                        "nodeType": "YulIdentifier",
                                        "src": "2731:5:5"
                                      },
                                      {
                                        "arguments": [
                                          {
                                            "name": "value",
                                            "nodeType": "YulIdentifier",
                                            "src": "2742:5:5"
                                          },
                                          {
                                            "arguments": [
                                              {
                                                "arguments": [
                                                  {
                                                    "kind": "number",
                                                    "nodeType": "YulLiteral",
                                                    "src": "2757:3:5",
                                                    "type": "",
                                                    "value": "160"
                                                  },
                                                  {
                                                    "kind": "number",
                                                    "nodeType": "YulLiteral",
                                                    "src": "2762:1:5",
                                                    "type": "",
                                                    "value": "1"
                                                  }
                                                ],
                                                "functionName": {
                                                  "name": "shl",
                                                  "nodeType": "YulIdentifier",
                                                  "src": "2753:3:5"
                                                },
                                                "nodeType": "YulFunctionCall",
                                                "src": "2753:11:5"
                                              },
                                              {
                                                "kind": "number",
                                                "nodeType": "YulLiteral",
                                                "src": "2766:1:5",
                                                "type": "",
                                                "value": "1"
                                              }
                                            ],
                                            "functionName": {
                                              "name": "sub",
                                              "nodeType": "YulIdentifier",
                                              "src": "2749:3:5"
                                            },
                                            "nodeType": "YulFunctionCall",
                                            "src": "2749:19:5"
                                          }
                                        ],
                                        "functionName": {
                                          "name": "and",
                                          "nodeType": "YulIdentifier",
                                          "src": "2738:3:5"
                                        },
                                        "nodeType": "YulFunctionCall",
                                        "src": "2738:31:5"
                                      }
                                    ],
                                    "functionName": {
                                      "name": "eq",
                                      "nodeType": "YulIdentifier",
                                      "src": "2728:2:5"
                                    },
                                    "nodeType": "YulFunctionCall",
                                    "src": "2728:42:5"
                                  }
                                ],
                                "functionName": {
                                  "name": "iszero",
                                  "nodeType": "YulIdentifier",
                                  "src": "2721:6:5"
                                },
                                "nodeType": "YulFunctionCall",
                                "src": "2721:50:5"
                              },
                              "nodeType": "YulIf",
                              "src": "2718:70:5"
                            },
                            {
                              "nodeType": "YulAssignment",
                              "src": "2797:15:5",
                              "value": {
                                "name": "value",
                                "nodeType": "YulIdentifier",
                                "src": "2807:5:5"
                              },
                              "variableNames": [
                                {
                                  "name": "value0",
                                  "nodeType": "YulIdentifier",
                                  "src": "2797:6:5"
                                }
                              ]
                            }
                          ]
                        },
                        "name": "abi_decode_tuple_t_address",
                        "nodeType": "YulFunctionDefinition",
                        "parameters": [
                          {
                            "name": "headStart",
                            "nodeType": "YulTypedName",
                            "src": "2568:9:5",
                            "type": ""
                          },
                          {
                            "name": "dataEnd",
                            "nodeType": "YulTypedName",
                            "src": "2579:7:5",
                            "type": ""
                          }
                        ],
                        "returnVariables": [
                          {
                            "name": "value0",
                            "nodeType": "YulTypedName",
                            "src": "2591:6:5",
                            "type": ""
                          }
                        ],
                        "src": "2532:286:5"
                      },
                      {
                        "body": {
                          "nodeType": "YulBlock",
                          "src": "2970:241:5",
                          "statements": [
                            {
                              "nodeType": "YulAssignment",
                              "src": "2980:26:5",
                              "value": {
                                "arguments": [
                                  {
                                    "name": "headStart",
                                    "nodeType": "YulIdentifier",
                                    "src": "2992:9:5"
                                  },
                                  {
                                    "kind": "number",
                                    "nodeType": "YulLiteral",
                                    "src": "3003:2:5",
                                    "type": "",
                                    "value": "96"
                                  }
                                ],
                                "functionName": {
                                  "name": "add",
                                  "nodeType": "YulIdentifier",
                                  "src": "2988:3:5"
                                },
                                "nodeType": "YulFunctionCall",
                                "src": "2988:18:5"
                              },
                              "variableNames": [
                                {
                                  "name": "tail",
                                  "nodeType": "YulIdentifier",
                                  "src": "2980:4:5"
                                }
                              ]
                            },
                            {
                              "expression": {
                                "arguments": [
                                  {
                                    "name": "headStart",
                                    "nodeType": "YulIdentifier",
                                    "src": "3022:9:5"
                                  },
                                  {
                                    "arguments": [
                                      {
                                        "arguments": [
                                          {
                                            "arguments": [
                                              {
                                                "name": "value0",
                                                "nodeType": "YulIdentifier",
                                                "src": "3053:6:5"
                                              }
                                            ],
                                            "functionName": {
                                              "name": "mload",
                                              "nodeType": "YulIdentifier",
                                              "src": "3047:5:5"
                                            },
                                            "nodeType": "YulFunctionCall",
                                            "src": "3047:13:5"
                                          }
                                        ],
                                        "functionName": {
                                          "name": "iszero",
                                          "nodeType": "YulIdentifier",
                                          "src": "3040:6:5"
                                        },
                                        "nodeType": "YulFunctionCall",
                                        "src": "3040:21:5"
                                      }
                                    ],
                                    "functionName": {
                                      "name": "iszero",
                                      "nodeType": "YulIdentifier",
                                      "src": "3033:6:5"
                                    },
                                    "nodeType": "YulFunctionCall",
                                    "src": "3033:29:5"
                                  }
                                ],
                                "functionName": {
                                  "name": "mstore",
                                  "nodeType": "YulIdentifier",
                                  "src": "3015:6:5"
                                },
                                "nodeType": "YulFunctionCall",
                                "src": "3015:48:5"
                              },
                              "nodeType": "YulExpressionStatement",
                              "src": "3015:48:5"
                            },
                            {
                              "expression": {
                                "arguments": [
                                  {
                                    "arguments": [
                                      {
                                        "name": "headStart",
                                        "nodeType": "YulIdentifier",
                                        "src": "3083:9:5"
                                      },
                                      {
                                        "kind": "number",
                                        "nodeType": "YulLiteral",
                                        "src": "3094:4:5",
                                        "type": "",
                                        "value": "0x20"
                                      }
                                    ],
                                    "functionName": {
                                      "name": "add",
                                      "nodeType": "YulIdentifier",
                                      "src": "3079:3:5"
                                    },
                                    "nodeType": "YulFunctionCall",
                                    "src": "3079:20:5"
                                  },
                                  {
                                    "arguments": [
                                      {
                                        "arguments": [
                                          {
                                            "arguments": [
                                              {
                                                "arguments": [
                                                  {
                                                    "name": "value0",
                                                    "nodeType": "YulIdentifier",
                                                    "src": "3125:6:5"
                                                  },
                                                  {
                                                    "kind": "number",
                                                    "nodeType": "YulLiteral",
                                                    "src": "3133:4:5",
                                                    "type": "",
                                                    "value": "0x20"
                                                  }
                                                ],
                                                "functionName": {
                                                  "name": "add",
                                                  "nodeType": "YulIdentifier",
                                                  "src": "3121:3:5"
                                                },
                                                "nodeType": "YulFunctionCall",
                                                "src": "3121:17:5"
                                              }
                                            ],
                                            "functionName": {
                                              "name": "mload",
                                              "nodeType": "YulIdentifier",
                                              "src": "3115:5:5"
                                            },
                                            "nodeType": "YulFunctionCall",
                                            "src": "3115:24:5"
                                          }
                                        ],
                                        "functionName": {
                                          "name": "iszero",
                                          "nodeType": "YulIdentifier",
                                          "src": "3108:6:5"
                                        },
                                        "nodeType": "YulFunctionCall",
                                        "src": "3108:32:5"
                                      }
                                    ],
                                    "functionName": {
                                      "name": "iszero",
                                      "nodeType": "YulIdentifier",
                                      "src": "3101:6:5"
                                    },
                                    "nodeType": "YulFunctionCall",
                                    "src": "3101:40:5"
                                  }
                                ],
                                "functionName": {
                                  "name": "mstore",
                                  "nodeType": "YulIdentifier",
                                  "src": "3072:6:5"
                                },
                                "nodeType": "YulFunctionCall",
                                "src": "3072:70:5"
                              },
                              "nodeType": "YulExpressionStatement",
                              "src": "3072:70:5"
                            },
                            {
                              "expression": {
                                "arguments": [
                                  {
                                    "arguments": [
                                      {
                                        "name": "headStart",
                                        "nodeType": "YulIdentifier",
                                        "src": "3162:9:5"
                                      },
                                      {
                                        "kind": "number",
                                        "nodeType": "YulLiteral",
                                        "src": "3173:4:5",
                                        "type": "",
                                        "value": "0x40"
                                      }
                                    ],
                                    "functionName": {
                                      "name": "add",
                                      "nodeType": "YulIdentifier",
                                      "src": "3158:3:5"
                                    },
                                    "nodeType": "YulFunctionCall",
                                    "src": "3158:20:5"
                                  },
                                  {
                                    "arguments": [
                                      {
                                        "arguments": [
                                          {
                                            "name": "value0",
                                            "nodeType": "YulIdentifier",
                                            "src": "3190:6:5"
                                          },
                                          {
                                            "kind": "number",
                                            "nodeType": "YulLiteral",
                                            "src": "3198:4:5",
                                            "type": "",
                                            "value": "0x40"
                                          }
                                        ],
                                        "functionName": {
                                          "name": "add",
                                          "nodeType": "YulIdentifier",
                                          "src": "3186:3:5"
                                        },
                                        "nodeType": "YulFunctionCall",
                                        "src": "3186:17:5"
                                      }
                                    ],
                                    "functionName": {
                                      "name": "mload",
                                      "nodeType": "YulIdentifier",
                                      "src": "3180:5:5"
                                    },
                                    "nodeType": "YulFunctionCall",
                                    "src": "3180:24:5"
                                  }
                                ],
                                "functionName": {
                                  "name": "mstore",
                                  "nodeType": "YulIdentifier",
                                  "src": "3151:6:5"
                                },
                                "nodeType": "YulFunctionCall",
                                "src": "3151:54:5"
                              },
                              "nodeType": "YulExpressionStatement",
                              "src": "3151:54:5"
                            }
                          ]
                        },
                        "name": "abi_encode_tuple_t_struct$_Voter_$1335_memory_ptr__to_t_struct$_Voter_$1335_memory_ptr__fromStack_reversed",
                        "nodeType": "YulFunctionDefinition",
                        "parameters": [
                          {
                            "name": "headStart",
                            "nodeType": "YulTypedName",
                            "src": "2939:9:5",
                            "type": ""
                          },
                          {
                            "name": "value0",
                            "nodeType": "YulTypedName",
                            "src": "2950:6:5",
                            "type": ""
                          }
                        ],
                        "returnVariables": [
                          {
                            "name": "tail",
                            "nodeType": "YulTypedName",
                            "src": "2961:4:5",
                            "type": ""
                          }
                        ],
                        "src": "2823:388:5"
                      },
                      {
                        "body": {
                          "nodeType": "YulBlock",
                          "src": "3390:168:5",
                          "statements": [
                            {
                              "expression": {
                                "arguments": [
                                  {
                                    "name": "headStart",
                                    "nodeType": "YulIdentifier",
                                    "src": "3407:9:5"
                                  },
                                  {
                                    "kind": "number",
                                    "nodeType": "YulLiteral",
                                    "src": "3418:2:5",
                                    "type": "",
                                    "value": "32"
                                  }
                                ],
                                "functionName": {
                                  "name": "mstore",
                                  "nodeType": "YulIdentifier",
                                  "src": "3400:6:5"
                                },
                                "nodeType": "YulFunctionCall",
                                "src": "3400:21:5"
                              },
                              "nodeType": "YulExpressionStatement",
                              "src": "3400:21:5"
                            },
                            {
                              "expression": {
                                "arguments": [
                                  {
                                    "arguments": [
                                      {
                                        "name": "headStart",
                                        "nodeType": "YulIdentifier",
                                        "src": "3441:9:5"
                                      },
                                      {
                                        "kind": "number",
                                        "nodeType": "YulLiteral",
                                        "src": "3452:2:5",
                                        "type": "",
                                        "value": "32"
                                      }
                                    ],
                                    "functionName": {
                                      "name": "add",
                                      "nodeType": "YulIdentifier",
                                      "src": "3437:3:5"
                                    },
                                    "nodeType": "YulFunctionCall",
                                    "src": "3437:18:5"
                                  },
                                  {
                                    "kind": "number",
                                    "nodeType": "YulLiteral",
                                    "src": "3457:2:5",
                                    "type": "",
                                    "value": "18"
                                  }
                                ],
                                "functionName": {
                                  "name": "mstore",
                                  "nodeType": "YulIdentifier",
                                  "src": "3430:6:5"
                                },
                                "nodeType": "YulFunctionCall",
                                "src": "3430:30:5"
                              },
                              "nodeType": "YulExpressionStatement",
                              "src": "3430:30:5"
                            },
                            {
                              "expression": {
                                "arguments": [
                                  {
                                    "arguments": [
                                      {
                                        "name": "headStart",
                                        "nodeType": "YulIdentifier",
                                        "src": "3480:9:5"
                                      },
                                      {
                                        "kind": "number",
                                        "nodeType": "YulLiteral",
                                        "src": "3491:2:5",
                                        "type": "",
                                        "value": "64"
                                      }
                                    ],
                                    "functionName": {
                                      "name": "add",
                                      "nodeType": "YulIdentifier",
                                      "src": "3476:3:5"
                                    },
                                    "nodeType": "YulFunctionCall",
                                    "src": "3476:18:5"
                                  },
                                  {
                                    "hexValue": "596f75277265206e6f74206120766f746572",
                                    "kind": "string",
                                    "nodeType": "YulLiteral",
                                    "src": "3496:20:5",
                                    "type": "",
                                    "value": "You're not a voter"
                                  }
                                ],
                                "functionName": {
                                  "name": "mstore",
                                  "nodeType": "YulIdentifier",
                                  "src": "3469:6:5"
                                },
                                "nodeType": "YulFunctionCall",
                                "src": "3469:48:5"
                              },
                              "nodeType": "YulExpressionStatement",
                              "src": "3469:48:5"
                            },
                            {
                              "nodeType": "YulAssignment",
                              "src": "3526:26:5",
                              "value": {
                                "arguments": [
                                  {
                                    "name": "headStart",
                                    "nodeType": "YulIdentifier",
                                    "src": "3538:9:5"
                                  },
                                  {
                                    "kind": "number",
                                    "nodeType": "YulLiteral",
                                    "src": "3549:2:5",
                                    "type": "",
                                    "value": "96"
                                  }
                                ],
                                "functionName": {
                                  "name": "add",
                                  "nodeType": "YulIdentifier",
                                  "src": "3534:3:5"
                                },
                                "nodeType": "YulFunctionCall",
                                "src": "3534:18:5"
                              },
                              "variableNames": [
                                {
                                  "name": "tail",
                                  "nodeType": "YulIdentifier",
                                  "src": "3526:4:5"
                                }
                              ]
                            }
                          ]
                        },
                        "name": "abi_encode_tuple_t_stringliteral_4ac8d0af2cd45fcc1fa588da657d5362c91a987e5991f233eaf7fb5c4b0c5a0a__to_t_string_memory_ptr__fromStack_reversed",
                        "nodeType": "YulFunctionDefinition",
                        "parameters": [
                          {
                            "name": "headStart",
                            "nodeType": "YulTypedName",
                            "src": "3367:9:5",
                            "type": ""
                          }
                        ],
                        "returnVariables": [
                          {
                            "name": "tail",
                            "nodeType": "YulTypedName",
                            "src": "3381:4:5",
                            "type": ""
                          }
                        ],
                        "src": "3216:342:5"
                      },
                      {
                        "body": {
                          "nodeType": "YulBlock",
                          "src": "3737:223:5",
                          "statements": [
                            {
                              "expression": {
                                "arguments": [
                                  {
                                    "name": "headStart",
                                    "nodeType": "YulIdentifier",
                                    "src": "3754:9:5"
                                  },
                                  {
                                    "kind": "number",
                                    "nodeType": "YulLiteral",
                                    "src": "3765:2:5",
                                    "type": "",
                                    "value": "32"
                                  }
                                ],
                                "functionName": {
                                  "name": "mstore",
                                  "nodeType": "YulIdentifier",
                                  "src": "3747:6:5"
                                },
                                "nodeType": "YulFunctionCall",
                                "src": "3747:21:5"
                              },
                              "nodeType": "YulExpressionStatement",
                              "src": "3747:21:5"
                            },
                            {
                              "expression": {
                                "arguments": [
                                  {
                                    "arguments": [
                                      {
                                        "name": "headStart",
                                        "nodeType": "YulIdentifier",
                                        "src": "3788:9:5"
                                      },
                                      {
                                        "kind": "number",
                                        "nodeType": "YulLiteral",
                                        "src": "3799:2:5",
                                        "type": "",
                                        "value": "32"
                                      }
                                    ],
                                    "functionName": {
                                      "name": "add",
                                      "nodeType": "YulIdentifier",
                                      "src": "3784:3:5"
                                    },
                                    "nodeType": "YulFunctionCall",
                                    "src": "3784:18:5"
                                  },
                                  {
                                    "kind": "number",
                                    "nodeType": "YulLiteral",
                                    "src": "3804:2:5",
                                    "type": "",
                                    "value": "33"
                                  }
                                ],
                                "functionName": {
                                  "name": "mstore",
                                  "nodeType": "YulIdentifier",
                                  "src": "3777:6:5"
                                },
                                "nodeType": "YulFunctionCall",
                                "src": "3777:30:5"
                              },
                              "nodeType": "YulExpressionStatement",
                              "src": "3777:30:5"
                            },
                            {
                              "expression": {
                                "arguments": [
                                  {
                                    "arguments": [
                                      {
                                        "name": "headStart",
                                        "nodeType": "YulIdentifier",
                                        "src": "3827:9:5"
                                      },
                                      {
                                        "kind": "number",
                                        "nodeType": "YulLiteral",
                                        "src": "3838:2:5",
                                        "type": "",
                                        "value": "64"
                                      }
                                    ],
                                    "functionName": {
                                      "name": "add",
                                      "nodeType": "YulIdentifier",
                                      "src": "3823:3:5"
                                    },
                                    "nodeType": "YulFunctionCall",
                                    "src": "3823:18:5"
                                  },
                                  {
                                    "hexValue": "566f74696e672073657373696f6e20686176656e742073746172746564207965",
                                    "kind": "string",
                                    "nodeType": "YulLiteral",
                                    "src": "3843:34:5",
                                    "type": "",
                                    "value": "Voting session havent started ye"
                                  }
                                ],
                                "functionName": {
                                  "name": "mstore",
                                  "nodeType": "YulIdentifier",
                                  "src": "3816:6:5"
                                },
                                "nodeType": "YulFunctionCall",
                                "src": "3816:62:5"
                              },
                              "nodeType": "YulExpressionStatement",
                              "src": "3816:62:5"
                            },
                            {
                              "expression": {
                                "arguments": [
                                  {
                                    "arguments": [
                                      {
                                        "name": "headStart",
                                        "nodeType": "YulIdentifier",
                                        "src": "3898:9:5"
                                      },
                                      {
                                        "kind": "number",
                                        "nodeType": "YulLiteral",
                                        "src": "3909:2:5",
                                        "type": "",
                                        "value": "96"
                                      }
                                    ],
                                    "functionName": {
                                      "name": "add",
                                      "nodeType": "YulIdentifier",
                                      "src": "3894:3:5"
                                    },
                                    "nodeType": "YulFunctionCall",
                                    "src": "3894:18:5"
                                  },
                                  {
                                    "hexValue": "74",
                                    "kind": "string",
                                    "nodeType": "YulLiteral",
                                    "src": "3914:3:5",
                                    "type": "",
                                    "value": "t"
                                  }
                                ],
                                "functionName": {
                                  "name": "mstore",
                                  "nodeType": "YulIdentifier",
                                  "src": "3887:6:5"
                                },
                                "nodeType": "YulFunctionCall",
                                "src": "3887:31:5"
                              },
                              "nodeType": "YulExpressionStatement",
                              "src": "3887:31:5"
                            },
                            {
                              "nodeType": "YulAssignment",
                              "src": "3927:27:5",
                              "value": {
                                "arguments": [
                                  {
                                    "name": "headStart",
                                    "nodeType": "YulIdentifier",
                                    "src": "3939:9:5"
                                  },
                                  {
                                    "kind": "number",
                                    "nodeType": "YulLiteral",
                                    "src": "3950:3:5",
                                    "type": "",
                                    "value": "128"
                                  }
                                ],
                                "functionName": {
                                  "name": "add",
                                  "nodeType": "YulIdentifier",
                                  "src": "3935:3:5"
                                },
                                "nodeType": "YulFunctionCall",
                                "src": "3935:19:5"
                              },
                              "variableNames": [
                                {
                                  "name": "tail",
                                  "nodeType": "YulIdentifier",
                                  "src": "3927:4:5"
                                }
                              ]
                            }
                          ]
                        },
                        "name": "abi_encode_tuple_t_stringliteral_62400aa7da0e280fc286fd5482d79ac3e2aa4e6d6dca70b4997f2ac0f4a46e72__to_t_string_memory_ptr__fromStack_reversed",
                        "nodeType": "YulFunctionDefinition",
                        "parameters": [
                          {
                            "name": "headStart",
                            "nodeType": "YulTypedName",
                            "src": "3714:9:5",
                            "type": ""
                          }
                        ],
                        "returnVariables": [
                          {
                            "name": "tail",
                            "nodeType": "YulTypedName",
                            "src": "3728:4:5",
                            "type": ""
                          }
                        ],
                        "src": "3563:397:5"
                      },
                      {
                        "body": {
                          "nodeType": "YulBlock",
                          "src": "4139:172:5",
                          "statements": [
                            {
                              "expression": {
                                "arguments": [
                                  {
                                    "name": "headStart",
                                    "nodeType": "YulIdentifier",
                                    "src": "4156:9:5"
                                  },
                                  {
                                    "kind": "number",
                                    "nodeType": "YulLiteral",
                                    "src": "4167:2:5",
                                    "type": "",
                                    "value": "32"
                                  }
                                ],
                                "functionName": {
                                  "name": "mstore",
                                  "nodeType": "YulIdentifier",
                                  "src": "4149:6:5"
                                },
                                "nodeType": "YulFunctionCall",
                                "src": "4149:21:5"
                              },
                              "nodeType": "YulExpressionStatement",
                              "src": "4149:21:5"
                            },
                            {
                              "expression": {
                                "arguments": [
                                  {
                                    "arguments": [
                                      {
                                        "name": "headStart",
                                        "nodeType": "YulIdentifier",
                                        "src": "4190:9:5"
                                      },
                                      {
                                        "kind": "number",
                                        "nodeType": "YulLiteral",
                                        "src": "4201:2:5",
                                        "type": "",
                                        "value": "32"
                                      }
                                    ],
                                    "functionName": {
                                      "name": "add",
                                      "nodeType": "YulIdentifier",
                                      "src": "4186:3:5"
                                    },
                                    "nodeType": "YulFunctionCall",
                                    "src": "4186:18:5"
                                  },
                                  {
                                    "kind": "number",
                                    "nodeType": "YulLiteral",
                                    "src": "4206:2:5",
                                    "type": "",
                                    "value": "22"
                                  }
                                ],
                                "functionName": {
                                  "name": "mstore",
                                  "nodeType": "YulIdentifier",
                                  "src": "4179:6:5"
                                },
                                "nodeType": "YulFunctionCall",
                                "src": "4179:30:5"
                              },
                              "nodeType": "YulExpressionStatement",
                              "src": "4179:30:5"
                            },
                            {
                              "expression": {
                                "arguments": [
                                  {
                                    "arguments": [
                                      {
                                        "name": "headStart",
                                        "nodeType": "YulIdentifier",
                                        "src": "4229:9:5"
                                      },
                                      {
                                        "kind": "number",
                                        "nodeType": "YulLiteral",
                                        "src": "4240:2:5",
                                        "type": "",
                                        "value": "64"
                                      }
                                    ],
                                    "functionName": {
                                      "name": "add",
                                      "nodeType": "YulIdentifier",
                                      "src": "4225:3:5"
                                    },
                                    "nodeType": "YulFunctionCall",
                                    "src": "4225:18:5"
                                  },
                                  {
                                    "hexValue": "596f75206861766520616c726561647920766f746564",
                                    "kind": "string",
                                    "nodeType": "YulLiteral",
                                    "src": "4245:24:5",
                                    "type": "",
                                    "value": "You have already voted"
                                  }
                                ],
                                "functionName": {
                                  "name": "mstore",
                                  "nodeType": "YulIdentifier",
                                  "src": "4218:6:5"
                                },
                                "nodeType": "YulFunctionCall",
                                "src": "4218:52:5"
                              },
                              "nodeType": "YulExpressionStatement",
                              "src": "4218:52:5"
                            },
                            {
                              "nodeType": "YulAssignment",
                              "src": "4279:26:5",
                              "value": {
                                "arguments": [
                                  {
                                    "name": "headStart",
                                    "nodeType": "YulIdentifier",
                                    "src": "4291:9:5"
                                  },
                                  {
                                    "kind": "number",
                                    "nodeType": "YulLiteral",
                                    "src": "4302:2:5",
                                    "type": "",
                                    "value": "96"
                                  }
                                ],
                                "functionName": {
                                  "name": "add",
                                  "nodeType": "YulIdentifier",
                                  "src": "4287:3:5"
                                },
                                "nodeType": "YulFunctionCall",
                                "src": "4287:18:5"
                              },
                              "variableNames": [
                                {
                                  "name": "tail",
                                  "nodeType": "YulIdentifier",
                                  "src": "4279:4:5"
                                }
                              ]
                            }
                          ]
                        },
                        "name": "abi_encode_tuple_t_stringliteral_f717c48f565c1f6c8c7139cf54f577e481ac65760eb92c077a08597c622f2a8a__to_t_string_memory_ptr__fromStack_reversed",
                        "nodeType": "YulFunctionDefinition",
                        "parameters": [
                          {
                            "name": "headStart",
                            "nodeType": "YulTypedName",
                            "src": "4116:9:5",
                            "type": ""
                          }
                        ],
                        "returnVariables": [
                          {
                            "name": "tail",
                            "nodeType": "YulTypedName",
                            "src": "4130:4:5",
                            "type": ""
                          }
                        ],
                        "src": "3965:346:5"
                      },
                      {
                        "body": {
                          "nodeType": "YulBlock",
                          "src": "4490:168:5",
                          "statements": [
                            {
                              "expression": {
                                "arguments": [
                                  {
                                    "name": "headStart",
                                    "nodeType": "YulIdentifier",
                                    "src": "4507:9:5"
                                  },
                                  {
                                    "kind": "number",
                                    "nodeType": "YulLiteral",
                                    "src": "4518:2:5",
                                    "type": "",
                                    "value": "32"
                                  }
                                ],
                                "functionName": {
                                  "name": "mstore",
                                  "nodeType": "YulIdentifier",
                                  "src": "4500:6:5"
                                },
                                "nodeType": "YulFunctionCall",
                                "src": "4500:21:5"
                              },
                              "nodeType": "YulExpressionStatement",
                              "src": "4500:21:5"
                            },
                            {
                              "expression": {
                                "arguments": [
                                  {
                                    "arguments": [
                                      {
                                        "name": "headStart",
                                        "nodeType": "YulIdentifier",
                                        "src": "4541:9:5"
                                      },
                                      {
                                        "kind": "number",
                                        "nodeType": "YulLiteral",
                                        "src": "4552:2:5",
                                        "type": "",
                                        "value": "32"
                                      }
                                    ],
                                    "functionName": {
                                      "name": "add",
                                      "nodeType": "YulIdentifier",
                                      "src": "4537:3:5"
                                    },
                                    "nodeType": "YulFunctionCall",
                                    "src": "4537:18:5"
                                  },
                                  {
                                    "kind": "number",
                                    "nodeType": "YulLiteral",
                                    "src": "4557:2:5",
                                    "type": "",
                                    "value": "18"
                                  }
                                ],
                                "functionName": {
                                  "name": "mstore",
                                  "nodeType": "YulIdentifier",
                                  "src": "4530:6:5"
                                },
                                "nodeType": "YulFunctionCall",
                                "src": "4530:30:5"
                              },
                              "nodeType": "YulExpressionStatement",
                              "src": "4530:30:5"
                            },
                            {
                              "expression": {
                                "arguments": [
                                  {
                                    "arguments": [
                                      {
                                        "name": "headStart",
                                        "nodeType": "YulIdentifier",
                                        "src": "4580:9:5"
                                      },
                                      {
                                        "kind": "number",
                                        "nodeType": "YulLiteral",
                                        "src": "4591:2:5",
                                        "type": "",
                                        "value": "64"
                                      }
                                    ],
                                    "functionName": {
                                      "name": "add",
                                      "nodeType": "YulIdentifier",
                                      "src": "4576:3:5"
                                    },
                                    "nodeType": "YulFunctionCall",
                                    "src": "4576:18:5"
                                  },
                                  {
                                    "hexValue": "50726f706f73616c206e6f7420666f756e64",
                                    "kind": "string",
                                    "nodeType": "YulLiteral",
                                    "src": "4596:20:5",
                                    "type": "",
                                    "value": "Proposal not found"
                                  }
                                ],
                                "functionName": {
                                  "name": "mstore",
                                  "nodeType": "YulIdentifier",
                                  "src": "4569:6:5"
                                },
                                "nodeType": "YulFunctionCall",
                                "src": "4569:48:5"
                              },
                              "nodeType": "YulExpressionStatement",
                              "src": "4569:48:5"
                            },
                            {
                              "nodeType": "YulAssignment",
                              "src": "4626:26:5",
                              "value": {
                                "arguments": [
                                  {
                                    "name": "headStart",
                                    "nodeType": "YulIdentifier",
                                    "src": "4638:9:5"
                                  },
                                  {
                                    "kind": "number",
                                    "nodeType": "YulLiteral",
                                    "src": "4649:2:5",
                                    "type": "",
                                    "value": "96"
                                  }
                                ],
                                "functionName": {
                                  "name": "add",
                                  "nodeType": "YulIdentifier",
                                  "src": "4634:3:5"
                                },
                                "nodeType": "YulFunctionCall",
                                "src": "4634:18:5"
                              },
                              "variableNames": [
                                {
                                  "name": "tail",
                                  "nodeType": "YulIdentifier",
                                  "src": "4626:4:5"
                                }
                              ]
                            }
                          ]
                        },
                        "name": "abi_encode_tuple_t_stringliteral_bcf95e6a362746bd232f2b944afd538b26aa461607b394f948bce2609a1a50c9__to_t_string_memory_ptr__fromStack_reversed",
                        "nodeType": "YulFunctionDefinition",
                        "parameters": [
                          {
                            "name": "headStart",
                            "nodeType": "YulTypedName",
                            "src": "4467:9:5",
                            "type": ""
                          }
                        ],
                        "returnVariables": [
                          {
                            "name": "tail",
                            "nodeType": "YulTypedName",
                            "src": "4481:4:5",
                            "type": ""
                          }
                        ],
                        "src": "4316:342:5"
                      },
                      {
                        "body": {
                          "nodeType": "YulBlock",
                          "src": "4695:95:5",
                          "statements": [
                            {
                              "expression": {
                                "arguments": [
                                  {
                                    "kind": "number",
                                    "nodeType": "YulLiteral",
                                    "src": "4712:1:5",
                                    "type": "",
                                    "value": "0"
                                  },
                                  {
                                    "arguments": [
                                      {
                                        "kind": "number",
                                        "nodeType": "YulLiteral",
                                        "src": "4719:3:5",
                                        "type": "",
                                        "value": "224"
                                      },
                                      {
                                        "kind": "number",
                                        "nodeType": "YulLiteral",
                                        "src": "4724:10:5",
                                        "type": "",
                                        "value": "0x4e487b71"
                                      }
                                    ],
                                    "functionName": {
                                      "name": "shl",
                                      "nodeType": "YulIdentifier",
                                      "src": "4715:3:5"
                                    },
                                    "nodeType": "YulFunctionCall",
                                    "src": "4715:20:5"
                                  }
                                ],
                                "functionName": {
                                  "name": "mstore",
                                  "nodeType": "YulIdentifier",
                                  "src": "4705:6:5"
                                },
                                "nodeType": "YulFunctionCall",
                                "src": "4705:31:5"
                              },
                              "nodeType": "YulExpressionStatement",
                              "src": "4705:31:5"
                            },
                            {
                              "expression": {
                                "arguments": [
                                  {
                                    "kind": "number",
                                    "nodeType": "YulLiteral",
                                    "src": "4752:1:5",
                                    "type": "",
                                    "value": "4"
                                  },
                                  {
                                    "kind": "number",
                                    "nodeType": "YulLiteral",
                                    "src": "4755:4:5",
                                    "type": "",
                                    "value": "0x32"
                                  }
                                ],
                                "functionName": {
                                  "name": "mstore",
                                  "nodeType": "YulIdentifier",
                                  "src": "4745:6:5"
                                },
                                "nodeType": "YulFunctionCall",
                                "src": "4745:15:5"
                              },
                              "nodeType": "YulExpressionStatement",
                              "src": "4745:15:5"
                            },
                            {
                              "expression": {
                                "arguments": [
                                  {
                                    "kind": "number",
                                    "nodeType": "YulLiteral",
                                    "src": "4776:1:5",
                                    "type": "",
                                    "value": "0"
                                  },
                                  {
                                    "kind": "number",
                                    "nodeType": "YulLiteral",
                                    "src": "4779:4:5",
                                    "type": "",
                                    "value": "0x24"
                                  }
                                ],
                                "functionName": {
                                  "name": "revert",
                                  "nodeType": "YulIdentifier",
                                  "src": "4769:6:5"
                                },
                                "nodeType": "YulFunctionCall",
                                "src": "4769:15:5"
                              },
                              "nodeType": "YulExpressionStatement",
                              "src": "4769:15:5"
                            }
                          ]
                        },
                        "name": "panic_error_0x32",
                        "nodeType": "YulFunctionDefinition",
                        "src": "4663:127:5"
                      },
                      {
                        "body": {
                          "nodeType": "YulBlock",
                          "src": "4827:95:5",
                          "statements": [
                            {
                              "expression": {
                                "arguments": [
                                  {
                                    "kind": "number",
                                    "nodeType": "YulLiteral",
                                    "src": "4844:1:5",
                                    "type": "",
                                    "value": "0"
                                  },
                                  {
                                    "arguments": [
                                      {
                                        "kind": "number",
                                        "nodeType": "YulLiteral",
                                        "src": "4851:3:5",
                                        "type": "",
                                        "value": "224"
                                      },
                                      {
                                        "kind": "number",
                                        "nodeType": "YulLiteral",
                                        "src": "4856:10:5",
                                        "type": "",
                                        "value": "0x4e487b71"
                                      }
                                    ],
                                    "functionName": {
                                      "name": "shl",
                                      "nodeType": "YulIdentifier",
                                      "src": "4847:3:5"
                                    },
                                    "nodeType": "YulFunctionCall",
                                    "src": "4847:20:5"
                                  }
                                ],
                                "functionName": {
                                  "name": "mstore",
                                  "nodeType": "YulIdentifier",
                                  "src": "4837:6:5"
                                },
                                "nodeType": "YulFunctionCall",
                                "src": "4837:31:5"
                              },
                              "nodeType": "YulExpressionStatement",
                              "src": "4837:31:5"
                            },
                            {
                              "expression": {
                                "arguments": [
                                  {
                                    "kind": "number",
                                    "nodeType": "YulLiteral",
                                    "src": "4884:1:5",
                                    "type": "",
                                    "value": "4"
                                  },
                                  {
                                    "kind": "number",
                                    "nodeType": "YulLiteral",
                                    "src": "4887:4:5",
                                    "type": "",
                                    "value": "0x11"
                                  }
                                ],
                                "functionName": {
                                  "name": "mstore",
                                  "nodeType": "YulIdentifier",
                                  "src": "4877:6:5"
                                },
                                "nodeType": "YulFunctionCall",
                                "src": "4877:15:5"
                              },
                              "nodeType": "YulExpressionStatement",
                              "src": "4877:15:5"
                            },
                            {
                              "expression": {
                                "arguments": [
                                  {
                                    "kind": "number",
                                    "nodeType": "YulLiteral",
                                    "src": "4908:1:5",
                                    "type": "",
                                    "value": "0"
                                  },
                                  {
                                    "kind": "number",
                                    "nodeType": "YulLiteral",
                                    "src": "4911:4:5",
                                    "type": "",
                                    "value": "0x24"
                                  }
                                ],
                                "functionName": {
                                  "name": "revert",
                                  "nodeType": "YulIdentifier",
                                  "src": "4901:6:5"
                                },
                                "nodeType": "YulFunctionCall",
                                "src": "4901:15:5"
                              },
                              "nodeType": "YulExpressionStatement",
                              "src": "4901:15:5"
                            }
                          ]
                        },
                        "name": "panic_error_0x11",
                        "nodeType": "YulFunctionDefinition",
                        "src": "4795:127:5"
                      },
                      {
                        "body": {
                          "nodeType": "YulBlock",
                          "src": "4974:88:5",
                          "statements": [
                            {
                              "body": {
                                "nodeType": "YulBlock",
                                "src": "5005:22:5",
                                "statements": [
                                  {
                                    "expression": {
                                      "arguments": [],
                                      "functionName": {
                                        "name": "panic_error_0x11",
                                        "nodeType": "YulIdentifier",
                                        "src": "5007:16:5"
                                      },
                                      "nodeType": "YulFunctionCall",
                                      "src": "5007:18:5"
                                    },
                                    "nodeType": "YulExpressionStatement",
                                    "src": "5007:18:5"
                                  }
                                ]
                              },
                              "condition": {
                                "arguments": [
                                  {
                                    "name": "value",
                                    "nodeType": "YulIdentifier",
                                    "src": "4990:5:5"
                                  },
                                  {
                                    "arguments": [
                                      {
                                        "kind": "number",
                                        "nodeType": "YulLiteral",
                                        "src": "5001:1:5",
                                        "type": "",
                                        "value": "0"
                                      }
                                    ],
                                    "functionName": {
                                      "name": "not",
                                      "nodeType": "YulIdentifier",
                                      "src": "4997:3:5"
                                    },
                                    "nodeType": "YulFunctionCall",
                                    "src": "4997:6:5"
                                  }
                                ],
                                "functionName": {
                                  "name": "eq",
                                  "nodeType": "YulIdentifier",
                                  "src": "4987:2:5"
                                },
                                "nodeType": "YulFunctionCall",
                                "src": "4987:17:5"
                              },
                              "nodeType": "YulIf",
                              "src": "4984:43:5"
                            },
                            {
                              "nodeType": "YulAssignment",
                              "src": "5036:20:5",
                              "value": {
                                "arguments": [
                                  {
                                    "name": "value",
                                    "nodeType": "YulIdentifier",
                                    "src": "5047:5:5"
                                  },
                                  {
                                    "kind": "number",
                                    "nodeType": "YulLiteral",
                                    "src": "5054:1:5",
                                    "type": "",
                                    "value": "1"
                                  }
                                ],
                                "functionName": {
                                  "name": "add",
                                  "nodeType": "YulIdentifier",
                                  "src": "5043:3:5"
                                },
                                "nodeType": "YulFunctionCall",
                                "src": "5043:13:5"
                              },
                              "variableNames": [
                                {
                                  "name": "ret",
                                  "nodeType": "YulIdentifier",
                                  "src": "5036:3:5"
                                }
                              ]
                            }
                          ]
                        },
                        "name": "increment_t_uint256",
                        "nodeType": "YulFunctionDefinition",
                        "parameters": [
                          {
                            "name": "value",
                            "nodeType": "YulTypedName",
                            "src": "4956:5:5",
                            "type": ""
                          }
                        ],
                        "returnVariables": [
                          {
                            "name": "ret",
                            "nodeType": "YulTypedName",
                            "src": "4966:3:5",
                            "type": ""
                          }
                        ],
                        "src": "4927:135:5"
                      },
                      {
                        "body": {
                          "nodeType": "YulBlock",
                          "src": "5196:145:5",
                          "statements": [
                            {
                              "nodeType": "YulAssignment",
                              "src": "5206:26:5",
                              "value": {
                                "arguments": [
                                  {
                                    "name": "headStart",
                                    "nodeType": "YulIdentifier",
                                    "src": "5218:9:5"
                                  },
                                  {
                                    "kind": "number",
                                    "nodeType": "YulLiteral",
                                    "src": "5229:2:5",
                                    "type": "",
                                    "value": "64"
                                  }
                                ],
                                "functionName": {
                                  "name": "add",
                                  "nodeType": "YulIdentifier",
                                  "src": "5214:3:5"
                                },
                                "nodeType": "YulFunctionCall",
                                "src": "5214:18:5"
                              },
                              "variableNames": [
                                {
                                  "name": "tail",
                                  "nodeType": "YulIdentifier",
                                  "src": "5206:4:5"
                                }
                              ]
                            },
                            {
                              "expression": {
                                "arguments": [
                                  {
                                    "name": "headStart",
                                    "nodeType": "YulIdentifier",
                                    "src": "5248:9:5"
                                  },
                                  {
                                    "arguments": [
                                      {
                                        "name": "value0",
                                        "nodeType": "YulIdentifier",
                                        "src": "5263:6:5"
                                      },
                                      {
                                        "arguments": [
                                          {
                                            "arguments": [
                                              {
                                                "kind": "number",
                                                "nodeType": "YulLiteral",
                                                "src": "5279:3:5",
                                                "type": "",
                                                "value": "160"
                                              },
                                              {
                                                "kind": "number",
                                                "nodeType": "YulLiteral",
                                                "src": "5284:1:5",
                                                "type": "",
                                                "value": "1"
                                              }
                                            ],
                                            "functionName": {
                                              "name": "shl",
                                              "nodeType": "YulIdentifier",
                                              "src": "5275:3:5"
                                            },
                                            "nodeType": "YulFunctionCall",
                                            "src": "5275:11:5"
                                          },
                                          {
                                            "kind": "number",
                                            "nodeType": "YulLiteral",
                                            "src": "5288:1:5",
                                            "type": "",
                                            "value": "1"
                                          }
                                        ],
                                        "functionName": {
                                          "name": "sub",
                                          "nodeType": "YulIdentifier",
                                          "src": "5271:3:5"
                                        },
                                        "nodeType": "YulFunctionCall",
                                        "src": "5271:19:5"
                                      }
                                    ],
                                    "functionName": {
                                      "name": "and",
                                      "nodeType": "YulIdentifier",
                                      "src": "5259:3:5"
                                    },
                                    "nodeType": "YulFunctionCall",
                                    "src": "5259:32:5"
                                  }
                                ],
                                "functionName": {
                                  "name": "mstore",
                                  "nodeType": "YulIdentifier",
                                  "src": "5241:6:5"
                                },
                                "nodeType": "YulFunctionCall",
                                "src": "5241:51:5"
                              },
                              "nodeType": "YulExpressionStatement",
                              "src": "5241:51:5"
                            },
                            {
                              "expression": {
                                "arguments": [
                                  {
                                    "arguments": [
                                      {
                                        "name": "headStart",
                                        "nodeType": "YulIdentifier",
                                        "src": "5312:9:5"
                                      },
                                      {
                                        "kind": "number",
                                        "nodeType": "YulLiteral",
                                        "src": "5323:2:5",
                                        "type": "",
                                        "value": "32"
                                      }
                                    ],
                                    "functionName": {
                                      "name": "add",
                                      "nodeType": "YulIdentifier",
                                      "src": "5308:3:5"
                                    },
                                    "nodeType": "YulFunctionCall",
                                    "src": "5308:18:5"
                                  },
                                  {
                                    "name": "value1",
                                    "nodeType": "YulIdentifier",
                                    "src": "5328:6:5"
                                  }
                                ],
                                "functionName": {
                                  "name": "mstore",
                                  "nodeType": "YulIdentifier",
                                  "src": "5301:6:5"
                                },
                                "nodeType": "YulFunctionCall",
                                "src": "5301:34:5"
                              },
                              "nodeType": "YulExpressionStatement",
                              "src": "5301:34:5"
                            }
                          ]
                        },
                        "name": "abi_encode_tuple_t_address_t_uint256__to_t_address_t_uint256__fromStack_reversed",
                        "nodeType": "YulFunctionDefinition",
                        "parameters": [
                          {
                            "name": "headStart",
                            "nodeType": "YulTypedName",
                            "src": "5157:9:5",
                            "type": ""
                          },
                          {
                            "name": "value1",
                            "nodeType": "YulTypedName",
                            "src": "5168:6:5",
                            "type": ""
                          },
                          {
                            "name": "value0",
                            "nodeType": "YulTypedName",
                            "src": "5176:6:5",
                            "type": ""
                          }
                        ],
                        "returnVariables": [
                          {
                            "name": "tail",
                            "nodeType": "YulTypedName",
                            "src": "5187:4:5",
                            "type": ""
                          }
                        ],
                        "src": "5067:274:5"
                      },
                      {
                        "body": {
                          "nodeType": "YulBlock",
                          "src": "5520:179:5",
                          "statements": [
                            {
                              "expression": {
                                "arguments": [
                                  {
                                    "name": "headStart",
                                    "nodeType": "YulIdentifier",
                                    "src": "5537:9:5"
                                  },
                                  {
                                    "kind": "number",
                                    "nodeType": "YulLiteral",
                                    "src": "5548:2:5",
                                    "type": "",
                                    "value": "32"
                                  }
                                ],
                                "functionName": {
                                  "name": "mstore",
                                  "nodeType": "YulIdentifier",
                                  "src": "5530:6:5"
                                },
                                "nodeType": "YulFunctionCall",
                                "src": "5530:21:5"
                              },
                              "nodeType": "YulExpressionStatement",
                              "src": "5530:21:5"
                            },
                            {
                              "expression": {
                                "arguments": [
                                  {
                                    "arguments": [
                                      {
                                        "name": "headStart",
                                        "nodeType": "YulIdentifier",
                                        "src": "5571:9:5"
                                      },
                                      {
                                        "kind": "number",
                                        "nodeType": "YulLiteral",
                                        "src": "5582:2:5",
                                        "type": "",
                                        "value": "32"
                                      }
                                    ],
                                    "functionName": {
                                      "name": "add",
                                      "nodeType": "YulIdentifier",
                                      "src": "5567:3:5"
                                    },
                                    "nodeType": "YulFunctionCall",
                                    "src": "5567:18:5"
                                  },
                                  {
                                    "kind": "number",
                                    "nodeType": "YulLiteral",
                                    "src": "5587:2:5",
                                    "type": "",
                                    "value": "29"
                                  }
                                ],
                                "functionName": {
                                  "name": "mstore",
                                  "nodeType": "YulIdentifier",
                                  "src": "5560:6:5"
                                },
                                "nodeType": "YulFunctionCall",
                                "src": "5560:30:5"
                              },
                              "nodeType": "YulExpressionStatement",
                              "src": "5560:30:5"
                            },
                            {
                              "expression": {
                                "arguments": [
                                  {
                                    "arguments": [
                                      {
                                        "name": "headStart",
                                        "nodeType": "YulIdentifier",
                                        "src": "5610:9:5"
                                      },
                                      {
                                        "kind": "number",
                                        "nodeType": "YulLiteral",
                                        "src": "5621:2:5",
                                        "type": "",
                                        "value": "64"
                                      }
                                    ],
                                    "functionName": {
                                      "name": "add",
                                      "nodeType": "YulIdentifier",
                                      "src": "5606:3:5"
                                    },
                                    "nodeType": "YulFunctionCall",
                                    "src": "5606:18:5"
                                  },
                                  {
                                    "hexValue": "50726f706f73616c7320617265206e6f7420616c6c6f77656420796574",
                                    "kind": "string",
                                    "nodeType": "YulLiteral",
                                    "src": "5626:31:5",
                                    "type": "",
                                    "value": "Proposals are not allowed yet"
                                  }
                                ],
                                "functionName": {
                                  "name": "mstore",
                                  "nodeType": "YulIdentifier",
                                  "src": "5599:6:5"
                                },
                                "nodeType": "YulFunctionCall",
                                "src": "5599:59:5"
                              },
                              "nodeType": "YulExpressionStatement",
                              "src": "5599:59:5"
                            },
                            {
                              "nodeType": "YulAssignment",
                              "src": "5667:26:5",
                              "value": {
                                "arguments": [
                                  {
                                    "name": "headStart",
                                    "nodeType": "YulIdentifier",
                                    "src": "5679:9:5"
                                  },
                                  {
                                    "kind": "number",
                                    "nodeType": "YulLiteral",
                                    "src": "5690:2:5",
                                    "type": "",
                                    "value": "96"
                                  }
                                ],
                                "functionName": {
                                  "name": "add",
                                  "nodeType": "YulIdentifier",
                                  "src": "5675:3:5"
                                },
                                "nodeType": "YulFunctionCall",
                                "src": "5675:18:5"
                              },
                              "variableNames": [
                                {
                                  "name": "tail",
                                  "nodeType": "YulIdentifier",
                                  "src": "5667:4:5"
                                }
                              ]
                            }
                          ]
                        },
                        "name": "abi_encode_tuple_t_stringliteral_6cc4ccc1a7d3097254b36ddb7a78effd34b6d9f8b0b1bad60ab55e8a2f5f45a4__to_t_string_memory_ptr__fromStack_reversed",
                        "nodeType": "YulFunctionDefinition",
                        "parameters": [
                          {
                            "name": "headStart",
                            "nodeType": "YulTypedName",
                            "src": "5497:9:5",
                            "type": ""
                          }
                        ],
                        "returnVariables": [
                          {
                            "name": "tail",
                            "nodeType": "YulTypedName",
                            "src": "5511:4:5",
                            "type": ""
                          }
                        ],
                        "src": "5346:353:5"
                      },
                      {
                        "body": {
                          "nodeType": "YulBlock",
                          "src": "5878:110:5",
                          "statements": [
                            {
                              "expression": {
                                "arguments": [
                                  {
                                    "name": "headStart",
                                    "nodeType": "YulIdentifier",
                                    "src": "5895:9:5"
                                  },
                                  {
                                    "kind": "number",
                                    "nodeType": "YulLiteral",
                                    "src": "5906:2:5",
                                    "type": "",
                                    "value": "32"
                                  }
                                ],
                                "functionName": {
                                  "name": "mstore",
                                  "nodeType": "YulIdentifier",
                                  "src": "5888:6:5"
                                },
                                "nodeType": "YulFunctionCall",
                                "src": "5888:21:5"
                              },
                              "nodeType": "YulExpressionStatement",
                              "src": "5888:21:5"
                            },
                            {
                              "expression": {
                                "arguments": [
                                  {
                                    "arguments": [
                                      {
                                        "name": "headStart",
                                        "nodeType": "YulIdentifier",
                                        "src": "5929:9:5"
                                      },
                                      {
                                        "kind": "number",
                                        "nodeType": "YulLiteral",
                                        "src": "5940:2:5",
                                        "type": "",
                                        "value": "32"
                                      }
                                    ],
                                    "functionName": {
                                      "name": "add",
                                      "nodeType": "YulIdentifier",
                                      "src": "5925:3:5"
                                    },
                                    "nodeType": "YulFunctionCall",
                                    "src": "5925:18:5"
                                  },
                                  {
                                    "kind": "number",
                                    "nodeType": "YulLiteral",
                                    "src": "5945:1:5",
                                    "type": "",
                                    "value": "0"
                                  }
                                ],
                                "functionName": {
                                  "name": "mstore",
                                  "nodeType": "YulIdentifier",
                                  "src": "5918:6:5"
                                },
                                "nodeType": "YulFunctionCall",
                                "src": "5918:29:5"
                              },
                              "nodeType": "YulExpressionStatement",
                              "src": "5918:29:5"
                            },
                            {
                              "nodeType": "YulAssignment",
                              "src": "5956:26:5",
                              "value": {
                                "arguments": [
                                  {
                                    "name": "headStart",
                                    "nodeType": "YulIdentifier",
                                    "src": "5968:9:5"
                                  },
                                  {
                                    "kind": "number",
                                    "nodeType": "YulLiteral",
                                    "src": "5979:2:5",
                                    "type": "",
                                    "value": "64"
                                  }
                                ],
                                "functionName": {
                                  "name": "add",
                                  "nodeType": "YulIdentifier",
                                  "src": "5964:3:5"
                                },
                                "nodeType": "YulFunctionCall",
                                "src": "5964:18:5"
                              },
                              "variableNames": [
                                {
                                  "name": "tail",
                                  "nodeType": "YulIdentifier",
                                  "src": "5956:4:5"
                                }
                              ]
                            }
                          ]
                        },
                        "name": "abi_encode_tuple_t_stringliteral_c5d2460186f7233c927e7db2dcc703c0e500b653ca82273b7bfad8045d85a470__to_t_string_memory_ptr__fromStack_reversed",
                        "nodeType": "YulFunctionDefinition",
                        "parameters": [
                          {
                            "name": "headStart",
                            "nodeType": "YulTypedName",
                            "src": "5855:9:5",
                            "type": ""
                          }
                        ],
                        "returnVariables": [
                          {
                            "name": "tail",
                            "nodeType": "YulTypedName",
                            "src": "5869:4:5",
                            "type": ""
                          }
                        ],
                        "src": "5704:284:5"
                      },
                      {
                        "body": {
                          "nodeType": "YulBlock",
                          "src": "6124:259:5",
                          "statements": [
                            {
                              "expression": {
                                "arguments": [
                                  {
                                    "name": "headStart",
                                    "nodeType": "YulIdentifier",
                                    "src": "6141:9:5"
                                  },
                                  {
                                    "kind": "number",
                                    "nodeType": "YulLiteral",
                                    "src": "6152:2:5",
                                    "type": "",
                                    "value": "32"
                                  }
                                ],
                                "functionName": {
                                  "name": "mstore",
                                  "nodeType": "YulIdentifier",
                                  "src": "6134:6:5"
                                },
                                "nodeType": "YulFunctionCall",
                                "src": "6134:21:5"
                              },
                              "nodeType": "YulExpressionStatement",
                              "src": "6134:21:5"
                            },
                            {
                              "expression": {
                                "arguments": [
                                  {
                                    "arguments": [
                                      {
                                        "name": "headStart",
                                        "nodeType": "YulIdentifier",
                                        "src": "6175:9:5"
                                      },
                                      {
                                        "kind": "number",
                                        "nodeType": "YulLiteral",
                                        "src": "6186:2:5",
                                        "type": "",
                                        "value": "32"
                                      }
                                    ],
                                    "functionName": {
                                      "name": "add",
                                      "nodeType": "YulIdentifier",
                                      "src": "6171:3:5"
                                    },
                                    "nodeType": "YulFunctionCall",
                                    "src": "6171:18:5"
                                  },
                                  {
                                    "name": "value1",
                                    "nodeType": "YulIdentifier",
                                    "src": "6191:6:5"
                                  }
                                ],
                                "functionName": {
                                  "name": "mstore",
                                  "nodeType": "YulIdentifier",
                                  "src": "6164:6:5"
                                },
                                "nodeType": "YulFunctionCall",
                                "src": "6164:34:5"
                              },
                              "nodeType": "YulExpressionStatement",
                              "src": "6164:34:5"
                            },
                            {
                              "expression": {
                                "arguments": [
                                  {
                                    "arguments": [
                                      {
                                        "name": "headStart",
                                        "nodeType": "YulIdentifier",
                                        "src": "6224:9:5"
                                      },
                                      {
                                        "kind": "number",
                                        "nodeType": "YulLiteral",
                                        "src": "6235:2:5",
                                        "type": "",
                                        "value": "64"
                                      }
                                    ],
                                    "functionName": {
                                      "name": "add",
                                      "nodeType": "YulIdentifier",
                                      "src": "6220:3:5"
                                    },
                                    "nodeType": "YulFunctionCall",
                                    "src": "6220:18:5"
                                  },
                                  {
                                    "name": "value0",
                                    "nodeType": "YulIdentifier",
                                    "src": "6240:6:5"
                                  },
                                  {
                                    "name": "value1",
                                    "nodeType": "YulIdentifier",
                                    "src": "6248:6:5"
                                  }
                                ],
                                "functionName": {
                                  "name": "calldatacopy",
                                  "nodeType": "YulIdentifier",
                                  "src": "6207:12:5"
                                },
                                "nodeType": "YulFunctionCall",
                                "src": "6207:48:5"
                              },
                              "nodeType": "YulExpressionStatement",
                              "src": "6207:48:5"
                            },
                            {
                              "expression": {
                                "arguments": [
                                  {
                                    "arguments": [
                                      {
                                        "arguments": [
                                          {
                                            "name": "headStart",
                                            "nodeType": "YulIdentifier",
                                            "src": "6279:9:5"
                                          },
                                          {
                                            "name": "value1",
                                            "nodeType": "YulIdentifier",
                                            "src": "6290:6:5"
                                          }
                                        ],
                                        "functionName": {
                                          "name": "add",
                                          "nodeType": "YulIdentifier",
                                          "src": "6275:3:5"
                                        },
                                        "nodeType": "YulFunctionCall",
                                        "src": "6275:22:5"
                                      },
                                      {
                                        "kind": "number",
                                        "nodeType": "YulLiteral",
                                        "src": "6299:2:5",
                                        "type": "",
                                        "value": "64"
                                      }
                                    ],
                                    "functionName": {
                                      "name": "add",
                                      "nodeType": "YulIdentifier",
                                      "src": "6271:3:5"
                                    },
                                    "nodeType": "YulFunctionCall",
                                    "src": "6271:31:5"
                                  },
                                  {
                                    "kind": "number",
                                    "nodeType": "YulLiteral",
                                    "src": "6304:1:5",
                                    "type": "",
                                    "value": "0"
                                  }
                                ],
                                "functionName": {
                                  "name": "mstore",
                                  "nodeType": "YulIdentifier",
                                  "src": "6264:6:5"
                                },
                                "nodeType": "YulFunctionCall",
                                "src": "6264:42:5"
                              },
                              "nodeType": "YulExpressionStatement",
                              "src": "6264:42:5"
                            },
                            {
                              "nodeType": "YulAssignment",
                              "src": "6315:62:5",
                              "value": {
                                "arguments": [
                                  {
                                    "arguments": [
                                      {
                                        "name": "headStart",
                                        "nodeType": "YulIdentifier",
                                        "src": "6331:9:5"
                                      },
                                      {
                                        "arguments": [
                                          {
                                            "arguments": [
                                              {
                                                "name": "value1",
                                                "nodeType": "YulIdentifier",
                                                "src": "6350:6:5"
                                              },
                                              {
                                                "kind": "number",
                                                "nodeType": "YulLiteral",
                                                "src": "6358:2:5",
                                                "type": "",
                                                "value": "31"
                                              }
                                            ],
                                            "functionName": {
                                              "name": "add",
                                              "nodeType": "YulIdentifier",
                                              "src": "6346:3:5"
                                            },
                                            "nodeType": "YulFunctionCall",
                                            "src": "6346:15:5"
                                          },
                                          {
                                            "arguments": [
                                              {
                                                "kind": "number",
                                                "nodeType": "YulLiteral",
                                                "src": "6367:2:5",
                                                "type": "",
                                                "value": "31"
                                              }
                                            ],
                                            "functionName": {
                                              "name": "not",
                                              "nodeType": "YulIdentifier",
                                              "src": "6363:3:5"
                                            },
                                            "nodeType": "YulFunctionCall",
                                            "src": "6363:7:5"
                                          }
                                        ],
                                        "functionName": {
                                          "name": "and",
                                          "nodeType": "YulIdentifier",
                                          "src": "6342:3:5"
                                        },
                                        "nodeType": "YulFunctionCall",
                                        "src": "6342:29:5"
                                      }
                                    ],
                                    "functionName": {
                                      "name": "add",
                                      "nodeType": "YulIdentifier",
                                      "src": "6327:3:5"
                                    },
                                    "nodeType": "YulFunctionCall",
                                    "src": "6327:45:5"
                                  },
                                  {
                                    "kind": "number",
                                    "nodeType": "YulLiteral",
                                    "src": "6374:2:5",
                                    "type": "",
                                    "value": "64"
                                  }
                                ],
                                "functionName": {
                                  "name": "add",
                                  "nodeType": "YulIdentifier",
                                  "src": "6323:3:5"
                                },
                                "nodeType": "YulFunctionCall",
                                "src": "6323:54:5"
                              },
                              "variableNames": [
                                {
                                  "name": "tail",
                                  "nodeType": "YulIdentifier",
                                  "src": "6315:4:5"
                                }
                              ]
                            }
                          ]
                        },
                        "name": "abi_encode_tuple_t_string_calldata_ptr__to_t_string_memory_ptr__fromStack_reversed",
                        "nodeType": "YulFunctionDefinition",
                        "parameters": [
                          {
                            "name": "headStart",
                            "nodeType": "YulTypedName",
                            "src": "6085:9:5",
                            "type": ""
                          },
                          {
                            "name": "value1",
                            "nodeType": "YulTypedName",
                            "src": "6096:6:5",
                            "type": ""
                          },
                          {
                            "name": "value0",
                            "nodeType": "YulTypedName",
                            "src": "6104:6:5",
                            "type": ""
                          }
                        ],
                        "returnVariables": [
                          {
                            "name": "tail",
                            "nodeType": "YulTypedName",
                            "src": "6115:4:5",
                            "type": ""
                          }
                        ],
                        "src": "5993:390:5"
                      },
                      {
                        "body": {
                          "nodeType": "YulBlock",
                          "src": "6562:225:5",
                          "statements": [
                            {
                              "expression": {
                                "arguments": [
                                  {
                                    "name": "headStart",
                                    "nodeType": "YulIdentifier",
                                    "src": "6579:9:5"
                                  },
                                  {
                                    "kind": "number",
                                    "nodeType": "YulLiteral",
                                    "src": "6590:2:5",
                                    "type": "",
                                    "value": "32"
                                  }
                                ],
                                "functionName": {
                                  "name": "mstore",
                                  "nodeType": "YulIdentifier",
                                  "src": "6572:6:5"
                                },
                                "nodeType": "YulFunctionCall",
                                "src": "6572:21:5"
                              },
                              "nodeType": "YulExpressionStatement",
                              "src": "6572:21:5"
                            },
                            {
                              "expression": {
                                "arguments": [
                                  {
                                    "arguments": [
                                      {
                                        "name": "headStart",
                                        "nodeType": "YulIdentifier",
                                        "src": "6613:9:5"
                                      },
                                      {
                                        "kind": "number",
                                        "nodeType": "YulLiteral",
                                        "src": "6624:2:5",
                                        "type": "",
                                        "value": "32"
                                      }
                                    ],
                                    "functionName": {
                                      "name": "add",
                                      "nodeType": "YulIdentifier",
                                      "src": "6609:3:5"
                                    },
                                    "nodeType": "YulFunctionCall",
                                    "src": "6609:18:5"
                                  },
                                  {
                                    "kind": "number",
                                    "nodeType": "YulLiteral",
                                    "src": "6629:2:5",
                                    "type": "",
                                    "value": "35"
                                  }
                                ],
                                "functionName": {
                                  "name": "mstore",
                                  "nodeType": "YulIdentifier",
                                  "src": "6602:6:5"
                                },
                                "nodeType": "YulFunctionCall",
                                "src": "6602:30:5"
                              },
                              "nodeType": "YulExpressionStatement",
                              "src": "6602:30:5"
                            },
                            {
                              "expression": {
                                "arguments": [
                                  {
                                    "arguments": [
                                      {
                                        "name": "headStart",
                                        "nodeType": "YulIdentifier",
                                        "src": "6652:9:5"
                                      },
                                      {
                                        "kind": "number",
                                        "nodeType": "YulLiteral",
                                        "src": "6663:2:5",
                                        "type": "",
                                        "value": "64"
                                      }
                                    ],
                                    "functionName": {
                                      "name": "add",
                                      "nodeType": "YulIdentifier",
                                      "src": "6648:3:5"
                                    },
                                    "nodeType": "YulFunctionCall",
                                    "src": "6648:18:5"
                                  },
                                  {
                                    "hexValue": "566f7573206e6520706f7576657a20706173206e65207269656e2070726f706f",
                                    "kind": "string",
                                    "nodeType": "YulLiteral",
                                    "src": "6668:34:5",
                                    "type": "",
                                    "value": "Vous ne pouvez pas ne rien propo"
                                  }
                                ],
                                "functionName": {
                                  "name": "mstore",
                                  "nodeType": "YulIdentifier",
                                  "src": "6641:6:5"
                                },
                                "nodeType": "YulFunctionCall",
                                "src": "6641:62:5"
                              },
                              "nodeType": "YulExpressionStatement",
                              "src": "6641:62:5"
                            },
                            {
                              "expression": {
                                "arguments": [
                                  {
                                    "arguments": [
                                      {
                                        "name": "headStart",
                                        "nodeType": "YulIdentifier",
                                        "src": "6723:9:5"
                                      },
                                      {
                                        "kind": "number",
                                        "nodeType": "YulLiteral",
                                        "src": "6734:2:5",
                                        "type": "",
                                        "value": "96"
                                      }
                                    ],
                                    "functionName": {
                                      "name": "add",
                                      "nodeType": "YulIdentifier",
                                      "src": "6719:3:5"
                                    },
                                    "nodeType": "YulFunctionCall",
                                    "src": "6719:18:5"
                                  },
                                  {
                                    "hexValue": "736572",
                                    "kind": "string",
                                    "nodeType": "YulLiteral",
                                    "src": "6739:5:5",
                                    "type": "",
                                    "value": "ser"
                                  }
                                ],
                                "functionName": {
                                  "name": "mstore",
                                  "nodeType": "YulIdentifier",
                                  "src": "6712:6:5"
                                },
                                "nodeType": "YulFunctionCall",
                                "src": "6712:33:5"
                              },
                              "nodeType": "YulExpressionStatement",
                              "src": "6712:33:5"
                            },
                            {
                              "nodeType": "YulAssignment",
                              "src": "6754:27:5",
                              "value": {
                                "arguments": [
                                  {
                                    "name": "headStart",
                                    "nodeType": "YulIdentifier",
                                    "src": "6766:9:5"
                                  },
                                  {
                                    "kind": "number",
                                    "nodeType": "YulLiteral",
                                    "src": "6777:3:5",
                                    "type": "",
                                    "value": "128"
                                  }
                                ],
                                "functionName": {
                                  "name": "add",
                                  "nodeType": "YulIdentifier",
                                  "src": "6762:3:5"
                                },
                                "nodeType": "YulFunctionCall",
                                "src": "6762:19:5"
                              },
                              "variableNames": [
                                {
                                  "name": "tail",
                                  "nodeType": "YulIdentifier",
                                  "src": "6754:4:5"
                                }
                              ]
                            }
                          ]
                        },
                        "name": "abi_encode_tuple_t_stringliteral_a4c3e15cbc00caa216d105711ac6ae2f726d0f810654930587c82d89febb3184__to_t_string_memory_ptr__fromStack_reversed",
                        "nodeType": "YulFunctionDefinition",
                        "parameters": [
                          {
                            "name": "headStart",
                            "nodeType": "YulTypedName",
                            "src": "6539:9:5",
                            "type": ""
                          }
                        ],
                        "returnVariables": [
                          {
                            "name": "tail",
                            "nodeType": "YulTypedName",
                            "src": "6553:4:5",
                            "type": ""
                          }
                        ],
                        "src": "6388:399:5"
                      },
                      {
                        "body": {
                          "nodeType": "YulBlock",
                          "src": "6824:95:5",
                          "statements": [
                            {
                              "expression": {
                                "arguments": [
                                  {
                                    "kind": "number",
                                    "nodeType": "YulLiteral",
                                    "src": "6841:1:5",
                                    "type": "",
                                    "value": "0"
                                  },
                                  {
                                    "arguments": [
                                      {
                                        "kind": "number",
                                        "nodeType": "YulLiteral",
                                        "src": "6848:3:5",
                                        "type": "",
                                        "value": "224"
                                      },
                                      {
                                        "kind": "number",
                                        "nodeType": "YulLiteral",
                                        "src": "6853:10:5",
                                        "type": "",
                                        "value": "0x4e487b71"
                                      }
                                    ],
                                    "functionName": {
                                      "name": "shl",
                                      "nodeType": "YulIdentifier",
                                      "src": "6844:3:5"
                                    },
                                    "nodeType": "YulFunctionCall",
                                    "src": "6844:20:5"
                                  }
                                ],
                                "functionName": {
                                  "name": "mstore",
                                  "nodeType": "YulIdentifier",
                                  "src": "6834:6:5"
                                },
                                "nodeType": "YulFunctionCall",
                                "src": "6834:31:5"
                              },
                              "nodeType": "YulExpressionStatement",
                              "src": "6834:31:5"
                            },
                            {
                              "expression": {
                                "arguments": [
                                  {
                                    "kind": "number",
                                    "nodeType": "YulLiteral",
                                    "src": "6881:1:5",
                                    "type": "",
                                    "value": "4"
                                  },
                                  {
                                    "kind": "number",
                                    "nodeType": "YulLiteral",
                                    "src": "6884:4:5",
                                    "type": "",
                                    "value": "0x41"
                                  }
                                ],
                                "functionName": {
                                  "name": "mstore",
                                  "nodeType": "YulIdentifier",
                                  "src": "6874:6:5"
                                },
                                "nodeType": "YulFunctionCall",
                                "src": "6874:15:5"
                              },
                              "nodeType": "YulExpressionStatement",
                              "src": "6874:15:5"
                            },
                            {
                              "expression": {
                                "arguments": [
                                  {
                                    "kind": "number",
                                    "nodeType": "YulLiteral",
                                    "src": "6905:1:5",
                                    "type": "",
                                    "value": "0"
                                  },
                                  {
                                    "kind": "number",
                                    "nodeType": "YulLiteral",
                                    "src": "6908:4:5",
                                    "type": "",
                                    "value": "0x24"
                                  }
                                ],
                                "functionName": {
                                  "name": "revert",
                                  "nodeType": "YulIdentifier",
                                  "src": "6898:6:5"
                                },
                                "nodeType": "YulFunctionCall",
                                "src": "6898:15:5"
                              },
                              "nodeType": "YulExpressionStatement",
                              "src": "6898:15:5"
                            }
                          ]
                        },
                        "name": "panic_error_0x41",
                        "nodeType": "YulFunctionDefinition",
                        "src": "6792:127:5"
                      },
                      {
                        "body": {
                          "nodeType": "YulBlock",
                          "src": "6979:325:5",
                          "statements": [
                            {
                              "nodeType": "YulAssignment",
                              "src": "6989:22:5",
                              "value": {
                                "arguments": [
                                  {
                                    "kind": "number",
                                    "nodeType": "YulLiteral",
                                    "src": "7003:1:5",
                                    "type": "",
                                    "value": "1"
                                  },
                                  {
                                    "name": "data",
                                    "nodeType": "YulIdentifier",
                                    "src": "7006:4:5"
                                  }
                                ],
                                "functionName": {
                                  "name": "shr",
                                  "nodeType": "YulIdentifier",
                                  "src": "6999:3:5"
                                },
                                "nodeType": "YulFunctionCall",
                                "src": "6999:12:5"
                              },
                              "variableNames": [
                                {
                                  "name": "length",
                                  "nodeType": "YulIdentifier",
                                  "src": "6989:6:5"
                                }
                              ]
                            },
                            {
                              "nodeType": "YulVariableDeclaration",
                              "src": "7020:38:5",
                              "value": {
                                "arguments": [
                                  {
                                    "name": "data",
                                    "nodeType": "YulIdentifier",
                                    "src": "7050:4:5"
                                  },
                                  {
                                    "kind": "number",
                                    "nodeType": "YulLiteral",
                                    "src": "7056:1:5",
                                    "type": "",
                                    "value": "1"
                                  }
                                ],
                                "functionName": {
                                  "name": "and",
                                  "nodeType": "YulIdentifier",
                                  "src": "7046:3:5"
                                },
                                "nodeType": "YulFunctionCall",
                                "src": "7046:12:5"
                              },
                              "variables": [
                                {
                                  "name": "outOfPlaceEncoding",
                                  "nodeType": "YulTypedName",
                                  "src": "7024:18:5",
                                  "type": ""
                                }
                              ]
                            },
                            {
                              "body": {
                                "nodeType": "YulBlock",
                                "src": "7097:31:5",
                                "statements": [
                                  {
                                    "nodeType": "YulAssignment",
                                    "src": "7099:27:5",
                                    "value": {
                                      "arguments": [
                                        {
                                          "name": "length",
                                          "nodeType": "YulIdentifier",
                                          "src": "7113:6:5"
                                        },
                                        {
                                          "kind": "number",
                                          "nodeType": "YulLiteral",
                                          "src": "7121:4:5",
                                          "type": "",
                                          "value": "0x7f"
                                        }
                                      ],
                                      "functionName": {
                                        "name": "and",
                                        "nodeType": "YulIdentifier",
                                        "src": "7109:3:5"
                                      },
                                      "nodeType": "YulFunctionCall",
                                      "src": "7109:17:5"
                                    },
                                    "variableNames": [
                                      {
                                        "name": "length",
                                        "nodeType": "YulIdentifier",
                                        "src": "7099:6:5"
                                      }
                                    ]
                                  }
                                ]
                              },
                              "condition": {
                                "arguments": [
                                  {
                                    "name": "outOfPlaceEncoding",
                                    "nodeType": "YulIdentifier",
                                    "src": "7077:18:5"
                                  }
                                ],
                                "functionName": {
                                  "name": "iszero",
                                  "nodeType": "YulIdentifier",
                                  "src": "7070:6:5"
                                },
                                "nodeType": "YulFunctionCall",
                                "src": "7070:26:5"
                              },
                              "nodeType": "YulIf",
                              "src": "7067:61:5"
                            },
                            {
                              "body": {
                                "nodeType": "YulBlock",
                                "src": "7187:111:5",
                                "statements": [
                                  {
                                    "expression": {
                                      "arguments": [
                                        {
                                          "kind": "number",
                                          "nodeType": "YulLiteral",
                                          "src": "7208:1:5",
                                          "type": "",
                                          "value": "0"
                                        },
                                        {
                                          "arguments": [
                                            {
                                              "kind": "number",
                                              "nodeType": "YulLiteral",
                                              "src": "7215:3:5",
                                              "type": "",
                                              "value": "224"
                                            },
                                            {
                                              "kind": "number",
                                              "nodeType": "YulLiteral",
                                              "src": "7220:10:5",
                                              "type": "",
                                              "value": "0x4e487b71"
                                            }
                                          ],
                                          "functionName": {
                                            "name": "shl",
                                            "nodeType": "YulIdentifier",
                                            "src": "7211:3:5"
                                          },
                                          "nodeType": "YulFunctionCall",
                                          "src": "7211:20:5"
                                        }
                                      ],
                                      "functionName": {
                                        "name": "mstore",
                                        "nodeType": "YulIdentifier",
                                        "src": "7201:6:5"
                                      },
                                      "nodeType": "YulFunctionCall",
                                      "src": "7201:31:5"
                                    },
                                    "nodeType": "YulExpressionStatement",
                                    "src": "7201:31:5"
                                  },
                                  {
                                    "expression": {
                                      "arguments": [
                                        {
                                          "kind": "number",
                                          "nodeType": "YulLiteral",
                                          "src": "7252:1:5",
                                          "type": "",
                                          "value": "4"
                                        },
                                        {
                                          "kind": "number",
                                          "nodeType": "YulLiteral",
                                          "src": "7255:4:5",
                                          "type": "",
                                          "value": "0x22"
                                        }
                                      ],
                                      "functionName": {
                                        "name": "mstore",
                                        "nodeType": "YulIdentifier",
                                        "src": "7245:6:5"
                                      },
                                      "nodeType": "YulFunctionCall",
                                      "src": "7245:15:5"
                                    },
                                    "nodeType": "YulExpressionStatement",
                                    "src": "7245:15:5"
                                  },
                                  {
                                    "expression": {
                                      "arguments": [
                                        {
                                          "kind": "number",
                                          "nodeType": "YulLiteral",
                                          "src": "7280:1:5",
                                          "type": "",
                                          "value": "0"
                                        },
                                        {
                                          "kind": "number",
                                          "nodeType": "YulLiteral",
                                          "src": "7283:4:5",
                                          "type": "",
                                          "value": "0x24"
                                        }
                                      ],
                                      "functionName": {
                                        "name": "revert",
                                        "nodeType": "YulIdentifier",
                                        "src": "7273:6:5"
                                      },
                                      "nodeType": "YulFunctionCall",
                                      "src": "7273:15:5"
                                    },
                                    "nodeType": "YulExpressionStatement",
                                    "src": "7273:15:5"
                                  }
                                ]
                              },
                              "condition": {
                                "arguments": [
                                  {
                                    "name": "outOfPlaceEncoding",
                                    "nodeType": "YulIdentifier",
                                    "src": "7143:18:5"
                                  },
                                  {
                                    "arguments": [
                                      {
                                        "name": "length",
                                        "nodeType": "YulIdentifier",
                                        "src": "7166:6:5"
                                      },
                                      {
                                        "kind": "number",
                                        "nodeType": "YulLiteral",
                                        "src": "7174:2:5",
                                        "type": "",
                                        "value": "32"
                                      }
                                    ],
                                    "functionName": {
                                      "name": "lt",
                                      "nodeType": "YulIdentifier",
                                      "src": "7163:2:5"
                                    },
                                    "nodeType": "YulFunctionCall",
                                    "src": "7163:14:5"
                                  }
                                ],
                                "functionName": {
                                  "name": "eq",
                                  "nodeType": "YulIdentifier",
                                  "src": "7140:2:5"
                                },
                                "nodeType": "YulFunctionCall",
                                "src": "7140:38:5"
                              },
                              "nodeType": "YulIf",
                              "src": "7137:161:5"
                            }
                          ]
                        },
                        "name": "extract_byte_array_length",
                        "nodeType": "YulFunctionDefinition",
                        "parameters": [
                          {
                            "name": "data",
                            "nodeType": "YulTypedName",
                            "src": "6959:4:5",
                            "type": ""
                          }
                        ],
                        "returnVariables": [
                          {
                            "name": "length",
                            "nodeType": "YulTypedName",
                            "src": "6968:6:5",
                            "type": ""
                          }
                        ],
                        "src": "6924:380:5"
                      },
                      {
                        "body": {
                          "nodeType": "YulBlock",
                          "src": "7365:65:5",
                          "statements": [
                            {
                              "expression": {
                                "arguments": [
                                  {
                                    "kind": "number",
                                    "nodeType": "YulLiteral",
                                    "src": "7382:1:5",
                                    "type": "",
                                    "value": "0"
                                  },
                                  {
                                    "name": "ptr",
                                    "nodeType": "YulIdentifier",
                                    "src": "7385:3:5"
                                  }
                                ],
                                "functionName": {
                                  "name": "mstore",
                                  "nodeType": "YulIdentifier",
                                  "src": "7375:6:5"
                                },
                                "nodeType": "YulFunctionCall",
                                "src": "7375:14:5"
                              },
                              "nodeType": "YulExpressionStatement",
                              "src": "7375:14:5"
                            },
                            {
                              "nodeType": "YulAssignment",
                              "src": "7398:26:5",
                              "value": {
                                "arguments": [
                                  {
                                    "kind": "number",
                                    "nodeType": "YulLiteral",
                                    "src": "7416:1:5",
                                    "type": "",
                                    "value": "0"
                                  },
                                  {
                                    "kind": "number",
                                    "nodeType": "YulLiteral",
                                    "src": "7419:4:5",
                                    "type": "",
                                    "value": "0x20"
                                  }
                                ],
                                "functionName": {
                                  "name": "keccak256",
                                  "nodeType": "YulIdentifier",
                                  "src": "7406:9:5"
                                },
                                "nodeType": "YulFunctionCall",
                                "src": "7406:18:5"
                              },
                              "variableNames": [
                                {
                                  "name": "data",
                                  "nodeType": "YulIdentifier",
                                  "src": "7398:4:5"
                                }
                              ]
                            }
                          ]
                        },
                        "name": "array_dataslot_string_storage",
                        "nodeType": "YulFunctionDefinition",
                        "parameters": [
                          {
                            "name": "ptr",
                            "nodeType": "YulTypedName",
                            "src": "7348:3:5",
                            "type": ""
                          }
                        ],
                        "returnVariables": [
                          {
                            "name": "data",
                            "nodeType": "YulTypedName",
                            "src": "7356:4:5",
                            "type": ""
                          }
                        ],
                        "src": "7309:121:5"
                      },
                      {
                        "body": {
                          "nodeType": "YulBlock",
                          "src": "7516:464:5",
                          "statements": [
                            {
                              "body": {
                                "nodeType": "YulBlock",
                                "src": "7549:425:5",
                                "statements": [
                                  {
                                    "nodeType": "YulVariableDeclaration",
                                    "src": "7563:11:5",
                                    "value": {
                                      "kind": "number",
                                      "nodeType": "YulLiteral",
                                      "src": "7573:1:5",
                                      "type": "",
                                      "value": "0"
                                    },
                                    "variables": [
                                      {
                                        "name": "_1",
                                        "nodeType": "YulTypedName",
                                        "src": "7567:2:5",
                                        "type": ""
                                      }
                                    ]
                                  },
                                  {
                                    "expression": {
                                      "arguments": [
                                        {
                                          "name": "_1",
                                          "nodeType": "YulIdentifier",
                                          "src": "7594:2:5"
                                        },
                                        {
                                          "name": "array",
                                          "nodeType": "YulIdentifier",
                                          "src": "7598:5:5"
                                        }
                                      ],
                                      "functionName": {
                                        "name": "mstore",
                                        "nodeType": "YulIdentifier",
                                        "src": "7587:6:5"
                                      },
                                      "nodeType": "YulFunctionCall",
                                      "src": "7587:17:5"
                                    },
                                    "nodeType": "YulExpressionStatement",
                                    "src": "7587:17:5"
                                  },
                                  {
                                    "nodeType": "YulVariableDeclaration",
                                    "src": "7617:31:5",
                                    "value": {
                                      "arguments": [
                                        {
                                          "name": "_1",
                                          "nodeType": "YulIdentifier",
                                          "src": "7639:2:5"
                                        },
                                        {
                                          "kind": "number",
                                          "nodeType": "YulLiteral",
                                          "src": "7643:4:5",
                                          "type": "",
                                          "value": "0x20"
                                        }
                                      ],
                                      "functionName": {
                                        "name": "keccak256",
                                        "nodeType": "YulIdentifier",
                                        "src": "7629:9:5"
                                      },
                                      "nodeType": "YulFunctionCall",
                                      "src": "7629:19:5"
                                    },
                                    "variables": [
                                      {
                                        "name": "data",
                                        "nodeType": "YulTypedName",
                                        "src": "7621:4:5",
                                        "type": ""
                                      }
                                    ]
                                  },
                                  {
                                    "nodeType": "YulVariableDeclaration",
                                    "src": "7661:57:5",
                                    "value": {
                                      "arguments": [
                                        {
                                          "name": "data",
                                          "nodeType": "YulIdentifier",
                                          "src": "7684:4:5"
                                        },
                                        {
                                          "arguments": [
                                            {
                                              "kind": "number",
                                              "nodeType": "YulLiteral",
                                              "src": "7694:1:5",
                                              "type": "",
                                              "value": "5"
                                            },
                                            {
                                              "arguments": [
                                                {
                                                  "name": "startIndex",
                                                  "nodeType": "YulIdentifier",
                                                  "src": "7701:10:5"
                                                },
                                                {
                                                  "kind": "number",
                                                  "nodeType": "YulLiteral",
                                                  "src": "7713:2:5",
                                                  "type": "",
                                                  "value": "31"
                                                }
                                              ],
                                              "functionName": {
                                                "name": "add",
                                                "nodeType": "YulIdentifier",
                                                "src": "7697:3:5"
                                              },
                                              "nodeType": "YulFunctionCall",
                                              "src": "7697:19:5"
                                            }
                                          ],
                                          "functionName": {
                                            "name": "shr",
                                            "nodeType": "YulIdentifier",
                                            "src": "7690:3:5"
                                          },
                                          "nodeType": "YulFunctionCall",
                                          "src": "7690:27:5"
                                        }
                                      ],
                                      "functionName": {
                                        "name": "add",
                                        "nodeType": "YulIdentifier",
                                        "src": "7680:3:5"
                                      },
                                      "nodeType": "YulFunctionCall",
                                      "src": "7680:38:5"
                                    },
                                    "variables": [
                                      {
                                        "name": "deleteStart",
                                        "nodeType": "YulTypedName",
                                        "src": "7665:11:5",
                                        "type": ""
                                      }
                                    ]
                                  },
                                  {
                                    "body": {
                                      "nodeType": "YulBlock",
                                      "src": "7755:23:5",
                                      "statements": [
                                        {
                                          "nodeType": "YulAssignment",
                                          "src": "7757:19:5",
                                          "value": {
                                            "name": "data",
                                            "nodeType": "YulIdentifier",
                                            "src": "7772:4:5"
                                          },
                                          "variableNames": [
                                            {
                                              "name": "deleteStart",
                                              "nodeType": "YulIdentifier",
                                              "src": "7757:11:5"
                                            }
                                          ]
                                        }
                                      ]
                                    },
                                    "condition": {
                                      "arguments": [
                                        {
                                          "name": "startIndex",
                                          "nodeType": "YulIdentifier",
                                          "src": "7737:10:5"
                                        },
                                        {
                                          "kind": "number",
                                          "nodeType": "YulLiteral",
                                          "src": "7749:4:5",
                                          "type": "",
                                          "value": "0x20"
                                        }
                                      ],
                                      "functionName": {
                                        "name": "lt",
                                        "nodeType": "YulIdentifier",
                                        "src": "7734:2:5"
                                      },
                                      "nodeType": "YulFunctionCall",
                                      "src": "7734:20:5"
                                    },
                                    "nodeType": "YulIf",
                                    "src": "7731:47:5"
                                  },
                                  {
                                    "nodeType": "YulVariableDeclaration",
                                    "src": "7791:41:5",
                                    "value": {
                                      "arguments": [
                                        {
                                          "name": "data",
                                          "nodeType": "YulIdentifier",
                                          "src": "7805:4:5"
                                        },
                                        {
                                          "arguments": [
                                            {
                                              "kind": "number",
                                              "nodeType": "YulLiteral",
                                              "src": "7815:1:5",
                                              "type": "",
                                              "value": "5"
                                            },
                                            {
                                              "arguments": [
                                                {
                                                  "name": "len",
                                                  "nodeType": "YulIdentifier",
                                                  "src": "7822:3:5"
                                                },
                                                {
                                                  "kind": "number",
                                                  "nodeType": "YulLiteral",
                                                  "src": "7827:2:5",
                                                  "type": "",
                                                  "value": "31"
                                                }
                                              ],
                                              "functionName": {
                                                "name": "add",
                                                "nodeType": "YulIdentifier",
                                                "src": "7818:3:5"
                                              },
                                              "nodeType": "YulFunctionCall",
                                              "src": "7818:12:5"
                                            }
                                          ],
                                          "functionName": {
                                            "name": "shr",
                                            "nodeType": "YulIdentifier",
                                            "src": "7811:3:5"
                                          },
                                          "nodeType": "YulFunctionCall",
                                          "src": "7811:20:5"
                                        }
                                      ],
                                      "functionName": {
                                        "name": "add",
                                        "nodeType": "YulIdentifier",
                                        "src": "7801:3:5"
                                      },
                                      "nodeType": "YulFunctionCall",
                                      "src": "7801:31:5"
                                    },
                                    "variables": [
                                      {
                                        "name": "_2",
                                        "nodeType": "YulTypedName",
                                        "src": "7795:2:5",
                                        "type": ""
                                      }
                                    ]
                                  },
                                  {
                                    "nodeType": "YulVariableDeclaration",
                                    "src": "7845:24:5",
                                    "value": {
                                      "name": "deleteStart",
                                      "nodeType": "YulIdentifier",
                                      "src": "7858:11:5"
                                    },
                                    "variables": [
                                      {
                                        "name": "start",
                                        "nodeType": "YulTypedName",
                                        "src": "7849:5:5",
                                        "type": ""
                                      }
                                    ]
                                  },
                                  {
                                    "body": {
                                      "nodeType": "YulBlock",
                                      "src": "7943:21:5",
                                      "statements": [
                                        {
                                          "expression": {
                                            "arguments": [
                                              {
                                                "name": "start",
                                                "nodeType": "YulIdentifier",
                                                "src": "7952:5:5"
                                              },
                                              {
                                                "name": "_1",
                                                "nodeType": "YulIdentifier",
                                                "src": "7959:2:5"
                                              }
                                            ],
                                            "functionName": {
                                              "name": "sstore",
                                              "nodeType": "YulIdentifier",
                                              "src": "7945:6:5"
                                            },
                                            "nodeType": "YulFunctionCall",
                                            "src": "7945:17:5"
                                          },
                                          "nodeType": "YulExpressionStatement",
                                          "src": "7945:17:5"
                                        }
                                      ]
                                    },
                                    "condition": {
                                      "arguments": [
                                        {
                                          "name": "start",
                                          "nodeType": "YulIdentifier",
                                          "src": "7893:5:5"
                                        },
                                        {
                                          "name": "_2",
                                          "nodeType": "YulIdentifier",
                                          "src": "7900:2:5"
                                        }
                                      ],
                                      "functionName": {
                                        "name": "lt",
                                        "nodeType": "YulIdentifier",
                                        "src": "7890:2:5"
                                      },
                                      "nodeType": "YulFunctionCall",
                                      "src": "7890:13:5"
                                    },
                                    "nodeType": "YulForLoop",
                                    "post": {
                                      "nodeType": "YulBlock",
                                      "src": "7904:26:5",
                                      "statements": [
                                        {
                                          "nodeType": "YulAssignment",
                                          "src": "7906:22:5",
                                          "value": {
                                            "arguments": [
                                              {
                                                "name": "start",
                                                "nodeType": "YulIdentifier",
                                                "src": "7919:5:5"
                                              },
                                              {
                                                "kind": "number",
                                                "nodeType": "YulLiteral",
                                                "src": "7926:1:5",
                                                "type": "",
                                                "value": "1"
                                              }
                                            ],
                                            "functionName": {
                                              "name": "add",
                                              "nodeType": "YulIdentifier",
                                              "src": "7915:3:5"
                                            },
                                            "nodeType": "YulFunctionCall",
                                            "src": "7915:13:5"
                                          },
                                          "variableNames": [
                                            {
                                              "name": "start",
                                              "nodeType": "YulIdentifier",
                                              "src": "7906:5:5"
                                            }
                                          ]
                                        }
                                      ]
                                    },
                                    "pre": {
                                      "nodeType": "YulBlock",
                                      "src": "7886:3:5",
                                      "statements": []
                                    },
                                    "src": "7882:82:5"
                                  }
                                ]
                              },
                              "condition": {
                                "arguments": [
                                  {
                                    "name": "len",
                                    "nodeType": "YulIdentifier",
                                    "src": "7532:3:5"
                                  },
                                  {
                                    "kind": "number",
                                    "nodeType": "YulLiteral",
                                    "src": "7537:2:5",
                                    "type": "",
                                    "value": "31"
                                  }
                                ],
                                "functionName": {
                                  "name": "gt",
                                  "nodeType": "YulIdentifier",
                                  "src": "7529:2:5"
                                },
                                "nodeType": "YulFunctionCall",
                                "src": "7529:11:5"
                              },
                              "nodeType": "YulIf",
                              "src": "7526:448:5"
                            }
                          ]
                        },
                        "name": "clean_up_bytearray_end_slots_string_storage",
                        "nodeType": "YulFunctionDefinition",
                        "parameters": [
                          {
                            "name": "array",
                            "nodeType": "YulTypedName",
                            "src": "7488:5:5",
                            "type": ""
                          },
                          {
                            "name": "len",
                            "nodeType": "YulTypedName",
                            "src": "7495:3:5",
                            "type": ""
                          },
                          {
                            "name": "startIndex",
                            "nodeType": "YulTypedName",
                            "src": "7500:10:5",
                            "type": ""
                          }
                        ],
                        "src": "7435:545:5"
                      },
                      {
                        "body": {
                          "nodeType": "YulBlock",
                          "src": "8070:81:5",
                          "statements": [
                            {
                              "nodeType": "YulAssignment",
                              "src": "8080:65:5",
                              "value": {
                                "arguments": [
                                  {
                                    "arguments": [
                                      {
                                        "name": "data",
                                        "nodeType": "YulIdentifier",
                                        "src": "8095:4:5"
                                      },
                                      {
                                        "arguments": [
                                          {
                                            "arguments": [
                                              {
                                                "arguments": [
                                                  {
                                                    "kind": "number",
                                                    "nodeType": "YulLiteral",
                                                    "src": "8113:1:5",
                                                    "type": "",
                                                    "value": "3"
                                                  },
                                                  {
                                                    "name": "len",
                                                    "nodeType": "YulIdentifier",
                                                    "src": "8116:3:5"
                                                  }
                                                ],
                                                "functionName": {
                                                  "name": "shl",
                                                  "nodeType": "YulIdentifier",
                                                  "src": "8109:3:5"
                                                },
                                                "nodeType": "YulFunctionCall",
                                                "src": "8109:11:5"
                                              },
                                              {
                                                "arguments": [
                                                  {
                                                    "kind": "number",
                                                    "nodeType": "YulLiteral",
                                                    "src": "8126:1:5",
                                                    "type": "",
                                                    "value": "0"
                                                  }
                                                ],
                                                "functionName": {
                                                  "name": "not",
                                                  "nodeType": "YulIdentifier",
                                                  "src": "8122:3:5"
                                                },
                                                "nodeType": "YulFunctionCall",
                                                "src": "8122:6:5"
                                              }
                                            ],
                                            "functionName": {
                                              "name": "shr",
                                              "nodeType": "YulIdentifier",
                                              "src": "8105:3:5"
                                            },
                                            "nodeType": "YulFunctionCall",
                                            "src": "8105:24:5"
                                          }
                                        ],
                                        "functionName": {
                                          "name": "not",
                                          "nodeType": "YulIdentifier",
                                          "src": "8101:3:5"
                                        },
                                        "nodeType": "YulFunctionCall",
                                        "src": "8101:29:5"
                                      }
                                    ],
                                    "functionName": {
                                      "name": "and",
                                      "nodeType": "YulIdentifier",
                                      "src": "8091:3:5"
                                    },
                                    "nodeType": "YulFunctionCall",
                                    "src": "8091:40:5"
                                  },
                                  {
                                    "arguments": [
                                      {
                                        "kind": "number",
                                        "nodeType": "YulLiteral",
                                        "src": "8137:1:5",
                                        "type": "",
                                        "value": "1"
                                      },
                                      {
                                        "name": "len",
                                        "nodeType": "YulIdentifier",
                                        "src": "8140:3:5"
                                      }
                                    ],
                                    "functionName": {
                                      "name": "shl",
                                      "nodeType": "YulIdentifier",
                                      "src": "8133:3:5"
                                    },
                                    "nodeType": "YulFunctionCall",
                                    "src": "8133:11:5"
                                  }
                                ],
                                "functionName": {
                                  "name": "or",
                                  "nodeType": "YulIdentifier",
                                  "src": "8088:2:5"
                                },
                                "nodeType": "YulFunctionCall",
                                "src": "8088:57:5"
                              },
                              "variableNames": [
                                {
                                  "name": "used",
                                  "nodeType": "YulIdentifier",
                                  "src": "8080:4:5"
                                }
                              ]
                            }
                          ]
                        },
                        "name": "extract_used_part_and_set_length_of_short_byte_array",
                        "nodeType": "YulFunctionDefinition",
                        "parameters": [
                          {
                            "name": "data",
                            "nodeType": "YulTypedName",
                            "src": "8047:4:5",
                            "type": ""
                          },
                          {
                            "name": "len",
                            "nodeType": "YulTypedName",
                            "src": "8053:3:5",
                            "type": ""
                          }
                        ],
                        "returnVariables": [
                          {
                            "name": "used",
                            "nodeType": "YulTypedName",
                            "src": "8061:4:5",
                            "type": ""
                          }
                        ],
                        "src": "7985:166:5"
                      },
                      {
                        "body": {
                          "nodeType": "YulBlock",
                          "src": "8252:1256:5",
                          "statements": [
                            {
                              "nodeType": "YulVariableDeclaration",
                              "src": "8262:24:5",
                              "value": {
                                "arguments": [
                                  {
                                    "name": "src",
                                    "nodeType": "YulIdentifier",
                                    "src": "8282:3:5"
                                  }
                                ],
                                "functionName": {
                                  "name": "mload",
                                  "nodeType": "YulIdentifier",
                                  "src": "8276:5:5"
                                },
                                "nodeType": "YulFunctionCall",
                                "src": "8276:10:5"
                              },
                              "variables": [
                                {
                                  "name": "newLen",
                                  "nodeType": "YulTypedName",
                                  "src": "8266:6:5",
                                  "type": ""
                                }
                              ]
                            },
                            {
                              "body": {
                                "nodeType": "YulBlock",
                                "src": "8329:22:5",
                                "statements": [
                                  {
                                    "expression": {
                                      "arguments": [],
                                      "functionName": {
                                        "name": "panic_error_0x41",
                                        "nodeType": "YulIdentifier",
                                        "src": "8331:16:5"
                                      },
                                      "nodeType": "YulFunctionCall",
                                      "src": "8331:18:5"
                                    },
                                    "nodeType": "YulExpressionStatement",
                                    "src": "8331:18:5"
                                  }
                                ]
                              },
                              "condition": {
                                "arguments": [
                                  {
                                    "name": "newLen",
                                    "nodeType": "YulIdentifier",
                                    "src": "8301:6:5"
                                  },
                                  {
                                    "kind": "number",
                                    "nodeType": "YulLiteral",
                                    "src": "8309:18:5",
                                    "type": "",
                                    "value": "0xffffffffffffffff"
                                  }
                                ],
                                "functionName": {
                                  "name": "gt",
                                  "nodeType": "YulIdentifier",
                                  "src": "8298:2:5"
                                },
                                "nodeType": "YulFunctionCall",
                                "src": "8298:30:5"
                              },
                              "nodeType": "YulIf",
                              "src": "8295:56:5"
                            },
                            {
                              "expression": {
                                "arguments": [
                                  {
                                    "name": "slot",
                                    "nodeType": "YulIdentifier",
                                    "src": "8404:4:5"
                                  },
                                  {
                                    "arguments": [
                                      {
                                        "arguments": [
                                          {
                                            "name": "slot",
                                            "nodeType": "YulIdentifier",
                                            "src": "8442:4:5"
                                          }
                                        ],
                                        "functionName": {
                                          "name": "sload",
                                          "nodeType": "YulIdentifier",
                                          "src": "8436:5:5"
                                        },
                                        "nodeType": "YulFunctionCall",
                                        "src": "8436:11:5"
                                      }
                                    ],
                                    "functionName": {
                                      "name": "extract_byte_array_length",
                                      "nodeType": "YulIdentifier",
                                      "src": "8410:25:5"
                                    },
                                    "nodeType": "YulFunctionCall",
                                    "src": "8410:38:5"
                                  },
                                  {
                                    "name": "newLen",
                                    "nodeType": "YulIdentifier",
                                    "src": "8450:6:5"
                                  }
                                ],
                                "functionName": {
                                  "name": "clean_up_bytearray_end_slots_string_storage",
                                  "nodeType": "YulIdentifier",
                                  "src": "8360:43:5"
                                },
                                "nodeType": "YulFunctionCall",
                                "src": "8360:97:5"
                              },
                              "nodeType": "YulExpressionStatement",
                              "src": "8360:97:5"
                            },
                            {
                              "nodeType": "YulVariableDeclaration",
                              "src": "8466:18:5",
                              "value": {
                                "kind": "number",
                                "nodeType": "YulLiteral",
                                "src": "8483:1:5",
                                "type": "",
                                "value": "0"
                              },
                              "variables": [
                                {
                                  "name": "srcOffset",
                                  "nodeType": "YulTypedName",
                                  "src": "8470:9:5",
                                  "type": ""
                                }
                              ]
                            },
                            {
                              "nodeType": "YulVariableDeclaration",
                              "src": "8493:23:5",
                              "value": {
                                "kind": "number",
                                "nodeType": "YulLiteral",
                                "src": "8512:4:5",
                                "type": "",
                                "value": "0x20"
                              },
                              "variables": [
                                {
                                  "name": "srcOffset_1",
                                  "nodeType": "YulTypedName",
                                  "src": "8497:11:5",
                                  "type": ""
                                }
                              ]
                            },
                            {
                              "nodeType": "YulAssignment",
                              "src": "8525:24:5",
                              "value": {
                                "name": "srcOffset_1",
                                "nodeType": "YulIdentifier",
                                "src": "8538:11:5"
                              },
                              "variableNames": [
                                {
                                  "name": "srcOffset",
                                  "nodeType": "YulIdentifier",
                                  "src": "8525:9:5"
                                }
                              ]
                            },
                            {
                              "cases": [
                                {
                                  "body": {
                                    "nodeType": "YulBlock",
                                    "src": "8595:656:5",
                                    "statements": [
                                      {
                                        "nodeType": "YulVariableDeclaration",
                                        "src": "8609:35:5",
                                        "value": {
                                          "arguments": [
                                            {
                                              "name": "newLen",
                                              "nodeType": "YulIdentifier",
                                              "src": "8628:6:5"
                                            },
                                            {
                                              "arguments": [
                                                {
                                                  "kind": "number",
                                                  "nodeType": "YulLiteral",
                                                  "src": "8640:2:5",
                                                  "type": "",
                                                  "value": "31"
                                                }
                                              ],
                                              "functionName": {
                                                "name": "not",
                                                "nodeType": "YulIdentifier",
                                                "src": "8636:3:5"
                                              },
                                              "nodeType": "YulFunctionCall",
                                              "src": "8636:7:5"
                                            }
                                          ],
                                          "functionName": {
                                            "name": "and",
                                            "nodeType": "YulIdentifier",
                                            "src": "8624:3:5"
                                          },
                                          "nodeType": "YulFunctionCall",
                                          "src": "8624:20:5"
                                        },
                                        "variables": [
                                          {
                                            "name": "loopEnd",
                                            "nodeType": "YulTypedName",
                                            "src": "8613:7:5",
                                            "type": ""
                                          }
                                        ]
                                      },
                                      {
                                        "nodeType": "YulVariableDeclaration",
                                        "src": "8657:49:5",
                                        "value": {
                                          "arguments": [
                                            {
                                              "name": "slot",
                                              "nodeType": "YulIdentifier",
                                              "src": "8701:4:5"
                                            }
                                          ],
                                          "functionName": {
                                            "name": "array_dataslot_string_storage",
                                            "nodeType": "YulIdentifier",
                                            "src": "8671:29:5"
                                          },
                                          "nodeType": "YulFunctionCall",
                                          "src": "8671:35:5"
                                        },
                                        "variables": [
                                          {
                                            "name": "dstPtr",
                                            "nodeType": "YulTypedName",
                                            "src": "8661:6:5",
                                            "type": ""
                                          }
                                        ]
                                      },
                                      {
                                        "nodeType": "YulVariableDeclaration",
                                        "src": "8719:10:5",
                                        "value": {
                                          "kind": "number",
                                          "nodeType": "YulLiteral",
                                          "src": "8728:1:5",
                                          "type": "",
                                          "value": "0"
                                        },
                                        "variables": [
                                          {
                                            "name": "i",
                                            "nodeType": "YulTypedName",
                                            "src": "8723:1:5",
                                            "type": ""
                                          }
                                        ]
                                      },
                                      {
                                        "body": {
                                          "nodeType": "YulBlock",
                                          "src": "8806:172:5",
                                          "statements": [
                                            {
                                              "expression": {
                                                "arguments": [
                                                  {
                                                    "name": "dstPtr",
                                                    "nodeType": "YulIdentifier",
                                                    "src": "8831:6:5"
                                                  },
                                                  {
                                                    "arguments": [
                                                      {
                                                        "arguments": [
                                                          {
                                                            "name": "src",
                                                            "nodeType": "YulIdentifier",
                                                            "src": "8849:3:5"
                                                          },
                                                          {
                                                            "name": "srcOffset",
                                                            "nodeType": "YulIdentifier",
                                                            "src": "8854:9:5"
                                                          }
                                                        ],
                                                        "functionName": {
                                                          "name": "add",
                                                          "nodeType": "YulIdentifier",
                                                          "src": "8845:3:5"
                                                        },
                                                        "nodeType": "YulFunctionCall",
                                                        "src": "8845:19:5"
                                                      }
                                                    ],
                                                    "functionName": {
                                                      "name": "mload",
                                                      "nodeType": "YulIdentifier",
                                                      "src": "8839:5:5"
                                                    },
                                                    "nodeType": "YulFunctionCall",
                                                    "src": "8839:26:5"
                                                  }
                                                ],
                                                "functionName": {
                                                  "name": "sstore",
                                                  "nodeType": "YulIdentifier",
                                                  "src": "8824:6:5"
                                                },
                                                "nodeType": "YulFunctionCall",
                                                "src": "8824:42:5"
                                              },
                                              "nodeType": "YulExpressionStatement",
                                              "src": "8824:42:5"
                                            },
                                            {
                                              "nodeType": "YulAssignment",
                                              "src": "8883:24:5",
                                              "value": {
                                                "arguments": [
                                                  {
                                                    "name": "dstPtr",
                                                    "nodeType": "YulIdentifier",
                                                    "src": "8897:6:5"
                                                  },
                                                  {
                                                    "kind": "number",
                                                    "nodeType": "YulLiteral",
                                                    "src": "8905:1:5",
                                                    "type": "",
                                                    "value": "1"
                                                  }
                                                ],
                                                "functionName": {
                                                  "name": "add",
                                                  "nodeType": "YulIdentifier",
                                                  "src": "8893:3:5"
                                                },
                                                "nodeType": "YulFunctionCall",
                                                "src": "8893:14:5"
                                              },
                                              "variableNames": [
                                                {
                                                  "name": "dstPtr",
                                                  "nodeType": "YulIdentifier",
                                                  "src": "8883:6:5"
                                                }
                                              ]
                                            },
                                            {
                                              "nodeType": "YulAssignment",
                                              "src": "8924:40:5",
                                              "value": {
                                                "arguments": [
                                                  {
                                                    "name": "srcOffset",
                                                    "nodeType": "YulIdentifier",
                                                    "src": "8941:9:5"
                                                  },
                                                  {
                                                    "name": "srcOffset_1",
                                                    "nodeType": "YulIdentifier",
                                                    "src": "8952:11:5"
                                                  }
                                                ],
                                                "functionName": {
                                                  "name": "add",
                                                  "nodeType": "YulIdentifier",
                                                  "src": "8937:3:5"
                                                },
                                                "nodeType": "YulFunctionCall",
                                                "src": "8937:27:5"
                                              },
                                              "variableNames": [
                                                {
                                                  "name": "srcOffset",
                                                  "nodeType": "YulIdentifier",
                                                  "src": "8924:9:5"
                                                }
                                              ]
                                            }
                                          ]
                                        },
                                        "condition": {
                                          "arguments": [
                                            {
                                              "name": "i",
                                              "nodeType": "YulIdentifier",
                                              "src": "8753:1:5"
                                            },
                                            {
                                              "name": "loopEnd",
                                              "nodeType": "YulIdentifier",
                                              "src": "8756:7:5"
                                            }
                                          ],
                                          "functionName": {
                                            "name": "lt",
                                            "nodeType": "YulIdentifier",
                                            "src": "8750:2:5"
                                          },
                                          "nodeType": "YulFunctionCall",
                                          "src": "8750:14:5"
                                        },
                                        "nodeType": "YulForLoop",
                                        "post": {
                                          "nodeType": "YulBlock",
                                          "src": "8765:28:5",
                                          "statements": [
                                            {
                                              "nodeType": "YulAssignment",
                                              "src": "8767:24:5",
                                              "value": {
                                                "arguments": [
                                                  {
                                                    "name": "i",
                                                    "nodeType": "YulIdentifier",
                                                    "src": "8776:1:5"
                                                  },
                                                  {
                                                    "name": "srcOffset_1",
                                                    "nodeType": "YulIdentifier",
                                                    "src": "8779:11:5"
                                                  }
                                                ],
                                                "functionName": {
                                                  "name": "add",
                                                  "nodeType": "YulIdentifier",
                                                  "src": "8772:3:5"
                                                },
                                                "nodeType": "YulFunctionCall",
                                                "src": "8772:19:5"
                                              },
                                              "variableNames": [
                                                {
                                                  "name": "i",
                                                  "nodeType": "YulIdentifier",
                                                  "src": "8767:1:5"
                                                }
                                              ]
                                            }
                                          ]
                                        },
                                        "pre": {
                                          "nodeType": "YulBlock",
                                          "src": "8746:3:5",
                                          "statements": []
                                        },
                                        "src": "8742:236:5"
                                      },
                                      {
                                        "body": {
                                          "nodeType": "YulBlock",
                                          "src": "9026:166:5",
                                          "statements": [
                                            {
                                              "nodeType": "YulVariableDeclaration",
                                              "src": "9044:43:5",
                                              "value": {
                                                "arguments": [
                                                  {
                                                    "arguments": [
                                                      {
                                                        "name": "src",
                                                        "nodeType": "YulIdentifier",
                                                        "src": "9071:3:5"
                                                      },
                                                      {
                                                        "name": "srcOffset",
                                                        "nodeType": "YulIdentifier",
                                                        "src": "9076:9:5"
                                                      }
                                                    ],
                                                    "functionName": {
                                                      "name": "add",
                                                      "nodeType": "YulIdentifier",
                                                      "src": "9067:3:5"
                                                    },
                                                    "nodeType": "YulFunctionCall",
                                                    "src": "9067:19:5"
                                                  }
                                                ],
                                                "functionName": {
                                                  "name": "mload",
                                                  "nodeType": "YulIdentifier",
                                                  "src": "9061:5:5"
                                                },
                                                "nodeType": "YulFunctionCall",
                                                "src": "9061:26:5"
                                              },
                                              "variables": [
                                                {
                                                  "name": "lastValue",
                                                  "nodeType": "YulTypedName",
                                                  "src": "9048:9:5",
                                                  "type": ""
                                                }
                                              ]
                                            },
                                            {
                                              "expression": {
                                                "arguments": [
                                                  {
                                                    "name": "dstPtr",
                                                    "nodeType": "YulIdentifier",
                                                    "src": "9111:6:5"
                                                  },
                                                  {
                                                    "arguments": [
                                                      {
                                                        "name": "lastValue",
                                                        "nodeType": "YulIdentifier",
                                                        "src": "9123:9:5"
                                                      },
                                                      {
                                                        "arguments": [
                                                          {
                                                            "arguments": [
                                                              {
                                                                "arguments": [
                                                                  {
                                                                    "arguments": [
                                                                      {
                                                                        "kind": "number",
                                                                        "nodeType": "YulLiteral",
                                                                        "src": "9150:1:5",
                                                                        "type": "",
                                                                        "value": "3"
                                                                      },
                                                                      {
                                                                        "name": "newLen",
                                                                        "nodeType": "YulIdentifier",
                                                                        "src": "9153:6:5"
                                                                      }
                                                                    ],
                                                                    "functionName": {
                                                                      "name": "shl",
                                                                      "nodeType": "YulIdentifier",
                                                                      "src": "9146:3:5"
                                                                    },
                                                                    "nodeType": "YulFunctionCall",
                                                                    "src": "9146:14:5"
                                                                  },
                                                                  {
                                                                    "kind": "number",
                                                                    "nodeType": "YulLiteral",
                                                                    "src": "9162:3:5",
                                                                    "type": "",
                                                                    "value": "248"
                                                                  }
                                                                ],
                                                                "functionName": {
                                                                  "name": "and",
                                                                  "nodeType": "YulIdentifier",
                                                                  "src": "9142:3:5"
                                                                },
                                                                "nodeType": "YulFunctionCall",
                                                                "src": "9142:24:5"
                                                              },
                                                              {
                                                                "arguments": [
                                                                  {
                                                                    "kind": "number",
                                                                    "nodeType": "YulLiteral",
                                                                    "src": "9172:1:5",
                                                                    "type": "",
                                                                    "value": "0"
                                                                  }
                                                                ],
                                                                "functionName": {
                                                                  "name": "not",
                                                                  "nodeType": "YulIdentifier",
                                                                  "src": "9168:3:5"
                                                                },
                                                                "nodeType": "YulFunctionCall",
                                                                "src": "9168:6:5"
                                                              }
                                                            ],
                                                            "functionName": {
                                                              "name": "shr",
                                                              "nodeType": "YulIdentifier",
                                                              "src": "9138:3:5"
                                                            },
                                                            "nodeType": "YulFunctionCall",
                                                            "src": "9138:37:5"
                                                          }
                                                        ],
                                                        "functionName": {
                                                          "name": "not",
                                                          "nodeType": "YulIdentifier",
                                                          "src": "9134:3:5"
                                                        },
                                                        "nodeType": "YulFunctionCall",
                                                        "src": "9134:42:5"
                                                      }
                                                    ],
                                                    "functionName": {
                                                      "name": "and",
                                                      "nodeType": "YulIdentifier",
                                                      "src": "9119:3:5"
                                                    },
                                                    "nodeType": "YulFunctionCall",
                                                    "src": "9119:58:5"
                                                  }
                                                ],
                                                "functionName": {
                                                  "name": "sstore",
                                                  "nodeType": "YulIdentifier",
                                                  "src": "9104:6:5"
                                                },
                                                "nodeType": "YulFunctionCall",
                                                "src": "9104:74:5"
                                              },
                                              "nodeType": "YulExpressionStatement",
                                              "src": "9104:74:5"
                                            }
                                          ]
                                        },
                                        "condition": {
                                          "arguments": [
                                            {
                                              "name": "loopEnd",
                                              "nodeType": "YulIdentifier",
                                              "src": "8997:7:5"
                                            },
                                            {
                                              "name": "newLen",
                                              "nodeType": "YulIdentifier",
                                              "src": "9006:6:5"
                                            }
                                          ],
                                          "functionName": {
                                            "name": "lt",
                                            "nodeType": "YulIdentifier",
                                            "src": "8994:2:5"
                                          },
                                          "nodeType": "YulFunctionCall",
                                          "src": "8994:19:5"
                                        },
                                        "nodeType": "YulIf",
                                        "src": "8991:201:5"
                                      },
                                      {
                                        "expression": {
                                          "arguments": [
                                            {
                                              "name": "slot",
                                              "nodeType": "YulIdentifier",
                                              "src": "9212:4:5"
                                            },
                                            {
                                              "arguments": [
                                                {
                                                  "arguments": [
                                                    {
                                                      "kind": "number",
                                                      "nodeType": "YulLiteral",
                                                      "src": "9226:1:5",
                                                      "type": "",
                                                      "value": "1"
                                                    },
                                                    {
                                                      "name": "newLen",
                                                      "nodeType": "YulIdentifier",
                                                      "src": "9229:6:5"
                                                    }
                                                  ],
                                                  "functionName": {
                                                    "name": "shl",
                                                    "nodeType": "YulIdentifier",
                                                    "src": "9222:3:5"
                                                  },
                                                  "nodeType": "YulFunctionCall",
                                                  "src": "9222:14:5"
                                                },
                                                {
                                                  "kind": "number",
                                                  "nodeType": "YulLiteral",
                                                  "src": "9238:1:5",
                                                  "type": "",
                                                  "value": "1"
                                                }
                                              ],
                                              "functionName": {
                                                "name": "add",
                                                "nodeType": "YulIdentifier",
                                                "src": "9218:3:5"
                                              },
                                              "nodeType": "YulFunctionCall",
                                              "src": "9218:22:5"
                                            }
                                          ],
                                          "functionName": {
                                            "name": "sstore",
                                            "nodeType": "YulIdentifier",
                                            "src": "9205:6:5"
                                          },
                                          "nodeType": "YulFunctionCall",
                                          "src": "9205:36:5"
                                        },
                                        "nodeType": "YulExpressionStatement",
                                        "src": "9205:36:5"
                                      }
                                    ]
                                  },
                                  "nodeType": "YulCase",
                                  "src": "8588:663:5",
                                  "value": {
                                    "kind": "number",
                                    "nodeType": "YulLiteral",
                                    "src": "8593:1:5",
                                    "type": "",
                                    "value": "1"
                                  }
                                },
                                {
                                  "body": {
                                    "nodeType": "YulBlock",
                                    "src": "9268:234:5",
                                    "statements": [
                                      {
                                        "nodeType": "YulVariableDeclaration",
                                        "src": "9282:14:5",
                                        "value": {
                                          "kind": "number",
                                          "nodeType": "YulLiteral",
                                          "src": "9295:1:5",
                                          "type": "",
                                          "value": "0"
                                        },
                                        "variables": [
                                          {
                                            "name": "value",
                                            "nodeType": "YulTypedName",
                                            "src": "9286:5:5",
                                            "type": ""
                                          }
                                        ]
                                      },
                                      {
                                        "body": {
                                          "nodeType": "YulBlock",
                                          "src": "9331:67:5",
                                          "statements": [
                                            {
                                              "nodeType": "YulAssignment",
                                              "src": "9349:35:5",
                                              "value": {
                                                "arguments": [
                                                  {
                                                    "arguments": [
                                                      {
                                                        "name": "src",
                                                        "nodeType": "YulIdentifier",
                                                        "src": "9368:3:5"
                                                      },
                                                      {
                                                        "name": "srcOffset",
                                                        "nodeType": "YulIdentifier",
                                                        "src": "9373:9:5"
                                                      }
                                                    ],
                                                    "functionName": {
                                                      "name": "add",
                                                      "nodeType": "YulIdentifier",
                                                      "src": "9364:3:5"
                                                    },
                                                    "nodeType": "YulFunctionCall",
                                                    "src": "9364:19:5"
                                                  }
                                                ],
                                                "functionName": {
                                                  "name": "mload",
                                                  "nodeType": "YulIdentifier",
                                                  "src": "9358:5:5"
                                                },
                                                "nodeType": "YulFunctionCall",
                                                "src": "9358:26:5"
                                              },
                                              "variableNames": [
                                                {
                                                  "name": "value",
                                                  "nodeType": "YulIdentifier",
                                                  "src": "9349:5:5"
                                                }
                                              ]
                                            }
                                          ]
                                        },
                                        "condition": {
                                          "name": "newLen",
                                          "nodeType": "YulIdentifier",
                                          "src": "9312:6:5"
                                        },
                                        "nodeType": "YulIf",
                                        "src": "9309:89:5"
                                      },
                                      {
                                        "expression": {
                                          "arguments": [
                                            {
                                              "name": "slot",
                                              "nodeType": "YulIdentifier",
                                              "src": "9418:4:5"
                                            },
                                            {
                                              "arguments": [
                                                {
                                                  "name": "value",
                                                  "nodeType": "YulIdentifier",
                                                  "src": "9477:5:5"
                                                },
                                                {
                                                  "name": "newLen",
                                                  "nodeType": "YulIdentifier",
                                                  "src": "9484:6:5"
                                                }
                                              ],
                                              "functionName": {
                                                "name": "extract_used_part_and_set_length_of_short_byte_array",
                                                "nodeType": "YulIdentifier",
                                                "src": "9424:52:5"
                                              },
                                              "nodeType": "YulFunctionCall",
                                              "src": "9424:67:5"
                                            }
                                          ],
                                          "functionName": {
                                            "name": "sstore",
                                            "nodeType": "YulIdentifier",
                                            "src": "9411:6:5"
                                          },
                                          "nodeType": "YulFunctionCall",
                                          "src": "9411:81:5"
                                        },
                                        "nodeType": "YulExpressionStatement",
                                        "src": "9411:81:5"
                                      }
                                    ]
                                  },
                                  "nodeType": "YulCase",
                                  "src": "9260:242:5",
                                  "value": "default"
                                }
                              ],
                              "expression": {
                                "arguments": [
                                  {
                                    "name": "newLen",
                                    "nodeType": "YulIdentifier",
                                    "src": "8568:6:5"
                                  },
                                  {
                                    "kind": "number",
                                    "nodeType": "YulLiteral",
                                    "src": "8576:2:5",
                                    "type": "",
                                    "value": "31"
                                  }
                                ],
                                "functionName": {
                                  "name": "gt",
                                  "nodeType": "YulIdentifier",
                                  "src": "8565:2:5"
                                },
                                "nodeType": "YulFunctionCall",
                                "src": "8565:14:5"
                              },
                              "nodeType": "YulSwitch",
                              "src": "8558:944:5"
                            }
                          ]
                        },
                        "name": "copy_byte_array_to_storage_from_t_string_memory_ptr_to_t_string_storage",
                        "nodeType": "YulFunctionDefinition",
                        "parameters": [
                          {
                            "name": "slot",
                            "nodeType": "YulTypedName",
                            "src": "8237:4:5",
                            "type": ""
                          },
                          {
                            "name": "src",
                            "nodeType": "YulTypedName",
                            "src": "8243:3:5",
                            "type": ""
                          }
                        ],
                        "src": "8156:1352:5"
                      },
                      {
                        "body": {
                          "nodeType": "YulBlock",
                          "src": "9562:79:5",
                          "statements": [
                            {
                              "nodeType": "YulAssignment",
                              "src": "9572:17:5",
                              "value": {
                                "arguments": [
                                  {
                                    "name": "x",
                                    "nodeType": "YulIdentifier",
                                    "src": "9584:1:5"
                                  },
                                  {
                                    "name": "y",
                                    "nodeType": "YulIdentifier",
                                    "src": "9587:1:5"
                                  }
                                ],
                                "functionName": {
                                  "name": "sub",
                                  "nodeType": "YulIdentifier",
                                  "src": "9580:3:5"
                                },
                                "nodeType": "YulFunctionCall",
                                "src": "9580:9:5"
                              },
                              "variableNames": [
                                {
                                  "name": "diff",
                                  "nodeType": "YulIdentifier",
                                  "src": "9572:4:5"
                                }
                              ]
                            },
                            {
                              "body": {
                                "nodeType": "YulBlock",
                                "src": "9613:22:5",
                                "statements": [
                                  {
                                    "expression": {
                                      "arguments": [],
                                      "functionName": {
                                        "name": "panic_error_0x11",
                                        "nodeType": "YulIdentifier",
                                        "src": "9615:16:5"
                                      },
                                      "nodeType": "YulFunctionCall",
                                      "src": "9615:18:5"
                                    },
                                    "nodeType": "YulExpressionStatement",
                                    "src": "9615:18:5"
                                  }
                                ]
                              },
                              "condition": {
                                "arguments": [
                                  {
                                    "name": "diff",
                                    "nodeType": "YulIdentifier",
                                    "src": "9604:4:5"
                                  },
                                  {
                                    "name": "x",
                                    "nodeType": "YulIdentifier",
                                    "src": "9610:1:5"
                                  }
                                ],
                                "functionName": {
                                  "name": "gt",
                                  "nodeType": "YulIdentifier",
                                  "src": "9601:2:5"
                                },
                                "nodeType": "YulFunctionCall",
                                "src": "9601:11:5"
                              },
                              "nodeType": "YulIf",
                              "src": "9598:37:5"
                            }
                          ]
                        },
                        "name": "checked_sub_t_uint256",
                        "nodeType": "YulFunctionDefinition",
                        "parameters": [
                          {
                            "name": "x",
                            "nodeType": "YulTypedName",
                            "src": "9544:1:5",
                            "type": ""
                          },
                          {
                            "name": "y",
                            "nodeType": "YulTypedName",
                            "src": "9547:1:5",
                            "type": ""
                          }
                        ],
                        "returnVariables": [
                          {
                            "name": "diff",
                            "nodeType": "YulTypedName",
                            "src": "9553:4:5",
                            "type": ""
                          }
                        ],
                        "src": "9513:128:5"
                      },
                      {
                        "body": {
                          "nodeType": "YulBlock",
                          "src": "9820:232:5",
                          "statements": [
                            {
                              "expression": {
                                "arguments": [
                                  {
                                    "name": "headStart",
                                    "nodeType": "YulIdentifier",
                                    "src": "9837:9:5"
                                  },
                                  {
                                    "kind": "number",
                                    "nodeType": "YulLiteral",
                                    "src": "9848:2:5",
                                    "type": "",
                                    "value": "32"
                                  }
                                ],
                                "functionName": {
                                  "name": "mstore",
                                  "nodeType": "YulIdentifier",
                                  "src": "9830:6:5"
                                },
                                "nodeType": "YulFunctionCall",
                                "src": "9830:21:5"
                              },
                              "nodeType": "YulExpressionStatement",
                              "src": "9830:21:5"
                            },
                            {
                              "expression": {
                                "arguments": [
                                  {
                                    "arguments": [
                                      {
                                        "name": "headStart",
                                        "nodeType": "YulIdentifier",
                                        "src": "9871:9:5"
                                      },
                                      {
                                        "kind": "number",
                                        "nodeType": "YulLiteral",
                                        "src": "9882:2:5",
                                        "type": "",
                                        "value": "32"
                                      }
                                    ],
                                    "functionName": {
                                      "name": "add",
                                      "nodeType": "YulIdentifier",
                                      "src": "9867:3:5"
                                    },
                                    "nodeType": "YulFunctionCall",
                                    "src": "9867:18:5"
                                  },
                                  {
                                    "kind": "number",
                                    "nodeType": "YulLiteral",
                                    "src": "9887:2:5",
                                    "type": "",
                                    "value": "42"
                                  }
                                ],
                                "functionName": {
                                  "name": "mstore",
                                  "nodeType": "YulIdentifier",
                                  "src": "9860:6:5"
                                },
                                "nodeType": "YulFunctionCall",
                                "src": "9860:30:5"
                              },
                              "nodeType": "YulExpressionStatement",
                              "src": "9860:30:5"
                            },
                            {
                              "expression": {
                                "arguments": [
                                  {
                                    "arguments": [
                                      {
                                        "name": "headStart",
                                        "nodeType": "YulIdentifier",
                                        "src": "9910:9:5"
                                      },
                                      {
                                        "kind": "number",
                                        "nodeType": "YulLiteral",
                                        "src": "9921:2:5",
                                        "type": "",
                                        "value": "64"
                                      }
                                    ],
                                    "functionName": {
                                      "name": "add",
                                      "nodeType": "YulIdentifier",
                                      "src": "9906:3:5"
                                    },
                                    "nodeType": "YulFunctionCall",
                                    "src": "9906:18:5"
                                  },
                                  {
                                    "hexValue": "43757272656e7420737461747573206973206e6f7420766f74696e6720736573",
                                    "kind": "string",
                                    "nodeType": "YulLiteral",
                                    "src": "9926:34:5",
                                    "type": "",
                                    "value": "Current status is not voting ses"
                                  }
                                ],
                                "functionName": {
                                  "name": "mstore",
                                  "nodeType": "YulIdentifier",
                                  "src": "9899:6:5"
                                },
                                "nodeType": "YulFunctionCall",
                                "src": "9899:62:5"
                              },
                              "nodeType": "YulExpressionStatement",
                              "src": "9899:62:5"
                            },
                            {
                              "expression": {
                                "arguments": [
                                  {
                                    "arguments": [
                                      {
                                        "name": "headStart",
                                        "nodeType": "YulIdentifier",
                                        "src": "9981:9:5"
                                      },
                                      {
                                        "kind": "number",
                                        "nodeType": "YulLiteral",
                                        "src": "9992:2:5",
                                        "type": "",
                                        "value": "96"
                                      }
                                    ],
                                    "functionName": {
                                      "name": "add",
                                      "nodeType": "YulIdentifier",
                                      "src": "9977:3:5"
                                    },
                                    "nodeType": "YulFunctionCall",
                                    "src": "9977:18:5"
                                  },
                                  {
                                    "hexValue": "73696f6e20656e646564",
                                    "kind": "string",
                                    "nodeType": "YulLiteral",
                                    "src": "9997:12:5",
                                    "type": "",
                                    "value": "sion ended"
                                  }
                                ],
                                "functionName": {
                                  "name": "mstore",
                                  "nodeType": "YulIdentifier",
                                  "src": "9970:6:5"
                                },
                                "nodeType": "YulFunctionCall",
                                "src": "9970:40:5"
                              },
                              "nodeType": "YulExpressionStatement",
                              "src": "9970:40:5"
                            },
                            {
                              "nodeType": "YulAssignment",
                              "src": "10019:27:5",
                              "value": {
                                "arguments": [
                                  {
                                    "name": "headStart",
                                    "nodeType": "YulIdentifier",
                                    "src": "10031:9:5"
                                  },
                                  {
                                    "kind": "number",
                                    "nodeType": "YulLiteral",
                                    "src": "10042:3:5",
                                    "type": "",
                                    "value": "128"
                                  }
                                ],
                                "functionName": {
                                  "name": "add",
                                  "nodeType": "YulIdentifier",
                                  "src": "10027:3:5"
                                },
                                "nodeType": "YulFunctionCall",
                                "src": "10027:19:5"
                              },
                              "variableNames": [
                                {
                                  "name": "tail",
                                  "nodeType": "YulIdentifier",
                                  "src": "10019:4:5"
                                }
                              ]
                            }
                          ]
                        },
                        "name": "abi_encode_tuple_t_stringliteral_ea2f0cf2e21bed202157d2615233837ad8b5dafcd570b1bb5b6197e0c7e41fcc__to_t_string_memory_ptr__fromStack_reversed",
                        "nodeType": "YulFunctionDefinition",
                        "parameters": [
                          {
                            "name": "headStart",
                            "nodeType": "YulTypedName",
                            "src": "9797:9:5",
                            "type": ""
                          }
                        ],
                        "returnVariables": [
                          {
                            "name": "tail",
                            "nodeType": "YulTypedName",
                            "src": "9811:4:5",
                            "type": ""
                          }
                        ],
                        "src": "9646:406:5"
                      },
                      {
                        "body": {
                          "nodeType": "YulBlock",
                          "src": "10220:167:5",
                          "statements": [
                            {
                              "nodeType": "YulAssignment",
                              "src": "10230:26:5",
                              "value": {
                                "arguments": [
                                  {
                                    "name": "headStart",
                                    "nodeType": "YulIdentifier",
                                    "src": "10242:9:5"
                                  },
                                  {
                                    "kind": "number",
                                    "nodeType": "YulLiteral",
                                    "src": "10253:2:5",
                                    "type": "",
                                    "value": "64"
                                  }
                                ],
                                "functionName": {
                                  "name": "add",
                                  "nodeType": "YulIdentifier",
                                  "src": "10238:3:5"
                                },
                                "nodeType": "YulFunctionCall",
                                "src": "10238:18:5"
                              },
                              "variableNames": [
                                {
                                  "name": "tail",
                                  "nodeType": "YulIdentifier",
                                  "src": "10230:4:5"
                                }
                              ]
                            },
                            {
                              "expression": {
                                "arguments": [
                                  {
                                    "name": "value0",
                                    "nodeType": "YulIdentifier",
                                    "src": "10296:6:5"
                                  },
                                  {
                                    "name": "headStart",
                                    "nodeType": "YulIdentifier",
                                    "src": "10304:9:5"
                                  }
                                ],
                                "functionName": {
                                  "name": "abi_encode_enum_WorkflowStatus",
                                  "nodeType": "YulIdentifier",
                                  "src": "10265:30:5"
                                },
                                "nodeType": "YulFunctionCall",
                                "src": "10265:49:5"
                              },
                              "nodeType": "YulExpressionStatement",
                              "src": "10265:49:5"
                            },
                            {
                              "expression": {
                                "arguments": [
                                  {
                                    "name": "value1",
                                    "nodeType": "YulIdentifier",
                                    "src": "10354:6:5"
                                  },
                                  {
                                    "arguments": [
                                      {
                                        "name": "headStart",
                                        "nodeType": "YulIdentifier",
                                        "src": "10366:9:5"
                                      },
                                      {
                                        "kind": "number",
                                        "nodeType": "YulLiteral",
                                        "src": "10377:2:5",
                                        "type": "",
                                        "value": "32"
                                      }
                                    ],
                                    "functionName": {
                                      "name": "add",
                                      "nodeType": "YulIdentifier",
                                      "src": "10362:3:5"
                                    },
                                    "nodeType": "YulFunctionCall",
                                    "src": "10362:18:5"
                                  }
                                ],
                                "functionName": {
                                  "name": "abi_encode_enum_WorkflowStatus",
                                  "nodeType": "YulIdentifier",
                                  "src": "10323:30:5"
                                },
                                "nodeType": "YulFunctionCall",
                                "src": "10323:58:5"
                              },
                              "nodeType": "YulExpressionStatement",
                              "src": "10323:58:5"
                            }
                          ]
                        },
                        "name": "abi_encode_tuple_t_enum$_WorkflowStatus_$1347_t_enum$_WorkflowStatus_$1347__to_t_uint8_t_uint8__fromStack_reversed",
                        "nodeType": "YulFunctionDefinition",
                        "parameters": [
                          {
                            "name": "headStart",
                            "nodeType": "YulTypedName",
                            "src": "10181:9:5",
                            "type": ""
                          },
                          {
                            "name": "value1",
                            "nodeType": "YulTypedName",
                            "src": "10192:6:5",
                            "type": ""
                          },
                          {
                            "name": "value0",
                            "nodeType": "YulTypedName",
                            "src": "10200:6:5",
                            "type": ""
                          }
                        ],
                        "returnVariables": [
                          {
                            "name": "tail",
                            "nodeType": "YulTypedName",
                            "src": "10211:4:5",
                            "type": ""
                          }
                        ],
                        "src": "10057:330:5"
                      },
                      {
                        "body": {
                          "nodeType": "YulBlock",
                          "src": "10566:231:5",
                          "statements": [
                            {
                              "expression": {
                                "arguments": [
                                  {
                                    "name": "headStart",
                                    "nodeType": "YulIdentifier",
                                    "src": "10583:9:5"
                                  },
                                  {
                                    "kind": "number",
                                    "nodeType": "YulLiteral",
                                    "src": "10594:2:5",
                                    "type": "",
                                    "value": "32"
                                  }
                                ],
                                "functionName": {
                                  "name": "mstore",
                                  "nodeType": "YulIdentifier",
                                  "src": "10576:6:5"
                                },
                                "nodeType": "YulFunctionCall",
                                "src": "10576:21:5"
                              },
                              "nodeType": "YulExpressionStatement",
                              "src": "10576:21:5"
                            },
                            {
                              "expression": {
                                "arguments": [
                                  {
                                    "arguments": [
                                      {
                                        "name": "headStart",
                                        "nodeType": "YulIdentifier",
                                        "src": "10617:9:5"
                                      },
                                      {
                                        "kind": "number",
                                        "nodeType": "YulLiteral",
                                        "src": "10628:2:5",
                                        "type": "",
                                        "value": "32"
                                      }
                                    ],
                                    "functionName": {
                                      "name": "add",
                                      "nodeType": "YulIdentifier",
                                      "src": "10613:3:5"
                                    },
                                    "nodeType": "YulFunctionCall",
                                    "src": "10613:18:5"
                                  },
                                  {
                                    "kind": "number",
                                    "nodeType": "YulLiteral",
                                    "src": "10633:2:5",
                                    "type": "",
                                    "value": "41"
                                  }
                                ],
                                "functionName": {
                                  "name": "mstore",
                                  "nodeType": "YulIdentifier",
                                  "src": "10606:6:5"
                                },
                                "nodeType": "YulFunctionCall",
                                "src": "10606:30:5"
                              },
                              "nodeType": "YulExpressionStatement",
                              "src": "10606:30:5"
                            },
                            {
                              "expression": {
                                "arguments": [
                                  {
                                    "arguments": [
                                      {
                                        "name": "headStart",
                                        "nodeType": "YulIdentifier",
                                        "src": "10656:9:5"
                                      },
                                      {
                                        "kind": "number",
                                        "nodeType": "YulLiteral",
                                        "src": "10667:2:5",
                                        "type": "",
                                        "value": "64"
                                      }
                                    ],
                                    "functionName": {
                                      "name": "add",
                                      "nodeType": "YulIdentifier",
                                      "src": "10652:3:5"
                                    },
                                    "nodeType": "YulFunctionCall",
                                    "src": "10652:18:5"
                                  },
                                  {
                                    "hexValue": "5265676973746572696e672070726f706f73616c732063616e74206265207374",
                                    "kind": "string",
                                    "nodeType": "YulLiteral",
                                    "src": "10672:34:5",
                                    "type": "",
                                    "value": "Registering proposals cant be st"
                                  }
                                ],
                                "functionName": {
                                  "name": "mstore",
                                  "nodeType": "YulIdentifier",
                                  "src": "10645:6:5"
                                },
                                "nodeType": "YulFunctionCall",
                                "src": "10645:62:5"
                              },
                              "nodeType": "YulExpressionStatement",
                              "src": "10645:62:5"
                            },
                            {
                              "expression": {
                                "arguments": [
                                  {
                                    "arguments": [
                                      {
                                        "name": "headStart",
                                        "nodeType": "YulIdentifier",
                                        "src": "10727:9:5"
                                      },
                                      {
                                        "kind": "number",
                                        "nodeType": "YulLiteral",
                                        "src": "10738:2:5",
                                        "type": "",
                                        "value": "96"
                                      }
                                    ],
                                    "functionName": {
                                      "name": "add",
                                      "nodeType": "YulIdentifier",
                                      "src": "10723:3:5"
                                    },
                                    "nodeType": "YulFunctionCall",
                                    "src": "10723:18:5"
                                  },
                                  {
                                    "hexValue": "6172746564206e6f77",
                                    "kind": "string",
                                    "nodeType": "YulLiteral",
                                    "src": "10743:11:5",
                                    "type": "",
                                    "value": "arted now"
                                  }
                                ],
                                "functionName": {
                                  "name": "mstore",
                                  "nodeType": "YulIdentifier",
                                  "src": "10716:6:5"
                                },
                                "nodeType": "YulFunctionCall",
                                "src": "10716:39:5"
                              },
                              "nodeType": "YulExpressionStatement",
                              "src": "10716:39:5"
                            },
                            {
                              "nodeType": "YulAssignment",
                              "src": "10764:27:5",
                              "value": {
                                "arguments": [
                                  {
                                    "name": "headStart",
                                    "nodeType": "YulIdentifier",
                                    "src": "10776:9:5"
                                  },
                                  {
                                    "kind": "number",
                                    "nodeType": "YulLiteral",
                                    "src": "10787:3:5",
                                    "type": "",
                                    "value": "128"
                                  }
                                ],
                                "functionName": {
                                  "name": "add",
                                  "nodeType": "YulIdentifier",
                                  "src": "10772:3:5"
                                },
                                "nodeType": "YulFunctionCall",
                                "src": "10772:19:5"
                              },
                              "variableNames": [
                                {
                                  "name": "tail",
                                  "nodeType": "YulIdentifier",
                                  "src": "10764:4:5"
                                }
                              ]
                            }
                          ]
                        },
                        "name": "abi_encode_tuple_t_stringliteral_e2a80632f2fcd18d6496f0cfcfccd5b0e23dd9fc7a8b9b52e45db1b65d7da09e__to_t_string_memory_ptr__fromStack_reversed",
                        "nodeType": "YulFunctionDefinition",
                        "parameters": [
                          {
                            "name": "headStart",
                            "nodeType": "YulTypedName",
                            "src": "10543:9:5",
                            "type": ""
                          }
                        ],
                        "returnVariables": [
                          {
                            "name": "tail",
                            "nodeType": "YulTypedName",
                            "src": "10557:4:5",
                            "type": ""
                          }
                        ],
                        "src": "10392:405:5"
                      },
                      {
                        "body": {
                          "nodeType": "YulBlock",
                          "src": "10976:230:5",
                          "statements": [
                            {
                              "expression": {
                                "arguments": [
                                  {
                                    "name": "headStart",
                                    "nodeType": "YulIdentifier",
                                    "src": "10993:9:5"
                                  },
                                  {
                                    "kind": "number",
                                    "nodeType": "YulLiteral",
                                    "src": "11004:2:5",
                                    "type": "",
                                    "value": "32"
                                  }
                                ],
                                "functionName": {
                                  "name": "mstore",
                                  "nodeType": "YulIdentifier",
                                  "src": "10986:6:5"
                                },
                                "nodeType": "YulFunctionCall",
                                "src": "10986:21:5"
                              },
                              "nodeType": "YulExpressionStatement",
                              "src": "10986:21:5"
                            },
                            {
                              "expression": {
                                "arguments": [
                                  {
                                    "arguments": [
                                      {
                                        "name": "headStart",
                                        "nodeType": "YulIdentifier",
                                        "src": "11027:9:5"
                                      },
                                      {
                                        "kind": "number",
                                        "nodeType": "YulLiteral",
                                        "src": "11038:2:5",
                                        "type": "",
                                        "value": "32"
                                      }
                                    ],
                                    "functionName": {
                                      "name": "add",
                                      "nodeType": "YulIdentifier",
                                      "src": "11023:3:5"
                                    },
                                    "nodeType": "YulFunctionCall",
                                    "src": "11023:18:5"
                                  },
                                  {
                                    "kind": "number",
                                    "nodeType": "YulLiteral",
                                    "src": "11043:2:5",
                                    "type": "",
                                    "value": "40"
                                  }
                                ],
                                "functionName": {
                                  "name": "mstore",
                                  "nodeType": "YulIdentifier",
                                  "src": "11016:6:5"
                                },
                                "nodeType": "YulFunctionCall",
                                "src": "11016:30:5"
                              },
                              "nodeType": "YulExpressionStatement",
                              "src": "11016:30:5"
                            },
                            {
                              "expression": {
                                "arguments": [
                                  {
                                    "arguments": [
                                      {
                                        "name": "headStart",
                                        "nodeType": "YulIdentifier",
                                        "src": "11066:9:5"
                                      },
                                      {
                                        "kind": "number",
                                        "nodeType": "YulLiteral",
                                        "src": "11077:2:5",
                                        "type": "",
                                        "value": "64"
                                      }
                                    ],
                                    "functionName": {
                                      "name": "add",
                                      "nodeType": "YulIdentifier",
                                      "src": "11062:3:5"
                                    },
                                    "nodeType": "YulFunctionCall",
                                    "src": "11062:18:5"
                                  },
                                  {
                                    "hexValue": "5265676973746572696e672070726f706f73616c7320686176656e7420737461",
                                    "kind": "string",
                                    "nodeType": "YulLiteral",
                                    "src": "11082:34:5",
                                    "type": "",
                                    "value": "Registering proposals havent sta"
                                  }
                                ],
                                "functionName": {
                                  "name": "mstore",
                                  "nodeType": "YulIdentifier",
                                  "src": "11055:6:5"
                                },
                                "nodeType": "YulFunctionCall",
                                "src": "11055:62:5"
                              },
                              "nodeType": "YulExpressionStatement",
                              "src": "11055:62:5"
                            },
                            {
                              "expression": {
                                "arguments": [
                                  {
                                    "arguments": [
                                      {
                                        "name": "headStart",
                                        "nodeType": "YulIdentifier",
                                        "src": "11137:9:5"
                                      },
                                      {
                                        "kind": "number",
                                        "nodeType": "YulLiteral",
                                        "src": "11148:2:5",
                                        "type": "",
                                        "value": "96"
                                      }
                                    ],
                                    "functionName": {
                                      "name": "add",
                                      "nodeType": "YulIdentifier",
                                      "src": "11133:3:5"
                                    },
                                    "nodeType": "YulFunctionCall",
                                    "src": "11133:18:5"
                                  },
                                  {
                                    "hexValue": "7274656420796574",
                                    "kind": "string",
                                    "nodeType": "YulLiteral",
                                    "src": "11153:10:5",
                                    "type": "",
                                    "value": "rted yet"
                                  }
                                ],
                                "functionName": {
                                  "name": "mstore",
                                  "nodeType": "YulIdentifier",
                                  "src": "11126:6:5"
                                },
                                "nodeType": "YulFunctionCall",
                                "src": "11126:38:5"
                              },
                              "nodeType": "YulExpressionStatement",
                              "src": "11126:38:5"
                            },
                            {
                              "nodeType": "YulAssignment",
                              "src": "11173:27:5",
                              "value": {
                                "arguments": [
                                  {
                                    "name": "headStart",
                                    "nodeType": "YulIdentifier",
                                    "src": "11185:9:5"
                                  },
                                  {
                                    "kind": "number",
                                    "nodeType": "YulLiteral",
                                    "src": "11196:3:5",
                                    "type": "",
                                    "value": "128"
                                  }
                                ],
                                "functionName": {
                                  "name": "add",
                                  "nodeType": "YulIdentifier",
                                  "src": "11181:3:5"
                                },
                                "nodeType": "YulFunctionCall",
                                "src": "11181:19:5"
                              },
                              "variableNames": [
                                {
                                  "name": "tail",
                                  "nodeType": "YulIdentifier",
                                  "src": "11173:4:5"
                                }
                              ]
                            }
                          ]
                        },
                        "name": "abi_encode_tuple_t_stringliteral_e924b915216d9035118ecb3780d0b361b3358f4cd76cb017027ea4d540d49116__to_t_string_memory_ptr__fromStack_reversed",
                        "nodeType": "YulFunctionDefinition",
                        "parameters": [
                          {
                            "name": "headStart",
                            "nodeType": "YulTypedName",
                            "src": "10953:9:5",
                            "type": ""
                          }
                        ],
                        "returnVariables": [
                          {
                            "name": "tail",
                            "nodeType": "YulTypedName",
                            "src": "10967:4:5",
                            "type": ""
                          }
                        ],
                        "src": "10802:404:5"
                      },
                      {
                        "body": {
                          "nodeType": "YulBlock",
                          "src": "11385:233:5",
                          "statements": [
                            {
                              "expression": {
                                "arguments": [
                                  {
                                    "name": "headStart",
                                    "nodeType": "YulIdentifier",
                                    "src": "11402:9:5"
                                  },
                                  {
                                    "kind": "number",
                                    "nodeType": "YulLiteral",
                                    "src": "11413:2:5",
                                    "type": "",
                                    "value": "32"
                                  }
                                ],
                                "functionName": {
                                  "name": "mstore",
                                  "nodeType": "YulIdentifier",
                                  "src": "11395:6:5"
                                },
                                "nodeType": "YulFunctionCall",
                                "src": "11395:21:5"
                              },
                              "nodeType": "YulExpressionStatement",
                              "src": "11395:21:5"
                            },
                            {
                              "expression": {
                                "arguments": [
                                  {
                                    "arguments": [
                                      {
                                        "name": "headStart",
                                        "nodeType": "YulIdentifier",
                                        "src": "11436:9:5"
                                      },
                                      {
                                        "kind": "number",
                                        "nodeType": "YulLiteral",
                                        "src": "11447:2:5",
                                        "type": "",
                                        "value": "32"
                                      }
                                    ],
                                    "functionName": {
                                      "name": "add",
                                      "nodeType": "YulIdentifier",
                                      "src": "11432:3:5"
                                    },
                                    "nodeType": "YulFunctionCall",
                                    "src": "11432:18:5"
                                  },
                                  {
                                    "kind": "number",
                                    "nodeType": "YulLiteral",
                                    "src": "11452:2:5",
                                    "type": "",
                                    "value": "43"
                                  }
                                ],
                                "functionName": {
                                  "name": "mstore",
                                  "nodeType": "YulIdentifier",
                                  "src": "11425:6:5"
                                },
                                "nodeType": "YulFunctionCall",
                                "src": "11425:30:5"
                              },
                              "nodeType": "YulExpressionStatement",
                              "src": "11425:30:5"
                            },
                            {
                              "expression": {
                                "arguments": [
                                  {
                                    "arguments": [
                                      {
                                        "name": "headStart",
                                        "nodeType": "YulIdentifier",
                                        "src": "11475:9:5"
                                      },
                                      {
                                        "kind": "number",
                                        "nodeType": "YulLiteral",
                                        "src": "11486:2:5",
                                        "type": "",
                                        "value": "64"
                                      }
                                    ],
                                    "functionName": {
                                      "name": "add",
                                      "nodeType": "YulIdentifier",
                                      "src": "11471:3:5"
                                    },
                                    "nodeType": "YulFunctionCall",
                                    "src": "11471:18:5"
                                  },
                                  {
                                    "hexValue": "5265676973746572696e672070726f706f73616c73207068617365206973206e",
                                    "kind": "string",
                                    "nodeType": "YulLiteral",
                                    "src": "11491:34:5",
                                    "type": "",
                                    "value": "Registering proposals phase is n"
                                  }
                                ],
                                "functionName": {
                                  "name": "mstore",
                                  "nodeType": "YulIdentifier",
                                  "src": "11464:6:5"
                                },
                                "nodeType": "YulFunctionCall",
                                "src": "11464:62:5"
                              },
                              "nodeType": "YulExpressionStatement",
                              "src": "11464:62:5"
                            },
                            {
                              "expression": {
                                "arguments": [
                                  {
                                    "arguments": [
                                      {
                                        "name": "headStart",
                                        "nodeType": "YulIdentifier",
                                        "src": "11546:9:5"
                                      },
                                      {
                                        "kind": "number",
                                        "nodeType": "YulLiteral",
                                        "src": "11557:2:5",
                                        "type": "",
                                        "value": "96"
                                      }
                                    ],
                                    "functionName": {
                                      "name": "add",
                                      "nodeType": "YulIdentifier",
                                      "src": "11542:3:5"
                                    },
                                    "nodeType": "YulFunctionCall",
                                    "src": "11542:18:5"
                                  },
                                  {
                                    "hexValue": "6f742066696e6973686564",
                                    "kind": "string",
                                    "nodeType": "YulLiteral",
                                    "src": "11562:13:5",
                                    "type": "",
                                    "value": "ot finished"
                                  }
                                ],
                                "functionName": {
                                  "name": "mstore",
                                  "nodeType": "YulIdentifier",
                                  "src": "11535:6:5"
                                },
                                "nodeType": "YulFunctionCall",
                                "src": "11535:41:5"
                              },
                              "nodeType": "YulExpressionStatement",
                              "src": "11535:41:5"
                            },
                            {
                              "nodeType": "YulAssignment",
                              "src": "11585:27:5",
                              "value": {
                                "arguments": [
                                  {
                                    "name": "headStart",
                                    "nodeType": "YulIdentifier",
                                    "src": "11597:9:5"
                                  },
                                  {
                                    "kind": "number",
                                    "nodeType": "YulLiteral",
                                    "src": "11608:3:5",
                                    "type": "",
                                    "value": "128"
                                  }
                                ],
                                "functionName": {
                                  "name": "add",
                                  "nodeType": "YulIdentifier",
                                  "src": "11593:3:5"
                                },
                                "nodeType": "YulFunctionCall",
                                "src": "11593:19:5"
                              },
                              "variableNames": [
                                {
                                  "name": "tail",
                                  "nodeType": "YulIdentifier",
                                  "src": "11585:4:5"
                                }
                              ]
                            }
                          ]
                        },
                        "name": "abi_encode_tuple_t_stringliteral_c08ba2fb32a439193d402103beb50d60ed171e76f51206ca6a45d50440a03472__to_t_string_memory_ptr__fromStack_reversed",
                        "nodeType": "YulFunctionDefinition",
                        "parameters": [
                          {
                            "name": "headStart",
                            "nodeType": "YulTypedName",
                            "src": "11362:9:5",
                            "type": ""
                          }
                        ],
                        "returnVariables": [
                          {
                            "name": "tail",
                            "nodeType": "YulTypedName",
                            "src": "11376:4:5",
                            "type": ""
                          }
                        ],
                        "src": "11211:407:5"
                      },
                      {
                        "body": {
                          "nodeType": "YulBlock",
                          "src": "11797:228:5",
                          "statements": [
                            {
                              "expression": {
                                "arguments": [
                                  {
                                    "name": "headStart",
                                    "nodeType": "YulIdentifier",
                                    "src": "11814:9:5"
                                  },
                                  {
                                    "kind": "number",
                                    "nodeType": "YulLiteral",
                                    "src": "11825:2:5",
                                    "type": "",
                                    "value": "32"
                                  }
                                ],
                                "functionName": {
                                  "name": "mstore",
                                  "nodeType": "YulIdentifier",
                                  "src": "11807:6:5"
                                },
                                "nodeType": "YulFunctionCall",
                                "src": "11807:21:5"
                              },
                              "nodeType": "YulExpressionStatement",
                              "src": "11807:21:5"
                            },
                            {
                              "expression": {
                                "arguments": [
                                  {
                                    "arguments": [
                                      {
                                        "name": "headStart",
                                        "nodeType": "YulIdentifier",
                                        "src": "11848:9:5"
                                      },
                                      {
                                        "kind": "number",
                                        "nodeType": "YulLiteral",
                                        "src": "11859:2:5",
                                        "type": "",
                                        "value": "32"
                                      }
                                    ],
                                    "functionName": {
                                      "name": "add",
                                      "nodeType": "YulIdentifier",
                                      "src": "11844:3:5"
                                    },
                                    "nodeType": "YulFunctionCall",
                                    "src": "11844:18:5"
                                  },
                                  {
                                    "kind": "number",
                                    "nodeType": "YulLiteral",
                                    "src": "11864:2:5",
                                    "type": "",
                                    "value": "38"
                                  }
                                ],
                                "functionName": {
                                  "name": "mstore",
                                  "nodeType": "YulIdentifier",
                                  "src": "11837:6:5"
                                },
                                "nodeType": "YulFunctionCall",
                                "src": "11837:30:5"
                              },
                              "nodeType": "YulExpressionStatement",
                              "src": "11837:30:5"
                            },
                            {
                              "expression": {
                                "arguments": [
                                  {
                                    "arguments": [
                                      {
                                        "name": "headStart",
                                        "nodeType": "YulIdentifier",
                                        "src": "11887:9:5"
                                      },
                                      {
                                        "kind": "number",
                                        "nodeType": "YulLiteral",
                                        "src": "11898:2:5",
                                        "type": "",
                                        "value": "64"
                                      }
                                    ],
                                    "functionName": {
                                      "name": "add",
                                      "nodeType": "YulIdentifier",
                                      "src": "11883:3:5"
                                    },
                                    "nodeType": "YulFunctionCall",
                                    "src": "11883:18:5"
                                  },
                                  {
                                    "hexValue": "4f776e61626c653a206e6577206f776e657220697320746865207a65726f2061",
                                    "kind": "string",
                                    "nodeType": "YulLiteral",
                                    "src": "11903:34:5",
                                    "type": "",
                                    "value": "Ownable: new owner is the zero a"
                                  }
                                ],
                                "functionName": {
                                  "name": "mstore",
                                  "nodeType": "YulIdentifier",
                                  "src": "11876:6:5"
                                },
                                "nodeType": "YulFunctionCall",
                                "src": "11876:62:5"
                              },
                              "nodeType": "YulExpressionStatement",
                              "src": "11876:62:5"
                            },
                            {
                              "expression": {
                                "arguments": [
                                  {
                                    "arguments": [
                                      {
                                        "name": "headStart",
                                        "nodeType": "YulIdentifier",
                                        "src": "11958:9:5"
                                      },
                                      {
                                        "kind": "number",
                                        "nodeType": "YulLiteral",
                                        "src": "11969:2:5",
                                        "type": "",
                                        "value": "96"
                                      }
                                    ],
                                    "functionName": {
                                      "name": "add",
                                      "nodeType": "YulIdentifier",
                                      "src": "11954:3:5"
                                    },
                                    "nodeType": "YulFunctionCall",
                                    "src": "11954:18:5"
                                  },
                                  {
                                    "hexValue": "646472657373",
                                    "kind": "string",
                                    "nodeType": "YulLiteral",
                                    "src": "11974:8:5",
                                    "type": "",
                                    "value": "ddress"
                                  }
                                ],
                                "functionName": {
                                  "name": "mstore",
                                  "nodeType": "YulIdentifier",
                                  "src": "11947:6:5"
                                },
                                "nodeType": "YulFunctionCall",
                                "src": "11947:36:5"
                              },
                              "nodeType": "YulExpressionStatement",
                              "src": "11947:36:5"
                            },
                            {
                              "nodeType": "YulAssignment",
                              "src": "11992:27:5",
                              "value": {
                                "arguments": [
                                  {
                                    "name": "headStart",
                                    "nodeType": "YulIdentifier",
                                    "src": "12004:9:5"
                                  },
                                  {
                                    "kind": "number",
                                    "nodeType": "YulLiteral",
                                    "src": "12015:3:5",
                                    "type": "",
                                    "value": "128"
                                  }
                                ],
                                "functionName": {
                                  "name": "add",
                                  "nodeType": "YulIdentifier",
                                  "src": "12000:3:5"
                                },
                                "nodeType": "YulFunctionCall",
                                "src": "12000:19:5"
                              },
                              "variableNames": [
                                {
                                  "name": "tail",
                                  "nodeType": "YulIdentifier",
                                  "src": "11992:4:5"
                                }
                              ]
                            }
                          ]
                        },
                        "name": "abi_encode_tuple_t_stringliteral_245f15ff17f551913a7a18385165551503906a406f905ac1c2437281a7cd0cfe__to_t_string_memory_ptr__fromStack_reversed",
                        "nodeType": "YulFunctionDefinition",
                        "parameters": [
                          {
                            "name": "headStart",
                            "nodeType": "YulTypedName",
                            "src": "11774:9:5",
                            "type": ""
                          }
                        ],
                        "returnVariables": [
                          {
                            "name": "tail",
                            "nodeType": "YulTypedName",
                            "src": "11788:4:5",
                            "type": ""
                          }
                        ],
                        "src": "11623:402:5"
                      },
                      {
                        "body": {
                          "nodeType": "YulBlock",
                          "src": "12204:225:5",
                          "statements": [
                            {
                              "expression": {
                                "arguments": [
                                  {
                                    "name": "headStart",
                                    "nodeType": "YulIdentifier",
                                    "src": "12221:9:5"
                                  },
                                  {
                                    "kind": "number",
                                    "nodeType": "YulLiteral",
                                    "src": "12232:2:5",
                                    "type": "",
                                    "value": "32"
                                  }
                                ],
                                "functionName": {
                                  "name": "mstore",
                                  "nodeType": "YulIdentifier",
                                  "src": "12214:6:5"
                                },
                                "nodeType": "YulFunctionCall",
                                "src": "12214:21:5"
                              },
                              "nodeType": "YulExpressionStatement",
                              "src": "12214:21:5"
                            },
                            {
                              "expression": {
                                "arguments": [
                                  {
                                    "arguments": [
                                      {
                                        "name": "headStart",
                                        "nodeType": "YulIdentifier",
                                        "src": "12255:9:5"
                                      },
                                      {
                                        "kind": "number",
                                        "nodeType": "YulLiteral",
                                        "src": "12266:2:5",
                                        "type": "",
                                        "value": "32"
                                      }
                                    ],
                                    "functionName": {
                                      "name": "add",
                                      "nodeType": "YulIdentifier",
                                      "src": "12251:3:5"
                                    },
                                    "nodeType": "YulFunctionCall",
                                    "src": "12251:18:5"
                                  },
                                  {
                                    "kind": "number",
                                    "nodeType": "YulLiteral",
                                    "src": "12271:2:5",
                                    "type": "",
                                    "value": "35"
                                  }
                                ],
                                "functionName": {
                                  "name": "mstore",
                                  "nodeType": "YulIdentifier",
                                  "src": "12244:6:5"
                                },
                                "nodeType": "YulFunctionCall",
                                "src": "12244:30:5"
                              },
                              "nodeType": "YulExpressionStatement",
                              "src": "12244:30:5"
                            },
                            {
                              "expression": {
                                "arguments": [
                                  {
                                    "arguments": [
                                      {
                                        "name": "headStart",
                                        "nodeType": "YulIdentifier",
                                        "src": "12294:9:5"
                                      },
                                      {
                                        "kind": "number",
                                        "nodeType": "YulLiteral",
                                        "src": "12305:2:5",
                                        "type": "",
                                        "value": "64"
                                      }
                                    ],
                                    "functionName": {
                                      "name": "add",
                                      "nodeType": "YulIdentifier",
                                      "src": "12290:3:5"
                                    },
                                    "nodeType": "YulFunctionCall",
                                    "src": "12290:18:5"
                                  },
                                  {
                                    "hexValue": "566f7465727320726567697374726174696f6e206973206e6f74206f70656e20",
                                    "kind": "string",
                                    "nodeType": "YulLiteral",
                                    "src": "12310:34:5",
                                    "type": "",
                                    "value": "Voters registration is not open "
                                  }
                                ],
                                "functionName": {
                                  "name": "mstore",
                                  "nodeType": "YulIdentifier",
                                  "src": "12283:6:5"
                                },
                                "nodeType": "YulFunctionCall",
                                "src": "12283:62:5"
                              },
                              "nodeType": "YulExpressionStatement",
                              "src": "12283:62:5"
                            },
                            {
                              "expression": {
                                "arguments": [
                                  {
                                    "arguments": [
                                      {
                                        "name": "headStart",
                                        "nodeType": "YulIdentifier",
                                        "src": "12365:9:5"
                                      },
                                      {
                                        "kind": "number",
                                        "nodeType": "YulLiteral",
                                        "src": "12376:2:5",
                                        "type": "",
                                        "value": "96"
                                      }
                                    ],
                                    "functionName": {
                                      "name": "add",
                                      "nodeType": "YulIdentifier",
                                      "src": "12361:3:5"
                                    },
                                    "nodeType": "YulFunctionCall",
                                    "src": "12361:18:5"
                                  },
                                  {
                                    "hexValue": "796574",
                                    "kind": "string",
                                    "nodeType": "YulLiteral",
                                    "src": "12381:5:5",
                                    "type": "",
                                    "value": "yet"
                                  }
                                ],
                                "functionName": {
                                  "name": "mstore",
                                  "nodeType": "YulIdentifier",
                                  "src": "12354:6:5"
                                },
                                "nodeType": "YulFunctionCall",
                                "src": "12354:33:5"
                              },
                              "nodeType": "YulExpressionStatement",
                              "src": "12354:33:5"
                            },
                            {
                              "nodeType": "YulAssignment",
                              "src": "12396:27:5",
                              "value": {
                                "arguments": [
                                  {
                                    "name": "headStart",
                                    "nodeType": "YulIdentifier",
                                    "src": "12408:9:5"
                                  },
                                  {
                                    "kind": "number",
                                    "nodeType": "YulLiteral",
                                    "src": "12419:3:5",
                                    "type": "",
                                    "value": "128"
                                  }
                                ],
                                "functionName": {
                                  "name": "add",
                                  "nodeType": "YulIdentifier",
                                  "src": "12404:3:5"
                                },
                                "nodeType": "YulFunctionCall",
                                "src": "12404:19:5"
                              },
                              "variableNames": [
                                {
                                  "name": "tail",
                                  "nodeType": "YulIdentifier",
                                  "src": "12396:4:5"
                                }
                              ]
                            }
                          ]
                        },
                        "name": "abi_encode_tuple_t_stringliteral_ed5ce0bc94e9e9dfad6df12428397b8324b782ad847e98d94fc3bc087f13b0bd__to_t_string_memory_ptr__fromStack_reversed",
                        "nodeType": "YulFunctionDefinition",
                        "parameters": [
                          {
                            "name": "headStart",
                            "nodeType": "YulTypedName",
                            "src": "12181:9:5",
                            "type": ""
                          }
                        ],
                        "returnVariables": [
                          {
                            "name": "tail",
                            "nodeType": "YulTypedName",
                            "src": "12195:4:5",
                            "type": ""
                          }
                        ],
                        "src": "12030:399:5"
                      },
                      {
                        "body": {
                          "nodeType": "YulBlock",
                          "src": "12608:168:5",
                          "statements": [
                            {
                              "expression": {
                                "arguments": [
                                  {
                                    "name": "headStart",
                                    "nodeType": "YulIdentifier",
                                    "src": "12625:9:5"
                                  },
                                  {
                                    "kind": "number",
                                    "nodeType": "YulLiteral",
                                    "src": "12636:2:5",
                                    "type": "",
                                    "value": "32"
                                  }
                                ],
                                "functionName": {
                                  "name": "mstore",
                                  "nodeType": "YulIdentifier",
                                  "src": "12618:6:5"
                                },
                                "nodeType": "YulFunctionCall",
                                "src": "12618:21:5"
                              },
                              "nodeType": "YulExpressionStatement",
                              "src": "12618:21:5"
                            },
                            {
                              "expression": {
                                "arguments": [
                                  {
                                    "arguments": [
                                      {
                                        "name": "headStart",
                                        "nodeType": "YulIdentifier",
                                        "src": "12659:9:5"
                                      },
                                      {
                                        "kind": "number",
                                        "nodeType": "YulLiteral",
                                        "src": "12670:2:5",
                                        "type": "",
                                        "value": "32"
                                      }
                                    ],
                                    "functionName": {
                                      "name": "add",
                                      "nodeType": "YulIdentifier",
                                      "src": "12655:3:5"
                                    },
                                    "nodeType": "YulFunctionCall",
                                    "src": "12655:18:5"
                                  },
                                  {
                                    "kind": "number",
                                    "nodeType": "YulLiteral",
                                    "src": "12675:2:5",
                                    "type": "",
                                    "value": "18"
                                  }
                                ],
                                "functionName": {
                                  "name": "mstore",
                                  "nodeType": "YulIdentifier",
                                  "src": "12648:6:5"
                                },
                                "nodeType": "YulFunctionCall",
                                "src": "12648:30:5"
                              },
                              "nodeType": "YulExpressionStatement",
                              "src": "12648:30:5"
                            },
                            {
                              "expression": {
                                "arguments": [
                                  {
                                    "arguments": [
                                      {
                                        "name": "headStart",
                                        "nodeType": "YulIdentifier",
                                        "src": "12698:9:5"
                                      },
                                      {
                                        "kind": "number",
                                        "nodeType": "YulLiteral",
                                        "src": "12709:2:5",
                                        "type": "",
                                        "value": "64"
                                      }
                                    ],
                                    "functionName": {
                                      "name": "add",
                                      "nodeType": "YulIdentifier",
                                      "src": "12694:3:5"
                                    },
                                    "nodeType": "YulFunctionCall",
                                    "src": "12694:18:5"
                                  },
                                  {
                                    "hexValue": "416c72656164792072656769737465726564",
                                    "kind": "string",
                                    "nodeType": "YulLiteral",
                                    "src": "12714:20:5",
                                    "type": "",
                                    "value": "Already registered"
                                  }
                                ],
                                "functionName": {
                                  "name": "mstore",
                                  "nodeType": "YulIdentifier",
                                  "src": "12687:6:5"
                                },
                                "nodeType": "YulFunctionCall",
                                "src": "12687:48:5"
                              },
                              "nodeType": "YulExpressionStatement",
                              "src": "12687:48:5"
                            },
                            {
                              "nodeType": "YulAssignment",
                              "src": "12744:26:5",
                              "value": {
                                "arguments": [
                                  {
                                    "name": "headStart",
                                    "nodeType": "YulIdentifier",
                                    "src": "12756:9:5"
                                  },
                                  {
                                    "kind": "number",
                                    "nodeType": "YulLiteral",
                                    "src": "12767:2:5",
                                    "type": "",
                                    "value": "96"
                                  }
                                ],
                                "functionName": {
                                  "name": "add",
                                  "nodeType": "YulIdentifier",
                                  "src": "12752:3:5"
                                },
                                "nodeType": "YulFunctionCall",
                                "src": "12752:18:5"
                              },
                              "variableNames": [
                                {
                                  "name": "tail",
                                  "nodeType": "YulIdentifier",
                                  "src": "12744:4:5"
                                }
                              ]
                            }
                          ]
                        },
                        "name": "abi_encode_tuple_t_stringliteral_4935f8dc8deae1355305b992e890d0242809a3705c9c83131ed47acca0dd4fe2__to_t_string_memory_ptr__fromStack_reversed",
                        "nodeType": "YulFunctionDefinition",
                        "parameters": [
                          {
                            "name": "headStart",
                            "nodeType": "YulTypedName",
                            "src": "12585:9:5",
                            "type": ""
                          }
                        ],
                        "returnVariables": [
                          {
                            "name": "tail",
                            "nodeType": "YulTypedName",
                            "src": "12599:4:5",
                            "type": ""
                          }
                        ],
                        "src": "12434:342:5"
                      },
                      {
                        "body": {
                          "nodeType": "YulBlock",
                          "src": "12955:182:5",
                          "statements": [
                            {
                              "expression": {
                                "arguments": [
                                  {
                                    "name": "headStart",
                                    "nodeType": "YulIdentifier",
                                    "src": "12972:9:5"
                                  },
                                  {
                                    "kind": "number",
                                    "nodeType": "YulLiteral",
                                    "src": "12983:2:5",
                                    "type": "",
                                    "value": "32"
                                  }
                                ],
                                "functionName": {
                                  "name": "mstore",
                                  "nodeType": "YulIdentifier",
                                  "src": "12965:6:5"
                                },
                                "nodeType": "YulFunctionCall",
                                "src": "12965:21:5"
                              },
                              "nodeType": "YulExpressionStatement",
                              "src": "12965:21:5"
                            },
                            {
                              "expression": {
                                "arguments": [
                                  {
                                    "arguments": [
                                      {
                                        "name": "headStart",
                                        "nodeType": "YulIdentifier",
                                        "src": "13006:9:5"
                                      },
                                      {
                                        "kind": "number",
                                        "nodeType": "YulLiteral",
                                        "src": "13017:2:5",
                                        "type": "",
                                        "value": "32"
                                      }
                                    ],
                                    "functionName": {
                                      "name": "add",
                                      "nodeType": "YulIdentifier",
                                      "src": "13002:3:5"
                                    },
                                    "nodeType": "YulFunctionCall",
                                    "src": "13002:18:5"
                                  },
                                  {
                                    "kind": "number",
                                    "nodeType": "YulLiteral",
                                    "src": "13022:2:5",
                                    "type": "",
                                    "value": "32"
                                  }
                                ],
                                "functionName": {
                                  "name": "mstore",
                                  "nodeType": "YulIdentifier",
                                  "src": "12995:6:5"
                                },
                                "nodeType": "YulFunctionCall",
                                "src": "12995:30:5"
                              },
                              "nodeType": "YulExpressionStatement",
                              "src": "12995:30:5"
                            },
                            {
                              "expression": {
                                "arguments": [
                                  {
                                    "arguments": [
                                      {
                                        "name": "headStart",
                                        "nodeType": "YulIdentifier",
                                        "src": "13045:9:5"
                                      },
                                      {
                                        "kind": "number",
                                        "nodeType": "YulLiteral",
                                        "src": "13056:2:5",
                                        "type": "",
                                        "value": "64"
                                      }
                                    ],
                                    "functionName": {
                                      "name": "add",
                                      "nodeType": "YulIdentifier",
                                      "src": "13041:3:5"
                                    },
                                    "nodeType": "YulFunctionCall",
                                    "src": "13041:18:5"
                                  },
                                  {
                                    "hexValue": "4f776e61626c653a2063616c6c6572206973206e6f7420746865206f776e6572",
                                    "kind": "string",
                                    "nodeType": "YulLiteral",
                                    "src": "13061:34:5",
                                    "type": "",
                                    "value": "Ownable: caller is not the owner"
                                  }
                                ],
                                "functionName": {
                                  "name": "mstore",
                                  "nodeType": "YulIdentifier",
                                  "src": "13034:6:5"
                                },
                                "nodeType": "YulFunctionCall",
                                "src": "13034:62:5"
                              },
                              "nodeType": "YulExpressionStatement",
                              "src": "13034:62:5"
                            },
                            {
                              "nodeType": "YulAssignment",
                              "src": "13105:26:5",
                              "value": {
                                "arguments": [
                                  {
                                    "name": "headStart",
                                    "nodeType": "YulIdentifier",
                                    "src": "13117:9:5"
                                  },
                                  {
                                    "kind": "number",
                                    "nodeType": "YulLiteral",
                                    "src": "13128:2:5",
                                    "type": "",
                                    "value": "96"
                                  }
                                ],
                                "functionName": {
                                  "name": "add",
                                  "nodeType": "YulIdentifier",
                                  "src": "13113:3:5"
                                },
                                "nodeType": "YulFunctionCall",
                                "src": "13113:18:5"
                              },
                              "variableNames": [
                                {
                                  "name": "tail",
                                  "nodeType": "YulIdentifier",
                                  "src": "13105:4:5"
                                }
                              ]
                            }
                          ]
                        },
                        "name": "abi_encode_tuple_t_stringliteral_9924ebdf1add33d25d4ef888e16131f0a5687b0580a36c21b5c301a6c462effe__to_t_string_memory_ptr__fromStack_reversed",
                        "nodeType": "YulFunctionDefinition",
                        "parameters": [
                          {
                            "name": "headStart",
                            "nodeType": "YulTypedName",
                            "src": "12932:9:5",
                            "type": ""
                          }
                        ],
                        "returnVariables": [
                          {
                            "name": "tail",
                            "nodeType": "YulTypedName",
                            "src": "12946:4:5",
                            "type": ""
                          }
                        ],
                        "src": "12781:356:5"
                      }
                    ]
                  },
                  "contents": "{\n    { }\n    function abi_decode_tuple_t_uint256(headStart, dataEnd) -> value0\n    {\n        if slt(sub(dataEnd, headStart), 32) { revert(0, 0) }\n        value0 := calldataload(headStart)\n    }\n    function abi_decode_tuple_t_string_calldata_ptr(headStart, dataEnd) -> value0, value1\n    {\n        if slt(sub(dataEnd, headStart), 32) { revert(0, 0) }\n        let offset := calldataload(headStart)\n        let _1 := 0xffffffffffffffff\n        if gt(offset, _1) { revert(0, 0) }\n        let _2 := add(headStart, offset)\n        if iszero(slt(add(_2, 0x1f), dataEnd)) { revert(0, 0) }\n        let length := calldataload(_2)\n        if gt(length, _1) { revert(0, 0) }\n        if gt(add(add(_2, length), 32), dataEnd) { revert(0, 0) }\n        value0 := add(_2, 32)\n        value1 := length\n    }\n    function abi_encode_tuple_t_address__to_t_address__fromStack_reversed(headStart, value0) -> tail\n    {\n        tail := add(headStart, 32)\n        mstore(headStart, and(value0, sub(shl(160, 1), 1)))\n    }\n    function panic_error_0x21()\n    {\n        mstore(0, shl(224, 0x4e487b71))\n        mstore(4, 0x21)\n        revert(0, 0x24)\n    }\n    function abi_encode_enum_WorkflowStatus(value, pos)\n    {\n        if iszero(lt(value, 6))\n        {\n            mstore(0, shl(224, 0x4e487b71))\n            mstore(4, 0x21)\n            revert(0, 0x24)\n        }\n        mstore(pos, value)\n    }\n    function abi_encode_tuple_t_enum$_WorkflowStatus_$1347__to_t_uint8__fromStack_reversed(headStart, value0) -> tail\n    {\n        tail := add(headStart, 32)\n        abi_encode_enum_WorkflowStatus(value0, headStart)\n    }\n    function abi_encode_tuple_t_struct$_Proposal_$1340_memory_ptr__to_t_struct$_Proposal_$1340_memory_ptr__fromStack_reversed(headStart, value0) -> tail\n    {\n        let _1 := 32\n        mstore(headStart, _1)\n        let memberValue0 := mload(value0)\n        mstore(add(headStart, _1), 0x40)\n        let length := mload(memberValue0)\n        mstore(add(headStart, 96), length)\n        let i := 0\n        for { } lt(i, length) { i := add(i, _1) }\n        {\n            mstore(add(add(headStart, i), 128), mload(add(add(memberValue0, i), _1)))\n        }\n        mstore(add(add(headStart, length), 128), 0)\n        mstore(add(headStart, 0x40), mload(add(value0, _1)))\n        tail := add(add(headStart, and(add(length, 31), not(31))), 128)\n    }\n    function abi_encode_tuple_t_uint256__to_t_uint256__fromStack_reversed(headStart, value0) -> tail\n    {\n        tail := add(headStart, 32)\n        mstore(headStart, value0)\n    }\n    function abi_decode_tuple_t_address(headStart, dataEnd) -> value0\n    {\n        if slt(sub(dataEnd, headStart), 32) { revert(0, 0) }\n        let value := calldataload(headStart)\n        if iszero(eq(value, and(value, sub(shl(160, 1), 1)))) { revert(0, 0) }\n        value0 := value\n    }\n    function abi_encode_tuple_t_struct$_Voter_$1335_memory_ptr__to_t_struct$_Voter_$1335_memory_ptr__fromStack_reversed(headStart, value0) -> tail\n    {\n        tail := add(headStart, 96)\n        mstore(headStart, iszero(iszero(mload(value0))))\n        mstore(add(headStart, 0x20), iszero(iszero(mload(add(value0, 0x20)))))\n        mstore(add(headStart, 0x40), mload(add(value0, 0x40)))\n    }\n    function abi_encode_tuple_t_stringliteral_4ac8d0af2cd45fcc1fa588da657d5362c91a987e5991f233eaf7fb5c4b0c5a0a__to_t_string_memory_ptr__fromStack_reversed(headStart) -> tail\n    {\n        mstore(headStart, 32)\n        mstore(add(headStart, 32), 18)\n        mstore(add(headStart, 64), \"You're not a voter\")\n        tail := add(headStart, 96)\n    }\n    function abi_encode_tuple_t_stringliteral_62400aa7da0e280fc286fd5482d79ac3e2aa4e6d6dca70b4997f2ac0f4a46e72__to_t_string_memory_ptr__fromStack_reversed(headStart) -> tail\n    {\n        mstore(headStart, 32)\n        mstore(add(headStart, 32), 33)\n        mstore(add(headStart, 64), \"Voting session havent started ye\")\n        mstore(add(headStart, 96), \"t\")\n        tail := add(headStart, 128)\n    }\n    function abi_encode_tuple_t_stringliteral_f717c48f565c1f6c8c7139cf54f577e481ac65760eb92c077a08597c622f2a8a__to_t_string_memory_ptr__fromStack_reversed(headStart) -> tail\n    {\n        mstore(headStart, 32)\n        mstore(add(headStart, 32), 22)\n        mstore(add(headStart, 64), \"You have already voted\")\n        tail := add(headStart, 96)\n    }\n    function abi_encode_tuple_t_stringliteral_bcf95e6a362746bd232f2b944afd538b26aa461607b394f948bce2609a1a50c9__to_t_string_memory_ptr__fromStack_reversed(headStart) -> tail\n    {\n        mstore(headStart, 32)\n        mstore(add(headStart, 32), 18)\n        mstore(add(headStart, 64), \"Proposal not found\")\n        tail := add(headStart, 96)\n    }\n    function panic_error_0x32()\n    {\n        mstore(0, shl(224, 0x4e487b71))\n        mstore(4, 0x32)\n        revert(0, 0x24)\n    }\n    function panic_error_0x11()\n    {\n        mstore(0, shl(224, 0x4e487b71))\n        mstore(4, 0x11)\n        revert(0, 0x24)\n    }\n    function increment_t_uint256(value) -> ret\n    {\n        if eq(value, not(0)) { panic_error_0x11() }\n        ret := add(value, 1)\n    }\n    function abi_encode_tuple_t_address_t_uint256__to_t_address_t_uint256__fromStack_reversed(headStart, value1, value0) -> tail\n    {\n        tail := add(headStart, 64)\n        mstore(headStart, and(value0, sub(shl(160, 1), 1)))\n        mstore(add(headStart, 32), value1)\n    }\n    function abi_encode_tuple_t_stringliteral_6cc4ccc1a7d3097254b36ddb7a78effd34b6d9f8b0b1bad60ab55e8a2f5f45a4__to_t_string_memory_ptr__fromStack_reversed(headStart) -> tail\n    {\n        mstore(headStart, 32)\n        mstore(add(headStart, 32), 29)\n        mstore(add(headStart, 64), \"Proposals are not allowed yet\")\n        tail := add(headStart, 96)\n    }\n    function abi_encode_tuple_t_stringliteral_c5d2460186f7233c927e7db2dcc703c0e500b653ca82273b7bfad8045d85a470__to_t_string_memory_ptr__fromStack_reversed(headStart) -> tail\n    {\n        mstore(headStart, 32)\n        mstore(add(headStart, 32), 0)\n        tail := add(headStart, 64)\n    }\n    function abi_encode_tuple_t_string_calldata_ptr__to_t_string_memory_ptr__fromStack_reversed(headStart, value1, value0) -> tail\n    {\n        mstore(headStart, 32)\n        mstore(add(headStart, 32), value1)\n        calldatacopy(add(headStart, 64), value0, value1)\n        mstore(add(add(headStart, value1), 64), 0)\n        tail := add(add(headStart, and(add(value1, 31), not(31))), 64)\n    }\n    function abi_encode_tuple_t_stringliteral_a4c3e15cbc00caa216d105711ac6ae2f726d0f810654930587c82d89febb3184__to_t_string_memory_ptr__fromStack_reversed(headStart) -> tail\n    {\n        mstore(headStart, 32)\n        mstore(add(headStart, 32), 35)\n        mstore(add(headStart, 64), \"Vous ne pouvez pas ne rien propo\")\n        mstore(add(headStart, 96), \"ser\")\n        tail := add(headStart, 128)\n    }\n    function panic_error_0x41()\n    {\n        mstore(0, shl(224, 0x4e487b71))\n        mstore(4, 0x41)\n        revert(0, 0x24)\n    }\n    function extract_byte_array_length(data) -> length\n    {\n        length := shr(1, data)\n        let outOfPlaceEncoding := and(data, 1)\n        if iszero(outOfPlaceEncoding) { length := and(length, 0x7f) }\n        if eq(outOfPlaceEncoding, lt(length, 32))\n        {\n            mstore(0, shl(224, 0x4e487b71))\n            mstore(4, 0x22)\n            revert(0, 0x24)\n        }\n    }\n    function array_dataslot_string_storage(ptr) -> data\n    {\n        mstore(0, ptr)\n        data := keccak256(0, 0x20)\n    }\n    function clean_up_bytearray_end_slots_string_storage(array, len, startIndex)\n    {\n        if gt(len, 31)\n        {\n            let _1 := 0\n            mstore(_1, array)\n            let data := keccak256(_1, 0x20)\n            let deleteStart := add(data, shr(5, add(startIndex, 31)))\n            if lt(startIndex, 0x20) { deleteStart := data }\n            let _2 := add(data, shr(5, add(len, 31)))\n            let start := deleteStart\n            for { } lt(start, _2) { start := add(start, 1) }\n            { sstore(start, _1) }\n        }\n    }\n    function extract_used_part_and_set_length_of_short_byte_array(data, len) -> used\n    {\n        used := or(and(data, not(shr(shl(3, len), not(0)))), shl(1, len))\n    }\n    function copy_byte_array_to_storage_from_t_string_memory_ptr_to_t_string_storage(slot, src)\n    {\n        let newLen := mload(src)\n        if gt(newLen, 0xffffffffffffffff) { panic_error_0x41() }\n        clean_up_bytearray_end_slots_string_storage(slot, extract_byte_array_length(sload(slot)), newLen)\n        let srcOffset := 0\n        let srcOffset_1 := 0x20\n        srcOffset := srcOffset_1\n        switch gt(newLen, 31)\n        case 1 {\n            let loopEnd := and(newLen, not(31))\n            let dstPtr := array_dataslot_string_storage(slot)\n            let i := 0\n            for { } lt(i, loopEnd) { i := add(i, srcOffset_1) }\n            {\n                sstore(dstPtr, mload(add(src, srcOffset)))\n                dstPtr := add(dstPtr, 1)\n                srcOffset := add(srcOffset, srcOffset_1)\n            }\n            if lt(loopEnd, newLen)\n            {\n                let lastValue := mload(add(src, srcOffset))\n                sstore(dstPtr, and(lastValue, not(shr(and(shl(3, newLen), 248), not(0)))))\n            }\n            sstore(slot, add(shl(1, newLen), 1))\n        }\n        default {\n            let value := 0\n            if newLen\n            {\n                value := mload(add(src, srcOffset))\n            }\n            sstore(slot, extract_used_part_and_set_length_of_short_byte_array(value, newLen))\n        }\n    }\n    function checked_sub_t_uint256(x, y) -> diff\n    {\n        diff := sub(x, y)\n        if gt(diff, x) { panic_error_0x11() }\n    }\n    function abi_encode_tuple_t_stringliteral_ea2f0cf2e21bed202157d2615233837ad8b5dafcd570b1bb5b6197e0c7e41fcc__to_t_string_memory_ptr__fromStack_reversed(headStart) -> tail\n    {\n        mstore(headStart, 32)\n        mstore(add(headStart, 32), 42)\n        mstore(add(headStart, 64), \"Current status is not voting ses\")\n        mstore(add(headStart, 96), \"sion ended\")\n        tail := add(headStart, 128)\n    }\n    function abi_encode_tuple_t_enum$_WorkflowStatus_$1347_t_enum$_WorkflowStatus_$1347__to_t_uint8_t_uint8__fromStack_reversed(headStart, value1, value0) -> tail\n    {\n        tail := add(headStart, 64)\n        abi_encode_enum_WorkflowStatus(value0, headStart)\n        abi_encode_enum_WorkflowStatus(value1, add(headStart, 32))\n    }\n    function abi_encode_tuple_t_stringliteral_e2a80632f2fcd18d6496f0cfcfccd5b0e23dd9fc7a8b9b52e45db1b65d7da09e__to_t_string_memory_ptr__fromStack_reversed(headStart) -> tail\n    {\n        mstore(headStart, 32)\n        mstore(add(headStart, 32), 41)\n        mstore(add(headStart, 64), \"Registering proposals cant be st\")\n        mstore(add(headStart, 96), \"arted now\")\n        tail := add(headStart, 128)\n    }\n    function abi_encode_tuple_t_stringliteral_e924b915216d9035118ecb3780d0b361b3358f4cd76cb017027ea4d540d49116__to_t_string_memory_ptr__fromStack_reversed(headStart) -> tail\n    {\n        mstore(headStart, 32)\n        mstore(add(headStart, 32), 40)\n        mstore(add(headStart, 64), \"Registering proposals havent sta\")\n        mstore(add(headStart, 96), \"rted yet\")\n        tail := add(headStart, 128)\n    }\n    function abi_encode_tuple_t_stringliteral_c08ba2fb32a439193d402103beb50d60ed171e76f51206ca6a45d50440a03472__to_t_string_memory_ptr__fromStack_reversed(headStart) -> tail\n    {\n        mstore(headStart, 32)\n        mstore(add(headStart, 32), 43)\n        mstore(add(headStart, 64), \"Registering proposals phase is n\")\n        mstore(add(headStart, 96), \"ot finished\")\n        tail := add(headStart, 128)\n    }\n    function abi_encode_tuple_t_stringliteral_245f15ff17f551913a7a18385165551503906a406f905ac1c2437281a7cd0cfe__to_t_string_memory_ptr__fromStack_reversed(headStart) -> tail\n    {\n        mstore(headStart, 32)\n        mstore(add(headStart, 32), 38)\n        mstore(add(headStart, 64), \"Ownable: new owner is the zero a\")\n        mstore(add(headStart, 96), \"ddress\")\n        tail := add(headStart, 128)\n    }\n    function abi_encode_tuple_t_stringliteral_ed5ce0bc94e9e9dfad6df12428397b8324b782ad847e98d94fc3bc087f13b0bd__to_t_string_memory_ptr__fromStack_reversed(headStart) -> tail\n    {\n        mstore(headStart, 32)\n        mstore(add(headStart, 32), 35)\n        mstore(add(headStart, 64), \"Voters registration is not open \")\n        mstore(add(headStart, 96), \"yet\")\n        tail := add(headStart, 128)\n    }\n    function abi_encode_tuple_t_stringliteral_4935f8dc8deae1355305b992e890d0242809a3705c9c83131ed47acca0dd4fe2__to_t_string_memory_ptr__fromStack_reversed(headStart) -> tail\n    {\n        mstore(headStart, 32)\n        mstore(add(headStart, 32), 18)\n        mstore(add(headStart, 64), \"Already registered\")\n        tail := add(headStart, 96)\n    }\n    function abi_encode_tuple_t_stringliteral_9924ebdf1add33d25d4ef888e16131f0a5687b0580a36c21b5c301a6c462effe__to_t_string_memory_ptr__fromStack_reversed(headStart) -> tail\n    {\n        mstore(headStart, 32)\n        mstore(add(headStart, 32), 32)\n        mstore(add(headStart, 64), \"Ownable: caller is not the owner\")\n        tail := add(headStart, 96)\n    }\n}",
                  "id": 5,
                  "language": "Yul",
                  "name": "#utility.yul"
                }
              ],
              "immutableReferences": {},
              "linkReferences": {},
              "object": "608060405234801561001057600080fd5b50600436106100f55760003560e01c8063a7bfab1611610097578063d4f50f9811610066578063d4f50f98146101bb578063ee74c678146101f4578063f2fde38b146101fc578063f4ab9adf1461020f57600080fd5b8063a7bfab161461018c578063bdc0143114610194578063c7038a4e146101ab578063c88af42f146101b357600080fd5b8063715018a6116100d3578063715018a61461012a5780638da5cb5b14610132578063a1edffa214610152578063a2788cce1461016c57600080fd5b8063230796ae146100fa5780632fdae3c51461010f578063378a217814610122575b600080fd5b61010d610108366004610e38565b610222565b005b61010d61011d366004610e51565b6103cf565b61010d6105f8565b61010d610723565b6000546040516001600160a01b0390911681526020015b60405180910390f35b60025461015f9060ff1681565b6040516101499190610efb565b61017f61017a366004610e38565b610737565b6040516101499190610f0f565b61010d61084a565b61019d60015481565b604051908152602001610149565b61010d6108c2565b61010d6109f7565b6101ce6101c9366004610f70565b610aa2565b604080518251151581526020808401511515908201529181015190820152606001610149565b61010d610b37565b61010d61020a366004610f70565b610be5565b61010d61021d366004610f70565b610c5e565b3360009081526004602052604090205460ff1661025a5760405162461bcd60e51b815260040161025190610fa0565b60405180910390fd5b600360025460ff16600581111561027357610273610ec3565b146102905760405162461bcd60e51b815260040161025190610fcc565b33600090815260046020526040902054610100900460ff1615156001036102f25760405162461bcd60e51b8152602060048201526016602482015275165bdd481a185d9948185b1c9958591e481d9bdd195960521b6044820152606401610251565b60035481106103385760405162461bcd60e51b8152602060048201526012602482015271141c9bdc1bdcd85b081b9bdd08199bdd5b9960721b6044820152606401610251565b33600090815260046020526040902060018101829055805461ff001916610100179055600380548290811061036f5761036f61100d565b60009182526020822060016002909202010180549161038d83611039565b909155505060408051338152602081018390527f4d99b957a2bc29a30ebd96a7be8e68fe50a3c701db28a91436490b7d53870ca491015b60405180910390a150565b3360009081526004602052604090205460ff166103fe5760405162461bcd60e51b815260040161025190610fa0565b600160025460ff16600581111561041757610417610ec3565b146104645760405162461bcd60e51b815260206004820152601d60248201527f50726f706f73616c7320617265206e6f7420616c6c6f776564207965740000006044820152606401610251565b60405160200161047f90602080825260009082015260400190565b6040516020818303038152906040528051906020012082826040516020016104a8929190611052565b60405160208183030381529060405280519060200120036105175760405162461bcd60e51b815260206004820152602360248201527f566f7573206e6520706f7576657a20706173206e65207269656e2070726f706f60448201526239b2b960e91b6064820152608401610251565b60408051808201909152606081526000602082015282828080601f0160208091040260200160405190810160405280939291908181526020018383808284376000920182905250938552505060038054600181018255925250815182916002027fc2575a0e9e593c00f959f8c92f12db2869c3395a3b0502d05e2516446f71f85b019081906105a69082611120565b50602091909101516001918201556003547f92e393e9b54e2f801d3ea4beb0c5e71a21cc34a5d34b77d0fb8a3aa1650dc18f916105e2916111e0565b60405190815260200160405180910390a1505050565b610600610d8e565b600460025460ff16600581111561061957610619610ec3565b146106795760405162461bcd60e51b815260206004820152602a60248201527f43757272656e7420737461747573206973206e6f7420766f74696e67207365736044820152691cda5bdb88195b99195960b21b6064820152608401610251565b6000805b6003548110156106ed576003828154811061069a5761069a61100d565b906000526020600020906002020160010154600382815481106106bf576106bf61100d565b90600052602060002090600202016001015411156106db578091505b806106e581611039565b91505061067d565b5060018190556002805460ff1916600590811790915560405160008051602061120f833981519152916103c491600491906111f3565b61072b610d8e565b6107356000610de8565b565b6040805180820190915260608152600060208201523360009081526004602052604090205460ff1661077b5760405162461bcd60e51b815260040161025190610fa0565b6003828154811061078e5761078e61100d565b90600052602060002090600202016040518060400160405290816000820180546107b790611097565b80601f01602080910402602001604051908101604052809291908181526020018280546107e390611097565b80156108305780601f1061080557610100808354040283529160200191610830565b820191906000526020600020905b81548152906001019060200180831161081357829003601f168201915b505050505081526020016001820154815250509050919050565b610852610d8e565b600360025460ff16600581111561086b5761086b610ec3565b146108885760405162461bcd60e51b815260040161025190610fcc565b6002805460ff1916600490811790915560405160008051602061120f833981519152916108b891600391906111f3565b60405180910390a1565b6108ca610d8e565b600060025460ff1660058111156108e3576108e3610ec3565b146109425760405162461bcd60e51b815260206004820152602960248201527f5265676973746572696e672070726f706f73616c732063616e742062652073746044820152686172746564206e6f7760b81b6064820152608401610251565b6002805460ff19166001908117825560408051808201825260608152600060208083018290528351808501909452600784526647454e4553495360c81b908401529181526003805493840181559091528051909283927fc2575a0e9e593c00f959f8c92f12db2869c3395a3b0502d05e2516446f71f85b9102019081906109c99082611120565b5060208201518160010155505060008051602061120f833981519152600060016040516103c49291906111f3565b6109ff610d8e565b600160025460ff166005811115610a1857610a18610ec3565b14610a765760405162461bcd60e51b815260206004820152602860248201527f5265676973746572696e672070726f706f73616c7320686176656e74207374616044820152671c9d1959081e595d60c21b6064820152608401610251565b6002805460ff19168117815560405160008051602061120f833981519152916108b891600191906111f3565b604080516060810182526000808252602080830182905282840182905233825260049052919091205460ff16610aea5760405162461bcd60e51b815260040161025190610fa0565b506001600160a01b03166000908152600460209081526040918290208251606081018452815460ff8082161515835261010090910416151592810192909252600101549181019190915290565b610b3f610d8e565b6002805460ff166005811115610b5757610b57610ec3565b14610bb85760405162461bcd60e51b815260206004820152602b60248201527f5265676973746572696e672070726f706f73616c73207068617365206973206e60448201526a1bdd08199a5b9a5cda195960aa1b6064820152608401610251565b6002805460ff19166003908117825560405160008051602061120f833981519152926108b89290916111f3565b610bed610d8e565b6001600160a01b038116610c525760405162461bcd60e51b815260206004820152602660248201527f4f776e61626c653a206e6577206f776e657220697320746865207a65726f206160448201526564647265737360d01b6064820152608401610251565b610c5b81610de8565b50565b610c66610d8e565b600060025460ff166005811115610c7f57610c7f610ec3565b14610cd85760405162461bcd60e51b815260206004820152602360248201527f566f7465727320726567697374726174696f6e206973206e6f74206f70656e206044820152621e595d60ea1b6064820152608401610251565b6001600160a01b03811660009081526004602052604090205460ff161515600103610d3a5760405162461bcd60e51b8152602060048201526012602482015271105b1c9958591e481c9959da5cdd195c995960721b6044820152606401610251565b6001600160a01b038116600081815260046020908152604091829020805460ff1916600117905590519182527fb6be2187d059cc2a55fe29e0e503b566e1e0f8c8780096e185429350acffd3dd91016103c4565b6000546001600160a01b031633146107355760405162461bcd60e51b815260206004820181905260248201527f4f776e61626c653a2063616c6c6572206973206e6f7420746865206f776e65726044820152606401610251565b600080546001600160a01b038381166001600160a01b0319831681178455604051919092169283917f8be0079c531659141344cd1fd0a4f28419497f9722a3daafe3b4186f6b6457e09190a35050565b600060208284031215610e4a57600080fd5b5035919050565b60008060208385031215610e6457600080fd5b823567ffffffffffffffff80821115610e7c57600080fd5b818501915085601f830112610e9057600080fd5b813581811115610e9f57600080fd5b866020828501011115610eb157600080fd5b60209290920196919550909350505050565b634e487b7160e01b600052602160045260246000fd5b60068110610ef757634e487b7160e01b600052602160045260246000fd5b9052565b60208101610f098284610ed9565b92915050565b600060208083528351604082850152805180606086015260005b81811015610f4557828101840151868201608001528301610f29565b506000608082870101528286015160408601526080601f19601f830116860101935050505092915050565b600060208284031215610f8257600080fd5b81356001600160a01b0381168114610f9957600080fd5b9392505050565b6020808252601290820152712cb7ba93b932903737ba1030903b37ba32b960711b604082015260600190565b60208082526021908201527f566f74696e672073657373696f6e20686176656e7420737461727465642079656040820152601d60fa1b606082015260800190565b634e487b7160e01b600052603260045260246000fd5b634e487b7160e01b600052601160045260246000fd5b60006001820161104b5761104b611023565b5060010190565b60208152816020820152818360408301376000818301604090810191909152601f909201601f19160101919050565b634e487b7160e01b600052604160045260246000fd5b600181811c908216806110ab57607f821691505b6020821081036110cb57634e487b7160e01b600052602260045260246000fd5b50919050565b601f82111561111b57600081815260208120601f850160051c810160208610156110f85750805b601f850160051c820191505b8181101561111757828155600101611104565b5050505b505050565b815167ffffffffffffffff81111561113a5761113a611081565b61114e816111488454611097565b846110d1565b602080601f831160018114611183576000841561116b5750858301515b600019600386901b1c1916600185901b178555611117565b600085815260208120601f198616915b828110156111b257888601518255948401946001909101908401611193565b50858210156111d05787850151600019600388901b60f8161c191681555b5050505050600190811b01905550565b81810381811115610f0957610f09611023565b604081016112018285610ed9565b610f996020830184610ed956fe0a97a4ee45751e2abf3e4fc8946939630b11b371ea8ae39ccdc3056e98f5cc3fa2646970667358221220c1ba66bd644f986587d986f8a3bffd6d07c3299c666d7dfb9f945861bbd030c764736f6c63430008110033",
              "opcodes": "PUSH1 0x80 PUSH1 0x40 MSTORE CALLVALUE DUP1 ISZERO PUSH2 0x10 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST POP PUSH1 0x4 CALLDATASIZE LT PUSH2 0xF5 JUMPI PUSH1 0x0 CALLDATALOAD PUSH1 0xE0 SHR DUP1 PUSH4 0xA7BFAB16 GT PUSH2 0x97 JUMPI DUP1 PUSH4 0xD4F50F98 GT PUSH2 0x66 JUMPI DUP1 PUSH4 0xD4F50F98 EQ PUSH2 0x1BB JUMPI DUP1 PUSH4 0xEE74C678 EQ PUSH2 0x1F4 JUMPI DUP1 PUSH4 0xF2FDE38B EQ PUSH2 0x1FC JUMPI DUP1 PUSH4 0xF4AB9ADF EQ PUSH2 0x20F JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST DUP1 PUSH4 0xA7BFAB16 EQ PUSH2 0x18C JUMPI DUP1 PUSH4 0xBDC01431 EQ PUSH2 0x194 JUMPI DUP1 PUSH4 0xC7038A4E EQ PUSH2 0x1AB JUMPI DUP1 PUSH4 0xC88AF42F EQ PUSH2 0x1B3 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST DUP1 PUSH4 0x715018A6 GT PUSH2 0xD3 JUMPI DUP1 PUSH4 0x715018A6 EQ PUSH2 0x12A JUMPI DUP1 PUSH4 0x8DA5CB5B EQ PUSH2 0x132 JUMPI DUP1 PUSH4 0xA1EDFFA2 EQ PUSH2 0x152 JUMPI DUP1 PUSH4 0xA2788CCE EQ PUSH2 0x16C JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST DUP1 PUSH4 0x230796AE EQ PUSH2 0xFA JUMPI DUP1 PUSH4 0x2FDAE3C5 EQ PUSH2 0x10F JUMPI DUP1 PUSH4 0x378A2178 EQ PUSH2 0x122 JUMPI JUMPDEST PUSH1 0x0 DUP1 REVERT JUMPDEST PUSH2 0x10D PUSH2 0x108 CALLDATASIZE PUSH1 0x4 PUSH2 0xE38 JUMP JUMPDEST PUSH2 0x222 JUMP JUMPDEST STOP JUMPDEST PUSH2 0x10D PUSH2 0x11D CALLDATASIZE PUSH1 0x4 PUSH2 0xE51 JUMP JUMPDEST PUSH2 0x3CF JUMP JUMPDEST PUSH2 0x10D PUSH2 0x5F8 JUMP JUMPDEST PUSH2 0x10D PUSH2 0x723 JUMP JUMPDEST PUSH1 0x0 SLOAD PUSH1 0x40 MLOAD PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB SWAP1 SWAP2 AND DUP2 MSTORE PUSH1 0x20 ADD JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 RETURN JUMPDEST PUSH1 0x2 SLOAD PUSH2 0x15F SWAP1 PUSH1 0xFF AND DUP2 JUMP JUMPDEST PUSH1 0x40 MLOAD PUSH2 0x149 SWAP2 SWAP1 PUSH2 0xEFB JUMP JUMPDEST PUSH2 0x17F PUSH2 0x17A CALLDATASIZE PUSH1 0x4 PUSH2 0xE38 JUMP JUMPDEST PUSH2 0x737 JUMP JUMPDEST PUSH1 0x40 MLOAD PUSH2 0x149 SWAP2 SWAP1 PUSH2 0xF0F JUMP JUMPDEST PUSH2 0x10D PUSH2 0x84A JUMP JUMPDEST PUSH2 0x19D PUSH1 0x1 SLOAD DUP2 JUMP JUMPDEST PUSH1 0x40 MLOAD SWAP1 DUP2 MSTORE PUSH1 0x20 ADD PUSH2 0x149 JUMP JUMPDEST PUSH2 0x10D PUSH2 0x8C2 JUMP JUMPDEST PUSH2 0x10D PUSH2 0x9F7 JUMP JUMPDEST PUSH2 0x1CE PUSH2 0x1C9 CALLDATASIZE PUSH1 0x4 PUSH2 0xF70 JUMP JUMPDEST PUSH2 0xAA2 JUMP JUMPDEST PUSH1 0x40 DUP1 MLOAD DUP3 MLOAD ISZERO ISZERO DUP2 MSTORE PUSH1 0x20 DUP1 DUP5 ADD MLOAD ISZERO ISZERO SWAP1 DUP3 ADD MSTORE SWAP2 DUP2 ADD MLOAD SWAP1 DUP3 ADD MSTORE PUSH1 0x60 ADD PUSH2 0x149 JUMP JUMPDEST PUSH2 0x10D PUSH2 0xB37 JUMP JUMPDEST PUSH2 0x10D PUSH2 0x20A CALLDATASIZE PUSH1 0x4 PUSH2 0xF70 JUMP JUMPDEST PUSH2 0xBE5 JUMP JUMPDEST PUSH2 0x10D PUSH2 0x21D CALLDATASIZE PUSH1 0x4 PUSH2 0xF70 JUMP JUMPDEST PUSH2 0xC5E JUMP JUMPDEST CALLER PUSH1 0x0 SWAP1 DUP2 MSTORE PUSH1 0x4 PUSH1 0x20 MSTORE PUSH1 0x40 SWAP1 KECCAK256 SLOAD PUSH1 0xFF AND PUSH2 0x25A JUMPI PUSH1 0x40 MLOAD PUSH3 0x461BCD PUSH1 0xE5 SHL DUP2 MSTORE PUSH1 0x4 ADD PUSH2 0x251 SWAP1 PUSH2 0xFA0 JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 REVERT JUMPDEST PUSH1 0x3 PUSH1 0x2 SLOAD PUSH1 0xFF AND PUSH1 0x5 DUP2 GT ISZERO PUSH2 0x273 JUMPI PUSH2 0x273 PUSH2 0xEC3 JUMP JUMPDEST EQ PUSH2 0x290 JUMPI PUSH1 0x40 MLOAD PUSH3 0x461BCD PUSH1 0xE5 SHL DUP2 MSTORE PUSH1 0x4 ADD PUSH2 0x251 SWAP1 PUSH2 0xFCC JUMP JUMPDEST CALLER PUSH1 0x0 SWAP1 DUP2 MSTORE PUSH1 0x4 PUSH1 0x20 MSTORE PUSH1 0x40 SWAP1 KECCAK256 SLOAD PUSH2 0x100 SWAP1 DIV PUSH1 0xFF AND ISZERO ISZERO PUSH1 0x1 SUB PUSH2 0x2F2 JUMPI PUSH1 0x40 MLOAD PUSH3 0x461BCD PUSH1 0xE5 SHL DUP2 MSTORE PUSH1 0x20 PUSH1 0x4 DUP3 ADD MSTORE PUSH1 0x16 PUSH1 0x24 DUP3 ADD MSTORE PUSH22 0x165BDD481A185D9948185B1C9958591E481D9BDD1959 PUSH1 0x52 SHL PUSH1 0x44 DUP3 ADD MSTORE PUSH1 0x64 ADD PUSH2 0x251 JUMP JUMPDEST PUSH1 0x3 SLOAD DUP2 LT PUSH2 0x338 JUMPI PUSH1 0x40 MLOAD PUSH3 0x461BCD PUSH1 0xE5 SHL DUP2 MSTORE PUSH1 0x20 PUSH1 0x4 DUP3 ADD MSTORE PUSH1 0x12 PUSH1 0x24 DUP3 ADD MSTORE PUSH18 0x141C9BDC1BDCD85B081B9BDD08199BDD5B99 PUSH1 0x72 SHL PUSH1 0x44 DUP3 ADD MSTORE PUSH1 0x64 ADD PUSH2 0x251 JUMP JUMPDEST CALLER PUSH1 0x0 SWAP1 DUP2 MSTORE PUSH1 0x4 PUSH1 0x20 MSTORE PUSH1 0x40 SWAP1 KECCAK256 PUSH1 0x1 DUP2 ADD DUP3 SWAP1 SSTORE DUP1 SLOAD PUSH2 0xFF00 NOT AND PUSH2 0x100 OR SWAP1 SSTORE PUSH1 0x3 DUP1 SLOAD DUP3 SWAP1 DUP2 LT PUSH2 0x36F JUMPI PUSH2 0x36F PUSH2 0x100D JUMP JUMPDEST PUSH1 0x0 SWAP2 DUP3 MSTORE PUSH1 0x20 DUP3 KECCAK256 PUSH1 0x1 PUSH1 0x2 SWAP1 SWAP3 MUL ADD ADD DUP1 SLOAD SWAP2 PUSH2 0x38D DUP4 PUSH2 0x1039 JUMP JUMPDEST SWAP1 SWAP2 SSTORE POP POP PUSH1 0x40 DUP1 MLOAD CALLER DUP2 MSTORE PUSH1 0x20 DUP2 ADD DUP4 SWAP1 MSTORE PUSH32 0x4D99B957A2BC29A30EBD96A7BE8E68FE50A3C701DB28A91436490B7D53870CA4 SWAP2 ADD JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 LOG1 POP JUMP JUMPDEST CALLER PUSH1 0x0 SWAP1 DUP2 MSTORE PUSH1 0x4 PUSH1 0x20 MSTORE PUSH1 0x40 SWAP1 KECCAK256 SLOAD PUSH1 0xFF AND PUSH2 0x3FE JUMPI PUSH1 0x40 MLOAD PUSH3 0x461BCD PUSH1 0xE5 SHL DUP2 MSTORE PUSH1 0x4 ADD PUSH2 0x251 SWAP1 PUSH2 0xFA0 JUMP JUMPDEST PUSH1 0x1 PUSH1 0x2 SLOAD PUSH1 0xFF AND PUSH1 0x5 DUP2 GT ISZERO PUSH2 0x417 JUMPI PUSH2 0x417 PUSH2 0xEC3 JUMP JUMPDEST EQ PUSH2 0x464 JUMPI PUSH1 0x40 MLOAD PUSH3 0x461BCD PUSH1 0xE5 SHL DUP2 MSTORE PUSH1 0x20 PUSH1 0x4 DUP3 ADD MSTORE PUSH1 0x1D PUSH1 0x24 DUP3 ADD MSTORE PUSH32 0x50726F706F73616C7320617265206E6F7420616C6C6F77656420796574000000 PUSH1 0x44 DUP3 ADD MSTORE PUSH1 0x64 ADD PUSH2 0x251 JUMP JUMPDEST PUSH1 0x40 MLOAD PUSH1 0x20 ADD PUSH2 0x47F SWAP1 PUSH1 0x20 DUP1 DUP3 MSTORE PUSH1 0x0 SWAP1 DUP3 ADD MSTORE PUSH1 0x40 ADD SWAP1 JUMP JUMPDEST PUSH1 0x40 MLOAD PUSH1 0x20 DUP2 DUP4 SUB SUB DUP2 MSTORE SWAP1 PUSH1 0x40 MSTORE DUP1 MLOAD SWAP1 PUSH1 0x20 ADD KECCAK256 DUP3 DUP3 PUSH1 0x40 MLOAD PUSH1 0x20 ADD PUSH2 0x4A8 SWAP3 SWAP2 SWAP1 PUSH2 0x1052 JUMP JUMPDEST PUSH1 0x40 MLOAD PUSH1 0x20 DUP2 DUP4 SUB SUB DUP2 MSTORE SWAP1 PUSH1 0x40 MSTORE DUP1 MLOAD SWAP1 PUSH1 0x20 ADD KECCAK256 SUB PUSH2 0x517 JUMPI PUSH1 0x40 MLOAD PUSH3 0x461BCD PUSH1 0xE5 SHL DUP2 MSTORE PUSH1 0x20 PUSH1 0x4 DUP3 ADD MSTORE PUSH1 0x23 PUSH1 0x24 DUP3 ADD MSTORE PUSH32 0x566F7573206E6520706F7576657A20706173206E65207269656E2070726F706F PUSH1 0x44 DUP3 ADD MSTORE PUSH3 0x39B2B9 PUSH1 0xE9 SHL PUSH1 0x64 DUP3 ADD MSTORE PUSH1 0x84 ADD PUSH2 0x251 JUMP JUMPDEST PUSH1 0x40 DUP1 MLOAD DUP1 DUP3 ADD SWAP1 SWAP2 MSTORE PUSH1 0x60 DUP2 MSTORE PUSH1 0x0 PUSH1 0x20 DUP3 ADD MSTORE DUP3 DUP3 DUP1 DUP1 PUSH1 0x1F ADD PUSH1 0x20 DUP1 SWAP2 DIV MUL PUSH1 0x20 ADD PUSH1 0x40 MLOAD SWAP1 DUP2 ADD PUSH1 0x40 MSTORE DUP1 SWAP4 SWAP3 SWAP2 SWAP1 DUP2 DUP2 MSTORE PUSH1 0x20 ADD DUP4 DUP4 DUP1 DUP3 DUP5 CALLDATACOPY PUSH1 0x0 SWAP3 ADD DUP3 SWAP1 MSTORE POP SWAP4 DUP6 MSTORE POP POP PUSH1 0x3 DUP1 SLOAD PUSH1 0x1 DUP2 ADD DUP3 SSTORE SWAP3 MSTORE POP DUP2 MLOAD DUP3 SWAP2 PUSH1 0x2 MUL PUSH32 0xC2575A0E9E593C00F959F8C92F12DB2869C3395A3B0502D05E2516446F71F85B ADD SWAP1 DUP2 SWAP1 PUSH2 0x5A6 SWAP1 DUP3 PUSH2 0x1120 JUMP JUMPDEST POP PUSH1 0x20 SWAP2 SWAP1 SWAP2 ADD MLOAD PUSH1 0x1 SWAP2 DUP3 ADD SSTORE PUSH1 0x3 SLOAD PUSH32 0x92E393E9B54E2F801D3EA4BEB0C5E71A21CC34A5D34B77D0FB8A3AA1650DC18F SWAP2 PUSH2 0x5E2 SWAP2 PUSH2 0x11E0 JUMP JUMPDEST PUSH1 0x40 MLOAD SWAP1 DUP2 MSTORE PUSH1 0x20 ADD PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 LOG1 POP POP POP JUMP JUMPDEST PUSH2 0x600 PUSH2 0xD8E JUMP JUMPDEST PUSH1 0x4 PUSH1 0x2 SLOAD PUSH1 0xFF AND PUSH1 0x5 DUP2 GT ISZERO PUSH2 0x619 JUMPI PUSH2 0x619 PUSH2 0xEC3 JUMP JUMPDEST EQ PUSH2 0x679 JUMPI PUSH1 0x40 MLOAD PUSH3 0x461BCD PUSH1 0xE5 SHL DUP2 MSTORE PUSH1 0x20 PUSH1 0x4 DUP3 ADD MSTORE PUSH1 0x2A PUSH1 0x24 DUP3 ADD MSTORE PUSH32 0x43757272656E7420737461747573206973206E6F7420766F74696E6720736573 PUSH1 0x44 DUP3 ADD MSTORE PUSH10 0x1CDA5BDB88195B991959 PUSH1 0xB2 SHL PUSH1 0x64 DUP3 ADD MSTORE PUSH1 0x84 ADD PUSH2 0x251 JUMP JUMPDEST PUSH1 0x0 DUP1 JUMPDEST PUSH1 0x3 SLOAD DUP2 LT ISZERO PUSH2 0x6ED JUMPI PUSH1 0x3 DUP3 DUP2 SLOAD DUP2 LT PUSH2 0x69A JUMPI PUSH2 0x69A PUSH2 0x100D JUMP JUMPDEST SWAP1 PUSH1 0x0 MSTORE PUSH1 0x20 PUSH1 0x0 KECCAK256 SWAP1 PUSH1 0x2 MUL ADD PUSH1 0x1 ADD SLOAD PUSH1 0x3 DUP3 DUP2 SLOAD DUP2 LT PUSH2 0x6BF JUMPI PUSH2 0x6BF PUSH2 0x100D JUMP JUMPDEST SWAP1 PUSH1 0x0 MSTORE PUSH1 0x20 PUSH1 0x0 KECCAK256 SWAP1 PUSH1 0x2 MUL ADD PUSH1 0x1 ADD SLOAD GT ISZERO PUSH2 0x6DB JUMPI DUP1 SWAP2 POP JUMPDEST DUP1 PUSH2 0x6E5 DUP2 PUSH2 0x1039 JUMP JUMPDEST SWAP2 POP POP PUSH2 0x67D JUMP JUMPDEST POP PUSH1 0x1 DUP2 SWAP1 SSTORE PUSH1 0x2 DUP1 SLOAD PUSH1 0xFF NOT AND PUSH1 0x5 SWAP1 DUP2 OR SWAP1 SWAP2 SSTORE PUSH1 0x40 MLOAD PUSH1 0x0 DUP1 MLOAD PUSH1 0x20 PUSH2 0x120F DUP4 CODECOPY DUP2 MLOAD SWAP2 MSTORE SWAP2 PUSH2 0x3C4 SWAP2 PUSH1 0x4 SWAP2 SWAP1 PUSH2 0x11F3 JUMP JUMPDEST PUSH2 0x72B PUSH2 0xD8E JUMP JUMPDEST PUSH2 0x735 PUSH1 0x0 PUSH2 0xDE8 JUMP JUMPDEST JUMP JUMPDEST PUSH1 0x40 DUP1 MLOAD DUP1 DUP3 ADD SWAP1 SWAP2 MSTORE PUSH1 0x60 DUP2 MSTORE PUSH1 0x0 PUSH1 0x20 DUP3 ADD MSTORE CALLER PUSH1 0x0 SWAP1 DUP2 MSTORE PUSH1 0x4 PUSH1 0x20 MSTORE PUSH1 0x40 SWAP1 KECCAK256 SLOAD PUSH1 0xFF AND PUSH2 0x77B JUMPI PUSH1 0x40 MLOAD PUSH3 0x461BCD PUSH1 0xE5 SHL DUP2 MSTORE PUSH1 0x4 ADD PUSH2 0x251 SWAP1 PUSH2 0xFA0 JUMP JUMPDEST PUSH1 0x3 DUP3 DUP2 SLOAD DUP2 LT PUSH2 0x78E JUMPI PUSH2 0x78E PUSH2 0x100D JUMP JUMPDEST SWAP1 PUSH1 0x0 MSTORE PUSH1 0x20 PUSH1 0x0 KECCAK256 SWAP1 PUSH1 0x2 MUL ADD PUSH1 0x40 MLOAD DUP1 PUSH1 0x40 ADD PUSH1 0x40 MSTORE SWAP1 DUP2 PUSH1 0x0 DUP3 ADD DUP1 SLOAD PUSH2 0x7B7 SWAP1 PUSH2 0x1097 JUMP JUMPDEST DUP1 PUSH1 0x1F ADD PUSH1 0x20 DUP1 SWAP2 DIV MUL PUSH1 0x20 ADD PUSH1 0x40 MLOAD SWAP1 DUP2 ADD PUSH1 0x40 MSTORE DUP1 SWAP3 SWAP2 SWAP1 DUP2 DUP2 MSTORE PUSH1 0x20 ADD DUP3 DUP1 SLOAD PUSH2 0x7E3 SWAP1 PUSH2 0x1097 JUMP JUMPDEST DUP1 ISZERO PUSH2 0x830 JUMPI DUP1 PUSH1 0x1F LT PUSH2 0x805 JUMPI PUSH2 0x100 DUP1 DUP4 SLOAD DIV MUL DUP4 MSTORE SWAP2 PUSH1 0x20 ADD SWAP2 PUSH2 0x830 JUMP JUMPDEST DUP3 ADD SWAP2 SWAP1 PUSH1 0x0 MSTORE PUSH1 0x20 PUSH1 0x0 KECCAK256 SWAP1 JUMPDEST DUP2 SLOAD DUP2 MSTORE SWAP1 PUSH1 0x1 ADD SWAP1 PUSH1 0x20 ADD DUP1 DUP4 GT PUSH2 0x813 JUMPI DUP3 SWAP1 SUB PUSH1 0x1F AND DUP3 ADD SWAP2 JUMPDEST POP POP POP POP POP DUP2 MSTORE PUSH1 0x20 ADD PUSH1 0x1 DUP3 ADD SLOAD DUP2 MSTORE POP POP SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH2 0x852 PUSH2 0xD8E JUMP JUMPDEST PUSH1 0x3 PUSH1 0x2 SLOAD PUSH1 0xFF AND PUSH1 0x5 DUP2 GT ISZERO PUSH2 0x86B JUMPI PUSH2 0x86B PUSH2 0xEC3 JUMP JUMPDEST EQ PUSH2 0x888 JUMPI PUSH1 0x40 MLOAD PUSH3 0x461BCD PUSH1 0xE5 SHL DUP2 MSTORE PUSH1 0x4 ADD PUSH2 0x251 SWAP1 PUSH2 0xFCC JUMP JUMPDEST PUSH1 0x2 DUP1 SLOAD PUSH1 0xFF NOT AND PUSH1 0x4 SWAP1 DUP2 OR SWAP1 SWAP2 SSTORE PUSH1 0x40 MLOAD PUSH1 0x0 DUP1 MLOAD PUSH1 0x20 PUSH2 0x120F DUP4 CODECOPY DUP2 MLOAD SWAP2 MSTORE SWAP2 PUSH2 0x8B8 SWAP2 PUSH1 0x3 SWAP2 SWAP1 PUSH2 0x11F3 JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 LOG1 JUMP JUMPDEST PUSH2 0x8CA PUSH2 0xD8E JUMP JUMPDEST PUSH1 0x0 PUSH1 0x2 SLOAD PUSH1 0xFF AND PUSH1 0x5 DUP2 GT ISZERO PUSH2 0x8E3 JUMPI PUSH2 0x8E3 PUSH2 0xEC3 JUMP JUMPDEST EQ PUSH2 0x942 JUMPI PUSH1 0x40 MLOAD PUSH3 0x461BCD PUSH1 0xE5 SHL DUP2 MSTORE PUSH1 0x20 PUSH1 0x4 DUP3 ADD MSTORE PUSH1 0x29 PUSH1 0x24 DUP3 ADD MSTORE PUSH32 0x5265676973746572696E672070726F706F73616C732063616E74206265207374 PUSH1 0x44 DUP3 ADD MSTORE PUSH9 0x6172746564206E6F77 PUSH1 0xB8 SHL PUSH1 0x64 DUP3 ADD MSTORE PUSH1 0x84 ADD PUSH2 0x251 JUMP JUMPDEST PUSH1 0x2 DUP1 SLOAD PUSH1 0xFF NOT AND PUSH1 0x1 SWAP1 DUP2 OR DUP3 SSTORE PUSH1 0x40 DUP1 MLOAD DUP1 DUP3 ADD DUP3 MSTORE PUSH1 0x60 DUP2 MSTORE PUSH1 0x0 PUSH1 0x20 DUP1 DUP4 ADD DUP3 SWAP1 MSTORE DUP4 MLOAD DUP1 DUP6 ADD SWAP1 SWAP5 MSTORE PUSH1 0x7 DUP5 MSTORE PUSH7 0x47454E45534953 PUSH1 0xC8 SHL SWAP1 DUP5 ADD MSTORE SWAP2 DUP2 MSTORE PUSH1 0x3 DUP1 SLOAD SWAP4 DUP5 ADD DUP2 SSTORE SWAP1 SWAP2 MSTORE DUP1 MLOAD SWAP1 SWAP3 DUP4 SWAP3 PUSH32 0xC2575A0E9E593C00F959F8C92F12DB2869C3395A3B0502D05E2516446F71F85B SWAP2 MUL ADD SWAP1 DUP2 SWAP1 PUSH2 0x9C9 SWAP1 DUP3 PUSH2 0x1120 JUMP JUMPDEST POP PUSH1 0x20 DUP3 ADD MLOAD DUP2 PUSH1 0x1 ADD SSTORE POP POP PUSH1 0x0 DUP1 MLOAD PUSH1 0x20 PUSH2 0x120F DUP4 CODECOPY DUP2 MLOAD SWAP2 MSTORE PUSH1 0x0 PUSH1 0x1 PUSH1 0x40 MLOAD PUSH2 0x3C4 SWAP3 SWAP2 SWAP1 PUSH2 0x11F3 JUMP JUMPDEST PUSH2 0x9FF PUSH2 0xD8E JUMP JUMPDEST PUSH1 0x1 PUSH1 0x2 SLOAD PUSH1 0xFF AND PUSH1 0x5 DUP2 GT ISZERO PUSH2 0xA18 JUMPI PUSH2 0xA18 PUSH2 0xEC3 JUMP JUMPDEST EQ PUSH2 0xA76 JUMPI PUSH1 0x40 MLOAD PUSH3 0x461BCD PUSH1 0xE5 SHL DUP2 MSTORE PUSH1 0x20 PUSH1 0x4 DUP3 ADD MSTORE PUSH1 0x28 PUSH1 0x24 DUP3 ADD MSTORE PUSH32 0x5265676973746572696E672070726F706F73616C7320686176656E7420737461 PUSH1 0x44 DUP3 ADD MSTORE PUSH8 0x1C9D1959081E595D PUSH1 0xC2 SHL PUSH1 0x64 DUP3 ADD MSTORE PUSH1 0x84 ADD PUSH2 0x251 JUMP JUMPDEST PUSH1 0x2 DUP1 SLOAD PUSH1 0xFF NOT AND DUP2 OR DUP2 SSTORE PUSH1 0x40 MLOAD PUSH1 0x0 DUP1 MLOAD PUSH1 0x20 PUSH2 0x120F DUP4 CODECOPY DUP2 MLOAD SWAP2 MSTORE SWAP2 PUSH2 0x8B8 SWAP2 PUSH1 0x1 SWAP2 SWAP1 PUSH2 0x11F3 JUMP JUMPDEST PUSH1 0x40 DUP1 MLOAD PUSH1 0x60 DUP2 ADD DUP3 MSTORE PUSH1 0x0 DUP1 DUP3 MSTORE PUSH1 0x20 DUP1 DUP4 ADD DUP3 SWAP1 MSTORE DUP3 DUP5 ADD DUP3 SWAP1 MSTORE CALLER DUP3 MSTORE PUSH1 0x4 SWAP1 MSTORE SWAP2 SWAP1 SWAP2 KECCAK256 SLOAD PUSH1 0xFF AND PUSH2 0xAEA JUMPI PUSH1 0x40 MLOAD PUSH3 0x461BCD PUSH1 0xE5 SHL DUP2 MSTORE PUSH1 0x4 ADD PUSH2 0x251 SWAP1 PUSH2 0xFA0 JUMP JUMPDEST POP PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB AND PUSH1 0x0 SWAP1 DUP2 MSTORE PUSH1 0x4 PUSH1 0x20 SWAP1 DUP2 MSTORE PUSH1 0x40 SWAP2 DUP3 SWAP1 KECCAK256 DUP3 MLOAD PUSH1 0x60 DUP2 ADD DUP5 MSTORE DUP2 SLOAD PUSH1 0xFF DUP1 DUP3 AND ISZERO ISZERO DUP4 MSTORE PUSH2 0x100 SWAP1 SWAP2 DIV AND ISZERO ISZERO SWAP3 DUP2 ADD SWAP3 SWAP1 SWAP3 MSTORE PUSH1 0x1 ADD SLOAD SWAP2 DUP2 ADD SWAP2 SWAP1 SWAP2 MSTORE SWAP1 JUMP JUMPDEST PUSH2 0xB3F PUSH2 0xD8E JUMP JUMPDEST PUSH1 0x2 DUP1 SLOAD PUSH1 0xFF AND PUSH1 0x5 DUP2 GT ISZERO PUSH2 0xB57 JUMPI PUSH2 0xB57 PUSH2 0xEC3 JUMP JUMPDEST EQ PUSH2 0xBB8 JUMPI PUSH1 0x40 MLOAD PUSH3 0x461BCD PUSH1 0xE5 SHL DUP2 MSTORE PUSH1 0x20 PUSH1 0x4 DUP3 ADD MSTORE PUSH1 0x2B PUSH1 0x24 DUP3 ADD MSTORE PUSH32 0x5265676973746572696E672070726F706F73616C73207068617365206973206E PUSH1 0x44 DUP3 ADD MSTORE PUSH11 0x1BDD08199A5B9A5CDA1959 PUSH1 0xAA SHL PUSH1 0x64 DUP3 ADD MSTORE PUSH1 0x84 ADD PUSH2 0x251 JUMP JUMPDEST PUSH1 0x2 DUP1 SLOAD PUSH1 0xFF NOT AND PUSH1 0x3 SWAP1 DUP2 OR DUP3 SSTORE PUSH1 0x40 MLOAD PUSH1 0x0 DUP1 MLOAD PUSH1 0x20 PUSH2 0x120F DUP4 CODECOPY DUP2 MLOAD SWAP2 MSTORE SWAP3 PUSH2 0x8B8 SWAP3 SWAP1 SWAP2 PUSH2 0x11F3 JUMP JUMPDEST PUSH2 0xBED PUSH2 0xD8E JUMP JUMPDEST PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB DUP2 AND PUSH2 0xC52 JUMPI PUSH1 0x40 MLOAD PUSH3 0x461BCD PUSH1 0xE5 SHL DUP2 MSTORE PUSH1 0x20 PUSH1 0x4 DUP3 ADD MSTORE PUSH1 0x26 PUSH1 0x24 DUP3 ADD MSTORE PUSH32 0x4F776E61626C653A206E6577206F776E657220697320746865207A65726F2061 PUSH1 0x44 DUP3 ADD MSTORE PUSH6 0x646472657373 PUSH1 0xD0 SHL PUSH1 0x64 DUP3 ADD MSTORE PUSH1 0x84 ADD PUSH2 0x251 JUMP JUMPDEST PUSH2 0xC5B DUP2 PUSH2 0xDE8 JUMP JUMPDEST POP JUMP JUMPDEST PUSH2 0xC66 PUSH2 0xD8E JUMP JUMPDEST PUSH1 0x0 PUSH1 0x2 SLOAD PUSH1 0xFF AND PUSH1 0x5 DUP2 GT ISZERO PUSH2 0xC7F JUMPI PUSH2 0xC7F PUSH2 0xEC3 JUMP JUMPDEST EQ PUSH2 0xCD8 JUMPI PUSH1 0x40 MLOAD PUSH3 0x461BCD PUSH1 0xE5 SHL DUP2 MSTORE PUSH1 0x20 PUSH1 0x4 DUP3 ADD MSTORE PUSH1 0x23 PUSH1 0x24 DUP3 ADD MSTORE PUSH32 0x566F7465727320726567697374726174696F6E206973206E6F74206F70656E20 PUSH1 0x44 DUP3 ADD MSTORE PUSH3 0x1E595D PUSH1 0xEA SHL PUSH1 0x64 DUP3 ADD MSTORE PUSH1 0x84 ADD PUSH2 0x251 JUMP JUMPDEST PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB DUP2 AND PUSH1 0x0 SWAP1 DUP2 MSTORE PUSH1 0x4 PUSH1 0x20 MSTORE PUSH1 0x40 SWAP1 KECCAK256 SLOAD PUSH1 0xFF AND ISZERO ISZERO PUSH1 0x1 SUB PUSH2 0xD3A JUMPI PUSH1 0x40 MLOAD PUSH3 0x461BCD PUSH1 0xE5 SHL DUP2 MSTORE PUSH1 0x20 PUSH1 0x4 DUP3 ADD MSTORE PUSH1 0x12 PUSH1 0x24 DUP3 ADD MSTORE PUSH18 0x105B1C9958591E481C9959DA5CDD195C9959 PUSH1 0x72 SHL PUSH1 0x44 DUP3 ADD MSTORE PUSH1 0x64 ADD PUSH2 0x251 JUMP JUMPDEST PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB DUP2 AND PUSH1 0x0 DUP2 DUP2 MSTORE PUSH1 0x4 PUSH1 0x20 SWAP1 DUP2 MSTORE PUSH1 0x40 SWAP2 DUP3 SWAP1 KECCAK256 DUP1 SLOAD PUSH1 0xFF NOT AND PUSH1 0x1 OR SWAP1 SSTORE SWAP1 MLOAD SWAP2 DUP3 MSTORE PUSH32 0xB6BE2187D059CC2A55FE29E0E503B566E1E0F8C8780096E185429350ACFFD3DD SWAP2 ADD PUSH2 0x3C4 JUMP JUMPDEST PUSH1 0x0 SLOAD PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB AND CALLER EQ PUSH2 0x735 JUMPI PUSH1 0x40 MLOAD PUSH3 0x461BCD PUSH1 0xE5 SHL DUP2 MSTORE PUSH1 0x20 PUSH1 0x4 DUP3 ADD DUP2 SWAP1 MSTORE PUSH1 0x24 DUP3 ADD MSTORE PUSH32 0x4F776E61626C653A2063616C6C6572206973206E6F7420746865206F776E6572 PUSH1 0x44 DUP3 ADD MSTORE PUSH1 0x64 ADD PUSH2 0x251 JUMP JUMPDEST PUSH1 0x0 DUP1 SLOAD PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB DUP4 DUP2 AND PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB NOT DUP4 AND DUP2 OR DUP5 SSTORE PUSH1 0x40 MLOAD SWAP2 SWAP1 SWAP3 AND SWAP3 DUP4 SWAP2 PUSH32 0x8BE0079C531659141344CD1FD0A4F28419497F9722A3DAAFE3B4186F6B6457E0 SWAP2 SWAP1 LOG3 POP POP JUMP JUMPDEST PUSH1 0x0 PUSH1 0x20 DUP3 DUP5 SUB SLT ISZERO PUSH2 0xE4A JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST POP CALLDATALOAD SWAP2 SWAP1 POP JUMP JUMPDEST PUSH1 0x0 DUP1 PUSH1 0x20 DUP4 DUP6 SUB SLT ISZERO PUSH2 0xE64 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST DUP3 CALLDATALOAD PUSH8 0xFFFFFFFFFFFFFFFF DUP1 DUP3 GT ISZERO PUSH2 0xE7C JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST DUP2 DUP6 ADD SWAP2 POP DUP6 PUSH1 0x1F DUP4 ADD SLT PUSH2 0xE90 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST DUP2 CALLDATALOAD DUP2 DUP2 GT ISZERO PUSH2 0xE9F JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST DUP7 PUSH1 0x20 DUP3 DUP6 ADD ADD GT ISZERO PUSH2 0xEB1 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST PUSH1 0x20 SWAP3 SWAP1 SWAP3 ADD SWAP7 SWAP2 SWAP6 POP SWAP1 SWAP4 POP POP POP POP JUMP JUMPDEST PUSH4 0x4E487B71 PUSH1 0xE0 SHL PUSH1 0x0 MSTORE PUSH1 0x21 PUSH1 0x4 MSTORE PUSH1 0x24 PUSH1 0x0 REVERT JUMPDEST PUSH1 0x6 DUP2 LT PUSH2 0xEF7 JUMPI PUSH4 0x4E487B71 PUSH1 0xE0 SHL PUSH1 0x0 MSTORE PUSH1 0x21 PUSH1 0x4 MSTORE PUSH1 0x24 PUSH1 0x0 REVERT JUMPDEST SWAP1 MSTORE JUMP JUMPDEST PUSH1 0x20 DUP2 ADD PUSH2 0xF09 DUP3 DUP5 PUSH2 0xED9 JUMP JUMPDEST SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH1 0x0 PUSH1 0x20 DUP1 DUP4 MSTORE DUP4 MLOAD PUSH1 0x40 DUP3 DUP6 ADD MSTORE DUP1 MLOAD DUP1 PUSH1 0x60 DUP7 ADD MSTORE PUSH1 0x0 JUMPDEST DUP2 DUP2 LT ISZERO PUSH2 0xF45 JUMPI DUP3 DUP2 ADD DUP5 ADD MLOAD DUP7 DUP3 ADD PUSH1 0x80 ADD MSTORE DUP4 ADD PUSH2 0xF29 JUMP JUMPDEST POP PUSH1 0x0 PUSH1 0x80 DUP3 DUP8 ADD ADD MSTORE DUP3 DUP7 ADD MLOAD PUSH1 0x40 DUP7 ADD MSTORE PUSH1 0x80 PUSH1 0x1F NOT PUSH1 0x1F DUP4 ADD AND DUP7 ADD ADD SWAP4 POP POP POP POP SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH1 0x0 PUSH1 0x20 DUP3 DUP5 SUB SLT ISZERO PUSH2 0xF82 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST DUP2 CALLDATALOAD PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB DUP2 AND DUP2 EQ PUSH2 0xF99 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST SWAP4 SWAP3 POP POP POP JUMP JUMPDEST PUSH1 0x20 DUP1 DUP3 MSTORE PUSH1 0x12 SWAP1 DUP3 ADD MSTORE PUSH18 0x2CB7BA93B932903737BA1030903B37BA32B9 PUSH1 0x71 SHL PUSH1 0x40 DUP3 ADD MSTORE PUSH1 0x60 ADD SWAP1 JUMP JUMPDEST PUSH1 0x20 DUP1 DUP3 MSTORE PUSH1 0x21 SWAP1 DUP3 ADD MSTORE PUSH32 0x566F74696E672073657373696F6E20686176656E742073746172746564207965 PUSH1 0x40 DUP3 ADD MSTORE PUSH1 0x1D PUSH1 0xFA SHL PUSH1 0x60 DUP3 ADD MSTORE PUSH1 0x80 ADD SWAP1 JUMP JUMPDEST PUSH4 0x4E487B71 PUSH1 0xE0 SHL PUSH1 0x0 MSTORE PUSH1 0x32 PUSH1 0x4 MSTORE PUSH1 0x24 PUSH1 0x0 REVERT JUMPDEST PUSH4 0x4E487B71 PUSH1 0xE0 SHL PUSH1 0x0 MSTORE PUSH1 0x11 PUSH1 0x4 MSTORE PUSH1 0x24 PUSH1 0x0 REVERT JUMPDEST PUSH1 0x0 PUSH1 0x1 DUP3 ADD PUSH2 0x104B JUMPI PUSH2 0x104B PUSH2 0x1023 JUMP JUMPDEST POP PUSH1 0x1 ADD SWAP1 JUMP JUMPDEST PUSH1 0x20 DUP2 MSTORE DUP2 PUSH1 0x20 DUP3 ADD MSTORE DUP2 DUP4 PUSH1 0x40 DUP4 ADD CALLDATACOPY PUSH1 0x0 DUP2 DUP4 ADD PUSH1 0x40 SWAP1 DUP2 ADD SWAP2 SWAP1 SWAP2 MSTORE PUSH1 0x1F SWAP1 SWAP3 ADD PUSH1 0x1F NOT AND ADD ADD SWAP2 SWAP1 POP JUMP JUMPDEST PUSH4 0x4E487B71 PUSH1 0xE0 SHL PUSH1 0x0 MSTORE PUSH1 0x41 PUSH1 0x4 MSTORE PUSH1 0x24 PUSH1 0x0 REVERT JUMPDEST PUSH1 0x1 DUP2 DUP2 SHR SWAP1 DUP3 AND DUP1 PUSH2 0x10AB JUMPI PUSH1 0x7F DUP3 AND SWAP2 POP JUMPDEST PUSH1 0x20 DUP3 LT DUP2 SUB PUSH2 0x10CB JUMPI PUSH4 0x4E487B71 PUSH1 0xE0 SHL PUSH1 0x0 MSTORE PUSH1 0x22 PUSH1 0x4 MSTORE PUSH1 0x24 PUSH1 0x0 REVERT JUMPDEST POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH1 0x1F DUP3 GT ISZERO PUSH2 0x111B JUMPI PUSH1 0x0 DUP2 DUP2 MSTORE PUSH1 0x20 DUP2 KECCAK256 PUSH1 0x1F DUP6 ADD PUSH1 0x5 SHR DUP2 ADD PUSH1 0x20 DUP7 LT ISZERO PUSH2 0x10F8 JUMPI POP DUP1 JUMPDEST PUSH1 0x1F DUP6 ADD PUSH1 0x5 SHR DUP3 ADD SWAP2 POP JUMPDEST DUP2 DUP2 LT ISZERO PUSH2 0x1117 JUMPI DUP3 DUP2 SSTORE PUSH1 0x1 ADD PUSH2 0x1104 JUMP JUMPDEST POP POP POP JUMPDEST POP POP POP JUMP JUMPDEST DUP2 MLOAD PUSH8 0xFFFFFFFFFFFFFFFF DUP2 GT ISZERO PUSH2 0x113A JUMPI PUSH2 0x113A PUSH2 0x1081 JUMP JUMPDEST PUSH2 0x114E DUP2 PUSH2 0x1148 DUP5 SLOAD PUSH2 0x1097 JUMP JUMPDEST DUP5 PUSH2 0x10D1 JUMP JUMPDEST PUSH1 0x20 DUP1 PUSH1 0x1F DUP4 GT PUSH1 0x1 DUP2 EQ PUSH2 0x1183 JUMPI PUSH1 0x0 DUP5 ISZERO PUSH2 0x116B JUMPI POP DUP6 DUP4 ADD MLOAD JUMPDEST PUSH1 0x0 NOT PUSH1 0x3 DUP7 SWAP1 SHL SHR NOT AND PUSH1 0x1 DUP6 SWAP1 SHL OR DUP6 SSTORE PUSH2 0x1117 JUMP JUMPDEST PUSH1 0x0 DUP6 DUP2 MSTORE PUSH1 0x20 DUP2 KECCAK256 PUSH1 0x1F NOT DUP7 AND SWAP2 JUMPDEST DUP3 DUP2 LT ISZERO PUSH2 0x11B2 JUMPI DUP9 DUP7 ADD MLOAD DUP3 SSTORE SWAP5 DUP5 ADD SWAP5 PUSH1 0x1 SWAP1 SWAP2 ADD SWAP1 DUP5 ADD PUSH2 0x1193 JUMP JUMPDEST POP DUP6 DUP3 LT ISZERO PUSH2 0x11D0 JUMPI DUP8 DUP6 ADD MLOAD PUSH1 0x0 NOT PUSH1 0x3 DUP9 SWAP1 SHL PUSH1 0xF8 AND SHR NOT AND DUP2 SSTORE JUMPDEST POP POP POP POP POP PUSH1 0x1 SWAP1 DUP2 SHL ADD SWAP1 SSTORE POP JUMP JUMPDEST DUP2 DUP2 SUB DUP2 DUP2 GT ISZERO PUSH2 0xF09 JUMPI PUSH2 0xF09 PUSH2 0x1023 JUMP JUMPDEST PUSH1 0x40 DUP2 ADD PUSH2 0x1201 DUP3 DUP6 PUSH2 0xED9 JUMP JUMPDEST PUSH2 0xF99 PUSH1 0x20 DUP4 ADD DUP5 PUSH2 0xED9 JUMP INVALID EXP SWAP8 LOG4 0xEE GASLIMIT PUSH22 0x1E2ABF3E4FC8946939630B11B371EA8AE39CCDC3056E SWAP9 CREATE2 0xCC EXTCODEHASH LOG2 PUSH5 0x6970667358 0x22 SLT KECCAK256 0xC1 0xBA PUSH7 0xBD644F986587D9 DUP7 0xF8 LOG3 0xBF REVERT PUSH14 0x7C3299C666D7DFB9F945861BBD0 ADDRESS 0xC7 PUSH5 0x736F6C6343 STOP ADDMOD GT STOP CALLER ",
              "sourceMap": "112:5119:4:-:0;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;2450:531;;;;;;:::i;:::-;;:::i;:::-;;1867:533;;;;;;:::i;:::-;;:::i;4615:614::-;;;:::i;1831:101:0:-;;;:::i;1201:85::-;1247:7;1273:6;1201:85;;-1:-1:-1;;;;;1273:6:0;;;942:51:5;;930:2;915:18;1201:85:0;;;;;;;;592:36:4;;;;;;;;;;;;;;;;:::i;1294:128::-;;;;;;:::i;:::-;;:::i;:::-;;;;;;;:::i;4279:330::-;;;:::i;151:29::-;;;;;;;;;2496:25:5;;;2484:2;2469:18;151:29:4;2350:177:5;3033:494:4;;;:::i;3533:376::-;;;:::i;1166:118::-;;;;;;:::i;:::-;;:::i;:::-;;;;3047:13:5;;3040:21;3033:29;3015:48;;3133:4;3121:17;;;3115:24;3108:32;3101:40;3079:20;;;3072:70;3186:17;;;3180:24;3158:20;;;3151:54;3003:2;2988:18;1166:118:4;2823:388:5;3915:358:4;;;:::i;2081:198:0:-;;;;;;:::i;:::-;;:::i;1483:327:4:-;;;;;;:::i;:::-;;:::i;2450:531::-;994:10;987:18;;;;:6;:18;;;;;:31;;;979:62;;;;-1:-1:-1;;;979:62:4;;;;;;;:::i;:::-;;;;;;;;;2534:35:::1;2516:14;::::0;::::1;;:53;::::0;::::1;;;;;;:::i;:::-;;2508:99;;;;-1:-1:-1::0;;;2508:99:4::1;;;;;;;:::i;:::-;2632:10;2625:18;::::0;;;:6:::1;:18;::::0;;;;:27;::::1;::::0;::::1;;;:35;;:27;:35:::0;2617:70:::1;;;::::0;-1:-1:-1;;;2617:70:4;;4167:2:5;2617:70:4::1;::::0;::::1;4149:21:5::0;4206:2;4186:18;;;4179:30;-1:-1:-1;;;4225:18:5;;;4218:52;4287:18;;2617:70:4::1;3965:346:5::0;2617:70:4::1;2711:14;:21:::0;2705:27;::::1;2697:58;;;::::0;-1:-1:-1;;;2697:58:4;;4518:2:5;2697:58:4::1;::::0;::::1;4500:21:5::0;4557:2;4537:18;;;4530:30;-1:-1:-1;;;4576:18:5;;;4569:48;4634:18;;2697:58:4::1;4316:342:5::0;2697:58:4::1;2818:10;2811:18;::::0;;;:6:::1;:18;::::0;;;;:34:::1;::::0;::::1;:40:::0;;;2861:34;;-1:-1:-1;;2861:34:4::1;;;::::0;;2905:14:::1;:19:::0;;2848:3;;2905:19;::::1;;;;;:::i;:::-;;::::0;;;::::1;::::0;;:29:::1;:19;::::0;;::::1;;:29;:31:::0;;;::::1;::::0;::::1;:::i;:::-;::::0;;;-1:-1:-1;;2952:22:4::1;::::0;;2958:10:::1;5241:51:5::0;;5323:2;5308:18;;5301:34;;;2952:22:4::1;::::0;5214:18:5;2952:22:4::1;;;;;;;;2450:531:::0;:::o;1867:533::-;994:10;987:18;;;;:6;:18;;;;;:31;;;979:62;;;;-1:-1:-1;;;979:62:4;;;;;;;:::i;:::-;1967:43:::1;1949:14;::::0;::::1;;:61;::::0;::::1;;;;;;:::i;:::-;;1941:103;;;::::0;-1:-1:-1;;;1941:103:4;;5548:2:5;1941:103:4::1;::::0;::::1;5530:21:5::0;5587:2;5567:18;;;5560:30;5626:31;5606:18;;;5599:59;5675:18;;1941:103:4::1;5346:353:5::0;1941:103:4::1;2104:14;;;;;;5906:2:5::0;5888:21;;;5945:1;5925:18;;;5918:29;5979:2;5964:18;;5704:284;2104:14:4::1;;;;;;;;;;;;;2094:25;;;;;;2083:5;;2072:17;;;;;;;;;:::i;:::-;;;;;;;;;;;;;2062:28;;;;;;:57:::0;2054:105:::1;;;::::0;-1:-1:-1;;;2054:105:4;;6590:2:5;2054:105:4::1;::::0;::::1;6572:21:5::0;6629:2;6609:18;;;6602:30;6668:34;6648:18;;;6641:62;-1:-1:-1;;;6719:18:5;;;6712:33;6762:19;;2054:105:4::1;6388:399:5::0;2054:105:4::1;-1:-1:-1::0;;;;;;;;;;;;;;;;;2291:5:4::1;;2268:28;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;::::0;::::1;::::0;;;-1:-1:-1;2268:28:4;;;-1:-1:-1;;2306:14:4::1;:29:::0;;::::1;::::0;::::1;::::0;;;;-1:-1:-1;2306:29:4;;2268:8;;2306:29:::1;;::::0;::::1;::::0;;;::::1;::::0;;::::1;:::i;:::-;-1:-1:-1::0;2306:29:4::1;::::0;;;::::1;::::0;::::1;::::0;;::::1;::::0;2369:14:::1;:21:::0;2350:43:::1;::::0;2369:23:::1;::::0;::::1;:::i;:::-;2350:43;::::0;2496:25:5;;;2484:2;2469:18;2350:43:4::1;;;;;;;1931:469;1867:533:::0;;:::o;4615:614::-;1094:13:0;:11;:13::i;:::-;4691:33:4::1;4673:14;::::0;::::1;;:51;::::0;::::1;;;;;;:::i;:::-;;4665:106;;;::::0;-1:-1:-1;;;4665:106:4;;9848:2:5;4665:106:4::1;::::0;::::1;9830:21:5::0;9887:2;9867:18;;;9860:30;9926:34;9906:18;;;9899:62;-1:-1:-1;;;9977:18:5;;;9970:40;10027:19;;4665:106:4::1;9646:406:5::0;4665:106:4::1;4780:23;::::0;4811:206:::1;4835:14;:21:::0;4831:25;::::1;4811:206;;;4910:14;4925:18;4910:34;;;;;;;;:::i;:::-;;;;;;;;;;;:44;;;4880:14;4895:1;4880:17;;;;;;;;:::i;:::-;;;;;;;;;;;:27;;;:74;4876:132;;;4994:1;4973:22;;4876:132;4858:3:::0;::::1;::::0;::::1;:::i;:::-;;;;4811:206;;;-1:-1:-1::0;5025:17:4::1;:38:::0;;;5080:14:::1;:44:::0;;-1:-1:-1;;5080:44:4::1;5097:27;5080:44:::0;;::::1;::::0;;;5138:84:::1;::::0;-1:-1:-1;;;;;;;;;;;5138:84:4;::::1;::::0;5159:33:::1;::::0;5097:27;5138:84:::1;:::i;1831:101:0:-:0;1094:13;:11;:13::i;:::-;1895:30:::1;1922:1;1895:18;:30::i;:::-;1831:101::o:0;1294:128:4:-;-1:-1:-1;;;;;;;;;;;;;;;;;994:10:4;987:18;;;;:6;:18;;;;;:31;;;979:62;;;;-1:-1:-1;;;979:62:4;;;;;;;:::i;:::-;1396:14:::1;1411:3;1396:19;;;;;;;;:::i;:::-;;;;;;;;;;;1389:26;;;;;;;;;;;;;;;;;:::i;:::-;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;:::i;:::-;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;::::0;::::1;;;1294:128:::0;;;:::o;4279:330::-;1094:13:0;:11;:13::i;:::-;4362:35:4::1;4344:14;::::0;::::1;;:53;::::0;::::1;;;;;;:::i;:::-;;4336:99;;;;-1:-1:-1::0;;;4336:99:4::1;;;;;;;:::i;:::-;4445:14;:50:::0;;-1:-1:-1;;4445:50:4::1;4462:33;4445:50:::0;;::::1;::::0;;;4510:92:::1;::::0;-1:-1:-1;;;;;;;;;;;4510:92:4;::::1;::::0;4531:35:::1;::::0;4462:33;4510:92:::1;:::i;:::-;;;;;;;;4279:330::o:0;3033:494::-;1094:13:0;:11;:13::i;:::-;3125:32:4::1;3107:14;::::0;::::1;;:50;::::0;::::1;;;;;;:::i;:::-;;3099:104;;;::::0;-1:-1:-1;;;3099:104:4;;10594:2:5;3099:104:4::1;::::0;::::1;10576:21:5::0;10633:2;10613:18;;;10606:30;10672:34;10652:18;;;10645:62;-1:-1:-1;;;10723:18:5;;;10716:39;10772:19;;3099:104:4::1;10392:405:5::0;3099:104:4::1;3213:14;:60:::0;;-1:-1:-1;;3213:60:4::1;3230:43;3213:60:::0;;::::1;::::0;;-1:-1:-1;;;;;;;;;;;;;;;;;;;3326:32:4;;;;::::1;::::0;;;::::1;::::0;;-1:-1:-1;;;3326:32:4;;::::1;::::0;;;;3368:14:::1;:29:::0;;;;::::1;::::0;;;;;;;-1:-1:-1;;;;3368:29:4;;::::1;;::::0;;;::::1;::::0;;::::1;:::i;:::-;;;;;;;;;;;;-1:-1:-1::0;;;;;;;;;;;3442:32:4::1;3476:43;3421:99;;;;;;;:::i;3533:376::-:0;1094:13:0;:11;:13::i;:::-;3623:43:4::1;3605:14;::::0;::::1;;:61;::::0;::::1;;;;;;:::i;:::-;;3597:114;;;::::0;-1:-1:-1;;;3597:114:4;;11004:2:5;3597:114:4::1;::::0;::::1;10986:21:5::0;11043:2;11023:18;;;11016:30;11082:34;11062:18;;;11055:62;-1:-1:-1;;;11133:18:5;;;11126:38;11181:19;;3597:114:4::1;10802:404:5::0;3597:114:4::1;3738:41;3721:58:::0;;-1:-1:-1;;3721:58:4::1;::::0;::::1;::::0;;3794:108:::1;::::0;-1:-1:-1;;;;;;;;;;;3794:108:4;::::1;::::0;3721:58;;3738:41;3794:108:::1;:::i;1166:118::-:0;-1:-1:-1;;;;;;;;;;;;;;;;;;;;;;;;;994:10:4;987:18;;:6;:18;;;;;;:31;;;979:62;;;;-1:-1:-1;;;979:62:4;;;;;;;:::i;:::-;-1:-1:-1;;;;;;1264:13:4::1;;::::0;;;:6:::1;:13;::::0;;;;;;;;1257:20;;::::1;::::0;::::1;::::0;;;;::::1;::::0;;::::1;;;::::0;;::::1;::::0;;::::1;;;;::::0;;::::1;::::0;;;;;::::1;::::0;;;;;;;;;1166:118::o;3915:358::-;1094:13:0;:11;:13::i;:::-;4000:41:4::1;3982:14:::0;;::::1;;:59;::::0;::::1;;;;;;:::i;:::-;;3974:115;;;::::0;-1:-1:-1;;;3974:115:4;;11413:2:5;3974:115:4::1;::::0;::::1;11395:21:5::0;11452:2;11432:18;;;11425:30;11491:34;11471:18;;;11464:62;-1:-1:-1;;;11542:18:5;;;11535:41;11593:19;;3974:115:4::1;11211:407:5::0;3974:115:4::1;4099:14;:52:::0;;-1:-1:-1;;4099:52:4::1;4116:35;4099:52:::0;;::::1;::::0;;4166:100:::1;::::0;-1:-1:-1;;;;;;;;;;;4166:100:4;::::1;::::0;4099:14;;4166:100:::1;:::i;2081:198:0:-:0;1094:13;:11;:13::i;:::-;-1:-1:-1;;;;;2169:22:0;::::1;2161:73;;;::::0;-1:-1:-1;;;2161:73:0;;11825:2:5;2161:73:0::1;::::0;::::1;11807:21:5::0;11864:2;11844:18;;;11837:30;11903:34;11883:18;;;11876:62;-1:-1:-1;;;11954:18:5;;;11947:36;12000:19;;2161:73:0::1;11623:402:5::0;2161:73:0::1;2244:28;2263:8;2244:18;:28::i;:::-;2081:198:::0;:::o;1483:327:4:-;1094:13:0;:11;:13::i;:::-;1571:32:4::1;1553:14;::::0;::::1;;:50;::::0;::::1;;;;;;:::i;:::-;;1545:98;;;::::0;-1:-1:-1;;;1545:98:4;;12232:2:5;1545:98:4::1;::::0;::::1;12214:21:5::0;12271:2;12251:18;;;12244:30;12310:34;12290:18;;;12283:62;-1:-1:-1;;;12361:18:5;;;12354:33;12404:19;;1545:98:4::1;12030:399:5::0;1545:98:4::1;-1:-1:-1::0;;;;;1661:13:4;::::1;;::::0;;;:6:::1;:13;::::0;;;;:26;::::1;;:34;;:26:::0;:34;1653:65:::1;;;::::0;-1:-1:-1;;;1653:65:4;;12636:2:5;1653:65:4::1;::::0;::::1;12618:21:5::0;12675:2;12655:18;;;12648:30;-1:-1:-1;;;12694:18:5;;;12687:48;12752:18;;1653:65:4::1;12434:342:5::0;1653:65:4::1;-1:-1:-1::0;;;;;1733:13:4;::::1;;::::0;;;:6:::1;:13;::::0;;;;;;;;:33;;-1:-1:-1;;1733:33:4::1;1762:4;1733:33;::::0;;1781:22;;942:51:5;;;1781:22:4::1;::::0;915:18:5;1781:22:4::1;796:203:5::0;1359:130:0;1247:7;1273:6;-1:-1:-1;;;;;1273:6:0;719:10:1;1422:23:0;1414:68;;;;-1:-1:-1;;;1414:68:0;;12983:2:5;1414:68:0;;;12965:21:5;;;13002:18;;;12995:30;13061:34;13041:18;;;13034:62;13113:18;;1414:68:0;12781:356:5;2433:187:0;2506:16;2525:6;;-1:-1:-1;;;;;2541:17:0;;;-1:-1:-1;;;;;;2541:17:0;;;;;;2573:40;;2525:6;;;;;;;2573:40;;2506:16;2573:40;2496:124;2433:187;:::o;14:180:5:-;73:6;126:2;114:9;105:7;101:23;97:32;94:52;;;142:1;139;132:12;94:52;-1:-1:-1;165:23:5;;14:180;-1:-1:-1;14:180:5:o;199:592::-;270:6;278;331:2;319:9;310:7;306:23;302:32;299:52;;;347:1;344;337:12;299:52;387:9;374:23;416:18;457:2;449:6;446:14;443:34;;;473:1;470;463:12;443:34;511:6;500:9;496:22;486:32;;556:7;549:4;545:2;541:13;537:27;527:55;;578:1;575;568:12;527:55;618:2;605:16;644:2;636:6;633:14;630:34;;;660:1;657;650:12;630:34;705:7;700:2;691:6;687:2;683:15;679:24;676:37;673:57;;;726:1;723;716:12;673:57;757:2;749:11;;;;;779:6;;-1:-1:-1;199:592:5;;-1:-1:-1;;;;199:592:5:o;1004:127::-;1065:10;1060:3;1056:20;1053:1;1046:31;1096:4;1093:1;1086:15;1120:4;1117:1;1110:15;1136:242;1222:1;1215:5;1212:12;1202:143;;1267:10;1262:3;1258:20;1255:1;1248:31;1302:4;1299:1;1292:15;1330:4;1327:1;1320:15;1202:143;1354:18;;1136:242::o;1383:218::-;1534:2;1519:18;;1546:49;1523:9;1577:6;1546:49;:::i;:::-;1383:218;;;;:::o;1606:739::-;1750:4;1779:2;1808;1797:9;1790:21;1846:6;1840:13;1889:4;1884:2;1873:9;1869:18;1862:32;1923:12;1917:19;1972:6;1967:2;1956:9;1952:18;1945:34;1997:1;2007:147;2021:6;2018:1;2015:13;2007:147;;;2117:20;;;2113:29;;2107:36;2082:17;;;2101:3;2078:27;2071:73;2036:10;;2007:147;;;2011:3;2204:1;2198:3;2189:6;2178:9;2174:22;2170:32;2163:43;2262:2;2254:6;2250:15;2244:22;2237:4;2226:9;2222:20;2215:52;2335:3;2328:2;2324:7;2319:2;2311:6;2307:15;2303:29;2292:9;2288:45;2284:55;2276:63;;;;;1606:739;;;;:::o;2532:286::-;2591:6;2644:2;2632:9;2623:7;2619:23;2615:32;2612:52;;;2660:1;2657;2650:12;2612:52;2686:23;;-1:-1:-1;;;;;2738:31:5;;2728:42;;2718:70;;2784:1;2781;2774:12;2718:70;2807:5;2532:286;-1:-1:-1;;;2532:286:5:o;3216:342::-;3418:2;3400:21;;;3457:2;3437:18;;;3430:30;-1:-1:-1;;;3491:2:5;3476:18;;3469:48;3549:2;3534:18;;3216:342::o;3563:397::-;3765:2;3747:21;;;3804:2;3784:18;;;3777:30;3843:34;3838:2;3823:18;;3816:62;-1:-1:-1;;;3909:2:5;3894:18;;3887:31;3950:3;3935:19;;3563:397::o;4663:127::-;4724:10;4719:3;4715:20;4712:1;4705:31;4755:4;4752:1;4745:15;4779:4;4776:1;4769:15;4795:127;4856:10;4851:3;4847:20;4844:1;4837:31;4887:4;4884:1;4877:15;4911:4;4908:1;4901:15;4927:135;4966:3;4987:17;;;4984:43;;5007:18;;:::i;:::-;-1:-1:-1;5054:1:5;5043:13;;4927:135::o;5993:390::-;6152:2;6141:9;6134:21;6191:6;6186:2;6175:9;6171:18;6164:34;6248:6;6240;6235:2;6224:9;6220:18;6207:48;6304:1;6275:22;;;6299:2;6271:31;;;6264:42;;;;6367:2;6346:15;;;-1:-1:-1;;6342:29:5;6327:45;6323:54;;5993:390;-1:-1:-1;5993:390:5:o;6792:127::-;6853:10;6848:3;6844:20;6841:1;6834:31;6884:4;6881:1;6874:15;6908:4;6905:1;6898:15;6924:380;7003:1;6999:12;;;;7046;;;7067:61;;7121:4;7113:6;7109:17;7099:27;;7067:61;7174:2;7166:6;7163:14;7143:18;7140:38;7137:161;;7220:10;7215:3;7211:20;7208:1;7201:31;7255:4;7252:1;7245:15;7283:4;7280:1;7273:15;7137:161;;6924:380;;;:::o;7435:545::-;7537:2;7532:3;7529:11;7526:448;;;7573:1;7598:5;7594:2;7587:17;7643:4;7639:2;7629:19;7713:2;7701:10;7697:19;7694:1;7690:27;7684:4;7680:38;7749:4;7737:10;7734:20;7731:47;;;-1:-1:-1;7772:4:5;7731:47;7827:2;7822:3;7818:12;7815:1;7811:20;7805:4;7801:31;7791:41;;7882:82;7900:2;7893:5;7890:13;7882:82;;;7945:17;;;7926:1;7915:13;7882:82;;;7886:3;;;7526:448;7435:545;;;:::o;8156:1352::-;8282:3;8276:10;8309:18;8301:6;8298:30;8295:56;;;8331:18;;:::i;:::-;8360:97;8450:6;8410:38;8442:4;8436:11;8410:38;:::i;:::-;8404:4;8360:97;:::i;:::-;8512:4;;8576:2;8565:14;;8593:1;8588:663;;;;9295:1;9312:6;9309:89;;;-1:-1:-1;9364:19:5;;;9358:26;9309:89;-1:-1:-1;;8113:1:5;8109:11;;;8105:24;8101:29;8091:40;8137:1;8133:11;;;8088:57;9411:81;;8558:944;;8588:663;7382:1;7375:14;;;7419:4;7406:18;;-1:-1:-1;;8624:20:5;;;8742:236;8756:7;8753:1;8750:14;8742:236;;;8845:19;;;8839:26;8824:42;;8937:27;;;;8905:1;8893:14;;;;8772:19;;8742:236;;;8746:3;9006:6;8997:7;8994:19;8991:201;;;9067:19;;;9061:26;-1:-1:-1;;9150:1:5;9146:14;;;9162:3;9142:24;9138:37;9134:42;9119:58;9104:74;;8991:201;-1:-1:-1;;;;;9238:1:5;9222:14;;;9218:22;9205:36;;-1:-1:-1;8156:1352:5:o;9513:128::-;9580:9;;;9601:11;;;9598:37;;;9615:18;;:::i;10057:330::-;10253:2;10238:18;;10265:49;10242:9;10296:6;10265:49;:::i;:::-;10323:58;10377:2;10366:9;10362:18;10354:6;10323:58;:::i"
            },
            "gasEstimates": {
              "creation": {
                "codeDepositCost": "941600",
                "executionCost": "26822",
                "totalCost": "968422"
              },
              "external": {
                "addProposal(string)": "infinite",
                "addVoter(address)": "32287",
                "endProposalsRegistering()": "infinite",
                "endVotingSession()": "infinite",
                "getOneProposal(uint256)": "infinite",
                "getVoter(address)": "7125",
                "owner()": "2335",
                "renounceOwnership()": "infinite",
                "setVote(uint256)": "83160",
                "startProposalsRegistering()": "infinite",
                "startVotingSession()": "infinite",
                "tallyVotes()": "infinite",
                "transferOwnership(address)": "28364",
                "winningProposalID()": "2340",
                "workflowStatus()": "2452"
              }
            },
            "methodIdentifiers": {
              "addProposal(string)": "2fdae3c5",
              "addVoter(address)": "f4ab9adf",
              "endProposalsRegistering()": "c88af42f",
              "endVotingSession()": "a7bfab16",
              "getOneProposal(uint256)": "a2788cce",
              "getVoter(address)": "d4f50f98",
              "owner()": "8da5cb5b",
              "renounceOwnership()": "715018a6",
              "setVote(uint256)": "230796ae",
              "startProposalsRegistering()": "c7038a4e",
              "startVotingSession()": "ee74c678",
              "tallyVotes()": "378a2178",
              "transferOwnership(address)": "f2fde38b",
              "winningProposalID()": "bdc01431",
              "workflowStatus()": "a1edffa2"
            }
          },
          "metadata": "{\"compiler\":{\"version\":\"0.8.17+commit.8df45f5f\"},\"language\":\"Solidity\",\"output\":{\"abi\":[{\"anonymous\":false,\"inputs\":[{\"indexed\":true,\"internalType\":\"address\",\"name\":\"previousOwner\",\"type\":\"address\"},{\"indexed\":true,\"internalType\":\"address\",\"name\":\"newOwner\",\"type\":\"address\"}],\"name\":\"OwnershipTransferred\",\"type\":\"event\"},{\"anonymous\":false,\"inputs\":[{\"indexed\":false,\"internalType\":\"uint256\",\"name\":\"proposalId\",\"type\":\"uint256\"}],\"name\":\"ProposalRegistered\",\"type\":\"event\"},{\"anonymous\":false,\"inputs\":[{\"indexed\":false,\"internalType\":\"address\",\"name\":\"voter\",\"type\":\"address\"},{\"indexed\":false,\"internalType\":\"uint256\",\"name\":\"proposalId\",\"type\":\"uint256\"}],\"name\":\"Voted\",\"type\":\"event\"},{\"anonymous\":false,\"inputs\":[{\"indexed\":false,\"internalType\":\"address\",\"name\":\"voterAddress\",\"type\":\"address\"}],\"name\":\"VoterRegistered\",\"type\":\"event\"},{\"anonymous\":false,\"inputs\":[{\"indexed\":false,\"internalType\":\"enum VotingAlyra.WorkflowStatus\",\"name\":\"previousStatus\",\"type\":\"uint8\"},{\"indexed\":false,\"internalType\":\"enum VotingAlyra.WorkflowStatus\",\"name\":\"newStatus\",\"type\":\"uint8\"}],\"name\":\"WorkflowStatusChange\",\"type\":\"event\"},{\"inputs\":[{\"internalType\":\"string\",\"name\":\"_desc\",\"type\":\"string\"}],\"name\":\"addProposal\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"_addr\",\"type\":\"address\"}],\"name\":\"addVoter\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"endProposalsRegistering\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"endVotingSession\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"uint256\",\"name\":\"_id\",\"type\":\"uint256\"}],\"name\":\"getOneProposal\",\"outputs\":[{\"components\":[{\"internalType\":\"string\",\"name\":\"description\",\"type\":\"string\"},{\"internalType\":\"uint256\",\"name\":\"voteCount\",\"type\":\"uint256\"}],\"internalType\":\"struct VotingAlyra.Proposal\",\"name\":\"\",\"type\":\"tuple\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"_addr\",\"type\":\"address\"}],\"name\":\"getVoter\",\"outputs\":[{\"components\":[{\"internalType\":\"bool\",\"name\":\"isRegistered\",\"type\":\"bool\"},{\"internalType\":\"bool\",\"name\":\"hasVoted\",\"type\":\"bool\"},{\"internalType\":\"uint256\",\"name\":\"votedProposalId\",\"type\":\"uint256\"}],\"internalType\":\"struct VotingAlyra.Voter\",\"name\":\"\",\"type\":\"tuple\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"owner\",\"outputs\":[{\"internalType\":\"address\",\"name\":\"\",\"type\":\"address\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"renounceOwnership\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"uint256\",\"name\":\"_id\",\"type\":\"uint256\"}],\"name\":\"setVote\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"startProposalsRegistering\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"startVotingSession\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"tallyVotes\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"newOwner\",\"type\":\"address\"}],\"name\":\"transferOwnership\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"winningProposalID\",\"outputs\":[{\"internalType\":\"uint256\",\"name\":\"\",\"type\":\"uint256\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"workflowStatus\",\"outputs\":[{\"internalType\":\"enum VotingAlyra.WorkflowStatus\",\"name\":\"\",\"type\":\"uint8\"}],\"stateMutability\":\"view\",\"type\":\"function\"}],\"devdoc\":{\"kind\":\"dev\",\"methods\":{\"owner()\":{\"details\":\"Returns the address of the current owner.\"},\"renounceOwnership()\":{\"details\":\"Leaves the contract without owner. It will not be possible to call `onlyOwner` functions anymore. Can only be called by the current owner. NOTE: Renouncing ownership will leave the contract without an owner, thereby removing any functionality that is only available to the owner.\"},\"transferOwnership(address)\":{\"details\":\"Transfers ownership of the contract to a new account (`newOwner`). Can only be called by the current owner.\"}},\"version\":1},\"userdoc\":{\"kind\":\"user\",\"methods\":{},\"version\":1}},\"settings\":{\"compilationTarget\":{\"contracts/VotingAlyra.sol\":\"VotingAlyra\"},\"evmVersion\":\"london\",\"libraries\":{},\"metadata\":{\"bytecodeHash\":\"ipfs\",\"useLiteralContent\":true},\"optimizer\":{\"enabled\":true,\"runs\":200},\"remappings\":[]},\"sources\":{\"@openzeppelin/contracts/access/Ownable.sol\":{\"content\":\"// SPDX-License-Identifier: MIT\\n// OpenZeppelin Contracts (last updated v4.7.0) (access/Ownable.sol)\\n\\npragma solidity ^0.8.0;\\n\\nimport \\\"../utils/Context.sol\\\";\\n\\n/**\\n * @dev Contract module which provides a basic access control mechanism, where\\n * there is an account (an owner) that can be granted exclusive access to\\n * specific functions.\\n *\\n * By default, the owner account will be the one that deploys the contract. This\\n * can later be changed with {transferOwnership}.\\n *\\n * This module is used through inheritance. It will make available the modifier\\n * `onlyOwner`, which can be applied to your functions to restrict their use to\\n * the owner.\\n */\\nabstract contract Ownable is Context {\\n    address private _owner;\\n\\n    event OwnershipTransferred(address indexed previousOwner, address indexed newOwner);\\n\\n    /**\\n     * @dev Initializes the contract setting the deployer as the initial owner.\\n     */\\n    constructor() {\\n        _transferOwnership(_msgSender());\\n    }\\n\\n    /**\\n     * @dev Throws if called by any account other than the owner.\\n     */\\n    modifier onlyOwner() {\\n        _checkOwner();\\n        _;\\n    }\\n\\n    /**\\n     * @dev Returns the address of the current owner.\\n     */\\n    function owner() public view virtual returns (address) {\\n        return _owner;\\n    }\\n\\n    /**\\n     * @dev Throws if the sender is not the owner.\\n     */\\n    function _checkOwner() internal view virtual {\\n        require(owner() == _msgSender(), \\\"Ownable: caller is not the owner\\\");\\n    }\\n\\n    /**\\n     * @dev Leaves the contract without owner. It will not be possible to call\\n     * `onlyOwner` functions anymore. Can only be called by the current owner.\\n     *\\n     * NOTE: Renouncing ownership will leave the contract without an owner,\\n     * thereby removing any functionality that is only available to the owner.\\n     */\\n    function renounceOwnership() public virtual onlyOwner {\\n        _transferOwnership(address(0));\\n    }\\n\\n    /**\\n     * @dev Transfers ownership of the contract to a new account (`newOwner`).\\n     * Can only be called by the current owner.\\n     */\\n    function transferOwnership(address newOwner) public virtual onlyOwner {\\n        require(newOwner != address(0), \\\"Ownable: new owner is the zero address\\\");\\n        _transferOwnership(newOwner);\\n    }\\n\\n    /**\\n     * @dev Transfers ownership of the contract to a new account (`newOwner`).\\n     * Internal function without access restriction.\\n     */\\n    function _transferOwnership(address newOwner) internal virtual {\\n        address oldOwner = _owner;\\n        _owner = newOwner;\\n        emit OwnershipTransferred(oldOwner, newOwner);\\n    }\\n}\\n\",\"keccak256\":\"0xa94b34880e3c1b0b931662cb1c09e5dfa6662f31cba80e07c5ee71cd135c9673\",\"license\":\"MIT\"},\"@openzeppelin/contracts/utils/Context.sol\":{\"content\":\"// SPDX-License-Identifier: MIT\\n// OpenZeppelin Contracts v4.4.1 (utils/Context.sol)\\n\\npragma solidity ^0.8.0;\\n\\n/**\\n * @dev Provides information about the current execution context, including the\\n * sender of the transaction and its data. While these are generally available\\n * via msg.sender and msg.data, they should not be accessed in such a direct\\n * manner, since when dealing with meta-transactions the account sending and\\n * paying for execution may not be the actual sender (as far as an application\\n * is concerned).\\n *\\n * This contract is only required for intermediate, library-like contracts.\\n */\\nabstract contract Context {\\n    function _msgSender() internal view virtual returns (address) {\\n        return msg.sender;\\n    }\\n\\n    function _msgData() internal view virtual returns (bytes calldata) {\\n        return msg.data;\\n    }\\n}\\n\",\"keccak256\":\"0xe2e337e6dde9ef6b680e07338c493ebea1b5fd09b43424112868e9cc1706bca7\",\"license\":\"MIT\"},\"contracts/VotingAlyra.sol\":{\"content\":\"// SPDX-License-Identifier: MIT\\n\\npragma solidity 0.8.17;\\nimport '@openzeppelin/contracts/access/Ownable.sol';\\n\\n\\ncontract VotingAlyra is Ownable {\\n\\n    uint public winningProposalID;\\n    \\n    struct Voter {\\n        bool isRegistered;\\n        bool hasVoted;\\n        uint votedProposalId;\\n    }\\n\\n    struct Proposal {\\n        string description;\\n        uint voteCount;\\n    }\\n\\n    enum  WorkflowStatus {\\n        RegisteringVoters,\\n        ProposalsRegistrationStarted,\\n        ProposalsRegistrationEnded,\\n        VotingSessionStarted,\\n        VotingSessionEnded,\\n        VotesTallied\\n    }\\n\\n    WorkflowStatus public workflowStatus;\\n    Proposal[] proposalsArray;\\n    mapping (address => Voter) voters;\\n\\n\\n    event VoterRegistered(address voterAddress); \\n    event WorkflowStatusChange(WorkflowStatus previousStatus, WorkflowStatus newStatus);\\n    event ProposalRegistered(uint proposalId);\\n    event Voted (address voter, uint proposalId);\\n    \\n    modifier onlyVoters() {\\n        require(voters[msg.sender].isRegistered, \\\"You're not a voter\\\");\\n        _;\\n    }\\n    \\n    // on peut faire un modifier pour les \\u00e9tats\\n\\n    // ::::::::::::: GETTERS ::::::::::::: //\\n\\n    function getVoter(address _addr) external onlyVoters view returns (Voter memory) {\\n        return voters[_addr];\\n    }\\n    \\n    function getOneProposal(uint _id) external onlyVoters view returns (Proposal memory) {\\n        return proposalsArray[_id];\\n    }\\n\\n \\n    // ::::::::::::: REGISTRATION ::::::::::::: // \\n\\n    function addVoter(address _addr) external onlyOwner {\\n        require(workflowStatus == WorkflowStatus.RegisteringVoters, 'Voters registration is not open yet');\\n        require(voters[_addr].isRegistered != true, 'Already registered');\\n    \\n        voters[_addr].isRegistered = true;\\n        emit VoterRegistered(_addr);\\n    }\\n \\n\\n    // ::::::::::::: PROPOSAL ::::::::::::: // \\n\\n    function addProposal(string calldata _desc) external onlyVoters {\\n        require(workflowStatus == WorkflowStatus.ProposalsRegistrationStarted, 'Proposals are not allowed yet');\\n        require(keccak256(abi.encode(_desc)) != keccak256(abi.encode('')), 'Vous ne pouvez pas ne rien proposer'); // facultatif\\n        // voir que desc est different des autres\\n\\n        Proposal memory proposal;\\n        proposal.description = _desc;\\n        proposalsArray.push(proposal);\\n        emit ProposalRegistered(proposalsArray.length-1);\\n    }\\n\\n    // ::::::::::::: VOTE ::::::::::::: //\\n\\n    function setVote( uint _id) external onlyVoters {\\n        require(workflowStatus == WorkflowStatus.VotingSessionStarted, 'Voting session havent started yet');\\n        require(voters[msg.sender].hasVoted != true, 'You have already voted');\\n        require(_id < proposalsArray.length, 'Proposal not found'); // pas oblig\\u00e9, et pas besoin du >0 car uint\\n\\n        voters[msg.sender].votedProposalId = _id;\\n        voters[msg.sender].hasVoted = true;\\n        proposalsArray[_id].voteCount++;\\n\\n        emit Voted(msg.sender, _id);\\n    }\\n\\n    // ::::::::::::: STATE ::::::::::::: //\\n\\n\\n    function startProposalsRegistering() external onlyOwner {\\n        require(workflowStatus == WorkflowStatus.RegisteringVoters, 'Registering proposals cant be started now');\\n        workflowStatus = WorkflowStatus.ProposalsRegistrationStarted;\\n        \\n        Proposal memory proposal;\\n        proposal.description = 'GENESIS';\\n        proposalsArray.push(proposal);\\n        \\n        emit WorkflowStatusChange(WorkflowStatus.RegisteringVoters, WorkflowStatus.ProposalsRegistrationStarted);\\n    }\\n\\n    function endProposalsRegistering() external onlyOwner {\\n        require(workflowStatus == WorkflowStatus.ProposalsRegistrationStarted, 'Registering proposals havent started yet');\\n        workflowStatus = WorkflowStatus.ProposalsRegistrationEnded;\\n        emit WorkflowStatusChange(WorkflowStatus.ProposalsRegistrationStarted, WorkflowStatus.ProposalsRegistrationEnded);\\n    }\\n\\n    function startVotingSession() external onlyOwner {\\n        require(workflowStatus == WorkflowStatus.ProposalsRegistrationEnded, 'Registering proposals phase is not finished');\\n        workflowStatus = WorkflowStatus.VotingSessionStarted;\\n        emit WorkflowStatusChange(WorkflowStatus.ProposalsRegistrationEnded, WorkflowStatus.VotingSessionStarted);\\n    }\\n\\n    function endVotingSession() external onlyOwner {\\n        require(workflowStatus == WorkflowStatus.VotingSessionStarted, 'Voting session havent started yet');\\n        workflowStatus = WorkflowStatus.VotingSessionEnded;\\n        emit WorkflowStatusChange(WorkflowStatus.VotingSessionStarted, WorkflowStatus.VotingSessionEnded);\\n    }\\n\\n\\n   function tallyVotes() external onlyOwner {\\n       require(workflowStatus == WorkflowStatus.VotingSessionEnded, 'Current status is not voting session ended');\\n       uint _winningProposalId;\\n      for (uint256 p = 0; p < proposalsArray.length; p++) {\\n           if (proposalsArray[p].voteCount > proposalsArray[_winningProposalId].voteCount) {\\n               _winningProposalId = p;\\n          }\\n       }\\n       winningProposalID = _winningProposalId;\\n       \\n       workflowStatus = WorkflowStatus.VotesTallied;\\n       emit WorkflowStatusChange(WorkflowStatus.VotingSessionEnded, WorkflowStatus.VotesTallied);\\n    }\\n}\",\"keccak256\":\"0x735a9fa7cf4ab4493ce16fcb614da6f6a4d9f5b4594a1eaf6320b90600e849da\",\"license\":\"MIT\"}},\"version\":1}",
          "storageLayout": {
            "storage": [
              {
                "astId": 7,
                "contract": "contracts/VotingAlyra.sol:VotingAlyra",
                "label": "_owner",
                "offset": 0,
                "slot": "0",
                "type": "t_address"
              },
              {
                "astId": 1328,
                "contract": "contracts/VotingAlyra.sol:VotingAlyra",
                "label": "winningProposalID",
                "offset": 0,
                "slot": "1",
                "type": "t_uint256"
              },
              {
                "astId": 1350,
                "contract": "contracts/VotingAlyra.sol:VotingAlyra",
                "label": "workflowStatus",
                "offset": 0,
                "slot": "2",
                "type": "t_enum(WorkflowStatus)1347"
              },
              {
                "astId": 1354,
                "contract": "contracts/VotingAlyra.sol:VotingAlyra",
                "label": "proposalsArray",
                "offset": 0,
                "slot": "3",
                "type": "t_array(t_struct(Proposal)1340_storage)dyn_storage"
              },
              {
                "astId": 1359,
                "contract": "contracts/VotingAlyra.sol:VotingAlyra",
                "label": "voters",
                "offset": 0,
                "slot": "4",
                "type": "t_mapping(t_address,t_struct(Voter)1335_storage)"
              }
            ],
            "types": {
              "t_address": {
                "encoding": "inplace",
                "label": "address",
                "numberOfBytes": "20"
              },
              "t_array(t_struct(Proposal)1340_storage)dyn_storage": {
                "base": "t_struct(Proposal)1340_storage",
                "encoding": "dynamic_array",
                "label": "struct VotingAlyra.Proposal[]",
                "numberOfBytes": "32"
              },
              "t_bool": {
                "encoding": "inplace",
                "label": "bool",
                "numberOfBytes": "1"
              },
              "t_enum(WorkflowStatus)1347": {
                "encoding": "inplace",
                "label": "enum VotingAlyra.WorkflowStatus",
                "numberOfBytes": "1"
              },
              "t_mapping(t_address,t_struct(Voter)1335_storage)": {
                "encoding": "mapping",
                "key": "t_address",
                "label": "mapping(address => struct VotingAlyra.Voter)",
                "numberOfBytes": "32",
                "value": "t_struct(Voter)1335_storage"
              },
              "t_string_storage": {
                "encoding": "bytes",
                "label": "string",
                "numberOfBytes": "32"
              },
              "t_struct(Proposal)1340_storage": {
                "encoding": "inplace",
                "label": "struct VotingAlyra.Proposal",
                "members": [
                  {
                    "astId": 1337,
                    "contract": "contracts/VotingAlyra.sol:VotingAlyra",
                    "label": "description",
                    "offset": 0,
                    "slot": "0",
                    "type": "t_string_storage"
                  },
                  {
                    "astId": 1339,
                    "contract": "contracts/VotingAlyra.sol:VotingAlyra",
                    "label": "voteCount",
                    "offset": 0,
                    "slot": "1",
                    "type": "t_uint256"
                  }
                ],
                "numberOfBytes": "64"
              },
              "t_struct(Voter)1335_storage": {
                "encoding": "inplace",
                "label": "struct VotingAlyra.Voter",
                "members": [
                  {
                    "astId": 1330,
                    "contract": "contracts/VotingAlyra.sol:VotingAlyra",
                    "label": "isRegistered",
                    "offset": 0,
                    "slot": "0",
                    "type": "t_bool"
                  },
                  {
                    "astId": 1332,
                    "contract": "contracts/VotingAlyra.sol:VotingAlyra",
                    "label": "hasVoted",
                    "offset": 1,
                    "slot": "0",
                    "type": "t_bool"
                  },
                  {
                    "astId": 1334,
                    "contract": "contracts/VotingAlyra.sol:VotingAlyra",
                    "label": "votedProposalId",
                    "offset": 0,
                    "slot": "1",
                    "type": "t_uint256"
                  }
                ],
                "numberOfBytes": "64"
              },
              "t_uint256": {
                "encoding": "inplace",
                "label": "uint256",
                "numberOfBytes": "32"
              }
            }
          },
          "userdoc": { "kind": "user", "methods": {}, "version": 1 }
        }
      }
    }
  }
}
