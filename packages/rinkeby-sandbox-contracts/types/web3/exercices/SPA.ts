/* Autogenerated file. Do not edit manually. */
/* tslint:disable */
/* eslint-disable */

import type BN from "bn.js";
import type { ContractOptions } from "web3-eth-contract";
import type { EventLog } from "web3-core";
import type { EventEmitter } from "events";
import type {
  Callback,
  PayableTransactionObject,
  NonPayableTransactionObject,
  BlockType,
  ContractEventLog,
  BaseContract,
} from "../types";

export interface EventOptions {
  filter?: object;
  fromBlock?: BlockType;
  topics?: string[];
}

export type AnimalAdopted = ContractEventLog<{
  id: string;
  0: string;
}>;
export type AnimalDied = ContractEventLog<{
  id: string;
  0: string;
}>;
export type NewAnimalAvailable = ContractEventLog<{
  id: string;
  race: string;
  taille: string;
  age: string;
  0: string;
  1: string;
  2: string;
  3: string;
}>;

export interface SPA extends BaseContract {
  constructor(
    jsonInterface: any[],
    address?: string,
    options?: ContractOptions
  ): SPA;
  clone(): SPA;
  methods: {
    addAnimal(
      _race: string,
      _taille: number | string | BN,
      _age: number | string | BN
    ): NonPayableTransactionObject<void>;

    adoptByCriteria(
      _race: string,
      _taille: number | string | BN,
      _age: number | string | BN
    ): NonPayableTransactionObject<void>;

    adoptById(id: number | string | BN): NonPayableTransactionObject<void>;

    adoptedBy(
      master: string
    ): NonPayableTransactionObject<[string, string, string, boolean]>;

    animals(arg0: number | string | BN): NonPayableTransactionObject<{
      race: string;
      taille: string;
      age: string;
      isAdopted: boolean;
      0: string;
      1: string;
      2: string;
      3: boolean;
    }>;

    getAnimal(
      id: number | string | BN
    ): NonPayableTransactionObject<[string, string, string, boolean]>;

    masters(arg0: string): NonPayableTransactionObject<string>;

    removeAnimal(
      animalId: number | string | BN
    ): NonPayableTransactionObject<void>;

    setAnimal(
      id: number | string | BN,
      _race: string,
      _taille: number | string | BN,
      _age: number | string | BN
    ): NonPayableTransactionObject<void>;
  };
  events: {
    AnimalAdopted(cb?: Callback<AnimalAdopted>): EventEmitter;
    AnimalAdopted(
      options?: EventOptions,
      cb?: Callback<AnimalAdopted>
    ): EventEmitter;

    AnimalDied(cb?: Callback<AnimalDied>): EventEmitter;
    AnimalDied(options?: EventOptions, cb?: Callback<AnimalDied>): EventEmitter;

    NewAnimalAvailable(cb?: Callback<NewAnimalAvailable>): EventEmitter;
    NewAnimalAvailable(
      options?: EventOptions,
      cb?: Callback<NewAnimalAvailable>
    ): EventEmitter;

    allEvents(options?: EventOptions, cb?: Callback<EventLog>): EventEmitter;
  };

  once(event: "AnimalAdopted", cb: Callback<AnimalAdopted>): void;
  once(
    event: "AnimalAdopted",
    options: EventOptions,
    cb: Callback<AnimalAdopted>
  ): void;

  once(event: "AnimalDied", cb: Callback<AnimalDied>): void;
  once(
    event: "AnimalDied",
    options: EventOptions,
    cb: Callback<AnimalDied>
  ): void;

  once(event: "NewAnimalAvailable", cb: Callback<NewAnimalAvailable>): void;
  once(
    event: "NewAnimalAvailable",
    options: EventOptions,
    cb: Callback<NewAnimalAvailable>
  ): void;
}
