/* Autogenerated file. Do not edit manually. */
/* tslint:disable */
/* eslint-disable */

import type BN from "bn.js";
import type { ContractOptions } from "web3-eth-contract";
import type { EventLog } from "web3-core";
import type { EventEmitter } from "events";
import type {
  Callback,
  PayableTransactionObject,
  NonPayableTransactionObject,
  BlockType,
  ContractEventLog,
  BaseContract,
} from "../../types";

export interface EventOptions {
  filter?: object;
  fromBlock?: BlockType;
  topics?: string[];
}

export interface People extends BaseContract {
  constructor(
    jsonInterface: any[],
    address?: string,
    options?: ContractOptions
  ): People;
  clone(): People;
  methods: {
    add(
      _name: string,
      _age: number | string | BN
    ): NonPayableTransactionObject<void>;

    modifyPerson(
      _name: string,
      _age: number | string | BN
    ): NonPayableTransactionObject<void>;

    moi(): NonPayableTransactionObject<{
      name: string;
      age: string;
      0: string;
      1: string;
    }>;

    persons(arg0: number | string | BN): NonPayableTransactionObject<{
      name: string;
      age: string;
      0: string;
      1: string;
    }>;

    remove(): NonPayableTransactionObject<void>;
  };
  events: {
    allEvents(options?: EventOptions, cb?: Callback<EventLog>): EventEmitter;
  };
}
